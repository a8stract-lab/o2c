function,offset,target addr,instruction,type
startup_64,0x31,0xffffffff810007b0,CALL 0xffffffff810007b0,direct call
startup_64,0x3b,0xffffffff831a3cf9,CALL 0xffffffff831a3cf9,direct call
startup_64,0x4b,,RETF,ret
secondary_startup_64,0x0,0xffffffff81000160,CALL 0xffffffff81000160,direct call
secondary_startup_64_no_verify,0x3a,0xffffffff81000260,CALL 0xffffffff81000260,direct call
FUN_ffffffff81000147,0x7,ctx->rax,"MOV RAX,qword ptr [0xffffffff830b8a70]",write other [TODO]
FUN_ffffffff81000147,0x11,,RETF,ret
verify_cpu,0xec,,RET,ret
verify_cpu,0xf0,,RET,ret
sev_verify_cbit,0x2e,0xffffffff82e5c808,"MOV qword ptr [0xffffffff82e5c808],RDX",write .data
sev_verify_cbit,0x5a,,RET,ret
vc_boot_ghcb,0x48,ctx->rax,CALL RAX,in-direct call
__startup_64,0x3a,ctx->rax,"MOV dword ptr [RAX],0x1",write other [TODO]
__startup_64,0x4d,ctx->rax,"MOV dword ptr [RAX],0x30",write other [TODO]
__startup_64,0x60,ctx->rax,"MOV dword ptr [RAX],0x200",write other [TODO]
__startup_64,0x73,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
__startup_64,0x8d,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
__startup_64,0xa7,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
__startup_64,0x126,ctx->rax,"MOV qword ptr [RAX],R10",write other [TODO]
__startup_64,0x195,ctx->r14,"MOV dword ptr [R14],EAX",write other [TODO]
__startup_64,0x1b8,ctx->r14,"MOV dword ptr [R14],R15D",write other [TODO]
__startup_64,0x1e7,ctx->r12 + ctx->rcx * 0x8,"MOV qword ptr [R12 + RCX*0x8],RDX",write other [TODO]
__startup_64,0x1eb,ctx->r12 + ctx->rcx * 0x8 + 0x8,"MOV qword ptr [R12 + RCX*0x8 + 0x8],RDX",write other [TODO]
__startup_64,0x20b,ctx->r14 + ctx->rdx * 0x8,"MOV qword ptr [R14 + RDX*0x8],R12",write other [TODO]
__startup_64,0x219,ctx->r14 + ctx->rdx * 0x8,"MOV qword ptr [R14 + RDX*0x8],R12",write other [TODO]
__startup_64,0x247,ctx->r11 + ctx->rcx * 0x8,"MOV qword ptr [R11 + RCX*0x8],RDX",write other [TODO]
__startup_64,0x25e,ctx->r11 + ctx->rax * 0x8,"MOV qword ptr [R11 + RAX*0x8],RDX",write other [TODO]
__startup_64,0x2cd,ctx->r10 + ctx->rax * 0x8,"MOV qword ptr [R10 + RAX*0x8],RDX",write other [TODO]
__startup_64,0x32f,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
__startup_64,0x383,0xffffffff831a39a5,CALL 0xffffffff831a39a5,direct call
__startup_64,0x3d8,0xffffffff8319e6b8,CALL 0xffffffff8319e6b8,direct call
__startup_64,0x40a,ctx->rax,"MOV qword ptr [RAX],R10",write other [TODO]
__startup_64,0x43a,ctx->r12 + ctx->rcx * 0x8,"MOV qword ptr [R12 + RCX*0x8],RDX",write other [TODO]
__startup_64,0x43e,ctx->r12 + ctx->rcx * 0x8 + 0x8,"MOV qword ptr [R12 + RCX*0x8 + 0x8],RDX",write other [TODO]
__startup_64,0x460,,RET,ret
startup_64_setup_env,0xe,0xffffffff82e18032,"MOV qword ptr [0xffffffff82e18032],RAX",write .data
startup_64_setup_env,0x5a,0xffffffff810008b0,CALL 0xffffffff810008b0,direct call
startup_64_setup_env,0x5f,ctx->rbx + 0x2,"MOV qword ptr [RBX + 0x2],R12",write other [TODO]
startup_64_setup_env,0x6a,,RET,ret
asm_cpu_bringup_and_idle,0x0,0xffffffff81030f50,CALL 0xffffffff81030f50,direct call
set_bringup_idt_handler.constprop.0,0x20,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
set_bringup_idt_handler.constprop.0,0x2e,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],0x0",write stack
set_bringup_idt_handler.constprop.0,0x37,ctx->rsp + 0x9,"MOV byte ptr [RSP + 0x9],0x8e",write stack
set_bringup_idt_handler.constprop.0,0x47,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],0x0",write stack
set_bringup_idt_handler.constprop.0,0x54,ctx->rdi + 0x1d8,"MOV qword ptr [RDI + 0x1d8],RSI",write other [TODO]
set_bringup_idt_handler.constprop.0,0x61,ctx->rdi + 0x1d0,"MOV qword ptr [RDI + 0x1d0],RAX",write other [TODO]
set_bringup_idt_handler.constprop.0,0x79,,RET,ret
set_bringup_idt_handler.constprop.0,0x7a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
early_setup_idt,0x4,0xffffffff81085330,CALL 0xffffffff81085330,direct call
early_setup_idt,0x17,0xffffffff810008b0,CALL 0xffffffff810008b0,direct call
early_setup_idt,0x1c,0xffffffff82e18022,"MOV qword ptr [0xffffffff82e18022],-0x7d1fc000",write .data
early_setup_idt,0x2f,,RET,ret
__traceiter_initcall_level,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_initcall_level,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_initcall_level,0x37,,RET,ret
__traceiter_initcall_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_initcall_start,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_initcall_start,0x37,,RET,ret
__traceiter_initcall_finish,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_initcall_finish,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_initcall_finish,0x41,,RET,ret
hackme_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hackme_write,0xd,,RET,ret
hackme_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hackme_read,0x28,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
hackme_read,0x2e,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],0x0",write stack
hackme_read,0x36,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
hackme_read,0x41,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x0",write stack
hackme_read,0x4c,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x0",write stack
hackme_read,0x57,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],0x0",write stack
hackme_read,0x62,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],0x0",write stack
hackme_read,0x6a,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],0x0",write stack
hackme_read,0x72,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],0x0",write stack
hackme_read,0x7a,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
hackme_read,0x82,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x0",write stack
hackme_read,0x8a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
hackme_read,0x92,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
hackme_read,0x9a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
hackme_read,0xa2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
hackme_read,0xaa,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
hackme_read,0xb2,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
hackme_read,0xf1,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
hackme_read,0x102,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
hackme_read,0x12c,0xffffffff81399170,CALL 0xffffffff81399170,direct call
hackme_read,0x14e,,RET,ret
hackme_read,0x14f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hackme_read,0xc8c791,0xffffffff81cb4d33,CALL 0xffffffff81cb4d33,direct call
trace_initcall_finish_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
trace_initcall_finish_cb,0x17,0xffffffff81157c00,CALL 0xffffffff81157c00,direct call
trace_initcall_finish_cb,0x4d,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
trace_initcall_finish_cb,0x58,,RET,ret
perf_trace_initcall_level,0x1d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_initcall_level,0x32,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
perf_trace_initcall_level,0x43,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
perf_trace_initcall_level,0x79,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_initcall_level,0x95,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_initcall_level,0x9c,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_initcall_level,0xa3,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_initcall_level,0xae,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_initcall_level,0xbc,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EAX",write other [TODO]
perf_trace_initcall_level,0xc0,0xffffffff81c7f820,CALL 0xffffffff81c7f820,direct call
perf_trace_initcall_level,0xde,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_initcall_level,0x102,,RET,ret
perf_trace_initcall_level,0x111,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x7000c",write stack
perf_trace_initcall_level,0x12a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_initcall_start,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_initcall_start,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_initcall_start,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_initcall_start,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_initcall_start,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_initcall_start,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_initcall_start,0x91,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_initcall_start,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_initcall_start,0xb8,,RET,ret
perf_trace_initcall_start,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_initcall_finish,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_initcall_finish,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_initcall_finish,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_initcall_finish,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_initcall_finish,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_initcall_finish,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_initcall_finish,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_initcall_finish,0x9e,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R13D",write other [TODO]
perf_trace_initcall_finish,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_initcall_finish,0xc7,,RET,ret
perf_trace_initcall_finish,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_initcall_start,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_initcall_start,0x35,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_initcall_start,0x3f,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
trace_event_raw_event_initcall_start,0x47,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_initcall_start,0x63,,RET,ret
trace_event_raw_event_initcall_start,0x69,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_initcall_start,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_initcall_finish,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_initcall_finish,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_initcall_finish,0x43,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_initcall_finish,0x4b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_initcall_finish,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_initcall_finish,0x6c,,RET,ret
trace_event_raw_event_initcall_finish,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_initcall_finish,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_initcall_level,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_initcall_level,0x22,,RET,ret
trace_raw_output_initcall_level,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_initcall_level,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_initcall_level,0x4c,,RET,ret
trace_raw_output_initcall_start,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_initcall_start,0x22,,RET,ret
trace_raw_output_initcall_start,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_initcall_start,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_initcall_start,0x47,,RET,ret
trace_raw_output_initcall_finish,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_initcall_finish,0x22,,RET,ret
trace_raw_output_initcall_finish,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_initcall_finish,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_initcall_finish,0x4c,,RET,ret
__bpf_trace_initcall_level,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_initcall_level,0xa,,RET,ret
__bpf_trace_initcall_start,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_initcall_start,0xa,,RET,ret
__bpf_trace_initcall_finish,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_initcall_finish,0xc,,RET,ret
initcall_blacklisted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
initcall_blacklisted,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
initcall_blacklisted,0x37,0xffffffff81170040,CALL 0xffffffff81170040,direct call
initcall_blacklisted,0x4a,0xffffffff81606400,CALL 0xffffffff81606400,direct call
initcall_blacklisted,0x61,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
initcall_blacklisted,0x6d,ctx->rsi,"MOV RSI,qword ptr [RBX + 0x10]",write other [TODO]
initcall_blacklisted,0x78,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
initcall_blacklisted,0x98,0xffffffff81634010,CALL 0xffffffff81634010,direct call
initcall_blacklisted,0xba,,RET,ret
initcall_blacklisted,0xc2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_initcall_level,0x1c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_initcall_level,0x33,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
trace_event_raw_event_initcall_level,0x51,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_initcall_level,0x5b,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_initcall_level,0x65,0xffffffff81c7f820,CALL 0xffffffff81c7f820,direct call
trace_event_raw_event_initcall_level,0x6e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_initcall_level,0x8c,,RET,ret
trace_event_raw_event_initcall_level,0xa5,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_initcall_level,0xb4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
file_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
file_open,0xc,0xffffffff81362140,CALL 0xffffffff81362140,direct call
file_open,0x1e,,RET,ret
file_close,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
file_close,0xb,0xffffffff8135f340,CALL 0xffffffff8135f340,direct call
file_close,0x11,,RET,ret
get_pte_from_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_private_stacks,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_one_initcall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_one_initcall,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
do_one_initcall,0x31,0xffffffff81001110,CALL 0xffffffff81001110,direct call
do_one_initcall,0x43,ctx->r12,CALL R12,in-direct call
do_one_initcall,0x57,ctx->rbp - 0x60,"MOV byte ptr [RBP + -0x60],0x0",write stack
do_one_initcall,0x63,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
do_one_initcall,0x9c,,RET,ret
do_one_initcall,0x140,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x65636e61",write stack
do_one_initcall,0x147,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
do_one_initcall,0x155,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
do_one_initcall,0x15e,ctx->wordctx->ptrctx->rbp - 0x4c,"MOV word ptr [RBP + -0x4c],AX",write stack
do_one_initcall,0x196,0xffffffff81c7ff50,CALL 0xffffffff81c7ff50,direct call
do_one_initcall,0x19b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
do_one_initcall,0x1b4,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
do_one_initcall,0x1cb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
FUN_ffffffff810017a0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810017a0,0x23,0xffffffff812f31e0,CALL 0xffffffff812f31e0,direct call
FUN_ffffffff810017a0,0x29,,RET,ret
match_dev_by_label,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
match_dev_by_label,0x1f,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
match_dev_by_label,0x2d,,RET,ret
match_dev_by_label,0x30,,RET,ret
match_dev_by_uuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
match_dev_by_uuid,0x1f,0xffffffff81c7ffd0,CALL 0xffffffff81c7ffd0,direct call
match_dev_by_uuid,0x2d,,RET,ret
match_dev_by_uuid,0x30,,RET,ret
rootfs_init_fs_context,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rootfs_init_fs_context,0x12,0xffffffff814a6880,CALL 0xffffffff814a6880,direct call
rootfs_init_fs_context,0x18,,RET,ret
rootfs_init_fs_context,0x19,0xffffffff812a1a30,CALL 0xffffffff812a1a30,direct call
rootfs_init_fs_context,0x1f,,RET,ret
name_to_dev_t,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
name_to_dev_t,0x27,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
name_to_dev_t,0x2d,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
name_to_dev_t,0x4d,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
name_to_dev_t,0x6d,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
name_to_dev_t,0x92,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
name_to_dev_t,0xae,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
name_to_dev_t,0xca,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
name_to_dev_t,0xed,0xffffffff81c81a60,CALL 0xffffffff81c81a60,direct call
name_to_dev_t,0xfa,ctx->ecx,"MOV ECX,dword ptr [RBP + -0x60]",write other [TODO]
name_to_dev_t,0x140,,RET,ret
name_to_dev_t,0x15b,0xffffffff81c81a60,CALL 0xffffffff81c81a60,direct call
name_to_dev_t,0x171,0xffffffff81c80a20,CALL 0xffffffff81c80a20,direct call
name_to_dev_t,0x1a2,0xffffffff815b8af0,CALL 0xffffffff815b8af0,direct call
name_to_dev_t,0x1be,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
name_to_dev_t,0x1ec,ctx->rbp - 0x48,"MOV byte ptr [RBP + -0x48],DL",write stack
name_to_dev_t,0x206,ctx->r12,"MOV byte ptr [R12],0x21",write other [TODO]
name_to_dev_t,0x21e,0xffffffff815b8af0,CALL 0xffffffff815b8af0,direct call
name_to_dev_t,0x26f,0xffffffff81c80a20,CALL 0xffffffff81c80a20,direct call
name_to_dev_t,0x274,ctx->r12,"MOV byte ptr [R12],0x0",write other [TODO]
name_to_dev_t,0x281,0xffffffff815b8af0,CALL 0xffffffff815b8af0,direct call
name_to_dev_t,0x2b9,ctx->r12 - 0x1,"MOV byte ptr [R12 + -0x1],0x0",write other [TODO]
name_to_dev_t,0x2c5,0xffffffff815b8af0,CALL 0xffffffff815b8af0,direct call
name_to_dev_t,0x2d8,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],0x0",write stack
name_to_dev_t,0x2e2,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R12",write stack
name_to_dev_t,0x2e6,0xffffffff81c7f910,CALL 0xffffffff81c7f910,direct call
name_to_dev_t,0x2ff,ctx->rbp - 0x60,"MOV byte ptr [RBP + -0x60],0x0",write stack
name_to_dev_t,0x30e,0xffffffff81c81a60,CALL 0xffffffff81c81a60,direct call
name_to_dev_t,0x31f,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],R13D",write stack
name_to_dev_t,0x342,0xffffffff817fafa0,CALL 0xffffffff817fafa0,direct call
name_to_dev_t,0x367,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],EAX",write stack
name_to_dev_t,0x36a,0xffffffff817f1560,CALL 0xffffffff817f1560,direct call
name_to_dev_t,0x38c,0xffffffff817fafa0,CALL 0xffffffff817fafa0,direct call
name_to_dev_t,0x3a5,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],EAX",write stack
name_to_dev_t,0x3a8,0xffffffff817f1560,CALL 0xffffffff817f1560,direct call
name_to_dev_t,0x3bf,ctx->r13 + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [R13 + RDX*0x1 + -0x8],RCX",write other [TODO]
name_to_dev_t,0x3db,ctx->r13 + ctx->rcx * 0x1,"MOV qword ptr [R13 + RCX*0x1],RSI",write other [TODO]
name_to_dev_t,0x3ec,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
name_to_dev_t,0x3f1,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
name_to_dev_t,0x40d,0xffffffff815b8ab0,CALL 0xffffffff815b8ab0,direct call
name_to_dev_t,0x42b,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDX",write stack
name_to_dev_t,0x432,ctx->r13 + ctx->rax * 0x1 - 0x4,"MOV dword ptr [R13 + RAX*0x1 + -0x4],EDX",write other [TODO]
name_to_dev_t,0x443,ctx->wordctx->ptrctx->r13 + ctx->rax * 0x1 - 0x2,"MOV word ptr [R13 + RAX*0x1 + -0x2],DX",write other [TODO]
name_to_dev_t,0x44e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
wait_for_initramfs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wait_for_initramfs,0x23,,RET,ret
wait_for_initramfs,0x2f,0xffffffff810d5a30,CALL 0xffffffff810d5a30,direct call
wait_for_initramfs,0x35,,RET,ret
FUN_ffffffff81001d10,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81001d10,0xc,,RET,ret
calibration_delay_done,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
calibration_delay_done,0xa,,RET,ret
calibrate_delay,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
calibrate_delay,0x30,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
calibrate_delay,0x48,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RSI",write stack
calibrate_delay,0xce,0xffffffff81041260,CALL 0xffffffff81041260,direct call
calibrate_delay,0x10d,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
calibrate_delay,0x11a,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x0",write stack
calibrate_delay,0x12e,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x0",write stack
calibrate_delay,0x139,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],0xffffffff",write stack
calibrate_delay,0xc8b93f,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
calibrate_delay,0xc8b9a7,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff8100203d,0x35,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
FUN_ffffffff8100203d,0x5f,ctx->rdi,"MOV RDI,R14",write other [TODO]
FUN_ffffffff8100203d,0x62,0xffffffff81c8a460,CALL 0xffffffff81c8a460,direct call
FUN_ffffffff8100203d,0x7e,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R14",write stack
FUN_ffffffff8100203d,0x89,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RDX",write stack
FUN_ffffffff8100203d,0xcf,0xffffffff81c8a460,CALL 0xffffffff81c8a460,direct call
FUN_ffffffff8100203d,0x106,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],R13",write stack
FUN_ffffffff81002157,-0x3be,ctx->rdx + ctx->rbx * 0x1,"MOV qword ptr [RDX + RBX*0x1],R15",write other [TODO]
FUN_ffffffff81002157,-0x2e0,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],0x0",write stack
FUN_ffffffff81002157,-0x2d5,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
FUN_ffffffff81002157,-0x2b1,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
FUN_ffffffff81002157,-0x2ad,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
FUN_ffffffff81002157,-0x294,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
FUN_ffffffff81002157,-0x284,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R12",write stack
FUN_ffffffff81002157,-0x26e,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
FUN_ffffffff81002157,-0x259,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
FUN_ffffffff81002157,-0x1f2,ctx->rbp + ctx->r14 * 0x8 - 0x58,"MOV qword ptr [RBP + R14*0x8 + -0x58],RDX",write stack
FUN_ffffffff81002157,-0x1bc,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],R13D",write stack
FUN_ffffffff81002157,-0x154,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RSI",write stack
FUN_ffffffff81002157,-0x146,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RCX",write stack
FUN_ffffffff81002157,0x4,0xffffffff81c8a630,CALL 0xffffffff81c8a630,direct call
FUN_ffffffff81002157,0x1e,ctx->rbp + ctx->r14 * 0x8 - 0x58,"MOV qword ptr [RBP + R14*0x8 + -0x58],0x0",write stack
FUN_ffffffff81002157,0x5a,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],R13D",write stack
FUN_ffffffff81002157,0xc8b4d6,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],R8",write stack
FUN_ffffffff81002157,0xc8b4dd,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RCX",write stack
FUN_ffffffff81002157,0xc8b4e4,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81002157,0xc8b5e2,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81002157,0xc8b5e7,ctx->rbp + ctx->r14 * 0x8 - 0x58,"MOV qword ptr [RBP + R14*0x8 + -0x58],0x0",write stack
FUN_ffffffff81002157,0xc8b61e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81002157,0xc8b635,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81002157,0xc8b63a,ctx->rbp + ctx->rbx * 0x8 - 0x58,"MOV qword ptr [RBP + RBX*0x8 + -0x58],0x0",write stack
FUN_ffffffff81002157,0xc8b64c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
cc_platform_has,0x17,,RET,ret
cc_platform_has,0x38,,RET,ret
cc_platform_has,0x3f,,RET,ret
cc_platform_has,0x51,,RET,ret
cc_platform_has,0x60,,RET,ret
cc_platform_has,0x6c,,RET,ret
cc_platform_has,0x86,,RET,ret
cc_platform_has,0x91,,RET,ret
cc_platform_has,0x9f,,RET,ret
cc_platform_has,0xa2,,RET,ret
cc_mkdec,0x1f,,RET,ret
cc_mkdec,0x2d,,RET,ret
cc_mkenc,0x20,,RET,ret
cc_mkenc,0x21,,RET,ret
cc_mkenc,0x29,,RET,ret
tdx_tlb_flush_required,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tdx_tlb_flush_required,0xf,,RET,ret
tdx_cache_flush_required,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tdx_cache_flush_required,0xf,,RET,ret
tdx_kvm_hypercall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tdx_kvm_hypercall,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
tdx_kvm_hypercall,0x1e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
tdx_kvm_hypercall,0x28,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
tdx_kvm_hypercall,0x2c,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],0x0",write stack
tdx_kvm_hypercall,0x34,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
tdx_kvm_hypercall,0x38,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RCX",write stack
tdx_kvm_hypercall,0x3c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],R8",write stack
tdx_kvm_hypercall,0x40,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
tdx_kvm_hypercall,0x55,,RET,ret
tdx_kvm_hypercall,0x56,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ve_instr_len,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ve_instr_len,0x36,,RET,ret
ve_instr_len,0x4d,0xffffffff830c7bab,"MOV byte ptr [0xffffffff830c7bab],0x1",write .data
ve_instr_len,0x54,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
ve_instr_len,0x6f,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
ve_instr_len,0x72,0xffffffff830c7bac,"MOV byte ptr [0xffffffff830c7bac],0x1",write .data
ve_instr_len,0x79,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
handle_cpuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_cpuid,0x2f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
handle_cpuid,0x3c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0xa",write stack
handle_cpuid,0x44,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
handle_cpuid,0x48,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
handle_cpuid,0x62,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
handle_cpuid,0x73,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
handle_cpuid,0x7b,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
handle_cpuid,0x83,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
handle_cpuid,0x8b,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
handle_cpuid,0x8f,0xffffffff81002370,CALL 0xffffffff81002370,direct call
handle_cpuid,0xab,,RET,ret
handle_cpuid,0xac,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],0x0",write other [TODO]
handle_cpuid,0xb7,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
handle_cpuid,0xbf,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],0x0",write other [TODO]
handle_cpuid,0xc7,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],0x0",write other [TODO]
handle_cpuid,0xcf,0xffffffff81002370,CALL 0xffffffff81002370,direct call
handle_cpuid,0xdd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
handle_io,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_io,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
handle_io,0x63,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
handle_io,0x6d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
handle_io,0x75,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x1e",write stack
handle_io,0x7d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
handle_io,0x81,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x1",write stack
handle_io,0x89,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RBX",write stack
handle_io,0x8d,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
handle_io,0x9a,0xffffffff81002370,CALL 0xffffffff81002370,direct call
handle_io,0xb8,,RET,ret
handle_io,0xc5,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
handle_io,0xd2,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
handle_io,0xd6,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x1e",write stack
handle_io,0xde,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
handle_io,0xf5,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],RDX",write other [TODO]
handle_io,0x105,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],RBX",write other [TODO]
handle_io,0x112,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
handle_mmio,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_mmio,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
handle_mmio,0x60,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
handle_mmio,0x7f,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
handle_mmio,0x99,0xffffffff81c8bab0,CALL 0xffffffff81c8bab0,direct call
handle_mmio,0xba,0xffffffff81c8b600,CALL 0xffffffff81c8b600,direct call
handle_mmio,0xfe,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],0x0",write stack
handle_mmio,0x109,ctx->rbp - 0xd8,"MOV qword ptr [RBP + -0xd8],0x30",write stack
handle_mmio,0x114,ctx->rbp - 0xe8,"MOV qword ptr [RBP + -0xe8],RAX",write stack
handle_mmio,0x11b,ctx->rbp - 0xd0,"MOV qword ptr [RBP + -0xd0],R12",write stack
handle_mmio,0x122,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],0x1",write stack
handle_mmio,0x12d,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RDX",write stack
handle_mmio,0x13d,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
handle_mmio,0x144,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
handle_mmio,0x18a,,RET,ret
handle_mmio,0x191,0xffffffff81c8b590,CALL 0xffffffff81c8b590,direct call
handle_mmio,0x196,ctx->rbp - 0xf8,"MOV qword ptr [RBP + -0xf8],RAX",write stack
handle_mmio,0x1c8,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
handle_mmio,0x1d1,ctx->rbp - 0xd0,"MOV qword ptr [RBP + -0xd0],R12",write stack
handle_mmio,0x1d8,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],0x0",write stack
handle_mmio,0x1e3,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RAX",write stack
handle_mmio,0x1f1,ctx->rbp - 0xd8,"MOV qword ptr [RBP + -0xd8],0x30",write stack
handle_mmio,0x1fc,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],0x1",write stack
handle_mmio,0x21c,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],0x0",write stack
handle_mmio,0x227,ctx->rbp - 0xd8,"MOV qword ptr [RBP + -0xd8],0x30",write stack
handle_mmio,0x232,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RAX",write stack
handle_mmio,0x240,ctx->rbp - 0xd0,"MOV qword ptr [RBP + -0xd0],R12",write stack
handle_mmio,0x247,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],0x0",write stack
handle_mmio,0x252,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
handle_mmio,0x259,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
handle_mmio,0x26e,ctx->rbp - 0xe8,"MOV qword ptr [RBP + -0xe8],RCX",write stack
handle_mmio,0x2d1,ctx->rbx,"MOV byte ptr [RBX],AL",write other [TODO]
handle_mmio,0x2e8,ctx->wordctx->ptrctx->rcx + ctx->rdx * 0x1 - 0x2,"MOV word ptr [RCX + RDX*0x1 + -0x2],AX",write other [TODO]
handle_mmio,0x306,ctx->rbp - 0xf8,"MOV dword ptr [RBP + -0xf8],EAX",write stack
handle_mmio,0x30c,0xffffffff830c7ba9,"MOV byte ptr [0xffffffff830c7ba9],0x1",write .data
handle_mmio,0x313,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
handle_mmio,0x346,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
handle_mmio,0x358,ctx->rbx + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RBX + RDX*0x1 + -0x8],RSI",write other [TODO]
handle_mmio,0x380,ctx->rdi + ctx->rsi * 0x1,"MOV qword ptr [RDI + RSI*0x1],R8",write other [TODO]
handle_mmio,0x3fd,ctx->rbx,"MOV byte ptr [RBX],AL",write other [TODO]
handle_mmio,0x40b,ctx->wordctx->ptrctx->rbx + ctx->rcx * 0x1 - 0x2,"MOV word ptr [RBX + RCX*0x1 + -0x2],AX",write other [TODO]
handle_mmio,0x429,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
handle_mmio,0x430,ctx->rbx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RBX + RCX*0x1 + -0x8],RAX",write other [TODO]
handle_mmio,0x476,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
handle_mmio,0x47c,ctx->rbx + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [RBX + RDX*0x1 + -0x4],EAX",write other [TODO]
handle_mmio,0x496,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
handle_mmio,0x498,ctx->rbx + ctx->rcx * 0x1 - 0x4,"MOV dword ptr [RBX + RCX*0x1 + -0x4],EAX",write other [TODO]
handle_mmio,0x4a1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tdx_enc_status_changed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tdx_enc_status_changed,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
tdx_enc_status_changed,0x86,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RBX",write stack
tdx_enc_status_changed,0x8d,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
tdx_enc_status_changed,0x9d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x10001",write stack
tdx_enc_status_changed,0xa5,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
tdx_enc_status_changed,0xa9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
tdx_enc_status_changed,0xb1,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
tdx_enc_status_changed,0xb9,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
tdx_enc_status_changed,0x117,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
tdx_enc_status_changed,0x11b,0xffffffff81002f70,CALL 0xffffffff81002f70,direct call
tdx_enc_status_changed,0x167,0xffffffff81002f70,CALL 0xffffffff81002f70,direct call
tdx_enc_status_changed,0x1b9,0xffffffff81002f70,CALL 0xffffffff81002f70,direct call
tdx_enc_status_changed,0x1ea,,RET,ret
tdx_enc_status_changed,0x1ed,0xffffffff81002290,CALL 0xffffffff81002290,direct call
tdx_enc_status_changed,0x1f7,0xffffffff81002290,CALL 0xffffffff81002290,direct call
tdx_enc_status_changed,0x202,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RBX",write stack
tdx_enc_status_changed,0x209,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
tdx_enc_status_changed,0x214,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x10001",write stack
tdx_enc_status_changed,0x21c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
tdx_enc_status_changed,0x220,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
tdx_enc_status_changed,0x228,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
tdx_enc_status_changed,0x230,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
tdx_enc_status_changed,0x266,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tdx_get_ve_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tdx_get_ve_info,0x2c,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
tdx_get_ve_info,0x32,0xffffffff81002f70,CALL 0xffffffff81002f70,direct call
tdx_get_ve_info,0x44,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
tdx_get_ve_info,0x4b,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
tdx_get_ve_info,0x53,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
tdx_get_ve_info,0x5b,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
tdx_get_ve_info,0x63,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
tdx_get_ve_info,0x7b,,RET,ret
tdx_get_ve_info,0x7c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tdx_handle_virt_exception,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tdx_handle_virt_exception,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
tdx_handle_virt_exception,0x41,0xffffffff81002400,CALL 0xffffffff81002400,direct call
tdx_handle_virt_exception,0x73,,RET,ret
tdx_handle_virt_exception,0x89,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
tdx_handle_virt_exception,0xae,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0xc",write stack
tdx_handle_virt_exception,0xb9,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
tdx_handle_virt_exception,0xbd,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
tdx_handle_virt_exception,0xce,0xffffffff81002610,CALL 0xffffffff81002610,direct call
tdx_handle_virt_exception,0xf0,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x20",write stack
tdx_handle_virt_exception,0xf8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
tdx_handle_virt_exception,0x108,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
tdx_handle_virt_exception,0x10c,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
tdx_handle_virt_exception,0x119,0xffffffff81002370,CALL 0xffffffff81002370,direct call
tdx_handle_virt_exception,0x13e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x1f",write stack
tdx_handle_virt_exception,0x146,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
tdx_handle_virt_exception,0x14a,0xffffffff81002fb0,CALL 0xffffffff81002fb0,direct call
tdx_handle_virt_exception,0x161,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RDX",write other [TODO]
tdx_handle_virt_exception,0x165,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
tdx_handle_virt_exception,0x169,0xffffffff81002370,CALL 0xffffffff81002370,direct call
tdx_handle_virt_exception,0x176,0xffffffff810024f0,CALL 0xffffffff810024f0,direct call
tdx_handle_virt_exception,0x18e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tdx_handle_virt_exception,0xc8aa63,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__switch_to_asm,0xa,ctx->rdi + 0x14d8,"MOV qword ptr [RDI + 0x14d8],RSP",write other [TODO]
__switch_to_asm,0x1f,ctx->gs + 0x28,"MOV qword ptr GS:[0x28],RBX",write other [TODO]
rewind_stack_and_make_dead,0x12,0xffffffff810aae50,CALL 0xffffffff810aae50,direct call
__x64_sys_ni_syscall,0x7,,RET,ret
__xen_pv_evtchn_do_upcall,0xd,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__xen_pv_evtchn_do_upcall,0x1c,0xffffffff8175c8b0,CALL 0xffffffff8175c8b0,direct call
__xen_pv_evtchn_do_upcall,0x21,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__xen_pv_evtchn_do_upcall,0x2e,,RET,ret
vdso_mremap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vdso_mremap,0x3f,ctx->rax + 0x360,"MOV qword ptr [RAX + 0x360],RDX",write other [TODO]
vdso_mremap,0x49,,RET,ret
vdso_mremap,0x6b,ctx->rcx + 0x3fd8,"MOV qword ptr [RCX + 0x3fd8],RAX",write other [TODO]
vdso_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vdso_fault,0x5e,ctx->rdx + 0x50,"MOV qword ptr [RDX + 0x50],RAX",write other [TODO]
vdso_fault,0x7b,,RET,ret
vdso_fault,0xa9,,RET,ret
map_vdso,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
map_vdso,0x38,0xffffffff81d112d0,CALL 0xffffffff81d112d0,direct call
map_vdso,0x60,0xffffffff812d2630,CALL 0xffffffff812d2630,direct call
map_vdso,0x8e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
map_vdso,0x92,0xffffffff812d7a40,CALL 0xffffffff812d7a40,direct call
map_vdso,0xc0,0xffffffff812d7a40,CALL 0xffffffff812d7a40,direct call
map_vdso,0xe1,ctx->rdx + 0x360,"MOV qword ptr [RDX + 0x360],R15",write other [TODO]
map_vdso,0xef,ctx->rax + 0x368,"MOV qword ptr [RAX + 0x368],RBX",write other [TODO]
map_vdso,0xfb,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
map_vdso,0x111,,RET,ret
map_vdso,0x165,0xffffffff812d51e0,CALL 0xffffffff812d51e0,direct call
vvar_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vvar_fault,0x5d,,RET,ret
vvar_fault,0xa2,0xffffffff812cce20,CALL 0xffffffff812cce20,direct call
vvar_fault,0xa9,0xffffffff810808f0,CALL 0xffffffff810808f0,direct call
vvar_fault,0xc5,0xffffffff81002290,CALL 0xffffffff81002290,direct call
vvar_fault,0xf7,0xffffffff812cccb0,CALL 0xffffffff812cccb0,direct call
vvar_fault,0x151,0xffffffff812cce20,CALL 0xffffffff812cce20,direct call
vvar_fault,0x179,0xffffffff812cce20,CALL 0xffffffff812cce20,direct call
vvar_fault,0x184,,RET,ret
vvar_fault,0x185,0xffffffff81a27ce0,CALL 0xffffffff81a27ce0,direct call
vvar_fault,0x1c8,0xffffffff812cce20,CALL 0xffffffff812cce20,direct call
vvar_fault,0x1d9,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vvar_fault,0x205,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
arch_get_vdso_data,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_get_vdso_data,0x11,,RET,ret
vdso_join_timens,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vdso_join_timens,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
vdso_join_timens,0x35,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R13",write stack
vdso_join_timens,0x3c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x1",write stack
vdso_join_timens,0x50,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
vdso_join_timens,0x6f,0xffffffff812d7a10,CALL 0xffffffff812d7a10,direct call
vdso_join_timens,0x83,0xffffffff81c73350,CALL 0xffffffff81c73350,direct call
vdso_join_timens,0x95,0xffffffff81113020,CALL 0xffffffff81113020,direct call
vdso_join_timens,0xb9,,RET,ret
vdso_join_timens,0xc7,0xffffffff812c6670,CALL 0xffffffff812c6670,direct call
vdso_join_timens,0xfd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
map_vdso_once,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
map_vdso_once,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
map_vdso_once,0x49,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x1",write stack
map_vdso_once,0x51,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R13",write stack
map_vdso_once,0x61,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
map_vdso_once,0x77,0xffffffff812d7a10,CALL 0xffffffff812d7a10,direct call
map_vdso_once,0x8a,0xffffffff812d7a10,CALL 0xffffffff812d7a10,direct call
map_vdso_once,0x9e,0xffffffff81c73350,CALL 0xffffffff81c73350,direct call
map_vdso_once,0xb0,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
map_vdso_once,0xbb,0xffffffff81003260,CALL 0xffffffff81003260,direct call
map_vdso_once,0xc7,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
map_vdso_once,0xee,,RET,ret
map_vdso_once,0x136,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_setup_additional_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_setup_additional_pages,0x11,,RET,ret
arch_setup_additional_pages,0x80,0xffffffff8103ca60,CALL 0xffffffff8103ca60,direct call
arch_setup_additional_pages,0x8f,0xffffffff81003260,CALL 0xffffffff81003260,direct call
arch_setup_additional_pages,0x98,,RET,ret
arch_setup_additional_pages,0x99,0xffffffff817b7100,CALL 0xffffffff817b7100,direct call
compat_arch_setup_additional_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
compat_arch_setup_additional_pages,0x10,,RET,ret
compat_arch_setup_additional_pages,0x1e,0xffffffff81003260,CALL 0xffffffff81003260,direct call
compat_arch_setup_additional_pages,0x24,,RET,ret
arch_syscall_is_vdso_sigreturn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_syscall_is_vdso_sigreturn,0x31,,RET,ret
arch_syscall_is_vdso_sigreturn,0x5d,,RET,ret
fixup_vdso_exception,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fixup_vdso_exception,0x8a,ctx->r9 + 0x70,"MOV qword ptr [R9 + 0x70],R8",write other [TODO]
fixup_vdso_exception,0x94,ctx->r9 + 0x68,"MOV qword ptr [R9 + 0x68],R11",write other [TODO]
fixup_vdso_exception,0x9b,ctx->r9 + 0x60,"MOV qword ptr [R9 + 0x60],R10",write other [TODO]
fixup_vdso_exception,0x9f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
fixup_vdso_exception,0xae,,RET,ret
fixup_vdso_exception,0xba,,RET,ret
__traceiter_emulate_vsyscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_emulate_vsyscall,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_emulate_vsyscall,0x37,,RET,ret
gate_vma_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gate_vma_name,0x11,,RET,ret
perf_trace_emulate_vsyscall,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_emulate_vsyscall,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_emulate_vsyscall,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_emulate_vsyscall,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_emulate_vsyscall,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_emulate_vsyscall,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_emulate_vsyscall,0x91,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_emulate_vsyscall,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_emulate_vsyscall,0xb8,,RET,ret
perf_trace_emulate_vsyscall,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_emulate_vsyscall,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_emulate_vsyscall,0x34,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_emulate_vsyscall,0x3e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_emulate_vsyscall,0x45,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_emulate_vsyscall,0x61,,RET,ret
trace_event_raw_event_emulate_vsyscall,0x67,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_emulate_vsyscall,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_emulate_vsyscall,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_emulate_vsyscall,0x22,,RET,ret
trace_raw_output_emulate_vsyscall,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_emulate_vsyscall,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_emulate_vsyscall,0x47,,RET,ret
__bpf_trace_emulate_vsyscall,0x6,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_emulate_vsyscall,0xc,,RET,ret
warn_bad_vsyscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
warn_bad_vsyscall,0xf,,RET,ret
warn_bad_vsyscall,0x30,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
warn_bad_vsyscall,0x47,,RET,ret
emulate_vsyscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emulate_vsyscall,0x90,0xffffffff81c8a720,CALL 0xffffffff81c8a720,direct call
emulate_vsyscall,0xe5,ctx->rax + 0x1528,"MOV qword ptr [RAX + 0x1528],R8",write other [TODO]
emulate_vsyscall,0xf9,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],0x6",write other [TODO]
emulate_vsyscall,0x104,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0xe",write other [TODO]
emulate_vsyscall,0x10f,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
emulate_vsyscall,0x125,0xffffffff81003cb0,CALL 0xffffffff81003cb0,direct call
emulate_vsyscall,0x15a,,RET,ret
emulate_vsyscall,0x16d,ctx->rbp - 0x30,"MOV byte ptr [RBP + -0x30],AL",write stack
emulate_vsyscall,0x170,0xffffffff81003cb0,CALL 0xffffffff81003cb0,direct call
emulate_vsyscall,0x23d,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],R15",write other [TODO]
emulate_vsyscall,0x242,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],-0x26",write other [TODO]
emulate_vsyscall,0x26e,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],-0x1",write other [TODO]
emulate_vsyscall,0x28e,ctx->rcx + 0x1550,"MOV byte ptr [RCX + 0x1550],AL",write other [TODO]
emulate_vsyscall,0x2b3,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
emulate_vsyscall,0x2b7,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],0x0",write other [TODO]
emulate_vsyscall,0x2c0,0xffffffff810be600,CALL 0xffffffff810be600,direct call
emulate_vsyscall,0x2c5,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],R13",write other [TODO]
emulate_vsyscall,0x2e9,ctx->rdi + 0x1550,"MOV byte ptr [RDI + 0x1550],CL",write other [TODO]
emulate_vsyscall,0x2f9,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
emulate_vsyscall,0x307,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RDX",write other [TODO]
emulate_vsyscall,0x325,0xffffffff81003cb0,CALL 0xffffffff81003cb0,direct call
emulate_vsyscall,0x32f,0xffffffff810b95a0,CALL 0xffffffff810b95a0,direct call
emulate_vsyscall,0x38b,0xffffffff81003cb0,CALL 0xffffffff81003cb0,direct call
emulate_vsyscall,0x395,0xffffffff810b9430,CALL 0xffffffff810b9430,direct call
emulate_vsyscall,0x3b5,0xffffffff81003cb0,CALL 0xffffffff81003cb0,direct call
emulate_vsyscall,0x3d9,0xffffffff81003cb0,CALL 0xffffffff81003cb0,direct call
emulate_vsyscall,0x3ec,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
emulate_vsyscall,0x3f0,0xffffffff811b03b0,CALL 0xffffffff811b03b0,direct call
emulate_vsyscall,0x40f,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],-0x1",write other [TODO]
emulate_vsyscall,0x42b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
emulate_vsyscall,0x42f,0xffffffff81150990,CALL 0xffffffff81150990,direct call
emulate_vsyscall,0x440,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
emulate_vsyscall,0x444,0xffffffff81150610,CALL 0xffffffff81150610,direct call
get_gate_vma,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_gate_vma,0x2f,,RET,ret
get_gate_vma,0x33,,RET,ret
in_gate_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
in_gate_area,0x38,,RET,ret
in_gate_area_no_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
in_gate_area_no_mm,0x28,,RET,ret
preempt_schedule_thunk,0x11,0xffffffff81d0ddd0,CALL 0xffffffff81d0ddd0,direct call
preempt_schedule_notrace_thunk,0x11,0xffffffff81d0de30,CALL 0xffffffff81d0de30,direct call
__thunk_restore,0xe,,RET,ret
paravirt_read_msr,0x6,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr,0xd,,RET,ret
x86_pmu_prepare_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_prepare_cpu,0x1d,ctx->rax + 0x1338,"MOV qword ptr [RAX + 0x1338],0x0",write other [TODO]
x86_pmu_prepare_cpu,0x28,ctx->rax + 0x1340,"MOV qword ptr [RAX + 0x1340],0x0",write other [TODO]
x86_pmu_prepare_cpu,0x3c,ctx->rdx,CALL RDX,in-direct call
x86_pmu_prepare_cpu,0x3f,,RET,ret
x86_pmu_prepare_cpu,0x42,,RET,ret
x86_pmu_dead_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_dead_cpu,0x15,ctx->rax,CALL RAX,in-direct call
x86_pmu_dead_cpu,0x1a,,RET,ret
x86_pmu_dead_cpu,0x1d,,RET,ret
x86_pmu_starting_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_starting_cpu,0x15,ctx->rax,CALL RAX,in-direct call
x86_pmu_starting_cpu,0x1a,,RET,ret
x86_pmu_starting_cpu,0x1d,,RET,ret
x86_pmu_dying_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_dying_cpu,0x15,ctx->rax,CALL RAX,in-direct call
x86_pmu_dying_cpu,0x1a,,RET,ret
x86_pmu_dying_cpu,0x1d,,RET,ret
x86_pmu_filter_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_filter_match,0x15,ctx->rdx,CALL RDX,in-direct call
x86_pmu_filter_match,0x18,,RET,ret
x86_pmu_filter_match,0x1e,,RET,ret
get_segment_base,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_segment_base,0x54,,RET,ret
perf_get_hw_event_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_get_hw_event_config,0x12,,RET,ret
perf_get_hw_event_config,0x22,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
perf_get_hw_event_config,0x29,,RET,ret
x86_pmu_swap_task_ctx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_swap_task_ctx,0x9,0xffffffff82000358,CALL 0xffffffff82000358,direct call
x86_pmu_swap_task_ctx,0xf,,RET,ret
x86_pmu_sched_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_sched_task,0xd,0xffffffff82000350,CALL 0xffffffff82000350,direct call
x86_pmu_sched_task,0x13,,RET,ret
x86_perf_event_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_perf_event_update,0x42,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
x86_perf_event_update,0x83,,RET,ret
x86_perf_event_update,0x87,,RET,ret
x86_pmu_extra_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_extra_regs,0x3a,,RET,ret
x86_pmu_extra_regs,0x58,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RCX",write other [TODO]
x86_pmu_extra_regs,0x5f,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],EDX",write other [TODO]
x86_pmu_extra_regs,0x68,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],EAX",write other [TODO]
x86_pmu_extra_regs,0x70,,RET,ret
x86_pmu_extra_regs,0x8c,,RET,ret
x86_pmu_extra_regs,0x93,,RET,ret
x86_pmu_commit_txn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_commit_txn,0x2a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
x86_pmu_commit_txn,0x71,0xffffffff82000320,CALL 0xffffffff82000320,direct call
x86_pmu_commit_txn,0x9f,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
x86_pmu_commit_txn,0xa7,ctx->rbx + 0x92c,"MOV dword ptr [RBX + 0x92c],0x0",write other [TODO]
x86_pmu_commit_txn,0xb1,0xffffffff8126cb10,CALL 0xffffffff8126cb10,direct call
x86_pmu_commit_txn,0xd7,,RET,ret
x86_pmu_commit_txn,0xd8,ctx->rbx + 0x92c,"MOV dword ptr [RBX + 0x92c],0x0",write other [TODO]
x86_pmu_commit_txn,0xf6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
x86_pmu_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_read,0x9,0xffffffff82000300,CALL 0xffffffff82000300,direct call
x86_pmu_read,0xf,,RET,ret
x86_pmu_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_start,0x43,0xffffffff82000308,CALL 0xffffffff82000308,direct call
x86_pmu_start,0x48,ctx->r12 + 0x1d8,"MOV dword ptr [R12 + 0x1d8],0x0",write other [TODO]
x86_pmu_start,0x54,ctx->rbx + ctx->r13 * 0x8,"MOV qword ptr [RBX + R13*0x8],R12",write other [TODO]
x86_pmu_start,0x63,0xffffffff820002d8,CALL 0xffffffff820002d8,direct call
x86_pmu_start,0x6b,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
x86_pmu_start,0x76,,RET,ret
x86_pmu_online_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_online_cpu,0x22,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_pmu_online_cpu,0x2e,ctx->rbx + 0x1338,"MOV qword ptr [RBX + 0x1338],0x0",write other [TODO]
x86_pmu_online_cpu,0x39,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_pmu_online_cpu,0x40,ctx->rbx + 0x1340,"MOV qword ptr [RBX + 0x1340],0x0",write other [TODO]
x86_pmu_online_cpu,0x50,,RET,ret
x86_pmu_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_disable,0x28,,RET,ret
x86_pmu_disable,0x2a,ctx->rax + 0x218,"MOV dword ptr [RAX + 0x218],0x0",write other [TODO]
x86_pmu_disable,0x34,ctx->rax + 0x210,"MOV dword ptr [RAX + 0x210],0x0",write other [TODO]
x86_pmu_disable,0x41,0xffffffff820002c8,CALL 0xffffffff820002c8,direct call
x86_pmu_disable,0x47,,RET,ret
get_attr_rdpmc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_attr_rdpmc,0x1e,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
get_attr_rdpmc,0x26,,RET,ret
set_attr_rdpmc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_attr_rdpmc,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
set_attr_rdpmc,0x29,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
set_attr_rdpmc,0x8c,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_attr_rdpmc,0x95,0xffffffff83115cf0,"MOV dword ptr [0xffffffff83115cf0],EAX",write .data
set_attr_rdpmc,0xb2,,RET,ret
set_attr_rdpmc,0xba,0xffffffff8127fa60,CALL 0xffffffff8127fa60,direct call
set_attr_rdpmc,0xcc,0xffffffff8127ff20,CALL 0xffffffff8127ff20,direct call
set_attr_rdpmc,0xde,0xffffffff8127ff20,CALL 0xffffffff8127ff20,direct call
set_attr_rdpmc,0xec,0xffffffff8127fa60,CALL 0xffffffff8127fa60,direct call
set_attr_rdpmc,0x105,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_guest_get_msrs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_guest_get_msrs,0x9,0xffffffff82000370,CALL 0xffffffff82000370,direct call
perf_guest_get_msrs,0xf,,RET,ret
_x86_pmu_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_x86_pmu_read,0x9,0xffffffff82000310,CALL 0xffffffff82000310,direct call
_x86_pmu_read,0xf,,RET,ret
x86_pmu_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_stop,0x4e,,RET,ret
x86_pmu_stop,0x4f,0xffffffff820002e0,CALL 0xffffffff820002e0,direct call
x86_pmu_stop,0x6e,ctx->r12 + ctx->rax * 0x8,"MOV qword ptr [R12 + RAX*0x8],0x0",write other [TODO]
x86_pmu_stop,0x83,ctx->rbx + 0x1d8,"MOV dword ptr [RBX + 0x1d8],EAX",write other [TODO]
x86_pmu_stop,0x8e,0xffffffff82000310,CALL 0xffffffff82000310,direct call
x86_pmu_stop,0xa2,,RET,ret
events_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
events_sysfs_show,0x24,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
events_sysfs_show,0x39,0xffffffff83115d00,CALL qword ptr [0xffffffff83115d00],in-direct call
events_sysfs_show,0x43,,RET,ret
events_sysfs_show,0x4e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
events_sysfs_show,0x59,,RET,ret
events_hybrid_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
events_hybrid_sysfs_show,0x21,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
events_hybrid_sysfs_show,0x28,0xffffffff81647350,CALL 0xffffffff81647350,direct call
events_hybrid_sysfs_show,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
events_hybrid_sysfs_show,0x7d,0xffffffff81c7f910,CALL 0xffffffff81c7f910,direct call
events_hybrid_sysfs_show,0xae,,RET,ret
events_hybrid_sysfs_show,0xc9,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
events_hybrid_sysfs_show,0xde,,RET,ret
events_hybrid_sysfs_show,0xed,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
events_hybrid_sysfs_show,0x102,,RET,ret
is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_visible,0x25,,RET,ret
is_visible,0x28,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
is_visible,0x3a,,RET,ret
is_visible,0x3d,,RET,ret
x86_pmu_event_idx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_event_idx,0x32,,RET,ret
x86_pmu_check_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_check_period,0x1f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
x86_pmu_check_period,0x2f,ctx->rax,CALL RAX,in-direct call
x86_pmu_check_period,0x53,,RET,ret
x86_pmu_check_period,0x62,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RBX",write stack
x86_pmu_check_period,0x6d,ctx->rdx,CALL RDX,in-direct call
x86_pmu_check_period,0x81,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
x86_pmu_aux_output_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_aux_output_match,0x24,ctx->rdx,CALL RDX,in-direct call
x86_pmu_aux_output_match,0x27,,RET,ret
x86_pmu_aux_output_match,0x28,,RET,ret
x86_pmu_cancel_txn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_cancel_txn,0x1e,ctx->rax + 0x92c,"MOV dword ptr [RAX + 0x92c],0x0",write other [TODO]
x86_pmu_cancel_txn,0x2d,,RET,ret
x86_pmu_cancel_txn,0x6b,0xffffffff8126cb10,CALL 0xffffffff8126cb10,direct call
x86_pmu_cancel_txn,0x71,,RET,ret
x86_pmu_start_txn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_start_txn,0x1e,ctx->rax + 0x92c,"MOV dword ptr [RAX + 0x92c],ESI",write other [TODO]
x86_pmu_start_txn,0x29,,RET,ret
x86_pmu_start_txn,0x2e,0xffffffff8126cae0,CALL 0xffffffff8126cae0,direct call
x86_pmu_start_txn,0x34,ctx->gs + 0x19e7c,"MOV dword ptr GS:[0x19e7c],0x0",write other [TODO]
x86_pmu_start_txn,0x3f,ctx->gs + 0x19e80,"MOV dword ptr GS:[0x19e80],0x0",write other [TODO]
x86_pmu_start_txn,0x4a,ctx->gs + 0x19e84,"MOV dword ptr GS:[0x19e84],0x0",write other [TODO]
x86_pmu_start_txn,0x55,,RET,ret
x86_pmu_event_unmapped,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_event_unmapped,0x18,,RET,ret
x86_pmu_event_unmapped,0x34,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
x86_pmu_event_unmapped,0x3a,,RET,ret
perf_get_x86_pmu_capability,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_get_x86_pmu_capability,0x1a,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x22,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x2b,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x34,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x37,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x41,ctx->rdi + 0x14,"MOV dword ptr [RDI + 0x14],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x4a,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],EAX",write other [TODO]
perf_get_x86_pmu_capability,0x62,ctx->rdi + 0x1c,"MOV byte ptr [RDI + 0x1c],AL",write other [TODO]
perf_get_x86_pmu_capability,0x65,,RET,ret
perf_get_x86_pmu_capability,0x66,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
perf_get_x86_pmu_capability,0x6e,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
perf_get_x86_pmu_capability,0x76,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],0x0",write other [TODO]
perf_get_x86_pmu_capability,0x7e,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],0x0",write other [TODO]
perf_get_x86_pmu_capability,0x86,,RET,ret
perf_event_nmi_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_event_nmi_handler,0x1d,0xffffffff81040f90,CALL 0xffffffff81040f90,direct call
perf_event_nmi_handler,0x28,0xffffffff820002c0,CALL 0xffffffff820002c0,direct call
perf_event_nmi_handler,0x30,0xffffffff81040f90,CALL 0xffffffff81040f90,direct call
perf_event_nmi_handler,0x3b,0xffffffff8126c9f0,CALL 0xffffffff8126c9f0,direct call
perf_event_nmi_handler,0x49,,RET,ret
x86_pmu_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_del,0x3a,0xffffffff820002f8,CALL 0xffffffff820002f8,direct call
x86_pmu_del,0x47,,RET,ret
x86_pmu_del,0x5f,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
x86_pmu_del,0xa6,0xffffffff82000330,CALL 0xffffffff82000330,direct call
x86_pmu_del,0xc9,ctx->rbx + ctx->rdx * 0x8 + 0x528,"MOV qword ptr [RBX + RDX*0x8 + 0x528],RCX",write other [TODO]
x86_pmu_del,0xdd,ctx->rbx + ctx->rdx * 0x8 + 0x728,"MOV qword ptr [RBX + RDX*0x8 + 0x728],RCX",write other [TODO]
x86_pmu_del,0xf6,ctx->rbx + ctx->r14 * 0x8 + 0x728,"MOV qword ptr [RBX + R14*0x8 + 0x728],0x0",write other [TODO]
x86_pmu_del,0x102,ctx->rbx + 0x214,"MOV dword ptr [RBX + 0x214],ESI",write other [TODO]
x86_pmu_del,0x10f,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
x86_pmu_del,0x11c,ctx->rbx + 0x218,"MOV dword ptr [RBX + 0x218],EAX",write other [TODO]
collect_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_event,0x29,ctx->rdi + ctx->rcx * 0x8 + 0x528,"MOV qword ptr [RDI + RCX*0x8 + 0x528],RAX",write other [TODO]
collect_event,0x53,,RET,ret
collect_event,0x9a,ctx->rdi + 0x1310,"MOV dword ptr [RDI + 0x1310],ESI",write other [TODO]
perf_assign_events,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_assign_events,0x37,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_assign_events,0x3d,ctx->rbp - 0xa4,"MOV dword ptr [RBP + -0xa4],ESI",write stack
perf_assign_events,0x43,ctx->rbp - 0xa8,"MOV dword ptr [RBP + -0xa8],R12D",write stack
perf_assign_events,0x4d,ctx->rbp - 0xa0,"MOV dword ptr [RBP + -0xa0],R8D",write stack
perf_assign_events,0x54,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R10",write stack
perf_assign_events,0x7e,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],EDX",write stack
perf_assign_events,0x91,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],R11D",write stack
perf_assign_events,0x98,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],ESI",write stack
perf_assign_events,0x137,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
perf_assign_events,0x13b,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],EDX",write stack
perf_assign_events,0x15c,ctx->r9 + ctx->r13 * 0x4,"MOV dword ptr [R9 + R13*0x4],EDX",write other [TODO]
perf_assign_events,0x18d,,RET,ret
perf_assign_events,0x1f0,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],R11D",write stack
perf_assign_events,0x211,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],EAX",write stack
perf_assign_events,0x22a,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RDX",write stack
perf_assign_events,0x239,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R8",write stack
perf_assign_events,0x23f,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RDX",write stack
perf_assign_events,0x24a,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
perf_assign_events,0x25d,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],ECX",write stack
perf_assign_events,0x2c2,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],ECX",write stack
perf_assign_events,0x2cd,ctx->r11 + 0x8,"MOV qword ptr [R11 + 0x8],RBX",write other [TODO]
perf_assign_events,0x2d8,ctx->r11 + 0x20,"MOV qword ptr [R11 + 0x20],RAX",write other [TODO]
perf_assign_events,0x2dc,ctx->r11 + 0x10,"MOV qword ptr [R11 + 0x10],RBX",write other [TODO]
perf_assign_events,0x2e4,ctx->r11 + 0x18,"MOV qword ptr [R11 + 0x18],RBX",write other [TODO]
perf_assign_events,0x2f5,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],R8D",write stack
perf_assign_events,0x31d,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],EAX",write stack
perf_assign_events,0x337,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
perf_assign_events,0x344,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],EDX",write stack
perf_assign_events,0x35f,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],0x0",write stack
perf_assign_events,0x37c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
x86_pmu_event_mapped,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_event_mapped,0x20,,RET,ret
x86_pmu_event_mapped,0x3c,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
x86_pmu_event_mapped,0x42,,RET,ret
allocate_fake_cpuc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
allocate_fake_cpuc,0x24,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
allocate_fake_cpuc,0x32,ctx->rax + 0x930,"MOV dword ptr [RAX + 0x930],0x1",write other [TODO]
allocate_fake_cpuc,0x48,ctx->r12 + 0x1348,"MOV qword ptr [R12 + 0x1348],RBX",write other [TODO]
allocate_fake_cpuc,0x53,0xffffffff8100ff70,CALL 0xffffffff8100ff70,direct call
allocate_fake_cpuc,0x67,,RET,ret
allocate_fake_cpuc,0x6b,0xffffffff81010170,CALL 0xffffffff81010170,direct call
allocate_fake_cpuc,0x7a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
allocate_fake_cpuc,0x8a,,RET,ret
max_precise_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
max_precise_show,0x2b,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
max_precise_show,0x36,,RET,ret
collect_events,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_events,0x40,ctx->r13 + 0x964,"MOV dword ptr [R13 + 0x964],0x0",write other [TODO]
collect_events,0xa5,ctx->r13 + 0x964,"MOV dword ptr [R13 + 0x964],EAX",write other [TODO]
collect_events,0xdf,,RET,ret
collect_events,0x164,0xffffffff81004fe0,CALL 0xffffffff81004fe0,direct call
collect_events,0x1ad,0xffffffff81004fe0,CALL 0xffffffff81004fe0,direct call
collect_events,0x1d4,,RET,ret
x86_pmu_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_add,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
x86_pmu_add,0x4c,0xffffffff810055b0,CALL 0xffffffff810055b0,direct call
x86_pmu_add,0x69,ctx->r15 + 0x1d8,"MOV dword ptr [R15 + 0x1d8],EAX",write other [TODO]
x86_pmu_add,0x79,ctx->rbx + 0x214,"MOV dword ptr [RBX + 0x214],R12D",write other [TODO]
x86_pmu_add,0x97,0xffffffff820002f0,CALL 0xffffffff820002f0,direct call
x86_pmu_add,0xbf,,RET,ret
x86_pmu_add,0xcd,0xffffffff82000320,CALL 0xffffffff82000320,direct call
x86_pmu_add,0xf8,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
x86_pmu_add,0x107,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
x86_pmu_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_enable,0x7b,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],EAX",write other [TODO]
x86_pmu_enable,0x86,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
x86_pmu_enable,0xe1,ctx->r13 + 0x170,"MOV qword ptr [R13 + 0x170],0x38d",write other [TODO]
x86_pmu_enable,0xec,ctx->r13 + 0x178,"MOV qword ptr [R13 + 0x178],RDX",write other [TODO]
x86_pmu_enable,0xf3,ctx->r13 + 0x180,"MOV dword ptr [R13 + 0x180],EAX",write other [TODO]
x86_pmu_enable,0x10c,0xffffffff81004650,CALL 0xffffffff81004650,direct call
x86_pmu_enable,0x11e,ctx->rbx + 0x218,"MOV dword ptr [RBX + 0x218],0x0",write other [TODO]
x86_pmu_enable,0x14d,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
x86_pmu_enable,0x150,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],0x1",write other [TODO]
x86_pmu_enable,0x15d,0xffffffff820002d0,CALL 0xffffffff820002d0,direct call
x86_pmu_enable,0x170,,RET,ret
x86_pmu_enable,0x19e,ctx->r13 + 0x184,"MOV dword ptr [R13 + 0x184],EAX",write other [TODO]
x86_pmu_enable,0x1aa,ctx->r13 + 0x188,"MOV dword ptr [R13 + 0x188],EDX",write other [TODO]
x86_pmu_enable,0x1b9,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
x86_pmu_enable,0x1c0,ctx->rbx + ctx->r12 * 0x8 + 0x328,"MOV qword ptr [RBX + R12*0x8 + 0x328],RDX",write other [TODO]
x86_pmu_enable,0x1c8,ctx->r13 + 0x168,"MOV qword ptr [R13 + 0x168],RDX",write other [TODO]
x86_pmu_enable,0x1cf,0xffffffff820002e8,CALL 0xffffffff820002e8,direct call
x86_pmu_enable,0x25f,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
x86_pmu_enable,0x267,ctx->rax,CALL RAX,in-direct call
x86_pmu_enable,0x282,ctx->r13 + 0x170,"MOV qword ptr [R13 + 0x170],RAX",write other [TODO]
x86_pmu_enable,0x28e,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
x86_pmu_enable,0x293,ctx->rcx,CALL RCX,in-direct call
x86_pmu_enable,0x2a1,ctx->r13 + 0x178,"MOV qword ptr [R13 + 0x178],RAX",write other [TODO]
x86_pmu_enable,0x2b4,ctx->rax,CALL RAX,in-direct call
x86_pmu_enable,0x2b8,ctx->r13 + 0x180,"MOV dword ptr [R13 + 0x180],EDI",write other [TODO]
x86_pmu_enable,0x2cd,ctx->r13 + 0x170,"MOV qword ptr [R13 + 0x170],RAX",write other [TODO]
x86_pmu_enable,0x2d8,ctx->r13 + 0x170,"MOV qword ptr [R13 + 0x170],0x0",write other [TODO]
x86_pmu_enable,0x2e3,ctx->r13 + 0x178,"MOV qword ptr [R13 + 0x178],0x0",write other [TODO]
x86_perf_event_set_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_perf_event_set_period,0x2a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
x86_perf_event_set_period,0x3d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
x86_perf_event_set_period,0x82,0xffffffff82000318,CALL 0xffffffff82000318,direct call
x86_perf_event_set_period,0x8e,ctx->gs + 0x19a60 + ctx->rax * 0x8,"MOV qword ptr GS:[0x19a60 + RAX*0x8],RDX",write other [TODO]
x86_perf_event_set_period,0xa2,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],RDX",write other [TODO]
x86_perf_event_set_period,0xb7,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_perf_event_set_period,0xcb,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
x86_perf_event_set_period,0xf2,,RET,ret
x86_perf_event_set_period,0xf3,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
x86_perf_event_set_period,0x111,ctx->rax,CALL RAX,in-direct call
x86_perf_event_set_period,0x121,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_perf_event_set_period,0x131,ctx->r12 + 0x1f0,"MOV qword ptr [R12 + 0x1f0],RDX",write other [TODO]
x86_perf_event_set_period,0x13f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
x86_perf_event_set_period,0x143,ctx->r12 + 0x1f8,"MOV qword ptr [R12 + 0x1f8],RAX",write other [TODO]
x86_perf_event_set_period,0x150,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x2",write stack
x86_perf_event_set_period,0x162,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
x86_perf_event_set_period,0x16f,ctx->rdi + 0x1f8,"MOV qword ptr [RDI + 0x1f8],RDX",write other [TODO]
x86_perf_event_set_period,0x176,ctx->rdi + 0x1f0,"MOV qword ptr [RDI + 0x1f0],RDX",write other [TODO]
x86_perf_event_set_period,0x182,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
check_hw_exists,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_hw_exists,0x16,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDI",write stack
check_hw_exists,0x1a,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],ESI",write stack
check_hw_exists,0x1d,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EDX",write stack
check_hw_exists,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
check_hw_exists,0x47,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
check_hw_exists,0x51,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],-0x1",write stack
check_hw_exists,0x76,ctx->rdx,CALL RDX,in-direct call
check_hw_exists,0x7f,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EDI",write stack
check_hw_exists,0x85,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
check_hw_exists,0x8b,ctx->esi,"MOV ESI,dword ptr [RBP + -0x34]",write other [TODO]
check_hw_exists,0xa8,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
check_hw_exists,0xeb,ctx->rax,CALL RAX,in-direct call
check_hw_exists,0xf5,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EBX",write stack
check_hw_exists,0xfb,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
check_hw_exists,0x121,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
check_hw_exists,0x131,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
check_hw_exists,0x192,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],-0x1",write stack
check_hw_exists,0x1a3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
check_hw_exists,0x1b6,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
check_hw_exists,0x226,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R11",write stack
check_hw_exists,0xc87bc0,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x38d",write stack
x86_reserve_hardware,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_reserve_hardware,0x43,,RET,ret
x86_reserve_hardware,0x4b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
x86_reserve_hardware,0x6a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
x86_reserve_hardware,0x7c,,RET,ret
x86_reserve_hardware,0xb9,ctx->rdx,CALL RDX,in-direct call
x86_reserve_hardware,0xbf,0xffffffff8106abb0,CALL 0xffffffff8106abb0,direct call
x86_reserve_hardware,0xeb,ctx->rdx,CALL RDX,in-direct call
x86_reserve_hardware,0xf0,0xffffffff8106a9f0,CALL 0xffffffff8106a9f0,direct call
x86_reserve_hardware,0x131,ctx->rdx,CALL RDX,in-direct call
x86_reserve_hardware,0x138,0xffffffff8106ab10,CALL 0xffffffff8106ab10,direct call
x86_reserve_hardware,0x168,ctx->rdx,CALL RDX,in-direct call
x86_reserve_hardware,0x16f,0xffffffff8106aa80,CALL 0xffffffff8106aa80,direct call
x86_reserve_hardware,0x1c8,0xffffffff81013320,CALL 0xffffffff81013320,direct call
x86_reserve_hardware,0x1cd,0xffffffff810153a0,CALL 0xffffffff810153a0,direct call
x86_pmu_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_event_init,0x4b,0xffffffff81005fd0,CALL 0xffffffff81005fd0,direct call
x86_pmu_event_init,0x62,ctx->rbx + 0x388,"MOV qword ptr [RBX + 0x388],-0x7eff99f0",write other [TODO]
x86_pmu_event_init,0x70,ctx->rbx + 0x184,"MOV qword ptr [RBX + 0x184],-0x1",write other [TODO]
x86_pmu_event_init,0x7b,ctx->rbx + 0x168,"MOV qword ptr [RBX + 0x168],-0x1",write other [TODO]
x86_pmu_event_init,0x86,ctx->rbx + 0x1a0,"MOV dword ptr [RBX + 0x1a0],0xffffffff",write other [TODO]
x86_pmu_event_init,0x90,ctx->rbx + 0x1b8,"MOV dword ptr [RBX + 0x1b8],0xffffffff",write other [TODO]
x86_pmu_event_init,0x9a,0xffffffff83115c48,CALL qword ptr [0xffffffff83115c48],in-direct call
x86_pmu_event_init,0xc7,0xffffffff81005470,CALL 0xffffffff81005470,direct call
x86_pmu_event_init,0xe6,0xffffffff810055b0,CALL 0xffffffff810055b0,direct call
x86_pmu_event_init,0xf3,ctx->r13 + 0x214,"MOV dword ptr [R13 + 0x214],EAX",write other [TODO]
x86_pmu_event_init,0x102,0xffffffff810055b0,CALL 0xffffffff810055b0,direct call
x86_pmu_event_init,0x111,ctx->r13 + 0x214,"MOV dword ptr [R13 + 0x214],0x0",write other [TODO]
x86_pmu_event_init,0x121,0xffffffff83115c50,CALL qword ptr [0xffffffff83115c50],in-direct call
x86_pmu_event_init,0x12d,0xffffffff81010170,CALL 0xffffffff81010170,direct call
x86_pmu_event_init,0x135,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_pmu_event_init,0x14e,ctx->rax,CALL RAX,in-direct call
x86_pmu_event_init,0x150,ctx->rbx + 0x388,"MOV qword ptr [RBX + 0x388],0x0",write other [TODO]
x86_pmu_event_init,0x175,ctx->rbx + 0x18c,"MOV dword ptr [RBX + 0x18c],EAX",write other [TODO]
x86_pmu_event_init,0x186,,RET,ret
x86_pmu_event_init,0x248,0xffffffff81010170,CALL 0xffffffff81010170,direct call
x86_pmu_event_init,0x250,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_pmu_event_init,0x261,0xffffffff81005470,CALL 0xffffffff81005470,direct call
x86_pmu_event_init,0x279,0xffffffff83115ca8,CALL qword ptr [0xffffffff83115ca8],in-direct call
x86_pmu_event_init,0x2a4,ctx->rax,CALL RAX,in-direct call
x86_pmu_event_init,0x2a9,0xffffffff81010170,CALL 0xffffffff81010170,direct call
x86_pmu_event_init,0x2b1,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_release_hardware,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_release_hardware,0x1c,0xffffffff81112ae0,CALL 0xffffffff81112ae0,direct call
x86_release_hardware,0x2b,,RET,ret
x86_release_hardware,0x55,ctx->rdx,CALL RDX,in-direct call
x86_release_hardware,0x5c,0xffffffff8106a9f0,CALL 0xffffffff8106a9f0,direct call
x86_release_hardware,0x7d,ctx->rdx,CALL RDX,in-direct call
x86_release_hardware,0x87,0xffffffff8106aa80,CALL 0xffffffff8106aa80,direct call
x86_release_hardware,0x91,0xffffffff81013220,CALL 0xffffffff81013220,direct call
x86_release_hardware,0x96,0xffffffff81015310,CALL 0xffffffff81015310,direct call
x86_release_hardware,0xa2,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
x86_release_hardware,0xad,,RET,ret
hw_perf_event_destroy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_perf_event_destroy,0x9,0xffffffff81006510,CALL 0xffffffff81006510,direct call
hw_perf_event_destroy,0x16,,RET,ret
x86_add_exclusive,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_add_exclusive,0x4f,,RET,ret
x86_add_exclusive,0x57,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
x86_add_exclusive,0x98,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
x86_add_exclusive,0xa6,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
x86_del_exclusive,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_del_exclusive,0x29,,RET,ret
hw_perf_lbr_event_destroy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_perf_lbr_event_destroy,0x9,0xffffffff81006510,CALL 0xffffffff81006510,direct call
hw_perf_lbr_event_destroy,0x17,0xffffffff810066f0,CALL 0xffffffff810066f0,direct call
hw_perf_lbr_event_destroy,0x1d,,RET,ret
x86_setup_perfctr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_setup_perfctr,0x1f,ctx->rdi + 0x1e8,"MOV qword ptr [RDI + 0x1e8],RAX",write other [TODO]
x86_setup_perfctr,0x26,ctx->rdi + 0x1f0,"MOV qword ptr [RDI + 0x1f0],RAX",write other [TODO]
x86_setup_perfctr,0x2d,ctx->rdi + 0x1f8,"MOV qword ptr [RDI + 0x1f8],RAX",write other [TODO]
x86_setup_perfctr,0x73,ctx->r12 + 0xe0,"MOV qword ptr [R12 + 0xe0],RAX",write other [TODO]
x86_setup_perfctr,0x7d,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
x86_setup_perfctr,0xa5,,RET,ret
x86_setup_perfctr,0x13a,ctx->r12 + 0x110,"MOV qword ptr [R12 + 0x110],RAX",write other [TODO]
x86_setup_perfctr,0x145,0xffffffff810044a0,CALL 0xffffffff810044a0,direct call
x86_setup_perfctr,0x14f,,RET,ret
x86_pmu_max_precise,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_max_precise,0x1d,,RET,ret
x86_pmu_max_precise,0x37,,RET,ret
x86_pmu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_hw_config,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
x86_pmu_hw_config,0xc4,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
x86_pmu_hw_config,0x12b,0xffffffff81006740,CALL 0xffffffff81006740,direct call
x86_pmu_hw_config,0x148,,RET,ret
x86_pmu_hw_config,0x155,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
x86_pmu_hw_config,0x160,ctx->rdx,CALL RDX,in-direct call
x86_pmu_hw_config,0x1b0,ctx->r12 + 0x120,"MOV qword ptr [R12 + 0x120],RSI",write other [TODO]
x86_pmu_hw_config,0x271,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
x86_pmu_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_disable_all,0x2c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
x86_pmu_disable_all,0x3e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R15",write stack
x86_pmu_disable_all,0x60,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ECX",write stack
x86_pmu_disable_all,0x83,ctx->rdx,CALL RDX,in-direct call
x86_pmu_disable_all,0x89,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x86_pmu_disable_all,0xab,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
x86_pmu_disable_all,0xb6,ctx->rax,CALL RAX,in-direct call
x86_pmu_disable_all,0xd2,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_disable_all,0x100,,RET,ret
x86_pmu_disable_all,0x11c,ctx->rax,CALL RAX,in-direct call
x86_pmu_disable_all,0x11e,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
x86_pmu_disable_all,0x12d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_enable_all,0x6c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_enable_all,0xb1,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_enable_all,0xe6,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
x86_pmu_enable_all,0xee,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
x86_pmu_enable_all,0xf2,ctx->rax,CALL RAX,in-direct call
x86_pmu_enable_all,0x107,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_enable_all,0x120,,RET,ret
x86_get_pmu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_get_pmu,0x28,,RET,ret
x86_schedule_events,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_schedule_events,0x1c,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ESI",write stack
x86_schedule_events,0x2a,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
x86_schedule_events,0x35,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
x86_schedule_events,0x4d,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
x86_schedule_events,0x53,0xffffffff82000338,CALL 0xffffffff82000338,direct call
x86_schedule_events,0x71,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R15",write stack
x86_schedule_events,0xbb,0xffffffff82000328,CALL 0xffffffff82000328,direct call
x86_schedule_events,0xc0,ctx->r12 + ctx->rbx * 0x8 + 0x728,"MOV qword ptr [R12 + RBX*0x8 + 0x728],RAX",write other [TODO]
x86_schedule_events,0x12d,ctx->r15 + ctx->rax * 0x4,"MOV dword ptr [R15 + RAX*0x4],ECX",write other [TODO]
x86_schedule_events,0x1bd,0xffffffff81005090,CALL 0xffffffff81005090,direct call
x86_schedule_events,0x1ec,0xffffffff82000340,CALL 0xffffffff82000340,direct call
x86_schedule_events,0x1fc,0xffffffff82000348,CALL 0xffffffff82000348,direct call
x86_schedule_events,0x212,,RET,ret
x86_schedule_events,0x248,0xffffffff82000330,CALL 0xffffffff82000330,direct call
x86_schedule_events,0x24d,ctx->r14 + 0x720,"MOV qword ptr [R14 + 0x720],0x0",write other [TODO]
x86_schedule_events,0x260,0xffffffff82000348,CALL 0xffffffff82000348,direct call
x86_perf_rdpmc_index,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_perf_rdpmc_index,0x10,,RET,ret
x86_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_enable_event,0x10,,RET,ret
x86_pmu_enable_event,0x5a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_enable_event,0x68,,RET,ret
x86_pmu_enable_event,0x76,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_enable_event,0xad,ctx->rax,CALL RAX,in-direct call
x86_pmu_enable_event,0xc0,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_event_print_debug,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_event_print_debug,0x5e,,RET,ret
perf_event_print_debug,0x9e,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
perf_event_print_debug,0xa4,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
perf_event_print_debug,0xa8,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
perf_event_print_debug,0xc0,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R9",write stack
perf_event_print_debug,0xc4,0xffffffff81004250,CALL 0xffffffff81004250,direct call
perf_event_print_debug,0xce,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
perf_event_print_debug,0xd2,0xffffffff81004250,CALL 0xffffffff81004250,direct call
perf_event_print_debug,0xdc,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
perf_event_print_debug,0xe0,0xffffffff81004250,CALL 0xffffffff81004250,direct call
perf_event_print_debug,0xea,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
perf_event_print_debug,0xee,0xffffffff81004250,CALL 0xffffffff81004250,direct call
perf_event_print_debug,0xfa,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_event_print_debug,0xfe,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_event_print_debug,0x111,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_event_print_debug,0x124,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_event_print_debug,0x137,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_event_print_debug,0x14a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_event_print_debug,0x16a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
perf_event_print_debug,0x16e,0xffffffff81004250,CALL 0xffffffff81004250,direct call
perf_event_print_debug,0x180,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_event_print_debug,0x193,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
perf_event_print_debug,0x197,0xffffffff81004250,CALL 0xffffffff81004250,direct call
perf_event_print_debug,0x1a9,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
x86_pmu_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_handle_irq,0x2e,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RDI",write stack
x86_pmu_handle_irq,0x51,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
x86_pmu_handle_irq,0x62,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
x86_pmu_handle_irq,0x84,0xffffffff82000310,CALL 0xffffffff82000310,direct call
x86_pmu_handle_irq,0xa2,0xffffffff82000308,CALL 0xffffffff82000308,direct call
x86_pmu_handle_irq,0xab,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
x86_pmu_handle_irq,0xbb,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
x86_pmu_handle_irq,0xd2,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x900",write stack
x86_pmu_handle_irq,0xdb,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
x86_pmu_handle_irq,0xed,0xffffffff81275230,CALL 0xffffffff81275230,direct call
x86_pmu_handle_irq,0x135,,RET,ret
x86_pmu_handle_irq,0x13b,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
x86_pmu_handle_irq,0x142,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_events_lapic_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_events_lapic_init,0x2e,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
perf_events_lapic_init,0x32,,RET,ret
perf_events_lapic_init,0x33,,RET,ret
events_ht_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
events_ht_sysfs_show,0x23,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
events_ht_sysfs_show,0x2b,,RET,ret
x86_event_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_event_sysfs_show,0x45,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
x86_event_sysfs_show,0x58,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
x86_event_sysfs_show,0x5c,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
x86_event_sysfs_show,0x97,ctx->wordctx->ptrctx->r13 + ctx->rcx * 0x1,"MOV word ptr [R13 + RCX*0x1],AX",write other [TODO]
x86_event_sysfs_show,0xaf,,RET,ret
x86_event_sysfs_show,0xbf,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
x86_event_sysfs_show,0xc3,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
x86_event_sysfs_show,0xe8,ctx->rax,"MOV dword ptr [RAX],0x6764652c",write other [TODO]
x86_event_sysfs_show,0xee,ctx->wordctx->ptrctx->rax + 0x4,"MOV word ptr [RAX + 0x4],DX",write other [TODO]
x86_event_sysfs_show,0xf4,ctx->r13 + ctx->rcx * 0x1,"MOV dword ptr [R13 + RCX*0x1],0x63702c",write other [TODO]
x86_event_sysfs_show,0x115,ctx->rax,"MOV dword ptr [RAX],0x796e612c",write other [TODO]
x86_event_sysfs_show,0x11b,ctx->rax + 0x4,"MOV byte ptr [RAX + 0x4],0x0",write other [TODO]
x86_event_sysfs_show,0x131,ctx->rax,"MOV dword ptr [RAX],0x766e692c",write other [TODO]
x86_event_sysfs_show,0x137,ctx->rax + 0x4,"MOV byte ptr [RAX + 0x4],0x0",write other [TODO]
x86_event_sysfs_show,0x153,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
x86_event_sysfs_show,0x157,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
x86_pmu_update_cpu_context,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_update_cpu_context,0x1d,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],RDI",write other [TODO]
x86_pmu_update_cpu_context,0x22,,RET,ret
perf_clear_dirty_counters,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_clear_dirty_counters,0x8f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_clear_dirty_counters,0xb5,ctx->rbx + 0x208,"MOV qword ptr [RBX + 0x208],0x0",write other [TODO]
perf_clear_dirty_counters,0xc8,,RET,ret
perf_clear_dirty_counters,0xf4,ctx->rdx,CALL RDX,in-direct call
perf_clear_dirty_counters,0x100,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_check_microcode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_check_microcode,0x15,ctx->rax,CALL RAX,in-direct call
perf_check_microcode,0x18,,RET,ret
perf_check_microcode,0x19,,RET,ret
arch_perf_update_userpage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_perf_update_userpage,0x24,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
arch_perf_update_userpage,0x36,ctx->rsi + 0x28,"MOV byte ptr [RSI + 0x28],DL",write other [TODO]
arch_perf_update_userpage,0x49,ctx->rsi + 0x28,"MOV byte ptr [RSI + 0x28],AL",write other [TODO]
arch_perf_update_userpage,0x52,ctx->wordctx->ptrctx->rsi + 0x30,"MOV word ptr [RSI + 0x30],AX",write other [TODO]
arch_perf_update_userpage,0x56,0xffffffff81040fa0,CALL 0xffffffff81040fa0,direct call
arch_perf_update_userpage,0x78,,RET,ret
arch_perf_update_userpage,0x79,0xffffffff81109d60,CALL 0xffffffff81109d60,direct call
arch_perf_update_userpage,0x86,0xffffffff81040eb0,CALL 0xffffffff81040eb0,direct call
arch_perf_update_userpage,0x9f,ctx->rbx + 0x28,"MOV byte ptr [RBX + 0x28],CL",write other [TODO]
arch_perf_update_userpage,0xa5,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],ECX",write other [TODO]
arch_perf_update_userpage,0xab,ctx->wordctx->ptrctx->rbx + 0x32,"MOV word ptr [RBX + 0x32],CX",write other [TODO]
arch_perf_update_userpage,0xb5,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RCX",write other [TODO]
arch_perf_update_userpage,0xc7,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],RAX",write other [TODO]
arch_perf_update_userpage,0xcb,ctx->rbx + 0x28,"MOV byte ptr [RBX + 0x28],DL",write other [TODO]
arch_perf_update_userpage,0xce,0xffffffff81040f00,CALL 0xffffffff81040f00,direct call
arch_perf_update_userpage,0xd5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_callchain_kernel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_callchain_kernel,0x21,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_callchain_kernel,0x27,0xffffffff82000b48,CALL 0xffffffff82000b48,direct call
perf_callchain_kernel,0x4d,,RET,ret
perf_callchain_kernel,0x6d,ctx->rax,"MOV qword ptr [RAX],RSI",write other [TODO]
perf_callchain_kernel,0x70,ctx->rax + ctx->rdx * 0x8 + 0x8,"MOV qword ptr [RAX + RDX*0x8 + 0x8],RCX",write other [TODO]
perf_callchain_kernel,0xac,0xffffffff810829b0,CALL 0xffffffff810829b0,direct call
perf_callchain_kernel,0xb6,0xffffffff81082600,CALL 0xffffffff81082600,direct call
perf_callchain_kernel,0xe7,ctx->rdx,"MOV qword ptr [RDX],RSI",write other [TODO]
perf_callchain_kernel,0xea,ctx->rdx + ctx->rcx * 0x8 + 0x8,"MOV qword ptr [RDX + RCX*0x8 + 0x8],RAX",write other [TODO]
perf_callchain_kernel,0xf3,0xffffffff81082990,CALL 0xffffffff81082990,direct call
perf_callchain_kernel,0x12a,0xffffffff810829b0,CALL 0xffffffff810829b0,direct call
perf_callchain_kernel,0x131,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_callchain_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_callchain_user,0x14,0xffffffff82000b48,CALL 0xffffffff82000b48,direct call
perf_callchain_user,0x2e,,RET,ret
perf_callchain_user,0x54,ctx->rdx,"MOV qword ptr [RDX],RSI",write other [TODO]
perf_callchain_user,0x57,ctx->rdx + ctx->rcx * 0x8 + 0x8,"MOV qword ptr [RDX + RCX*0x8 + 0x8],RAX",write other [TODO]
perf_callchain_user,0x60,0xffffffff8108cec0,CALL 0xffffffff8108cec0,direct call
perf_callchain_user,0x8b,0xffffffff81004330,CALL 0xffffffff81004330,direct call
perf_callchain_user,0x9b,0xffffffff81004330,CALL 0xffffffff81004330,direct call
perf_callchain_user,0xe3,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
perf_callchain_user,0xf2,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
perf_callchain_user,0x11b,ctx->rax,"MOV qword ptr [RAX],R8",write other [TODO]
perf_callchain_user,0x11e,ctx->rax + ctx->rdi * 0x8 + 0x8,"MOV qword ptr [RAX + RDI*0x8 + 0x8],RDX",write other [TODO]
perf_callchain_user,0x129,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
perf_callchain_user,0x160,,RET,ret
perf_callchain_user,0x195,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
perf_callchain_user,0x1a5,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
perf_callchain_user,0x1c6,ctx->rax,"MOV qword ptr [RAX],RDI",write other [TODO]
perf_callchain_user,0x1c9,ctx->rax + ctx->rsi * 0x8 + 0x8,"MOV qword ptr [RAX + RSI*0x8 + 0x8],RDX",write other [TODO]
perf_callchain_user,0x1d4,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
perf_instruction_pointer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_instruction_pointer,0xf,0xffffffff82000b48,CALL 0xffffffff82000b48,direct call
perf_instruction_pointer,0x33,,RET,ret
perf_instruction_pointer,0x4d,0xffffffff81004330,CALL 0xffffffff81004330,direct call
perf_instruction_pointer,0x57,0xffffffff82000b50,CALL 0xffffffff82000b50,direct call
perf_instruction_pointer,0x66,,RET,ret
perf_misc_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_misc_flags,0xd,0xffffffff82000b48,CALL 0xffffffff82000b48,direct call
perf_misc_flags,0x37,,RET,ret
not_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
not_visible,0xc,,RET,ret
perf_msr_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_msr_probe,0x19,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
perf_msr_probe,0x1d,ctx->rbp - 0x41,"MOV byte ptr [RBP + -0x41],DL",write stack
perf_msr_probe,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_msr_probe,0x58,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],-0x7eff8270",write other [TODO]
perf_msr_probe,0x78,ctx->rax,CALL RAX,in-direct call
perf_msr_probe,0x87,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
perf_msr_probe,0xac,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],0x0",write other [TODO]
perf_msr_probe,0xf3,,RET,ret
perf_msr_probe,0xfb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
decode_branch_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
decode_branch_type,0xf,0xffffffff81c8c490,CALL 0xffffffff81c8c490,direct call
decode_branch_type,0x46,ctx->eax,"MOV EAX,R12D",write other [TODO]
decode_branch_type,0x4d,,RET,ret
decode_branch_type,0x55,ctx->eax,"MOV EAX,R12D",write other [TODO]
decode_branch_type,0x5b,,RET,ret
decode_branch_type,0xaa,0xffffffff81c8c4d0,CALL 0xffffffff81c8c4d0,direct call
decode_branch_type,0xef,0xffffffff81c8c7e0,CALL 0xffffffff81c8c7e0,direct call
get_branch_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_branch_type,0x2b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
get_branch_type,0x36,ctx->r8,"MOV dword ptr [R8],0x0",write other [TODO]
get_branch_type,0x46,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],0x1",write stack
get_branch_type,0x8e,0xffffffff81c8cdf0,CALL 0xffffffff81c8cdf0,direct call
get_branch_type,0xfd,,RET,ret
get_branch_type,0xfe,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],0x2",write stack
get_branch_type,0x11c,0xffffffff810cad10,CALL 0xffffffff810cad10,direct call
get_branch_type,0x125,ctx->rbp - 0xb5,"MOV byte ptr [RBP + -0xb5],0x0",write stack
get_branch_type,0x146,0xffffffff81c8c400,CALL 0xffffffff81c8c400,direct call
get_branch_type,0x152,0xffffffff81007ea0,CALL 0xffffffff81007ea0,direct call
get_branch_type,0x18e,0xffffffff81c8c400,CALL 0xffffffff81c8c400,direct call
get_branch_type,0x19a,0xffffffff81007ea0,CALL 0xffffffff81007ea0,direct call
get_branch_type,0x1aa,0xffffffff81c8c820,CALL 0xffffffff81c8c820,direct call
get_branch_type,0x1ba,ctx->r14,"MOV dword ptr [R14],R13D",write other [TODO]
get_branch_type,0x216,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
branch_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branch_type,0xe,0xffffffff81008000,CALL 0xffffffff81008000,direct call
branch_type,0x14,,RET,ret
branch_type_fused,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branch_type_fused,0x11,0xffffffff81008000,CALL 0xffffffff81008000,direct call
branch_type_fused,0x17,,RET,ret
common_branch_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
common_branch_type,0x1f,,RET,ret
common_branch_type,0x2b,,RET,ret
amd_pmu_event_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_event_map,0x1e,,RET,ret
amd_pmu_event_map,0x28,,RET,ret
amd_put_event_constraints_f17h,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_put_event_constraints_f17h,0x1a,,RET,ret
amd_branches_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_branches_is_visible,0x18,,RET,ret
amd_branches_is_visible,0x1c,,RET,ret
amd_brs_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81008320,0x3,,RET,ret
amd_get_event_constraints_f15h,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_event_constraints_f15h,0x9d,,RET,ret
amd_get_event_constraints_f15h,0xde,ctx->rax,"MOV RAX,R8",write other [TODO]
amd_get_event_constraints_f15h,0xe2,,RET,ret
amd_get_event_constraints_f15h,0xf6,ctx->rax,"MOV RAX,R8",write other [TODO]
amd_get_event_constraints_f15h,0xfa,,RET,ret
amd_get_event_constraints_f15h,0x103,ctx->rax,"MOV RAX,R8",write other [TODO]
amd_get_event_constraints_f15h,0x106,,RET,ret
amd_get_event_constraints_f15h,0x126,,RET,ret
amd_get_event_constraints_f15h,0x143,,RET,ret
amd_get_event_constraints_f15h,0x163,0xffffffff81647350,CALL 0xffffffff81647350,direct call
amd_get_event_constraints_f15h,0x1be,0xffffffff81647350,CALL 0xffffffff81647350,direct call
amd_event_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_event_sysfs_show,0x1d,0xffffffff810075b0,CALL 0xffffffff810075b0,direct call
amd_event_sysfs_show,0x23,,RET,ret
cmask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cmask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cmask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
cmask_show,0x2c,,RET,ret
inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
inv_show,0x29,,RET,ret
edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
edge_show,0x29,,RET,ret
umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
umask_show,0x27,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x1d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
event_show,0x29,ctx->wordctx->ptrctx->rdx + 0x10,"MOV word ptr [RDX + 0x10],AX",write other [TODO]
event_show,0x33,,RET,ret
amd_pmu_del_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_del_event,0xf,,RET,ret
amd_pmu_del_event,0x14,0xffffffff82000398,CALL 0xffffffff82000398,direct call
amd_pmu_del_event,0x1a,,RET,ret
amd_pmu_add_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_add_event,0xf,,RET,ret
amd_pmu_add_event,0x14,0xffffffff82000390,CALL 0xffffffff82000390,direct call
amd_pmu_add_event,0x1a,,RET,ret
amd_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_enable_event,0x9,0xffffffff81007160,CALL 0xffffffff81007160,direct call
amd_pmu_enable_event,0xf,,RET,ret
amd_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_enable_all,0x26,0xffffffff81009f00,CALL 0xffffffff81009f00,direct call
amd_pmu_enable_all,0x44,0xffffffff81007160,CALL 0xffffffff81007160,direct call
amd_pmu_enable_all,0x5a,,RET,ret
branches_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branches_show,0x1e,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
branches_show,0x26,,RET,ret
amd_pmu_brs_del,0x26,0xffffffff8126cb60,CALL 0xffffffff8126cb60,direct call
amd_pmu_brs_del,0x2c,,RET,ret
amd_pmu_brs_add,0x1e,0xffffffff8126cbc0,CALL 0xffffffff8126cbc0,direct call
amd_pmu_brs_add,0x2f,,RET,ret
amd_pmu_addr_offset,0x31, - 0x7ceea0a0 + ctx->rdx * 0x4,"MOV dword ptr [-0x7ceea0a0 + RDX*0x4],EAX",write other [TODO]
amd_pmu_addr_offset,0x38,,RET,ret
amd_pmu_addr_offset,0x39, - 0x7ceea1a0 + ctx->rdx * 0x4,"MOV dword ptr [-0x7ceea1a0 + RDX*0x4],EAX",write other [TODO]
amd_pmu_addr_offset,0x40,,RET,ret
amd_put_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_put_event_constraints,0x31,,RET,ret
amd_put_event_constraints,0x67,,RET,ret
amd_pmu_limit_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_limit_period,0x23,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
amd_pmu_limit_period,0x27,,RET,ret
amd_pmu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_hw_config,0x3a,0xffffffff81006940,CALL 0xffffffff81006940,direct call
amd_pmu_hw_config,0xac,,RET,ret
amd_pmu_hw_config,0xda,0xffffffff8100a440,CALL 0xffffffff8100a440,direct call
amd_pmu_hw_config,0x105,0xffffffff82000378,CALL 0xffffffff82000378,direct call
amd_pmu_hw_config,0x10f,,RET,ret
amd_pmu_cpu_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_cpu_prepare,0x41,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
amd_pmu_cpu_prepare,0x46,ctx->rbx + 0xca8,"MOV qword ptr [RBX + 0xca8],RAX",write other [TODO]
amd_pmu_cpu_prepare,0x75,,RET,ret
amd_pmu_cpu_prepare,0x93,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
amd_pmu_cpu_prepare,0xa3,ctx->rax,"MOV dword ptr [RAX],0xffffffff",write other [TODO]
amd_pmu_cpu_prepare,0xc6,ctx->rax + ctx->rdx * 0x1 + 0x220,"MOV dword ptr [RAX + RDX*0x1 + 0x220],0x1",write other [TODO]
amd_pmu_cpu_prepare,0xdc,ctx->rbx + 0x1318,"MOV qword ptr [RBX + 0x1318],RAX",write other [TODO]
amd_pmu_cpu_prepare,0xeb,,RET,ret
amd_pmu_cpu_prepare,0xf3,ctx->rbx + 0x1318,"MOV qword ptr [RBX + 0x1318],0x0",write other [TODO]
amd_pmu_cpu_prepare,0x105,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
amd_pmu_cpu_prepare,0x10f,ctx->rbx + 0xca8,"MOV qword ptr [RBX + 0xca8],0x0",write other [TODO]
amd_pmu_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_handle_irq,0x27,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],0x0",write other [TODO]
amd_pmu_handle_irq,0x31,0xffffffff81009fc0,CALL 0xffffffff81009fc0,direct call
amd_pmu_handle_irq,0x43,0xffffffff810073f0,CALL 0xffffffff810073f0,direct call
amd_pmu_handle_irq,0x48,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],R13D",write other [TODO]
amd_pmu_handle_irq,0x7e,,RET,ret
amd_pmu_handle_irq,0x8d,ctx->gs + 0x1afb0,"MOV qword ptr GS:[0x1afb0],RAX",write other [TODO]
amd_pmu_handle_irq,0x9e,,RET,ret
amd_pmu_handle_irq,0x9f,0xffffffff81009f00,CALL 0xffffffff81009f00,direct call
amd_pmu_handle_irq,0xa6,0xffffffff81009ff0,CALL 0xffffffff81009ff0,direct call
amd_get_event_constraints_f17h,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_event_constraints_f17h,0x3f,ctx->rax,"MOV RAX,R8",write other [TODO]
amd_get_event_constraints_f17h,0x43,,RET,ret
amd_get_event_constraints_f19h,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_event_constraints_f19h,0x50,,RET,ret
amd_get_event_constraints_f19h,0x66,,RET,ret
amd_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_event_constraints,0x4a,,RET,ret
amd_get_event_constraints,0x8f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
amd_pmu_check_overflow,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_check_overflow,0x55,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
amd_pmu_check_overflow,0x62,0xffffffff82000388,CALL 0xffffffff82000388,direct call
amd_pmu_check_overflow,0x7e,,RET,ret
amd_pmu_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_disable_all,0x9,0xffffffff81009fc0,CALL 0xffffffff81009fc0,direct call
amd_pmu_disable_all,0xe,0xffffffff81006bc0,CALL 0xffffffff81006bc0,direct call
amd_pmu_disable_all,0x13,0xffffffff81008d80,CALL 0xffffffff81008d80,direct call
amd_pmu_disable_all,0x19,,RET,ret
amd_pmu_test_overflow_status,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_test_overflow_status,0x11,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_test_overflow_status,0x2c,,RET,ret
amd_pmu_test_overflow_topbit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_test_overflow_topbit,0x1e,ctx->rax,CALL RAX,in-direct call
amd_pmu_test_overflow_topbit,0x26,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_test_overflow_topbit,0x43,,RET,ret
amd_pmu_v2_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_v2_disable_all,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_disable_all,0x19,0xffffffff81009cf0,CALL 0xffffffff81009cf0,direct call
amd_pmu_v2_disable_all,0x1e,0xffffffff81008d80,CALL 0xffffffff81008d80,direct call
amd_pmu_v2_disable_all,0x24,,RET,ret
amd_pmu_v2_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_v2_enable_all,0x9,0xffffffff81009c30,CALL 0xffffffff81009c30,direct call
amd_pmu_v2_enable_all,0x20,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_enable_all,0x27,,RET,ret
amd_pmu_cpu_reset.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_cpu_reset.constprop.0,0x26,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_cpu_reset.constprop.0,0x3e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_cpu_reset.constprop.0,0x45,,RET,ret
amd_pmu_cpu_reset.constprop.0,0x46,0xffffffff82000380,CALL 0xffffffff82000380,direct call
amd_pmu_cpu_starting,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_cpu_starting,0x2d,ctx->r12 + 0x1328,"MOV qword ptr [R12 + 0x1328],RAX",write other [TODO]
amd_pmu_cpu_starting,0x67,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
amd_pmu_cpu_starting,0x83,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
amd_pmu_cpu_starting,0xb6,ctx->rdx,"MOV dword ptr [RDX],R13D",write other [TODO]
amd_pmu_cpu_starting,0xc5,0xffffffff81008f00,CALL 0xffffffff81008f00,direct call
amd_pmu_cpu_starting,0xd0,,RET,ret
amd_pmu_cpu_starting,0xd9,ctx->r12 + 0x1318,"MOV qword ptr [R12 + 0x1318],RDX",write other [TODO]
amd_pmu_cpu_starting,0xe1,ctx->r12 + 0x1338,"MOV qword ptr [R12 + 0x1338],RAX",write other [TODO]
amd_pmu_cpu_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_cpu_dead,0x23,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
amd_pmu_cpu_dead,0x28,ctx->rbx + 0xca8,"MOV qword ptr [RBX + 0xca8],0x0",write other [TODO]
amd_pmu_cpu_dead,0x53,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
amd_pmu_cpu_dead,0x58,ctx->rbx + 0x1318,"MOV qword ptr [RBX + 0x1318],0x0",write other [TODO]
amd_pmu_cpu_dead,0x63,0xffffffff81008f00,CALL 0xffffffff81008f00,direct call
amd_pmu_cpu_dead,0x6d,,RET,ret
amd_pmu_disable_virt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_disable_virt,0x2a,ctx->rax + 0x1328,"MOV qword ptr [RAX + 0x1328],RCX",write other [TODO]
amd_pmu_disable_virt,0x33,0xffffffff81009fc0,CALL 0xffffffff81009fc0,direct call
amd_pmu_disable_virt,0x38,0xffffffff81006bc0,CALL 0xffffffff81006bc0,direct call
amd_pmu_disable_virt,0x3d,0xffffffff81008d80,CALL 0xffffffff81008d80,direct call
amd_pmu_disable_virt,0x44,0xffffffff810086a0,CALL 0xffffffff810086a0,direct call
amd_pmu_disable_virt,0x4e,,RET,ret
amd_pmu_disable_virt,0x5c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_disable_virt,0x62,0xffffffff81009cf0,CALL 0xffffffff81009cf0,direct call
amd_pmu_disable_virt,0x67,0xffffffff81008d80,CALL 0xffffffff81008d80,direct call
amd_pmu_disable_virt,0x6e,0xffffffff810086a0,CALL 0xffffffff810086a0,direct call
amd_pmu_disable_virt,0x73,0xffffffff81009c30,CALL 0xffffffff81009c30,direct call
amd_pmu_disable_virt,0x88,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_disable_virt,0x93,,RET,ret
amd_pmu_enable_virt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_enable_virt,0x20,ctx->rax + 0x1328,"MOV qword ptr [RAX + 0x1328],0x0",write other [TODO]
amd_pmu_enable_virt,0x2d,0xffffffff81009fc0,CALL 0xffffffff81009fc0,direct call
amd_pmu_enable_virt,0x32,0xffffffff81006bc0,CALL 0xffffffff81006bc0,direct call
amd_pmu_enable_virt,0x37,0xffffffff81008d80,CALL 0xffffffff81008d80,direct call
amd_pmu_enable_virt,0x3e,0xffffffff810086a0,CALL 0xffffffff810086a0,direct call
amd_pmu_enable_virt,0x48,,RET,ret
amd_pmu_enable_virt,0x56,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_enable_virt,0x5c,0xffffffff81009cf0,CALL 0xffffffff81009cf0,direct call
amd_pmu_enable_virt,0x61,0xffffffff81008d80,CALL 0xffffffff81008d80,direct call
amd_pmu_enable_virt,0x68,0xffffffff810086a0,CALL 0xffffffff810086a0,direct call
amd_pmu_enable_virt,0x6d,0xffffffff81009c30,CALL 0xffffffff81009c30,direct call
amd_pmu_enable_virt,0x82,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_enable_virt,0x8d,,RET,ret
amd_pmu_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_disable_event,0x2d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_disable_event,0x4e,,RET,ret
amd_pmu_disable_event,0x62,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
amd_pmu_disable_event,0x6f,0xffffffff82000388,CALL 0xffffffff82000388,direct call
amd_pmu_disable_event,0x7c,,RET,ret
amd_pmu_disable_event,0x9e,ctx->rax,CALL RAX,in-direct call
amd_pmu_disable_event,0xac,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_v2_handle_irq,0x24,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDI",write stack
amd_pmu_v2_handle_irq,0x3f,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
amd_pmu_v2_handle_irq,0x4f,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],0x0",write other [TODO]
amd_pmu_v2_handle_irq,0x5b,ctx->rsp + 0x2c,"MOV dword ptr [RSP + 0x2c],EAX",write stack
amd_pmu_v2_handle_irq,0x69,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_handle_irq,0x74,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_v2_handle_irq,0xaf,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
amd_pmu_v2_handle_irq,0xcd,0xffffffff81004410,CALL 0xffffffff81004410,direct call
amd_pmu_v2_handle_irq,0xe1,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],R8",write stack
amd_pmu_v2_handle_irq,0xf6,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
amd_pmu_v2_handle_irq,0xff,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
amd_pmu_v2_handle_irq,0x104,0xffffffff81005bf0,CALL 0xffffffff81005bf0,direct call
amd_pmu_v2_handle_irq,0x12c,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
amd_pmu_v2_handle_irq,0x13e,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],R8",write stack
amd_pmu_v2_handle_irq,0x143,0xffffffff81275230,CALL 0xffffffff81275230,direct call
amd_pmu_v2_handle_irq,0x186,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_handle_irq,0x19c,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],EAX",write other [TODO]
amd_pmu_v2_handle_irq,0x1f4,,RET,ret
amd_pmu_v2_handle_irq,0x1f5,0xffffffff81009600,CALL 0xffffffff81009600,direct call
amd_pmu_v2_handle_irq,0x21e,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],EAX",write other [TODO]
amd_pmu_v2_handle_irq,0x23d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_handle_irq,0x25a,ctx->gs + 0x1afb0,"MOV qword ptr GS:[0x1afb0],RAX",write other [TODO]
amd_pmu_v2_handle_irq,0x26c,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
amd_pmu_v2_handle_irq,0x282,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_pmu_v2_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_v2_enable_event,0x4e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_enable_event,0x5c,,RET,ret
amd_pmu_v2_enable_event,0x6a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_v2_enable_event,0xa1,ctx->rax,CALL RAX,in-direct call
amd_pmu_v2_enable_event,0xb4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_read,0x1f,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
amd_pmu_lbr_read,0x39,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
amd_pmu_lbr_read,0x73,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
amd_pmu_lbr_read,0x7a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_lbr_read,0x86,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_lbr_read,0xe7,ctx->rdx,"MOV qword ptr [RDX],RSI",write other [TODO]
amd_pmu_lbr_read,0x10e,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RSI",write other [TODO]
amd_pmu_lbr_read,0x127,ctx->rdx + 0x10,"MOV byte ptr [RDX + 0x10],R12B",write other [TODO]
amd_pmu_lbr_read,0x159,ctx->rdx + 0x10,"MOV dword ptr [RDX + 0x10],EAX",write other [TODO]
amd_pmu_lbr_read,0x187,ctx->rax + 0x998,"MOV qword ptr [RAX + 0x998],R14",write other [TODO]
amd_pmu_lbr_read,0x18e,ctx->rax + 0x9a0,"MOV qword ptr [RAX + 0x9a0],0x0",write other [TODO]
amd_pmu_lbr_read,0x1a3,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],R12D",write stack
amd_pmu_lbr_read,0x1b9,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],EBX",write stack
amd_pmu_lbr_read,0x1c8,ctx->rsp + 0x10,"MOV byte ptr [RSP + 0x10],0x0",write stack
amd_pmu_lbr_read,0x201,0xffffffff81008240,CALL 0xffffffff81008240,direct call
amd_pmu_lbr_read,0x22c,ctx->r14,"MOV qword ptr [R14],0x0",write other [TODO]
amd_pmu_lbr_read,0x233,ctx->rsp + 0x10,"MOV byte ptr [RSP + 0x10],0x1",write stack
amd_pmu_lbr_read,0x23d,0xffffffff81008260,CALL 0xffffffff81008260,direct call
amd_pmu_lbr_read,0x25c,ctx->rcx + 0xa,"MOV byte ptr [RCX + 0xa],AL",write other [TODO]
amd_pmu_lbr_read,0x28d,,RET,ret
amd_pmu_lbr_read,0x2ef,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDI",write other [TODO]
amd_pmu_lbr_read,0x2f7,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDI",write other [TODO]
amd_pmu_lbr_read,0x2ff,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
amd_pmu_lbr_read,0x31b,ctx->r15 + 0x998,"MOV qword ptr [R15 + 0x998],RSI",write other [TODO]
amd_pmu_lbr_read,0x337,ctx->r15 + 0x998,"MOV qword ptr [R15 + 0x998],RSI",write other [TODO]
amd_pmu_lbr_read,0x340,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_pmu_lbr_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_hw_config,0xb3,ctx->rdi + 0x1b0,"MOV dword ptr [RDI + 0x1b0],EAX",write other [TODO]
amd_pmu_lbr_hw_config,0xed,ctx->rdi + 0x1a8,"MOV qword ptr [RDI + 0x1a8],RSI",write other [TODO]
amd_pmu_lbr_hw_config,0xf4,,RET,ret
amd_pmu_lbr_hw_config,0xfb,,RET,ret
amd_pmu_lbr_hw_config,0x102,,RET,ret
amd_pmu_lbr_reset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_reset,0x3d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_reset,0x4e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_reset,0x70,ctx->r14 + 0xcb8,"MOV qword ptr [R14 + 0xcb8],0x0",write other [TODO]
amd_pmu_lbr_reset,0x7b,ctx->r14 + 0xcc0,"MOV dword ptr [R14 + 0xcc0],0x0",write other [TODO]
amd_pmu_lbr_reset,0x86,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_reset,0x94,,RET,ret
amd_pmu_lbr_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_add,0x31,ctx->r12 + 0xcc4,"MOV dword ptr [R12 + 0xcc4],0x1",write other [TODO]
amd_pmu_lbr_add,0x4c,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
amd_pmu_lbr_add,0x56,ctx->r12 + 0xcb0,"MOV qword ptr [R12 + 0xcb0],RAX",write other [TODO]
amd_pmu_lbr_add,0x68,0xffffffff8126cbc0,CALL 0xffffffff8126cbc0,direct call
amd_pmu_lbr_add,0x78,ctx->r12 + 0x990,"MOV dword ptr [R12 + 0x990],EDX",write other [TODO]
amd_pmu_lbr_add,0x92,,RET,ret
amd_pmu_lbr_add,0x93,0xffffffff81009a60,CALL 0xffffffff81009a60,direct call
amd_pmu_lbr_add,0x9c,,RET,ret
amd_pmu_lbr_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_del,0x3e,0xffffffff8126cb60,CALL 0xffffffff8126cb60,direct call
amd_pmu_lbr_del,0x44,,RET,ret
amd_pmu_lbr_del,0x45,ctx->rax + 0xcc4,"MOV dword ptr [RAX + 0xcc4],0x0",write other [TODO]
amd_pmu_lbr_del,0x51,,RET,ret
amd_pmu_lbr_sched_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_sched_task,0x23,,RET,ret
amd_pmu_lbr_sched_task,0x28,0xffffffff81009a60,CALL 0xffffffff81009a60,direct call
amd_pmu_lbr_sched_task,0x2e,,RET,ret
amd_pmu_lbr_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_enable_all,0x46,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_lbr_enable_all,0x57,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_lbr_enable_all,0x73,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_enable_all,0x89,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_enable_all,0x97,,RET,ret
amd_pmu_lbr_enable_all,0x98,,RET,ret
amd_pmu_lbr_enable_all,0xb1,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_lbr_disable_all,0x28,,RET,ret
amd_pmu_lbr_disable_all,0x3d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_lbr_disable_all,0x4e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_lbr_disable_all,0x67,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_disable_all,0x80,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_lbr_disable_all,0x8e,,RET,ret
perf_amd_brs_lopwr_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_amd_brs_lopwr_cb,0x1e,,RET,ret
perf_amd_brs_lopwr_cb,0x31,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_amd_brs_lopwr_cb,0x57,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_amd_brs_lopwr_cb,0x61,,RET,ret
amd_brs_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_brs_hw_config,0x67,,RET,ret
amd_brs_hw_config,0x6e,,RET,ret
amd_brs_hw_config,0x75,,RET,ret
amd_brs_reset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81009ea7,0x0,,RET,ret
amd_brs_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_brs_enable,0x1d,ctx->rdx + 0x1320,"MOV dword ptr [RDX + 0x1320],EAX",write other [TODO]
amd_brs_enable,0x28,,RET,ret
amd_brs_enable,0x39,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_brs_enable,0x40,,RET,ret
amd_brs_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_brs_enable_all,0x1e,,RET,ret
amd_brs_enable_all,0x28,ctx->rax + 0x1320,"MOV dword ptr [RAX + 0x1320],EDX",write other [TODO]
amd_brs_enable_all,0x43,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_brs_enable_all,0x4a,,RET,ret
amd_brs_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_brs_disable,0x21,ctx->rax + 0x1320,"MOV dword ptr [RAX + 0x1320],EDX",write other [TODO]
amd_brs_disable,0x29,,RET,ret
amd_brs_disable,0x37,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_brs_disable,0x46,,RET,ret
amd_brs_disable,0x5b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_brs_disable,0x66,,RET,ret
amd_brs_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_brs_disable_all,0x1e,,RET,ret
amd_brs_disable_all,0x23,0xffffffff81009f50,CALL 0xffffffff81009f50,direct call
amd_brs_disable_all,0x29,,RET,ret
amd_brs_drain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_brs_drain,0x3d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_brs_drain,0x5a,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ESI",write stack
amd_brs_drain,0x88,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R14",write stack
amd_brs_drain,0x9d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
amd_brs_drain,0xa4,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
amd_brs_drain,0xbe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_brs_drain,0xe7,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
amd_brs_drain,0xea,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RBX",write other [TODO]
amd_brs_drain,0xee,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ESI",write stack
amd_brs_drain,0x102,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_brs_drain,0x130,ctx->r14 + 0x998,"MOV qword ptr [R14 + 0x998],RAX",write other [TODO]
amd_brs_drain,0x145,,RET,ret
amd_brs_drain,0x14f,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
amd_pmu_brs_sched_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_pmu_brs_sched_task,0x23,,RET,ret
amd_pmu_brs_sched_task,0x2d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_pmu_brs_sched_task,0x56,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
amd_pmu_brs_sched_task,0x5d,,RET,ret
perf_ibs_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_init,0xde,ctx->rax + 0xe8,"MOV qword ptr [RAX + 0xe8],RDX",write other [TODO]
perf_ibs_init,0xe5,ctx->rax + 0x1e8,"MOV qword ptr [RAX + 0x1e8],RDX",write other [TODO]
perf_ibs_init,0xf5,ctx->rax + 0x1f0,"MOV qword ptr [RAX + 0x1f0],RDX",write other [TODO]
perf_ibs_init,0xff,ctx->rax + 0x1f8,"MOV qword ptr [RAX + 0x1f8],RDI",write other [TODO]
perf_ibs_init,0x10c,ctx->rax + 0x160,"MOV qword ptr [RAX + 0x160],RCX",write other [TODO]
perf_ibs_init,0x113,ctx->rax + 0x170,"MOV qword ptr [RAX + 0x170],RSI",write other [TODO]
perf_ibs_init,0x11e,,RET,ret
perf_ibs_init,0x140,ctx->rax + 0x1e8,"MOV qword ptr [RAX + 0x1e8],0x10",write other [TODO]
perf_ibs_init,0x157,ctx->rax + 0x1e8,"MOV qword ptr [RAX + 0x1e8],RDX",write other [TODO]
perf_ibs_init,0x186,ctx->rax + 0xe8,"MOV qword ptr [RAX + 0xe8],0x0",write other [TODO]
get_ibs_fetch_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ibs_fetch_count,0x14,,RET,ret
get_ibs_op_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ibs_op_count,0x32,,RET,ret
get_ibs_op_count,0x47,,RET,ret
perf_ibs_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_read,0xa,,RET,ret
zen4_ibs_extensions_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zen4_ibs_extensions_is_visible,0x19,,RET,ret
cnt_ctl_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cnt_ctl_is_visible,0x19,,RET,ret
get_ibs_caps,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ibs_caps,0x10,,RET,ret
rand_en_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rand_en_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
rand_en_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
rand_en_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
rand_en_show,0x29,,RET,ret
cnt_ctl_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cnt_ctl_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cnt_ctl_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
cnt_ctl_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
cnt_ctl_show,0x29,,RET,ret
perf_ibs_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_start,0x4d,ctx->r12 + 0x1d8,"MOV dword ptr [R12 + 0x1d8],0x0",write other [TODO]
perf_ibs_start,0x7e,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],0x0",write other [TODO]
perf_ibs_start,0xd6,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_ibs_start,0xdf,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
perf_ibs_start,0xea,,RET,ret
perf_ibs_start,0x124,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_ibs_start,0x15d,ctx->r12 + 0x1f8,"MOV qword ptr [R12 + 0x1f8],RSI",write other [TODO]
perf_ibs_start,0x168,ctx->r12 + 0x1f0,"MOV qword ptr [R12 + 0x1f0],RSI",write other [TODO]
perf_ibs_start,0x178,ctx->r12 + 0x1f0,"MOV qword ptr [R12 + 0x1f0],RSI",write other [TODO]
perf_ibs_start,0x180,ctx->r12 + 0x1f8,"MOV qword ptr [R12 + 0x1f8],RAX",write other [TODO]
perf_ibs_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_add,0x24,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],0x3",write other [TODO]
perf_ibs_add,0x30,ctx->rdx,"MOV qword ptr [RDX],RDI",write other [TODO]
perf_ibs_add,0x38,,RET,ret
perf_ibs_add,0x42,0xffffffff8100a4c0,CALL 0xffffffff8100a4c0,direct call
perf_ibs_add,0x4a,,RET,ret
perf_ibs_add,0x50,,RET,ret
x86_pmu_amd_ibs_dying_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_amd_ibs_dying_cpu,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x86_pmu_amd_ibs_dying_cpu,0x27,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
x86_pmu_amd_ibs_dying_cpu,0x2f,,RET,ret
perf_ibs_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_suspend,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_suspend,0x27,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
perf_ibs_suspend,0x2f,,RET,ret
setup_APIC_ibs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_APIC_ibs,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
setup_APIC_ibs,0x2b,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
setup_APIC_ibs,0x39,,RET,ret
x86_pmu_amd_ibs_starting_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_pmu_amd_ibs_starting_cpu,0x9,0xffffffff8100a710,CALL 0xffffffff8100a710,direct call
x86_pmu_amd_ibs_starting_cpu,0x11,,RET,ret
perf_ibs_event_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_event_update,0x1c,ctx->r12 + 0x170,CALL qword ptr [R12 + 0x170],in-direct call
perf_ibs_event_update,0x4b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_event_update,0x51,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
perf_ibs_event_update,0x58,ctx->r12 + 0x170,CALL qword ptr [R12 + 0x170],in-direct call
perf_ibs_event_update,0x8f,,RET,ret
force_ibs_eilvt_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_ibs_eilvt_setup,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
force_ibs_eilvt_setup,0x3f,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
force_ibs_eilvt_setup,0x6c,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x0",write stack
force_ibs_eilvt_setup,0x8f,0xffffffff81669050,CALL 0xffffffff81669050,direct call
force_ibs_eilvt_setup,0xa0,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
force_ibs_eilvt_setup,0xc1,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
force_ibs_eilvt_setup,0xe2,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
force_ibs_eilvt_setup,0x10a,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
force_ibs_eilvt_setup,0x144,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
force_ibs_eilvt_setup,0x171,,RET,ret
force_ibs_eilvt_setup,0x179,0xffffffff81676870,CALL 0xffffffff81676870,direct call
force_ibs_eilvt_setup,0x1af,0xffffffff82000810,CALL 0xffffffff82000810,direct call
force_ibs_eilvt_setup,0x1b9,0xffffffff82000810,CALL 0xffffffff82000810,direct call
force_ibs_eilvt_setup,0x1c0,0xffffffff82000810,CALL 0xffffffff82000810,direct call
force_ibs_eilvt_setup,0x1e9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_ibs_eilvt_setup,0xc83460,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
force_ibs_eilvt_setup,0xc83483,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
perf_ibs_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_resume,0x12,0xffffffff8100a710,CALL 0xffffffff8100a710,direct call
perf_ibs_resume,0x18,,RET,ret
perf_ibs_resume,0x19,0xffffffff8100a800,CALL 0xffffffff8100a800,direct call
perf_ibs_resume,0x1e,0xffffffff8100a710,CALL 0xffffffff8100a710,direct call
perf_ibs_resume,0x24,,RET,ret
perf_ibs_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_stop,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_ibs_stop,0x66,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_stop,0x6c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_ibs_stop,0x99,0xffffffff8100a770,CALL 0xffffffff8100a770,direct call
perf_ibs_stop,0xc6,,RET,ret
perf_ibs_stop,0x101,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_ibs_stop,0x11b,ctx->r12 + 0x1d8,"MOV dword ptr [R12 + 0x1d8],EAX",write other [TODO]
perf_ibs_stop,0x139,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_ibs_stop,0x145,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_ibs_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_del,0x33,0xffffffff8100aa20,CALL 0xffffffff8100aa20,direct call
perf_ibs_del,0x38,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
perf_ibs_del,0x42,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
perf_ibs_del,0x4b,,RET,ret
perf_ibs_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_handle_irq,0x24,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RSI",write stack
perf_ibs_handle_irq,0x3d,ctx->rsp + 0x278,"MOV qword ptr [RSP + 0x278],RAX",write stack
perf_ibs_handle_irq,0x69,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_handle_irq,0x6f,ctx->rsp + 0x238,"MOV qword ptr [RSP + 0x238],RAX",write stack
perf_ibs_handle_irq,0x92,0xffffffff8100a770,CALL 0xffffffff8100a770,direct call
perf_ibs_handle_irq,0xa5,ctx->rsp + 0x100,"MOV qword ptr [RSP + 0x100],0x100",write stack
perf_ibs_handle_irq,0xb8,ctx->rsp + 0x108,"MOV qword ptr [RSP + 0x108],RAX",write stack
perf_ibs_handle_irq,0xc7,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RCX",write stack
perf_ibs_handle_irq,0xe2,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
perf_ibs_handle_irq,0xf0,ctx->r15 + 0x1e0,"MOV qword ptr [R15 + 0x1e0],0x0",write other [TODO]
perf_ibs_handle_irq,0x147,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_ibs_handle_irq,0x150,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
perf_ibs_handle_irq,0x190,,RET,ret
perf_ibs_handle_irq,0x19f,ctx->r15 + 0x1e0,"MOV qword ptr [R15 + 0x1e0],0x0",write other [TODO]
perf_ibs_handle_irq,0x1b6,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
perf_ibs_handle_irq,0x1d0,ctx->rsp + 0x234,"MOV dword ptr [RSP + 0x234],EDX",write stack
perf_ibs_handle_irq,0x1ed,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],0x0",write stack
perf_ibs_handle_irq,0x1f5,ctx->rsp + 0x34,"MOV dword ptr [RSP + 0x34],0x1",write stack
perf_ibs_handle_irq,0x1fd,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R12D",write stack
perf_ibs_handle_irq,0x217,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],R15",write stack
perf_ibs_handle_irq,0x22b,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],R12",write stack
perf_ibs_handle_irq,0x237,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_handle_irq,0x23d,ctx->r12 - 0x8,"MOV qword ptr [R12 + -0x8],RAX",write other [TODO]
perf_ibs_handle_irq,0x252,ctx->rsp + 0x2c,"MOV dword ptr [RSP + 0x2c],R13D",write stack
perf_ibs_handle_irq,0x25b,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
perf_ibs_handle_irq,0x2ae,ctx->rsp + 0x230,"MOV dword ptr [RSP + 0x230],R13D",write stack
perf_ibs_handle_irq,0x2b6,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
perf_ibs_handle_irq,0x2eb,ctx->rsp + 0xd8,"MOV qword ptr [RSP + 0xd8],RDX",write stack
perf_ibs_handle_irq,0x2ff,ctx->rsp + 0xe0,"MOV qword ptr [RSP + 0xe0],RAX",write stack
perf_ibs_handle_irq,0x313,ctx->rsp + 0xe8,"MOV qword ptr [RSP + 0xe8],RAX",write stack
perf_ibs_handle_irq,0x344,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],0x0",write stack
perf_ibs_handle_irq,0x34d,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],0x0",write stack
perf_ibs_handle_irq,0x356,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x0",write stack
perf_ibs_handle_irq,0x35f,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RDX",write stack
perf_ibs_handle_irq,0x364,ctx->rsp + 0x50,"MOV dword ptr [RSP + 0x50],R13D",write stack
perf_ibs_handle_irq,0x369,ctx->rsp + 0x138,"MOV qword ptr [RSP + 0x138],RCX",write stack
perf_ibs_handle_irq,0x394,0xffffffff81275230,CALL 0xffffffff81275230,direct call
perf_ibs_handle_irq,0x3c8,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_ibs_handle_irq,0x3ed,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RSI",write stack
perf_ibs_handle_irq,0x440,ctx->r15 + 0x1f8,"MOV qword ptr [R15 + 0x1f8],RAX",write other [TODO]
perf_ibs_handle_irq,0x447,ctx->r15 + 0x1f0,"MOV qword ptr [R15 + 0x1f0],RAX",write other [TODO]
perf_ibs_handle_irq,0x472,ctx->r15 + 0x1e0,"MOV qword ptr [R15 + 0x1e0],0x0",write other [TODO]
perf_ibs_handle_irq,0x47d,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
perf_ibs_handle_irq,0x499,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_handle_irq,0x4a4,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
perf_ibs_handle_irq,0x4be,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],0x1",write stack
perf_ibs_handle_irq,0x4cb,ctx->rsp + 0x34,"MOV dword ptr [RSP + 0x34],0x3",write stack
perf_ibs_handle_irq,0x4e1,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],0x0",write stack
perf_ibs_handle_irq,0x4f0,ctx->rsp + 0x34,"MOV dword ptr [RSP + 0x34],EAX",write stack
perf_ibs_handle_irq,0x501,0xffffffff81273490,CALL 0xffffffff81273490,direct call
perf_ibs_handle_irq,0x50f,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
perf_ibs_handle_irq,0x521,0xffffffff8100aa20,CALL 0xffffffff8100aa20,direct call
perf_ibs_handle_irq,0x52b,ctx->r15 + 0x1e0,"MOV qword ptr [R15 + 0x1e0],0x0",write other [TODO]
perf_ibs_handle_irq,0x548,ctx->r15 + 0x1f0,"MOV qword ptr [R15 + 0x1f0],RCX",write other [TODO]
perf_ibs_handle_irq,0x54f,ctx->r15 + 0x1f8,"MOV qword ptr [R15 + 0x1f8],RAX",write other [TODO]
perf_ibs_handle_irq,0x556,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
perf_ibs_handle_irq,0x563,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
perf_ibs_handle_irq,0x579,ctx->r15 + 0x1e0,"MOV qword ptr [R15 + 0x1e0],0x0",write other [TODO]
perf_ibs_handle_irq,0x584,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],0x10",write stack
perf_ibs_handle_irq,0x59a,ctx->rsp + 0x120,"MOV qword ptr [RSP + 0x120],0x5080021",write stack
perf_ibs_handle_irq,0x5bd,ctx->rsp + 0x120,"MOV byte ptr [RSP + 0x120],CL",write stack
perf_ibs_handle_irq,0x612,ctx->rsp + 0x130,"MOV qword ptr [RSP + 0x130],RCX",write stack
perf_ibs_handle_irq,0x645,ctx->rsp + 0x1b0,"MOV qword ptr [RSP + 0x1b0],RDX",write stack
perf_ibs_handle_irq,0x66a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_handle_irq,0x670,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
perf_ibs_handle_irq,0x67d,ctx->r15 + 0x1e0,"MOV qword ptr [R15 + 0x1e0],0x0",write other [TODO]
perf_ibs_handle_irq,0x688,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
perf_ibs_handle_irq,0x6a9,ctx->rsp + 0x120,"MOV byte ptr [RSP + 0x120],CL",write stack
perf_ibs_handle_irq,0x6c3,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
perf_ibs_handle_irq,0x6ce,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
perf_ibs_handle_irq,0x742,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0x7f6,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0x879,ctx->rsp + 0x120,"MOV qword ptr [RSP + 0x120],RCX",write stack
perf_ibs_handle_irq,0x893,ctx->rsp + 0x123,"MOV byte ptr [RSP + 0x123],CL",write stack
perf_ibs_handle_irq,0x8dd,ctx->wordctx->ptrctx->rsp + 0x11c,"MOV word ptr [RSP + 0x11c],CX",write stack
perf_ibs_handle_irq,0x8e8,ctx->rsp + 0x118,"MOV dword ptr [RSP + 0x118],ESI",write stack
perf_ibs_handle_irq,0x906,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0x918,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0x92b,ctx->rsp + 0x120,"MOV qword ptr [RSP + 0x120],RCX",write stack
perf_ibs_handle_irq,0x93e,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0x951,ctx->rsp + 0x120,"MOV qword ptr [RSP + 0x120],RCX",write stack
perf_ibs_handle_irq,0x96d,ctx->rsp + 0x118,"MOV qword ptr [RSP + 0x118],RCX",write stack
perf_ibs_handle_irq,0x984,0xffffffff833fc1b0,"MOV dword ptr [0xffffffff833fc1b0],0x1",write .data
perf_ibs_handle_irq,0x993,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_ibs_handle_irq,0x9b8,ctx->rsp + 0x122,"MOV byte ptr [RSP + 0x122],CL",write stack
perf_ibs_handle_irq,0x9ef,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0xa01,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0xa27,0xffffffff833fc1b0,"MOV dword ptr [0xffffffff833fc1b0],0xffffffff",write .data
perf_ibs_handle_irq,0xa3c,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0xa4e,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0xa68,ctx->rsp + 0x124,"MOV byte ptr [RSP + 0x124],SIL",write stack
perf_ibs_handle_irq,0xa8c,ctx->wordctx->ptrctx->rsp + 0x124,"MOV word ptr [RSP + 0x124],SI",write stack
perf_ibs_handle_irq,0xaa9,ctx->rsp + 0x120,"MOV dword ptr [RSP + 0x120],ESI",write stack
perf_ibs_handle_irq,0xad4,ctx->rsp + 0x120,"MOV qword ptr [RSP + 0x120],RSI",write stack
perf_ibs_handle_irq,0xaf5,ctx->rsp + 0x124,"MOV byte ptr [RSP + 0x124],SIL",write stack
perf_ibs_nmi_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_ibs_nmi_handler,0x11,0xffffffff81040f90,CALL 0xffffffff81040f90,direct call
perf_ibs_nmi_handler,0x23,0xffffffff8100abc0,CALL 0xffffffff8100abc0,direct call
perf_ibs_nmi_handler,0x34,0xffffffff8100abc0,CALL 0xffffffff8100abc0,direct call
perf_ibs_nmi_handler,0x47,0xffffffff81040f90,CALL 0xffffffff81040f90,direct call
perf_ibs_nmi_handler,0x52,0xffffffff8126c9f0,CALL 0xffffffff8126c9f0,direct call
perf_ibs_nmi_handler,0x60,,RET,ret
perf_iommu_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_event_init,0x40,ctx->rdi + 0x168,"MOV qword ptr [RDI + 0x168],RAX",write other [TODO]
perf_iommu_event_init,0x4e,ctx->rdi + 0x170,"MOV qword ptr [RDI + 0x170],RAX",write other [TODO]
perf_iommu_event_init,0x57,,RET,ret
perf_iommu_event_init,0x5e,,RET,ret
perf_iommu_event_init,0x65,,RET,ret
_iommu_event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_iommu_event_show,0x17,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
_iommu_event_show,0x1f,,RET,ret
domid_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
domid_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
domid_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
domid_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x332d3631",write other [TODO]
domid_mask_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
domid_mask_show,0x30,,RET,ret
pasid_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pasid_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
pasid_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
pasid_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x352d3233",write other [TODO]
pasid_mask_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
pasid_mask_show,0x30,,RET,ret
devid_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devid_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
devid_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
devid_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x35312d30",write other [TODO]
devid_mask_show,0x2c,,RET,ret
domid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
domid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
domid_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
domid_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x39332d34",write other [TODO]
domid_show,0x2c,,RET,ret
pasid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pasid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
pasid_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
pasid_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x39352d30",write other [TODO]
pasid_show,0x2c,,RET,ret
devid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
devid_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa33322d",write other [TODO]
devid_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
devid_show,0x27,,RET,ret
csource_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
csource_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
csource_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
csource_show,0x23,,RET,ret
perf_iommu_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_read,0x2e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
perf_iommu_read,0x42,0xffffffff817d2150,CALL 0xffffffff817d2150,direct call
perf_iommu_read,0x59,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
perf_iommu_read,0x78,,RET,ret
perf_iommu_read,0x79,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_iommu_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_start,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_iommu_start,0x4b,ctx->r12 + 0x1d8,"MOV dword ptr [R12 + 0x1d8],0x0",write other [TODO]
perf_iommu_start,0x86,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
perf_iommu_start,0x8a,0xffffffff817d2180,CALL 0xffffffff817d2180,direct call
perf_iommu_start,0xba,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
perf_iommu_start,0xd4,0xffffffff817d2180,CALL 0xffffffff817d2180,direct call
perf_iommu_start,0x105,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
perf_iommu_start,0x11f,0xffffffff817d2180,CALL 0xffffffff817d2180,direct call
perf_iommu_start,0x14b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
perf_iommu_start,0x165,0xffffffff817d2180,CALL 0xffffffff817d2180,direct call
perf_iommu_start,0x172,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
perf_iommu_start,0x194,,RET,ret
perf_iommu_start,0x19a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
perf_iommu_start,0x1a8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
perf_iommu_start,0x1b3,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
perf_iommu_start,0x1ca,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
perf_iommu_start,0x1eb,0xffffffff817d2180,CALL 0xffffffff817d2180,direct call
perf_iommu_start,0x203,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
_iommu_cpumask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_iommu_cpumask_show,0x6,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
_iommu_cpumask_show,0x1e,0xffffffff815fa2e0,CALL 0xffffffff815fa2e0,direct call
_iommu_cpumask_show,0x26,,RET,ret
perf_iommu_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_add,0x22,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],0x3",write other [TODO]
perf_iommu_add,0x43,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
perf_iommu_add,0x47,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
perf_iommu_add,0x89,ctx->r13 + 0x148,"MOV qword ptr [R13 + 0x148],RDX",write other [TODO]
perf_iommu_add,0x90,ctx->r12 + 0x161,"MOV byte ptr [R12 + 0x161],AL",write other [TODO]
perf_iommu_add,0x98,ctx->r12 + 0x160,"MOV byte ptr [R12 + 0x160],R9B",write other [TODO]
perf_iommu_add,0xa0,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
perf_iommu_add,0xba,,RET,ret
perf_iommu_add,0xdb,0xffffffff8100b9c0,CALL 0xffffffff8100b9c0,direct call
perf_iommu_add,0xf0,,RET,ret
perf_iommu_add,0x101,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
perf_iommu_stop.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_stop.part.0,0x2e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
perf_iommu_stop.part.0,0x42,0xffffffff817d2150,CALL 0xffffffff817d2150,direct call
perf_iommu_stop.part.0,0x59,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
perf_iommu_stop.part.0,0x90,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
perf_iommu_stop.part.0,0x98,0xffffffff817d2180,CALL 0xffffffff817d2180,direct call
perf_iommu_stop.part.0,0xaa,ctx->rbx + 0x1d8,"MOV dword ptr [RBX + 0x1d8],EAX",write other [TODO]
perf_iommu_stop.part.0,0xc4,,RET,ret
perf_iommu_stop.part.0,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_iommu_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_stop,0xe,,RET,ret
perf_iommu_stop,0x13,0xffffffff8100bd10,CALL 0xffffffff8100bd10,direct call
perf_iommu_stop,0x19,,RET,ret
perf_iommu_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_iommu_del,0x23,0xffffffff8100bd10,CALL 0xffffffff8100bd10,direct call
perf_iommu_del,0x59,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
perf_iommu_del,0x78,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
perf_iommu_del,0x80,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
perf_iommu_del,0x8d,,RET,ret
test_aperfmperf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
test_aperfmperf,0x18,,RET,ret
test_ptsc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
test_ptsc,0x18,,RET,ret
test_irperf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
test_irperf,0x18,,RET,ret
test_therm_status,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
test_therm_status,0x14,,RET,ret
msr_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_event_init,0x52,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RCX",write other [TODO]
msr_event_init,0x62,ctx->rdi + 0x184,"MOV dword ptr [RDI + 0x184],0xffffffff",write other [TODO]
msr_event_init,0x6c,ctx->rdi + 0x178,"MOV qword ptr [RDI + 0x178],RAX",write other [TODO]
msr_event_init,0x75,,RET,ret
msr_event_init,0x7c,,RET,ret
msr_event_init,0x83,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa33362d",write other [TODO]
event_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
event_show,0x27,,RET,ret
test_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
test_intel,0x41,,RET,ret
test_intel,0x70,,RET,ret
test_intel,0xa4,,RET,ret
msr_event_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_event_add,0xc,,RET,ret
msr_event_add,0x2d,ctx->rbx + 0x1e0,"MOV qword ptr [RBX + 0x1e0],RAX",write other [TODO]
msr_event_add,0x3b,,RET,ret
msr_event_add,0x3e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
msr_event_add,0x44,ctx->rbx + 0x1e0,"MOV qword ptr [RBX + 0x1e0],RAX",write other [TODO]
msr_event_add,0x52,,RET,ret
msr_event_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_event_update,0x48,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
msr_event_update,0x7b,,RET,ret
msr_event_update,0x8c,,RET,ret
msr_event_update,0xa8,ctx->r13 + 0xb0,"MOV qword ptr [R13 + 0xb0],RAX",write other [TODO]
msr_event_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_event_stop,0x9,0xffffffff8100c0e0,CALL 0xffffffff8100c0e0,direct call
msr_event_stop,0xf,,RET,ret
msr_event_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_event_del,0x9,0xffffffff8100c0e0,CALL 0xffffffff8100c0e0,direct call
msr_event_del,0xf,,RET,ret
msr_event_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_event_start,0x25,ctx->rbx + 0x1e0,"MOV qword ptr [RBX + 0x1e0],RAX",write other [TODO]
msr_event_start,0x31,,RET,ret
msr_event_start,0x34,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
msr_event_start,0x3a,ctx->rbx + 0x1e0,"MOV qword ptr [RBX + 0x1e0],RAX",write other [TODO]
msr_event_start,0x46,,RET,ret
paravirt_read_msr,0x6,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr,0xd,,RET,ret
paravirt_write_msr,0xa,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
paravirt_write_msr,0x11,,RET,ret
intel_pmu_event_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_event_map,0x15,,RET,ret
intel_pmu_disable_all,0x1e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_disable_all,0x32,0xffffffff81014020,CALL 0xffffffff81014020,direct call
intel_pmu_disable_all,0x37,0xffffffff81015610,CALL 0xffffffff81015610,direct call
intel_pmu_disable_all,0x41,,RET,ret
intel_pmu_disable_all,0x42,0xffffffff810138b0,CALL 0xffffffff810138b0,direct call
intel_pmu_disable_all,0x47,0xffffffff81014020,CALL 0xffffffff81014020,direct call
intel_pmu_disable_all,0x4c,0xffffffff81015610,CALL 0xffffffff81015610,direct call
intel_pmu_disable_all,0x56,,RET,ret
__icl_update_topdown_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__icl_update_topdown_event,0x4d,,RET,ret
intel_pebs_aliases_core2,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pebs_aliases_core2,0x20,,RET,ret
intel_pebs_aliases_core2,0x35,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RAX",write other [TODO]
intel_pebs_aliases_core2,0x3c,,RET,ret
intel_pebs_aliases_snb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pebs_aliases_snb,0x20,,RET,ret
intel_pebs_aliases_snb,0x35,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RAX",write other [TODO]
intel_pebs_aliases_snb,0x3c,,RET,ret
adl_get_hybrid_cpu_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_get_hybrid_cpu_type,0xf,,RET,ret
nhm_limit_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhm_limit_period,0x19,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
nhm_limit_period,0x1c,,RET,ret
spr_limit_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_limit_period,0x1c,,RET,ret
spr_limit_period,0x2d,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
spr_limit_period,0x30,,RET,ret
tsx_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsx_is_visible,0x1e,,RET,ret
pebs_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pebs_is_visible,0x19,,RET,ret
lbr_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lbr_is_visible,0x18,,RET,ret
lbr_is_visible,0x1c,,RET,ret
exra_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exra_is_visible,0x19,,RET,ret
hybrid_events_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hybrid_events_is_visible,0x23,,RET,ret
hybrid_events_is_visible,0x2b,,RET,ret
intel_guest_get_msrs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_guest_get_msrs,0x3c,ctx->rdi,"MOV dword ptr [RDI],0x1",write other [TODO]
intel_guest_get_msrs,0x50,ctx->rax + 0xce0,"MOV dword ptr [RAX + 0xce0],0x38f",write other [TODO]
intel_guest_get_msrs,0x69,ctx->rax + 0xce8,"MOV qword ptr [RAX + 0xce8],RCX",write other [TODO]
intel_guest_get_msrs,0x70,ctx->rax + 0xcf0,"MOV qword ptr [RAX + 0xcf0],RDX",write other [TODO]
intel_guest_get_msrs,0xaf,ctx->rdi,"MOV dword ptr [RDI],ECX",write other [TODO]
intel_guest_get_msrs,0xc3,ctx->rdx,"MOV dword ptr [RDX],0x600",write other [TODO]
intel_guest_get_msrs,0xc9,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],R8",write other [TODO]
intel_guest_get_msrs,0xcd,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RCX",write other [TODO]
intel_guest_get_msrs,0xe4,ctx->rdi,"MOV dword ptr [RDI],ECX",write other [TODO]
intel_guest_get_msrs,0xf8,ctx->rdx,"MOV dword ptr [RDX],0x3f2",write other [TODO]
intel_guest_get_msrs,0xfe,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],R8",write other [TODO]
intel_guest_get_msrs,0x102,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RCX",write other [TODO]
intel_guest_get_msrs,0x110,ctx->rdi,"MOV dword ptr [RDI],ECX",write other [TODO]
intel_guest_get_msrs,0x134,ctx->rdi,"MOV dword ptr [RDI],0x3f1",write other [TODO]
intel_guest_get_msrs,0x13a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDX",write other [TODO]
intel_guest_get_msrs,0x13e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RCX",write other [TODO]
intel_guest_get_msrs,0x147,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],0x0",write other [TODO]
intel_guest_get_msrs,0x153,,RET,ret
intel_guest_get_msrs,0x17a,ctx->rdi,"MOV dword ptr [RDI],ECX",write other [TODO]
intel_guest_get_msrs,0x187,ctx->rdx,"MOV dword ptr [RDX],0x3f1",write other [TODO]
intel_guest_get_msrs,0x18d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
intel_guest_get_msrs,0x194,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],0x0",write other [TODO]
intel_guest_get_msrs,0x19d,,RET,ret
intel_guest_get_msrs,0x1ab,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RDX",write other [TODO]
intel_guest_get_msrs,0x1c0,ctx->rax + 0xcf0,"MOV qword ptr [RAX + 0xcf0],RDX",write other [TODO]
intel_guest_get_msrs,0x1cb,ctx->rax + 0xcf0,"MOV qword ptr [RAX + 0xcf0],RDX",write other [TODO]
intel_guest_get_msrs,0x1d6,,RET,ret
__intel_shared_reg_get_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__intel_shared_reg_get_constraints,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
__intel_shared_reg_get_constraints,0x23,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
__intel_shared_reg_get_constraints,0x63,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
__intel_shared_reg_get_constraints,0x79,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__intel_shared_reg_get_constraints,0x88,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
__intel_shared_reg_get_constraints,0x106,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__intel_shared_reg_get_constraints,0x10f,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RAX",write other [TODO]
__intel_shared_reg_get_constraints,0x11d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
__intel_shared_reg_get_constraints,0x126,ctx->rax,"MOV RAX,R12",write other [TODO]
__intel_shared_reg_get_constraints,0x133,,RET,ret
__intel_shared_reg_get_constraints,0x13b,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],0x1",write other [TODO]
__intel_shared_reg_get_constraints,0x15c,ctx->rdi + 0x1a0,"MOV dword ptr [RDI + 0x1a0],EBX",write other [TODO]
__intel_shared_reg_get_constraints,0x16d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__intel_shared_reg_get_constraints,0x174,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RAX",write other [TODO]
__intel_shared_reg_get_constraints,0x17d,ctx->rdi + 0x198,"MOV dword ptr [RDI + 0x198],0x1a6",write other [TODO]
__intel_shared_reg_get_constraints,0x18a,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RAX",write other [TODO]
__intel_shared_reg_get_constraints,0x1a3,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__intel_shared_reg_get_constraints,0x1aa,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RAX",write other [TODO]
__intel_shared_reg_get_constraints,0x1b4,ctx->rdi + 0x198,"MOV dword ptr [RDI + 0x198],0x1a7",write other [TODO]
__intel_shared_reg_get_constraints,0x1c1,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RAX",write other [TODO]
intel_stop_scheduling,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_stop_scheduling,0x3c,ctx->r8 + ctx->rax * 0x4 + 0x104,"MOV byte ptr [R8 + RAX*0x4 + 0x104],0x0",write other [TODO]
intel_stop_scheduling,0x45,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
intel_stop_scheduling,0x4b,,RET,ret
intel_stop_scheduling,0x4c,,RET,ret
intel_commit_scheduling,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_commit_scheduling,0x58,ctx->rcx + ctx->rax * 0x4 + 0x4,"MOV dword ptr [RCX + RAX*0x4 + 0x4],0x2",write other [TODO]
intel_commit_scheduling,0x61,,RET,ret
intel_commit_scheduling,0x6c,ctx->rcx + ctx->rax * 0x4 + 0x4,"MOV dword ptr [RCX + RAX*0x4 + 0x4],0x1",write other [TODO]
intel_commit_scheduling,0x75,,RET,ret
intel_start_scheduling,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_start_scheduling,0x3c,ctx->r8 + ctx->rax * 0x4 + 0x104,"MOV byte ptr [R8 + RAX*0x4 + 0x104],0x1",write other [TODO]
intel_start_scheduling,0x45,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
intel_start_scheduling,0x4b,,RET,ret
intel_start_scheduling,0x4c,,RET,ret
intel_event_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_event_sysfs_show,0xd,0xffffffff810075b0,CALL 0xffffffff810075b0,direct call
intel_event_sysfs_show,0x13,,RET,ret
intel_pmu_filter_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_filter_match,0x28,,RET,ret
intel_pmu_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_update,0x12,0xffffffff81004410,CALL 0xffffffff81004410,direct call
intel_pmu_update,0x18,,RET,ret
intel_pmu_update,0x19,0xffffffff820003b0,CALL 0xffffffff820003b0,direct call
intel_pmu_update,0x1f,,RET,ret
intel_pmu_set_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_set_period,0x12,0xffffffff81005bf0,CALL 0xffffffff81005bf0,direct call
intel_pmu_set_period,0x18,,RET,ret
intel_pmu_set_period,0x19,0xffffffff820003a8,CALL 0xffffffff820003a8,direct call
intel_pmu_set_period,0x1f,,RET,ret
show_sysctl_tfa,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_sysctl_tfa,0x1f,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
show_sysctl_tfa,0x2a,,RET,ret
branches_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branches_show,0x1e,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
branches_show,0x26,,RET,ret
pmu_name_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_name_show,0x1f,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
pmu_name_show,0x27,,RET,ret
intel_hybrid_get_attr_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_hybrid_get_attr_cpus,0x12,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
intel_hybrid_get_attr_cpus,0x22,0xffffffff815fa2e0,CALL 0xffffffff815fa2e0,direct call
intel_hybrid_get_attr_cpus,0x2a,,RET,ret
set_sysctl_tfa,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_sysctl_tfa,0x23,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
set_sysctl_tfa,0x29,0xffffffff81607890,CALL 0xffffffff81607890,direct call
set_sysctl_tfa,0x45,0xffffffff82e1f6e0,"MOV byte ptr [0xffffffff82e1f6e0],AL",write .data
set_sysctl_tfa,0x4b,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
set_sysctl_tfa,0x67,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_sysctl_tfa,0x6c,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
set_sysctl_tfa,0x8b,,RET,ret
set_sysctl_tfa,0x8c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
freeze_on_smi_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
freeze_on_smi_store,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
freeze_on_smi_store,0x29,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
freeze_on_smi_store,0x43,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
freeze_on_smi_store,0x55,0xffffffff83115d10,"MOV qword ptr [0xffffffff83115d10],RAX",write .data
freeze_on_smi_store,0x5c,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
freeze_on_smi_store,0x7a,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
freeze_on_smi_store,0x7f,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
freeze_on_smi_store,0x8b,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
freeze_on_smi_store,0xa7,,RET,ret
freeze_on_smi_store,0xb1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
freeze_on_smi_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
freeze_on_smi_show,0x1a,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
freeze_on_smi_show,0x22,,RET,ret
frontend_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
frontend_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
frontend_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
frontend_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33322d30",write other [TODO]
frontend_show,0x2c,,RET,ret
ldlat_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ldlat_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
ldlat_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
ldlat_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x35312d30",write other [TODO]
ldlat_show,0x2c,,RET,ret
offcore_rsp_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
offcore_rsp_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
offcore_rsp_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
offcore_rsp_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33362d30",write other [TODO]
offcore_rsp_show,0x2c,,RET,ret
in_tx_cp_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
in_tx_cp_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
in_tx_cp_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
in_tx_cp_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
in_tx_cp_show,0x29,,RET,ret
in_tx_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
in_tx_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
in_tx_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
in_tx_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
in_tx_show,0x29,,RET,ret
cmask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cmask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cmask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
cmask_show,0x2c,,RET,ret
inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
inv_show,0x29,,RET,ret
any_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
any_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
any_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
any_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
any_show,0x29,,RET,ret
pc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
pc_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
pc_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
pc_show,0x29,,RET,ret
edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
edge_show,0x29,,RET,ret
umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
umask_show,0x27,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
event_show,0x23,,RET,ret
intel_pmu_aux_output_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_aux_output_match,0x10,,RET,ret
intel_pmu_aux_output_match,0x15,0xffffffff81018c30,CALL 0xffffffff81018c30,direct call
intel_pmu_aux_output_match,0x1b,,RET,ret
intel_pmu_swap_task_ctx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_swap_task_ctx,0x9,0xffffffff81015010,CALL 0xffffffff81015010,direct call
intel_pmu_swap_task_ctx,0xf,,RET,ret
intel_pmu_sched_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_sched_task,0x17,0xffffffff81013b80,CALL 0xffffffff81013b80,direct call
intel_pmu_sched_task,0x22,0xffffffff81015090,CALL 0xffffffff81015090,direct call
intel_pmu_sched_task,0x2c,,RET,ret
intel_pmu_read_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_read_event,0x49,0xffffffff8126cae0,CALL 0xffffffff8126cae0,direct call
intel_pmu_read_event,0x51,0xffffffff820003b0,CALL 0xffffffff820003b0,direct call
intel_pmu_read_event,0x5e,0xffffffff8126cb10,CALL 0xffffffff8126cb10,direct call
intel_pmu_read_event,0x68,,RET,ret
intel_pmu_read_event,0x69,0xffffffff81004410,CALL 0xffffffff81004410,direct call
intel_pmu_read_event,0x73,,RET,ret
intel_pmu_read_event,0x74,0xffffffff81014060,CALL 0xffffffff81014060,direct call
intel_pmu_read_event,0x7e,,RET,ret
intel_pmu_del_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_del_event,0x2b,,RET,ret
intel_pmu_del_event,0x2c,0xffffffff81015450,CALL 0xffffffff81015450,direct call
intel_pmu_del_event,0x42,0xffffffff81013e20,CALL 0xffffffff81013e20,direct call
intel_pmu_del_event,0x4c,,RET,ret
intel_pmu_add_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_add_event,0x2a,,RET,ret
intel_pmu_add_event,0x2b,0xffffffff81013bc0,CALL 0xffffffff81013bc0,direct call
intel_pmu_add_event,0x3e,0xffffffff81015220,CALL 0xffffffff81015220,direct call
intel_pmu_add_event,0x48,,RET,ret
intel_pmu_cpu_dying,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_cpu_dying,0x9,0xffffffff810131e0,CALL 0xffffffff810131e0,direct call
intel_pmu_cpu_dying,0xf,,RET,ret
core_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
core_pmu_enable_event,0xe,,RET,ret
core_pmu_enable_event,0x13,0xffffffff81007160,CALL 0xffffffff81007160,direct call
core_pmu_enable_event,0x19,,RET,ret
intel_pmu_assign_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_assign_event,0xe,,RET,ret
intel_pmu_assign_event,0x16,0xffffffff81275060,CALL 0xffffffff81275060,direct call
intel_pmu_assign_event,0x1c,,RET,ret
intel_check_pebs_isolation,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_check_pebs_isolation,0x10,0xffffffff8104cc20,CALL 0xffffffff8104cc20,direct call
intel_check_pebs_isolation,0x2a,0xffffffff83115d58,"MOV byte ptr [0xffffffff83115d58],AL",write .data
intel_check_pebs_isolation,0x30,,RET,ret
intel_pebs_aliases_ivb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pebs_aliases_ivb,0x32,,RET,ret
intel_pebs_aliases_ivb,0x4e,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RDX",write other [TODO]
intel_pebs_aliases_ivb,0x55,,RET,ret
intel_pebs_aliases_ivb,0x6b,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RDX",write other [TODO]
intel_pebs_aliases_ivb,0x72,,RET,ret
intel_pebs_aliases_skl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pebs_aliases_skl,0x32,,RET,ret
intel_pebs_aliases_skl,0x4e,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RDX",write other [TODO]
intel_pebs_aliases_skl,0x55,,RET,ret
intel_pebs_aliases_skl,0x6b,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RDX",write other [TODO]
intel_pebs_aliases_skl,0x72,,RET,ret
bdw_limit_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bdw_limit_period,0x15,,RET,ret
bdw_limit_period,0x2e,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
bdw_limit_period,0x31,,RET,ret
default_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_is_visible,0x17,,RET,ret
default_is_visible,0x2a,,RET,ret
update_tfa_sched,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_tfa_sched,0x1f,,RET,ret
update_tfa_sched,0x2b,0xffffffff81006e30,CALL 0xffffffff81006e30,direct call
update_tfa_sched,0x33,0xffffffff8126e390,CALL 0xffffffff8126e390,direct call
update_tfa_sched,0x39,,RET,ret
flip_smm_bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flip_smm_bit,0x19,0xffffffff81647150,CALL 0xffffffff81647150,direct call
flip_smm_bit,0x1f,,RET,ret
flip_smm_bit,0x20,0xffffffff816471e0,CALL 0xffffffff816471e0,direct call
flip_smm_bit,0x26,,RET,ret
intel_snb_check_microcode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_snb_check_microcode,0x10,0xffffffff8104cc20,CALL 0xffffffff8104cc20,direct call
intel_pmu_hw_config.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_hw_config.part.0,0x54,ctx->rbx + 0x18c,"MOV dword ptr [RBX + 0x18c],EAX",write other [TODO]
intel_pmu_hw_config.part.0,0xb3,ctx->rbx + 0x18c,"MOV dword ptr [RBX + 0x18c],EDX",write other [TODO]
intel_pmu_hw_config.part.0,0xc8,ctx->rax,CALL RAX,in-direct call
intel_pmu_hw_config.part.0,0x1b9,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
intel_pmu_hw_config.part.0,0x1ce,0xffffffff81506130,CALL 0xffffffff81506130,direct call
intel_pmu_hw_config.part.0,0x1e8,,RET,ret
intel_pmu_hw_config.part.0,0x1f1,,RET,ret
intel_pmu_hw_config.part.0,0x214,0xffffffff81015ac0,CALL 0xffffffff81015ac0,direct call
intel_pmu_hw_config.part.0,0x241,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
intel_pmu_hw_config.part.0,0x258,0xffffffff81006630,CALL 0xffffffff81006630,direct call
intel_pmu_hw_config.part.0,0x265,ctx->rbx + 0x388,"MOV qword ptr [RBX + 0x388],-0x7eff98e0",write other [TODO]
intel_pmu_hw_config.part.0,0x2d3,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
hybrid_format_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hybrid_format_is_visible,0x13,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hybrid_format_is_visible,0x21,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
hybrid_format_is_visible,0x53,,RET,ret
hybrid_format_is_visible,0x5e,,RET,ret
hybrid_tsx_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hybrid_tsx_is_visible,0xe,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hybrid_tsx_is_visible,0x23,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
hybrid_tsx_is_visible,0x75,,RET,ret
hybrid_tsx_is_visible,0x80,,RET,ret
intel_pmu_check_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_check_period,0x25,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
intel_pmu_check_period,0x3c,,RET,ret
intel_pmu_check_period,0x3f,,RET,ret
intel_pmu_bts_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_bts_config,0x2e,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
intel_pmu_bts_config,0x47,,RET,ret
intel_pmu_bts_config,0x68,0xffffffff81006630,CALL 0xffffffff81006630,direct call
intel_pmu_bts_config,0x71,ctx->rbx + 0x388,"MOV qword ptr [RBX + 0x388],-0x7eff98e0",write other [TODO]
core_pmu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
core_pmu_hw_config,0xe,0xffffffff81006940,CALL 0xffffffff81006940,direct call
core_pmu_hw_config,0x1a,0xffffffff8100d820,CALL 0xffffffff8100d820,direct call
core_pmu_hw_config,0x24,,RET,ret
intel_pmu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_hw_config,0xe,0xffffffff81006940,CALL 0xffffffff81006940,direct call
intel_pmu_hw_config,0x1c,,RET,ret
intel_pmu_hw_config,0x20,0xffffffff8100d820,CALL 0xffffffff8100d820,direct call
intel_pmu_hw_config,0x2c,0xffffffff8100d310,CALL 0xffffffff8100d310,direct call
intel_pmu_hw_config,0x36,,RET,ret
core_guest_get_msrs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
core_guest_get_msrs,0x23,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
core_guest_get_msrs,0x36,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
core_guest_get_msrs,0x4c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
core_guest_get_msrs,0x58,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
core_guest_get_msrs,0x92,ctx->rax,CALL RAX,in-direct call
core_guest_get_msrs,0x9a,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],0x0",write other [TODO]
core_guest_get_msrs,0xa6,ctx->rbx,"MOV dword ptr [RBX],EDX",write other [TODO]
core_guest_get_msrs,0xa8,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
core_guest_get_msrs,0xc7,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RDX",write other [TODO]
core_guest_get_msrs,0xcb,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
core_guest_get_msrs,0xef,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
core_guest_get_msrs,0xfc,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
core_guest_get_msrs,0x110,,RET,ret
update_saved_topdown_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_saved_topdown_regs,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
update_saved_topdown_regs,0x34,ctx->rdi + 0x1f8,"MOV qword ptr [RDI + 0x1f8],RSI",write other [TODO]
update_saved_topdown_regs,0x42,ctx->rdi + 0x1f0,"MOV qword ptr [RDI + 0x1f0],RDX",write other [TODO]
update_saved_topdown_regs,0x63,ctx->rdx + 0x1f8,"MOV qword ptr [RDX + 0x1f8],R15",write other [TODO]
update_saved_topdown_regs,0x6a,ctx->rdx + 0x1f0,"MOV qword ptr [RDX + 0x1f0],RCX",write other [TODO]
update_saved_topdown_regs,0x7d,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
update_saved_topdown_regs,0x94,,RET,ret
intel_put_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_put_event_constraints,0x63,ctx->rsi + 0x18c,"MOV dword ptr [RSI + 0x18c],EDX",write other [TODO]
intel_put_event_constraints,0x7d,ctx->wordctx->ptrctx->r12 + ctx->rax * 0x2 + 0xc,"MOV word ptr [R12 + RAX*0x2 + 0xc],DX",write other [TODO]
intel_put_event_constraints,0xb4,ctx->r12 + ctx->rax * 0x4 + 0x4,"MOV dword ptr [R12 + RAX*0x4 + 0x4],0x0",write other [TODO]
intel_put_event_constraints,0xcb,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
intel_put_event_constraints,0xd9,,RET,ret
intel_put_event_constraints,0x104,ctx->rsi + 0x1b4,"MOV dword ptr [RSI + 0x1b4],0x0",write other [TODO]
intel_put_event_constraints,0x143,ctx->rsi + 0x19c,"MOV dword ptr [RSI + 0x19c],0x0",write other [TODO]
intel_put_event_constraints,0x152,,RET,ret
intel_put_event_constraints,0x156,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RSI",write stack
intel_put_event_constraints,0x15a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
hsw_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hsw_hw_config,0xd,0xffffffff81006940,CALL 0xffffffff81006940,direct call
hsw_hw_config,0x1b,,RET,ret
hsw_hw_config,0x1f,0xffffffff8100d820,CALL 0xffffffff8100d820,direct call
hsw_hw_config,0x2b,0xffffffff8100d310,CALL 0xffffffff8100d310,direct call
hsw_hw_config,0x6b,ctx->rbx + 0x160,"MOV qword ptr [RBX + 0x160],RDX",write other [TODO]
adl_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_hw_config,0x24,0xffffffff81006940,CALL 0xffffffff81006940,direct call
adl_hw_config,0x32,,RET,ret
adl_hw_config,0x36,0xffffffff8100d820,CALL 0xffffffff8100d820,direct call
adl_hw_config,0x42,0xffffffff8100d310,CALL 0xffffffff8100d310,direct call
adl_hw_config,0x4c,,RET,ret
adl_hw_config,0x5a,0xffffffff8100dc50,CALL 0xffffffff8100dc50,direct call
adl_hw_config,0x64,,RET,ret
core_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
core_pmu_enable_all,0x70,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
core_pmu_enable_all,0xc3,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
core_pmu_enable_all,0xfc,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
core_pmu_enable_all,0x104,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
core_pmu_enable_all,0x108,ctx->rax,CALL RAX,in-direct call
core_pmu_enable_all,0x11d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
core_pmu_enable_all,0x136,,RET,ret
__intel_pmu_enable_all.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__intel_pmu_enable_all.constprop.0,0x2b,0xffffffff81015520,CALL 0xffffffff81015520,direct call
__intel_pmu_enable_all.constprop.0,0x4b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__intel_pmu_enable_all.constprop.0,0x58,ctx->rbx + 0x988,"MOV qword ptr [RBX + 0x988],RAX",write other [TODO]
__intel_pmu_enable_all.constprop.0,0x77,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__intel_pmu_enable_all.constprop.0,0x9e,0xffffffff81013840,CALL 0xffffffff81013840,direct call
__intel_pmu_enable_all.constprop.0,0xa7,,RET,ret
__intel_pmu_snapshot_branch_stack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__intel_pmu_snapshot_branch_stack,0x28,0xffffffff81015a60,CALL 0xffffffff81015a60,direct call
__intel_pmu_snapshot_branch_stack,0x4f,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
__intel_pmu_snapshot_branch_stack,0x54,0xffffffff81013fe0,CALL 0xffffffff81013fe0,direct call
__intel_pmu_snapshot_branch_stack,0x5b,0xffffffff8100dec0,CALL 0xffffffff8100dec0,direct call
__intel_pmu_snapshot_branch_stack,0x69,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__intel_pmu_snapshot_branch_stack,0x7a,,RET,ret
intel_pmu_snapshot_branch_stack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_snapshot_branch_stack,0x16,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
intel_pmu_snapshot_branch_stack,0x1f,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
intel_pmu_snapshot_branch_stack,0x2f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_snapshot_branch_stack,0x3d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_snapshot_branch_stack,0x56,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_snapshot_branch_stack,0x65,0xffffffff8100df90,CALL 0xffffffff8100df90,direct call
intel_pmu_snapshot_branch_stack,0x72,,RET,ret
intel_pmu_snapshot_arch_branch_stack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_snapshot_arch_branch_stack,0x16,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
intel_pmu_snapshot_arch_branch_stack,0x1f,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
intel_pmu_snapshot_arch_branch_stack,0x32,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_snapshot_arch_branch_stack,0x43,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_snapshot_arch_branch_stack,0x52,0xffffffff8100df90,CALL 0xffffffff8100df90,direct call
intel_pmu_snapshot_arch_branch_stack,0x5f,,RET,ret
intel_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_enable_all,0x9,0xffffffff81013fe0,CALL 0xffffffff81013fe0,direct call
intel_pmu_enable_all,0x10,0xffffffff8100dec0,CALL 0xffffffff8100dec0,direct call
intel_pmu_enable_all,0x16,,RET,ret
x86_pmu_disable_event,0x26,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_disable_event,0x3a,,RET,ret
x86_pmu_disable_event,0x5b,ctx->rax,CALL RAX,in-direct call
x86_pmu_disable_event,0x68,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_pmu_disable_event,0x73,,RET,ret
intel_tfa_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_tfa_pmu_enable_all,0x24,0xffffffff81013fe0,CALL 0xffffffff81013fe0,direct call
intel_tfa_pmu_enable_all,0x2b,0xffffffff8100dec0,CALL 0xffffffff8100dec0,direct call
intel_tfa_pmu_enable_all,0x31,,RET,ret
intel_tfa_pmu_enable_all,0x43,ctx->rax + 0x1308,"MOV qword ptr [RAX + 0x1308],0x0",write other [TODO]
intel_tfa_pmu_enable_all,0x51,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_tfa_pmu_enable_all,0x57,0xffffffff81013fe0,CALL 0xffffffff81013fe0,direct call
intel_tfa_pmu_enable_all,0x5e,0xffffffff8100dec0,CALL 0xffffffff8100dec0,direct call
intel_tfa_pmu_enable_all,0x64,,RET,ret
intel_tfa_commit_scheduling,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_tfa_commit_scheduling,0xa,,RET,ret
intel_tfa_commit_scheduling,0x1d,ctx->rdi + 0x1308,"MOV qword ptr [RDI + 0x1308],0x1",write other [TODO]
intel_tfa_commit_scheduling,0x30,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_tfa_commit_scheduling,0x37,,RET,ret
intel_update_topdown_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_update_topdown_event,0x28,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],ESI",write stack
intel_update_topdown_event,0x33,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
intel_update_topdown_event,0x52,,RET,ret
intel_update_topdown_event,0x58,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
intel_update_topdown_event,0x5e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
intel_update_topdown_event,0x6d,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
intel_update_topdown_event,0xac,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_update_topdown_event,0xb0,0xffffffff8100c2c0,CALL 0xffffffff8100c2c0,direct call
intel_update_topdown_event,0xc5,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_update_topdown_event,0xf3,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_update_topdown_event,0x104,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_update_topdown_event,0x11d,0xffffffff8100da40,CALL 0xffffffff8100da40,direct call
intel_update_topdown_event,0x144,0xffffffff8100c2c0,CALL 0xffffffff8100c2c0,direct call
intel_update_topdown_event,0x155,0xffffffff8100da40,CALL 0xffffffff8100da40,direct call
icl_update_topdown_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icl_update_topdown_event,0x12,0xffffffff8100e240,CALL 0xffffffff8100e240,direct call
icl_update_topdown_event,0x18,,RET,ret
adl_update_topdown_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_update_topdown_event,0x17,,RET,ret
adl_update_topdown_event,0x25,0xffffffff8100e240,CALL 0xffffffff8100e240,direct call
adl_update_topdown_event,0x2b,,RET,ret
intel_pmu_nhm_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_nhm_enable_all,0x1a,0xffffffff81013fe0,CALL 0xffffffff81013fe0,direct call
intel_pmu_nhm_enable_all,0x21,0xffffffff8100dec0,CALL 0xffffffff8100dec0,direct call
intel_pmu_nhm_enable_all,0x34,,RET,ret
intel_pmu_nhm_enable_all,0x53,0xffffffff82000310,CALL 0xffffffff82000310,direct call
intel_pmu_nhm_enable_all,0x81,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0x95,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0xbf,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0xce,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0xe9,0xffffffff82000308,CALL 0xffffffff82000308,direct call
intel_pmu_nhm_enable_all,0x134,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0x161,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0x18d,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
intel_pmu_nhm_enable_all,0x195,ctx->rax,CALL RAX,in-direct call
intel_pmu_nhm_enable_all,0x1aa,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_nhm_enable_all,0x1c3,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
icl_set_topdown_event_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icl_set_topdown_event_period,0x39,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
icl_set_topdown_event_period,0x44,,RET,ret
icl_set_topdown_event_period,0x52,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
icl_set_topdown_event_period,0x63,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
icl_set_topdown_event_period,0x69,ctx->r12 + 0x1f8,"MOV qword ptr [R12 + 0x1f8],0x0",write other [TODO]
icl_set_topdown_event_period,0x78,ctx->r12 + 0x1f0,"MOV qword ptr [R12 + 0x1f0],0x0",write other [TODO]
icl_set_topdown_event_period,0x84,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
icl_set_topdown_event_period,0x8f,,RET,ret
icl_set_topdown_event_period,0x9b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
icl_set_topdown_event_period,0xb4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
icl_set_topdown_event_period,0xbd,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
icl_set_topdown_event_period,0xc8,,RET,ret
adl_set_topdown_event_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_set_topdown_event_period,0x17,,RET,ret
adl_set_topdown_event_period,0x1c,0xffffffff8100e5c0,CALL 0xffffffff8100e5c0,direct call
adl_set_topdown_event_period,0x22,,RET,ret
intel_pmu_cpu_starting,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_cpu_starting,0x3d,ctx->wordctx->ptrctx->rbp - 0x2a,"MOV word ptr [RBP + -0x2a],AX",write stack
intel_pmu_cpu_starting,0x49,0xffffffff810131a0,CALL 0xffffffff810131a0,direct call
intel_pmu_cpu_starting,0x4e,0xffffffff81014c40,CALL 0xffffffff81014c40,direct call
intel_pmu_cpu_starting,0x53,ctx->r12 + 0xca8,"MOV qword ptr [R12 + 0xca8],0x0",write other [TODO]
intel_pmu_cpu_starting,0x7e,ctx->r12 + 0x1308,"MOV qword ptr [R12 + 0x1308],0x0",write other [TODO]
intel_pmu_cpu_starting,0x8d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_cpu_starting,0xda,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
intel_pmu_cpu_starting,0x120,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_cpu_starting,0x137,ctx->rdx + 0xa4,"MOV dword ptr [RDX + 0xa4],R15D",write other [TODO]
intel_pmu_cpu_starting,0x169,ctx->r12 + 0xca8,"MOV qword ptr [R12 + 0xca8],RDX",write other [TODO]
intel_pmu_cpu_starting,0x1cf,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_cpu_starting,0x1e6,ctx->rdx + 0x214,"MOV dword ptr [RDX + 0x214],R14D",write other [TODO]
intel_pmu_cpu_starting,0x20a,,RET,ret
intel_pmu_cpu_starting,0x2cd,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_cpu_starting,0x304,0xffffffff81647150,CALL 0xffffffff81647150,direct call
intel_pmu_cpu_starting,0x30e,0xffffffff816471e0,CALL 0xffffffff816471e0,direct call
intel_pmu_cpu_starting,0x320,ctx->r12 + 0x12e8,"MOV qword ptr [R12 + 0x12e8],RDX",write other [TODO]
intel_pmu_cpu_starting,0x328,ctx->r12 + 0x1338,"MOV qword ptr [R12 + 0x1338],RAX",write other [TODO]
intel_pmu_cpu_starting,0x33d,ctx->r12 + 0x12f8,"MOV qword ptr [R12 + 0x12f8],RDX",write other [TODO]
intel_pmu_cpu_starting,0x345,ctx->r12 + 0x1340,"MOV qword ptr [R12 + 0x1340],RAX",write other [TODO]
intel_pmu_cpu_starting,0x35b,ctx->r12 + 0x1300,"MOV dword ptr [R12 + 0x1300],0x1",write other [TODO]
FUN_ffffffff8100e965,0x12,ctx->rax + 0x1348,"MOV qword ptr [RAX + 0x1348],R15",write other [TODO]
FUN_ffffffff8100e965,0x19,0xffffffff81007720,CALL 0xffffffff81007720,direct call
handle_pmi_common,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_pmi_common,0x27,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RDI",write stack
handle_pmi_common,0x2c,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RSI",write stack
handle_pmi_common,0x42,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
handle_pmi_common,0x8e,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
handle_pmi_common,0xc8,0xffffffff820003b0,CALL 0xffffffff820003b0,direct call
handle_pmi_common,0xd9,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
handle_pmi_common,0x121,0xffffffff82000310,CALL 0xffffffff82000310,direct call
handle_pmi_common,0x138,0xffffffff82000308,CALL 0xffffffff82000308,direct call
handle_pmi_common,0x149,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
handle_pmi_common,0x152,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
handle_pmi_common,0x162,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x900",write stack
handle_pmi_common,0x172,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
handle_pmi_common,0x184,0xffffffff81275230,CALL 0xffffffff81275230,direct call
handle_pmi_common,0x1da,,RET,ret
handle_pmi_common,0x21a,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
handle_pmi_common,0x21f,0xffffffff82000b48,CALL 0xffffffff82000b48,direct call
handle_pmi_common,0x23e,0xffffffff83115d68,CALL qword ptr [0xffffffff83115d68],in-direct call
handle_pmi_common,0x265,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
handle_pmi_common,0x27c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
handle_pmi_common,0x282,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],0x0",write other [TODO]
handle_pmi_common,0x297,0xffffffff82000b58,CALL 0xffffffff82000b58,direct call
handle_pmi_common,0x2a4,0xffffffff81018a90,CALL 0xffffffff81018a90,direct call
handle_pmi_common,0x2b9,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
handle_pmi_common,0x301,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
handle_pmi_common,0x336,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDI",write stack
handle_pmi_common,0x345,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
handle_pmi_common,0x34e,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
handle_pmi_common,0x353,0xffffffff81275230,CALL 0xffffffff81275230,direct call
handle_pmi_common,0x367,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
handle_pmi_common,0x37b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_pmu_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_handle_irq,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_handle_irq,0x38,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],BL",write stack
intel_pmu_handle_irq,0x45,ctx->rbp - 0x32,"MOV byte ptr [RBP + -0x32],AL",write stack
intel_pmu_handle_irq,0x5b,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
intel_pmu_handle_irq,0x77,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
intel_pmu_handle_irq,0x7a,0xffffffff81010d60,CALL 0xffffffff81010d60,direct call
intel_pmu_handle_irq,0x94,ctx->rax + 0x210,"MOV dword ptr [RAX + 0x210],0x0",write other [TODO]
intel_pmu_handle_irq,0xa6,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_handle_irq,0xbe,0xffffffff81013910,CALL 0xffffffff81013910,direct call
intel_pmu_handle_irq,0xc6,0xffffffff81010da0,CALL 0xffffffff81010da0,direct call
intel_pmu_handle_irq,0xd3,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_handle_irq,0xec,0xffffffff81015a60,CALL 0xffffffff81015a60,direct call
intel_pmu_handle_irq,0xfe,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_handle_irq,0x113,0xffffffff8100ea90,CALL 0xffffffff8100ea90,direct call
intel_pmu_handle_irq,0x120,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_handle_irq,0x145,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
intel_pmu_handle_irq,0x14f,ctx->rbx + 0x210,"MOV dword ptr [RBX + 0x210],EAX",write other [TODO]
intel_pmu_handle_irq,0x159,0xffffffff81010d20,CALL 0xffffffff81010d20,direct call
intel_pmu_handle_irq,0x175,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
intel_pmu_handle_irq,0x189,,RET,ret
intel_pmu_handle_irq,0x1dd,0xffffffff8100dec0,CALL 0xffffffff8100dec0,direct call
intel_pmu_handle_irq,0x1e7,0xffffffff810138b0,CALL 0xffffffff810138b0,direct call
intel_pmu_handle_irq,0x220,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
intel_pmu_handle_irq,0x238,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
intel_pmu_handle_irq,0x23e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
intel_pmu_handle_irq,0x242,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
intel_pmu_handle_irq,0x259,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
intel_pmu_handle_irq,0x260,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EDX",write stack
intel_pmu_handle_irq,0x26b,ctx->rax,CALL RAX,in-direct call
intel_pmu_handle_irq,0x278,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
intel_pmu_handle_irq,0x294,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EDX",write stack
intel_pmu_handle_irq,0x29c,ctx->rax,CALL RAX,in-direct call
intel_pmu_handle_irq,0x2a9,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
intel_pmu_handle_irq,0x310,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
intel_pmu_handle_irq,0x35f,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
intel_pmu_handle_irq,0x382,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
intel_pmu_handle_irq,0x394,0xffffffff8100c210,CALL 0xffffffff8100c210,direct call
intel_pmu_handle_irq,0x3aa,0xffffffff8100c220,CALL 0xffffffff8100c220,direct call
intel_pmu_handle_irq,0x3b8,0xffffffff8100c220,CALL 0xffffffff8100c220,direct call
intel_pmu_handle_irq,0x3d4,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
intel_pmu_handle_irq,0x401,0xffffffff8100c210,CALL 0xffffffff8100c210,direct call
intel_pmu_handle_irq,0x41d,0xffffffff8100c220,CALL 0xffffffff8100c220,direct call
intel_pmu_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_disable_event,0x6f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_disable_event,0xfc,0xffffffff810138b0,CALL 0xffffffff810138b0,direct call
intel_pmu_disable_event,0x101,0xffffffff81013910,CALL 0xffffffff81013910,direct call
intel_pmu_disable_event,0x10a,,RET,ret
intel_pmu_disable_event,0x1a0,ctx->rax,CALL RAX,in-direct call
intel_pmu_disable_event,0x1ad,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_disable_event,0x1bb,0xffffffff81013ea0,CALL 0xffffffff81013ea0,direct call
FUN_ffffffff8100f2d6,0x4,,RET,ret
intel_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_enable_event,0xc4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_enable_event,0x1e2,ctx->rdi + 0x980,"MOV qword ptr [RDI + 0x980],RDX",write other [TODO]
intel_pmu_enable_event,0x1f1,,RET,ret
intel_pmu_enable_event,0x208,0xffffffff81013840,CALL 0xffffffff81013840,direct call
intel_pmu_enable_event,0x215,,RET,ret
intel_pmu_enable_event,0x2e5,ctx->rax,CALL RAX,in-direct call
intel_pmu_enable_event,0x2f8,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_enable_event,0x310,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_enable_event,0x32b,0xffffffff81013c40,CALL 0xffffffff81013c40,direct call
FUN_ffffffff8100f4da,0x8,,RET,ret
intel_pmu_save_and_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_save_and_restart,0xe,0xffffffff82000310,CALL 0xffffffff82000310,direct call
intel_pmu_save_and_restart,0x21,0xffffffff82000308,CALL 0xffffffff82000308,direct call
intel_pmu_save_and_restart,0x2b,,RET,ret
intel_pmu_save_and_restart,0x39,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_save_and_restart,0x3f,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],0x0",write other [TODO]
intel_pmu_save_and_restart,0x4e,0xffffffff82000308,CALL 0xffffffff82000308,direct call
intel_pmu_save_and_restart,0x58,,RET,ret
x86_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_get_event_constraints,0x4d,,RET,ret
x86_get_event_constraints,0x58,,RET,ret
intel_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_get_event_constraints,0x61,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
intel_get_event_constraints,0x6e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
intel_get_event_constraints,0x72,0xffffffff83115c70,CALL qword ptr [0xffffffff83115c70],in-direct call
intel_get_event_constraints,0xb2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
intel_get_event_constraints,0xb6,0xffffffff8100c6b0,CALL 0xffffffff8100c6b0,direct call
intel_get_event_constraints,0xf6,ctx->rbx + 0x19c,"MOV dword ptr [RBX + 0x19c],0x0",write other [TODO]
intel_get_event_constraints,0x10f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
intel_get_event_constraints,0x113,0xffffffff81013af0,CALL 0xffffffff81013af0,direct call
intel_get_event_constraints,0x12d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
intel_get_event_constraints,0x131,0xffffffff8100f7d0,CALL 0xffffffff8100f7d0,direct call
intel_get_event_constraints,0x173,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
intel_get_event_constraints,0x17b,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],EAX",write other [TODO]
intel_get_event_constraints,0x19d,,RET,ret
intel_get_event_constraints,0x1e3,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
intel_get_event_constraints,0x1eb,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
intel_get_event_constraints,0x1f4,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
intel_get_event_constraints,0x1fd,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RCX",write other [TODO]
intel_get_event_constraints,0x209,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RCX",write other [TODO]
intel_get_event_constraints,0x20d,ctx->rax + 0x20,"MOV dword ptr [RAX + 0x20],EDI",write other [TODO]
intel_get_event_constraints,0x298,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],R10D",write other [TODO]
intel_get_event_constraints,0x2e5,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
intel_get_event_constraints,0x2e9,0xffffffff8100c6b0,CALL 0xffffffff8100c6b0,direct call
intel_get_event_constraints,0x31b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
intel_get_event_constraints,0x31f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_get_event_constraints,0x323,0xffffffff8100c6b0,CALL 0xffffffff8100c6b0,direct call
intel_get_event_constraints,0x359,ctx->rbx + 0x18c,"MOV dword ptr [RBX + 0x18c],EAX",write other [TODO]
intel_get_event_constraints,0x36a,ctx->r13 + 0x928,"MOV dword ptr [R13 + 0x928],R8D",write other [TODO]
intel_get_event_constraints,0x387,ctx->wordctx->ptrctx->rsi + ctx->rax * 0x2 + 0xc,"MOV word ptr [RSI + RAX*0x2 + 0xc],DX",write other [TODO]
hsw_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hsw_get_event_constraints,0xd,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
hsw_get_event_constraints,0x35,,RET,ret
tnt_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tnt_get_event_constraints,0xd,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
tnt_get_event_constraints,0x5b,,RET,ret
glp_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
glp_get_event_constraints,0x1d,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
glp_get_event_constraints,0x23,,RET,ret
glp_get_event_constraints,0x2b,,RET,ret
icl_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icl_get_event_constraints,0x49,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
icl_get_event_constraints,0x71,,RET,ret
tfa_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tfa_get_event_constraints,0x1a,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
tfa_get_event_constraints,0x4c,,RET,ret
tfa_get_event_constraints,0x77,ctx->rdx,"MOV qword ptr [RDX],RSI",write other [TODO]
tfa_get_event_constraints,0x7e,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RSI",write other [TODO]
tfa_get_event_constraints,0x86,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RSI",write other [TODO]
tfa_get_event_constraints,0x8e,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],RSI",write other [TODO]
tfa_get_event_constraints,0x96,ctx->rdx + 0x20,"MOV qword ptr [RDX + 0x20],RAX",write other [TODO]
tfa_get_event_constraints,0x9d,ctx->rdx + 0x20,"MOV dword ptr [RDX + 0x20],ECX",write other [TODO]
tfa_get_event_constraints,0xae,,RET,ret
spr_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_get_event_constraints,0x49,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
spr_get_event_constraints,0x75,,RET,ret
spr_get_event_constraints,0xc0,,RET,ret
adl_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_get_event_constraints,0x32,,RET,ret
adl_get_event_constraints,0x33,0xffffffff8100fe10,CALL 0xffffffff8100fe10,direct call
adl_get_event_constraints,0x3d,,RET,ret
adl_get_event_constraints,0x3e,0xffffffff8100f860,CALL 0xffffffff8100f860,direct call
intel_cpuc_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_cpuc_prepare,0x1a,ctx->rdi + 0x978,"MOV dword ptr [RDI + 0x978],EAX",write other [TODO]
intel_cpuc_prepare,0x56,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
intel_cpuc_prepare,0x64,ctx->rax,"MOV dword ptr [RAX],0x0",write other [TODO]
intel_cpuc_prepare,0x6a,ctx->rax + 0x20,"MOV dword ptr [RAX + 0x20],0x0",write other [TODO]
intel_cpuc_prepare,0x71,ctx->rax + 0x40,"MOV dword ptr [RAX + 0x40],0x0",write other [TODO]
intel_cpuc_prepare,0x78,ctx->rax + 0x60,"MOV dword ptr [RAX + 0x60],0x0",write other [TODO]
intel_cpuc_prepare,0x7f,ctx->rax + 0x80,"MOV dword ptr [RAX + 0x80],0x0",write other [TODO]
intel_cpuc_prepare,0x89,ctx->rax + 0xa4,"MOV dword ptr [RAX + 0xa4],0xffffffff",write other [TODO]
intel_cpuc_prepare,0x93,ctx->rbx + 0x12e8,"MOV qword ptr [RBX + 0x12e8],RAX",write other [TODO]
intel_cpuc_prepare,0xb4,,RET,ret
intel_cpuc_prepare,0xdb,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
intel_cpuc_prepare,0xe0,ctx->rbx + 0x12f0,"MOV qword ptr [RBX + 0x12f0],RAX",write other [TODO]
intel_cpuc_prepare,0x120,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
intel_cpuc_prepare,0x12a,ctx->rax,"MOV dword ptr [RAX],0x0",write other [TODO]
intel_cpuc_prepare,0x130,ctx->rax + 0x214,"MOV dword ptr [RAX + 0x214],0xffffffff",write other [TODO]
intel_cpuc_prepare,0x13a,ctx->rbx + 0x12f8,"MOV qword ptr [RBX + 0x12f8],RAX",write other [TODO]
intel_cpuc_prepare,0x144,ctx->rbx + 0x1300,"MOV dword ptr [RBX + 0x1300],0x0",write other [TODO]
intel_cpuc_prepare,0x154,,RET,ret
intel_cpuc_prepare,0x168,ctx->rbx + 0x12f8,"MOV qword ptr [RBX + 0x12f8],0x0",write other [TODO]
intel_cpuc_prepare,0x17a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_cpuc_prepare,0x17f,ctx->rbx + 0x12f0,"MOV qword ptr [RBX + 0x12f0],0x0",write other [TODO]
intel_cpuc_prepare,0x197,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_cpuc_prepare,0x19c,ctx->rbx + 0x12e8,"MOV qword ptr [RBX + 0x12e8],0x0",write other [TODO]
intel_cpuc_prepare,0x1ac,ctx->rbx + 0x12e8,"MOV qword ptr [RBX + 0x12e8],0x0",write other [TODO]
intel_pmu_cpu_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_cpu_prepare,0x21,0xffffffff8100ff70,CALL 0xffffffff8100ff70,direct call
intel_pmu_cpu_prepare,0x27,,RET,ret
intel_cpuc_finish,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_cpuc_finish,0x2b,ctx->rbx + 0x12e8,"MOV qword ptr [RBX + 0x12e8],0x0",write other [TODO]
intel_cpuc_finish,0x54,ctx->rbx + 0x12f8,"MOV qword ptr [RBX + 0x12f8],0x0",write other [TODO]
intel_cpuc_finish,0x66,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_cpuc_finish,0x6b,ctx->rbx + 0x12f0,"MOV qword ptr [RBX + 0x12f0],0x0",write other [TODO]
intel_cpuc_finish,0x7b,,RET,ret
intel_cpuc_finish,0x7c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_cpuc_finish,0x83,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_pmu_cpu_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_cpu_dead,0x27,0xffffffff81010170,CALL 0xffffffff81010170,direct call
intel_pmu_cpu_dead,0x32,,RET,ret
bts_event_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_read,0xa,,RET,ret
__bts_event_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__bts_event_start,0x23,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
__bts_event_start,0x126,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
__bts_event_start,0x129,ctx->r8 + 0x10,"MOV qword ptr [R8 + 0x10],RDX",write other [TODO]
__bts_event_start,0x131,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],R10",write other [TODO]
__bts_event_start,0x13f,ctx->r8 + 0x18,"MOV qword ptr [R8 + 0x18],RDX",write other [TODO]
__bts_event_start,0x146,ctx->rbx + 0x2000,"MOV dword ptr [RBX + 0x2000],0x2",write other [TODO]
__bts_event_start,0x150,0xffffffff81013840,CALL 0xffffffff81013840,direct call
__bts_event_start,0x15b,,RET,ret
bts_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_update,0x36,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
bts_update,0x8b,,RET,ret
bts_update,0x8c,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],R12",write other [TODO]
bts_update,0x9a,0xffffffff81276df0,CALL 0xffffffff81276df0,direct call
bts_event_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_stop,0x61,,RET,ret
bts_event_stop,0x62,ctx->rbx + 0x2000,"MOV dword ptr [RBX + 0x2000],0x0",write other [TODO]
bts_event_stop,0x6c,0xffffffff810138b0,CALL 0xffffffff810138b0,direct call
bts_event_stop,0x74,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
bts_event_stop,0x8d,0xffffffff810103e0,CALL 0xffffffff810103e0,direct call
bts_event_stop,0xa7,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
bts_event_stop,0xba,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
bts_event_stop,0xc5,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
bts_event_stop,0xd6,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
bts_event_stop,0xe8,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
bts_event_stop,0xf6,,RET,ret
bts_event_stop,0x102,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
bts_event_stop,0x10b,0xffffffff810103e0,CALL 0xffffffff810103e0,direct call
bts_event_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_del,0xe,0xffffffff81010490,CALL 0xffffffff81010490,direct call
bts_event_del,0x14,,RET,ret
bts_buffer_free_aux,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_buffer_free_aux,0x9,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
bts_buffer_free_aux,0xf,,RET,ret
bts_event_destroy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_destroy,0x9,0xffffffff81006510,CALL 0xffffffff81006510,direct call
bts_event_destroy,0x13,0xffffffff810066f0,CALL 0xffffffff810066f0,direct call
bts_event_destroy,0x19,,RET,ret
bts_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_init,0x33,0xffffffff81006630,CALL 0xffffffff81006630,direct call
bts_event_init,0x40,0xffffffff81005fd0,CALL 0xffffffff81005fd0,direct call
bts_event_init,0x49,ctx->rbx + 0x388,"MOV qword ptr [RBX + 0x388],-0x7efefa20",write other [TODO]
bts_event_init,0x5c,,RET,ret
bts_event_init,0x72,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
bts_event_init,0x83,0xffffffff81506130,CALL 0xffffffff81506130,direct call
bts_event_init,0x94,,RET,ret
bts_event_init,0x9a,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
bts_event_init,0xaf,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
bts_event_init,0xb2,0xffffffff810066f0,CALL 0xffffffff810066f0,direct call
bts_event_init,0xc2,,RET,ret
bts_event_init,0xc8,,RET,ret
bts_buffer_reset.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_buffer_reset.part.0,0xa7,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
bts_buffer_reset.part.0,0xeb,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
bts_buffer_reset.part.0,0x119,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
bts_buffer_reset.part.0,0x141,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RSI",write other [TODO]
bts_buffer_reset.part.0,0x156,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
bts_buffer_reset.part.0,0x15a,0xffffffff81277070,CALL 0xffffffff81277070,direct call
bts_buffer_reset.part.0,0x173,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],R13D",write other [TODO]
bts_buffer_reset.part.0,0x177,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],R8",write other [TODO]
bts_buffer_reset.part.0,0x19b,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],R8",write other [TODO]
bts_buffer_reset.part.0,0x1b2,,RET,ret
bts_buffer_reset.part.0,0x1db,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
bts_buffer_reset.part.0,0x1ec,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
bts_buffer_reset.part.0,0x202,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
bts_event_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_start,0x35,0xffffffff81277c70,CALL 0xffffffff81277c70,direct call
bts_event_start,0x4b,0xffffffff810106d0,CALL 0xffffffff810106d0,direct call
bts_event_start,0x61,ctx->r12 + 0x1000,"MOV qword ptr [R12 + 0x1000],RAX",write other [TODO]
bts_event_start,0x74,ctx->r12 + 0x1010,"MOV qword ptr [R12 + 0x1010],RAX",write other [TODO]
bts_event_start,0x87,ctx->r12 + 0x1018,"MOV qword ptr [R12 + 0x1018],RAX",write other [TODO]
bts_event_start,0x8f,0xffffffff81275040,CALL 0xffffffff81275040,direct call
bts_event_start,0x97,ctx->r13 + 0x1d8,"MOV dword ptr [R13 + 0x1d8],0x0",write other [TODO]
bts_event_start,0xa2,0xffffffff81010260,CALL 0xffffffff81010260,direct call
bts_event_start,0xad,,RET,ret
bts_event_start,0xb3,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
bts_event_start,0xb8,ctx->r13 + 0x1d8,"MOV dword ptr [R13 + 0x1d8],0x1",write other [TODO]
bts_event_start,0xc9,,RET,ret
bts_event_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_event_add,0x13,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],0x1",write other [TODO]
bts_event_add,0x48,,RET,ret
bts_event_add,0x53,0xffffffff810108f0,CALL 0xffffffff810108f0,direct call
bts_event_add,0x68,,RET,ret
bts_event_add,0x6e,,RET,ret
bts_buffer_setup_aux,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bts_buffer_setup_aux,0xe4,,RET,ret
bts_buffer_setup_aux,0xf8,0xffffffff812b3fa0,CALL 0xffffffff812b3fa0,direct call
bts_buffer_setup_aux,0x108,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
bts_buffer_setup_aux,0x10f,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R15D",write other [TODO]
bts_buffer_setup_aux,0x113,ctx->rax + 0x14,"MOV byte ptr [RAX + 0x14],R14B",write other [TODO]
bts_buffer_setup_aux,0x11a,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RBX",write other [TODO]
bts_buffer_setup_aux,0x137,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
bts_buffer_setup_aux,0x154,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
bts_buffer_setup_aux,0x166,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
bts_buffer_setup_aux,0x171,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
bts_buffer_setup_aux,0x1b1,ctx->rcx + 0x38,"MOV qword ptr [RCX + 0x38],RDX",write other [TODO]
bts_buffer_setup_aux,0x1b5,ctx->rcx + 0x48,"MOV qword ptr [RCX + 0x48],R10",write other [TODO]
bts_buffer_setup_aux,0x1b9,ctx->rcx + 0x50,"MOV qword ptr [RCX + 0x50],R15",write other [TODO]
bts_buffer_setup_aux,0x20e,ctx->r8 + ctx->rsi * 0x1 + 0x40,"MOV qword ptr [R8 + RSI*0x1 + 0x40],RCX",write other [TODO]
bts_buffer_setup_aux,0x270,0xffffffff812b3fa0,CALL 0xffffffff812b3fa0,direct call
bts_buffer_setup_aux,0x284,ctx->r8 + 0x8,"MOV dword ptr [R8 + 0x8],R13D",write other [TODO]
bts_buffer_setup_aux,0x295,ctx->r8 + 0xc,"MOV dword ptr [R8 + 0xc],0x0",write other [TODO]
bts_buffer_setup_aux,0x2a0,ctx->r8 + 0x14,"MOV byte ptr [R8 + 0x14],R14B",write other [TODO]
bts_buffer_setup_aux,0x2a7,ctx->r8 + 0x30,"MOV qword ptr [R8 + 0x30],RBX",write other [TODO]
bts_buffer_setup_aux,0x2ba,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
intel_bts_enable_local,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_bts_enable_local,0x2f,0xffffffff81010260,CALL 0xffffffff81010260,direct call
intel_bts_enable_local,0x35,,RET,ret
intel_bts_enable_local,0x36,,RET,ret
intel_bts_disable_local,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_bts_disable_local,0x26,ctx->rax + 0x2000,"MOV dword ptr [RAX + 0x2000],0x1",write other [TODO]
intel_bts_disable_local,0x33,0xffffffff810138b0,CALL 0xffffffff810138b0,direct call
intel_bts_disable_local,0x39,,RET,ret
intel_bts_disable_local,0x3a,,RET,ret
intel_bts_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_bts_interrupt,0x67,,RET,ret
intel_bts_interrupt,0x6f,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
intel_bts_interrupt,0x92,,RET,ret
intel_bts_interrupt,0x9a,0xffffffff810103e0,CALL 0xffffffff810103e0,direct call
intel_bts_interrupt,0xb1,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
intel_bts_interrupt,0xbc,0xffffffff81277c70,CALL 0xffffffff81277c70,direct call
intel_bts_interrupt,0xd2,0xffffffff810106d0,CALL 0xffffffff810106d0,direct call
intel_bts_interrupt,0xdb,ctx->r12 + 0x2000,"MOV dword ptr [R12 + 0x2000],0x0",write other [TODO]
intel_bts_interrupt,0xec,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
intel_bts_interrupt,0xfc,ctx->r12 + 0x2000,"MOV dword ptr [R12 + 0x2000],0x0",write other [TODO]
intel_pmu_drain_pebs_buffer,0x1a,ctx->rsp + 0x138,"MOV qword ptr [RSP + 0x138],RAX",write stack
intel_pmu_drain_pebs_buffer,0x27,0xffffffff83115d68,CALL qword ptr [0xffffffff83115d68],in-direct call
intel_pmu_drain_pebs_buffer,0x41,,RET,ret
intel_pmu_drain_pebs_buffer,0x42,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ds_clear_cea,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ds_clear_cea,0x35,0xffffffff8108cef0,CALL 0xffffffff8108cef0,direct call
ds_clear_cea,0x47,0xffffffff8108cb20,CALL 0xffffffff8108cb20,direct call
ds_clear_cea,0x5b,,RET,ret
ds_clear_cea,0x5c,0xffffffff82000810,CALL 0xffffffff82000810,direct call
ds_clear_cea,0x67,,RET,ret
ds_update_cea,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ds_update_cea,0x58,0xffffffff8108cef0,CALL 0xffffffff8108cef0,direct call
ds_update_cea,0x69,0xffffffff8108cb20,CALL 0xffffffff8108cb20,direct call
ds_update_cea,0x81,,RET,ret
ds_update_cea,0x82,0xffffffff82000810,CALL 0xffffffff82000810,direct call
ds_update_cea,0x91,,RET,ret
release_bts_buffer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_bts_buffer,0x15,,RET,ret
release_bts_buffer,0x29,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
release_bts_buffer,0x3a,0xffffffff81010f10,CALL 0xffffffff81010f10,direct call
release_bts_buffer,0x50,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
release_bts_buffer,0x55,ctx->rbx + 0x948,"MOV qword ptr [RBX + 0x948],0x0",write other [TODO]
release_bts_buffer,0x65,,RET,ret
dsfree_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dsfree_pages,0x22,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
dsfree_pages,0x28,,RET,ret
dsfree_pages,0x29,,RET,ret
release_pebs_buffer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_pebs_buffer,0x15,,RET,ret
release_pebs_buffer,0x3e,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
release_pebs_buffer,0x4e,ctx->rax + ctx->r13 * 0x1,"MOV qword ptr [RAX + R13*0x1],0x0",write other [TODO]
release_pebs_buffer,0x56,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
release_pebs_buffer,0x69,0xffffffff81010f10,CALL 0xffffffff81010f10,direct call
release_pebs_buffer,0x7c,0xffffffff81011090,CALL 0xffffffff81011090,direct call
release_pebs_buffer,0x81,ctx->rbx + 0x940,"MOV qword ptr [RBX + 0x940],0x0",write other [TODO]
release_pebs_buffer,0x94,,RET,ret
pebs_update_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pebs_update_state,0x4e,0xffffffff8126cb60,CALL 0xffffffff8126cb60,direct call
pebs_update_state,0xb5,ctx->rcx + 0x38,"MOV qword ptr [RCX + 0x38],RAX",write other [TODO]
pebs_update_state,0xbf,,RET,ret
pebs_update_state,0xf3,ctx->rbx + 0x968,"MOV qword ptr [RBX + 0x968],0x0",write other [TODO]
pebs_update_state,0xfe,ctx->rbx + 0x978,"MOV dword ptr [RBX + 0x978],0x20",write other [TODO]
pebs_update_state,0x18c,ctx->rbx + 0x968,"MOV qword ptr [RBX + 0x968],RDX",write other [TODO]
pebs_update_state,0x1e4,ctx->rdx + 0x978,"MOV dword ptr [RDX + 0x978],EAX",write other [TODO]
pebs_update_state,0x1ef,0xffffffff8126cbc0,CALL 0xffffffff8126cbc0,direct call
pebs_update_state,0x207,,RET,ret
dsalloc_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dsalloc_pages,0x40,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
dsalloc_pages,0x61,,RET,ret
intel_pmu_save_and_restart_reload.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_save_and_restart_reload.isra.0,0x4a,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
intel_pmu_save_and_restart_reload.isra.0,0x52,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],RAX",write other [TODO]
intel_pmu_save_and_restart_reload.isra.0,0x81,ctx->r12 + 0x1f8,"MOV qword ptr [R12 + 0x1f8],RAX",write other [TODO]
intel_pmu_save_and_restart_reload.isra.0,0x89,0xffffffff8126d2e0,CALL 0xffffffff8126d2e0,direct call
intel_pmu_save_and_restart_reload.isra.0,0x98,,RET,ret
get_data_src,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_data_src,0x25,0xffffffff83115d80,CALL qword ptr [0xffffffff83115d80],in-direct call
get_data_src,0x2c,,RET,ret
get_data_src,0x50,ctx->rax,"MOV RAX,qword ptr [RAX + RDX*0x8]",write other [TODO]
get_data_src,0xb1,,RET,ret
get_data_src,0xe1,,RET,ret
get_data_src,0xef,,RET,ret
get_data_src,0x133,ctx->rax,"MOV RAX,qword ptr [RAX + RDX*0x8]",write other [TODO]
get_data_src,0x16d,,RET,ret
get_data_src,0x173,,RET,ret
get_data_src,0x17a,,RET,ret
get_data_src,0x1b3,,RET,ret
get_data_src,0x1c6,,RET,ret
get_data_src,0x1c7,,RET,ret
setup_pebs_adaptive_sample_data,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_pebs_adaptive_sample_data,0x3e,ctx->rbx + 0xa8,"MOV qword ptr [RBX + 0xa8],0x0",write other [TODO]
setup_pebs_adaptive_sample_data,0x5b,ctx->rcx,"MOV qword ptr [RCX],0x100",write other [TODO]
setup_pebs_adaptive_sample_data,0x62,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x6d,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x8f,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
setup_pebs_adaptive_sample_data,0x99,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],0x8",write other [TODO]
setup_pebs_adaptive_sample_data,0xa7,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RCX",write other [TODO]
setup_pebs_adaptive_sample_data,0xba,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0xfa,ctx->wordctx->ptrctx->r12 + 0x1c,"MOV word ptr [R12 + 0x1c],AX",write other [TODO]
setup_pebs_adaptive_sample_data,0x118,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],EAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x13e,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x17f,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RDX",write other [TODO]
setup_pebs_adaptive_sample_data,0x18a,ctx->rbx + 0xa8,"MOV qword ptr [RBX + 0xa8],R8",write other [TODO]
setup_pebs_adaptive_sample_data,0x1e0,,RET,ret
setup_pebs_adaptive_sample_data,0x208,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],0x0",write other [TODO]
setup_pebs_adaptive_sample_data,0x216,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],R10",write other [TODO]
setup_pebs_adaptive_sample_data,0x229,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x24f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
setup_pebs_adaptive_sample_data,0x253,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
setup_pebs_adaptive_sample_data,0x257,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
setup_pebs_adaptive_sample_data,0x25b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
setup_pebs_adaptive_sample_data,0x25f,0xffffffff81273490,CALL 0xffffffff81273490,direct call
setup_pebs_adaptive_sample_data,0x275,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x287,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
setup_pebs_adaptive_sample_data,0x28b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
setup_pebs_adaptive_sample_data,0x28f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
setup_pebs_adaptive_sample_data,0x293,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
setup_pebs_adaptive_sample_data,0x297,0xffffffff81040f20,CALL 0xffffffff81040f20,direct call
setup_pebs_adaptive_sample_data,0x2ad,ctx->r12 + 0x58,"MOV qword ptr [R12 + 0x58],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x2cc,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x2d6,,RET,ret
setup_pebs_adaptive_sample_data,0x2de,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
setup_pebs_adaptive_sample_data,0x2e2,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
setup_pebs_adaptive_sample_data,0x2e6,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
setup_pebs_adaptive_sample_data,0x2ea,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
setup_pebs_adaptive_sample_data,0x2ee,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
setup_pebs_adaptive_sample_data,0x2f2,0xffffffff81011550,CALL 0xffffffff81011550,direct call
setup_pebs_adaptive_sample_data,0x307,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x320,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
setup_pebs_adaptive_sample_data,0x324,0xffffffff81015c50,CALL 0xffffffff81015c50,direct call
setup_pebs_adaptive_sample_data,0x33f,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],R9",write other [TODO]
setup_pebs_adaptive_sample_data,0x34d,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x355,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x35d,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x365,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x36d,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x375,ctx->rbx + 0x70,"MOV qword ptr [RBX + 0x70],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x37d,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x385,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x390,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x398,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3a0,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3a8,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3b0,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3b8,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3c3,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3ce,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
setup_pebs_adaptive_sample_data,0x3f7,0xffffffff830c7bad,"MOV byte ptr [0xffffffff830c7bad],0x1",write .data
setup_pebs_adaptive_sample_data,0x3fe,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
intel_pmu_pebs_fixup_ip,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_fixup_ip,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_pebs_fixup_ip,0x105,0xffffffff81c8c400,CALL 0xffffffff81c8c400,direct call
intel_pmu_pebs_fixup_ip,0x111,0xffffffff81c8c820,CALL 0xffffffff81c8c820,direct call
intel_pmu_pebs_fixup_ip,0x145,,RET,ret
intel_pmu_pebs_fixup_ip,0x149,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RBX",write other [TODO]
intel_pmu_pebs_fixup_ip,0x163,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],RAX",write other [TODO]
intel_pmu_pebs_fixup_ip,0x17e,0xffffffff81c8cdf0,CALL 0xffffffff81c8cdf0,direct call
intel_pmu_pebs_fixup_ip,0x190,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],RDX",write other [TODO]
intel_pmu_pebs_fixup_ip,0x1a3,ctx->rdi + 0x88,"MOV qword ptr [RDI + 0x88],RAX",write other [TODO]
intel_pmu_pebs_fixup_ip,0x1af,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
setup_pebs_fixed_sample_data,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_pebs_fixed_sample_data,0x52,ctx->rcx,"MOV qword ptr [RCX],0x100",write other [TODO]
setup_pebs_fixed_sample_data,0x59,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x64,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x8f,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
setup_pebs_fixed_sample_data,0x99,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],RCX",write other [TODO]
setup_pebs_fixed_sample_data,0xb1,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xba,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xc3,ctx->r12 + 0x58,"MOV qword ptr [R12 + 0x58],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xcc,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xd5,ctx->r12 + 0x68,"MOV qword ptr [R12 + 0x68],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xde,ctx->r12 + 0x70,"MOV qword ptr [R12 + 0x70],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xe7,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xf0,ctx->r12 + 0x98,"MOV qword ptr [R12 + 0x98],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0xfc,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x105,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x10e,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x117,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x120,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x129,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x135,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x141,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x177,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],RCX",write other [TODO]
setup_pebs_fixed_sample_data,0x182,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RSI",write other [TODO]
setup_pebs_fixed_sample_data,0x196,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x1bd,ctx->r13 + 0x30,"MOV qword ptr [R13 + 0x30],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x205,ctx->r13 + 0x28,"MOV qword ptr [R13 + 0x28],RCX",write other [TODO]
setup_pebs_fixed_sample_data,0x23e,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],R8",write other [TODO]
setup_pebs_fixed_sample_data,0x250,,RET,ret
setup_pebs_fixed_sample_data,0x264,ctx->rcx,"MOV qword ptr [RCX],0x1004100",write other [TODO]
setup_pebs_fixed_sample_data,0x26b,ctx->rcx + 0x18,"MOV qword ptr [RCX + 0x18],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x282,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
setup_pebs_fixed_sample_data,0x286,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
setup_pebs_fixed_sample_data,0x28a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
setup_pebs_fixed_sample_data,0x28e,0xffffffff81011550,CALL 0xffffffff81011550,direct call
setup_pebs_fixed_sample_data,0x2a7,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x2ba,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
setup_pebs_fixed_sample_data,0x2be,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
setup_pebs_fixed_sample_data,0x2c2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
setup_pebs_fixed_sample_data,0x2c6,0xffffffff81273490,CALL 0xffffffff81273490,direct call
setup_pebs_fixed_sample_data,0x2dc,ctx->r13 + 0x78,"MOV qword ptr [R13 + 0x78],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x2ec,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RCX",write other [TODO]
setup_pebs_fixed_sample_data,0x300,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x33d,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x34d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
setup_pebs_fixed_sample_data,0x351,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
setup_pebs_fixed_sample_data,0x358,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RCX",write other [TODO]
setup_pebs_fixed_sample_data,0x36c,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],RAX",write other [TODO]
setup_pebs_fixed_sample_data,0x374,0xffffffff81011b30,CALL 0xffffffff81011b30,direct call
setup_pebs_fixed_sample_data,0x39e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
setup_pebs_fixed_sample_data,0x3a2,0xffffffff81040f20,CALL 0xffffffff81040f20,direct call
setup_pebs_fixed_sample_data,0x3b0,ctx->r13 + 0x58,"MOV qword ptr [R13 + 0x58],RAX",write other [TODO]
intel_pmu_pebs_event_update_no_drain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_event_update_no_drain,0x32,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_pebs_event_update_no_drain,0x52,0xffffffff810114a0,CALL 0xffffffff810114a0,direct call
intel_pmu_pebs_event_update_no_drain,0x63,,RET,ret
intel_pmu_drain_pebs_nhm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_drain_pebs_nhm,0x1e,ctx->rbp - 0x1f8,"MOV qword ptr [RBP + -0x1f8],RDI",write stack
intel_pmu_drain_pebs_nhm,0x2c,ctx->rbp - 0x1b8,"MOV qword ptr [RBP + -0x1b8],RSI",write stack
intel_pmu_drain_pebs_nhm,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_drain_pebs_nhm,0x4f,ctx->rbp - 0x1c0,"MOV qword ptr [RBP + -0x1c0],RAX",write stack
intel_pmu_drain_pebs_nhm,0x86,ctx->rbp - 0x200,"MOV qword ptr [RBP + -0x200],RAX",write stack
intel_pmu_drain_pebs_nhm,0x8d,ctx->rdx + 0x28,"MOV qword ptr [RDX + 0x28],RAX",write other [TODO]
intel_pmu_drain_pebs_nhm,0xa2,ctx->rbp - 0x1d4,"MOV dword ptr [RBP + -0x1d4],ECX",write stack
intel_pmu_drain_pebs_nhm,0xac,ctx->rbp - 0x1b0,"MOV qword ptr [RBP + -0x1b0],RDX",write stack
intel_pmu_drain_pebs_nhm,0xf6,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
intel_pmu_drain_pebs_nhm,0x162,ctx->rbp - 0x1a0,"MOV qword ptr [RBP + -0x1a0],RAX",write stack
intel_pmu_drain_pebs_nhm,0x187,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],RCX",write other [TODO]
intel_pmu_drain_pebs_nhm,0x18f,ctx->rbp - 0x1a0,"MOV qword ptr [RBP + -0x1a0],RCX",write stack
intel_pmu_drain_pebs_nhm,0x1a8,0xffffffff810120b0,CALL 0xffffffff810120b0,direct call
intel_pmu_drain_pebs_nhm,0x1d1,,RET,ret
intel_pmu_drain_pebs_nhm,0x1f2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_drain_pebs_nhm,0x21d,ctx->rbp - 0x1e0,"MOV qword ptr [RBP + -0x1e0],R15",write stack
intel_pmu_drain_pebs_nhm,0x235,ctx->rbp - 0x1c8,"MOV qword ptr [RBP + -0x1c8],RAX",write stack
intel_pmu_drain_pebs_nhm,0x264,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_drain_pebs_nhm,0x269,ctx->rbp - 0x1b8,"MOV qword ptr [RBP + -0x1b8],RAX",write stack
intel_pmu_drain_pebs_nhm,0x2db,ctx->rbp - 0x1d0,"MOV dword ptr [RBP + -0x1d0],R9D",write stack
intel_pmu_drain_pebs_nhm,0x2e2,0xffffffff81274b80,CALL 0xffffffff81274b80,direct call
intel_pmu_drain_pebs_nhm,0x2ff,0xffffffff81275150,CALL 0xffffffff81275150,direct call
intel_pmu_drain_pebs_nhm,0x318,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
intel_pmu_drain_pebs_nhm,0x37a,ctx->rbp - 0x1a0,"MOV qword ptr [RBP + -0x1a0],RAX",write stack
intel_pmu_drain_pebs_nhm,0x3f8,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_drain_pebs_nhm,0x412,ctx->rbp - 0x1f0,"MOV qword ptr [RBP + -0x1f0],R11",write stack
intel_pmu_drain_pebs_nhm,0x419,ctx->rbp - 0x1e8,"MOV dword ptr [RBP + -0x1e8],R9D",write stack
intel_pmu_drain_pebs_nhm,0x42c,ctx->rbp - 0x1d0,"MOV dword ptr [RBP + -0x1d0],R10D",write stack
intel_pmu_drain_pebs_nhm,0x433,0xffffffff810114a0,CALL 0xffffffff810114a0,direct call
intel_pmu_drain_pebs_nhm,0x472,ctx->rbp - 0x1d0,"MOV qword ptr [RBP + -0x1d0],R11",write stack
intel_pmu_drain_pebs_nhm,0x479,ctx->rbp - 0x1f0,"MOV qword ptr [RBP + -0x1f0],R9",write stack
intel_pmu_drain_pebs_nhm,0x486,ctx->rbp - 0x1e8,"MOV qword ptr [RBP + -0x1e8],R13",write stack
intel_pmu_drain_pebs_nhm,0x4a7,0xffffffff81011cf0,CALL 0xffffffff81011cf0,direct call
intel_pmu_drain_pebs_nhm,0x4b9,0xffffffff81273f40,CALL 0xffffffff81273f40,direct call
intel_pmu_drain_pebs_nhm,0x508,ctx->rbp - 0x1a8,"MOV qword ptr [RBP + -0x1a8],RAX",write stack
intel_pmu_drain_pebs_nhm,0x590,0xffffffff81011cf0,CALL 0xffffffff81011cf0,direct call
intel_pmu_drain_pebs_nhm,0x5af,0xffffffff81275230,CALL 0xffffffff81275230,direct call
intel_pmu_drain_pebs_nhm,0x5c1,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
intel_pmu_drain_pebs_nhm,0x5ce,ctx->rbp - 0x1d0,"MOV dword ptr [RBP + -0x1d0],R10D",write stack
intel_pmu_drain_pebs_nhm,0x5d5,0xffffffff8100f770,CALL 0xffffffff8100f770,direct call
intel_pmu_drain_pebs_nhm,0x626,0xffffffff81011cf0,CALL 0xffffffff81011cf0,direct call
intel_pmu_drain_pebs_nhm,0x638,0xffffffff81273f40,CALL 0xffffffff81273f40,direct call
intel_pmu_drain_pebs_nhm,0x656,ctx->rbp - 0x1b0,"MOV qword ptr [RBP + -0x1b0],RAX",write stack
intel_pmu_drain_pebs_nhm,0x660,ctx->rbp - 0x1d4,"MOV dword ptr [RBP + -0x1d4],EAX",write stack
intel_pmu_drain_pebs_nhm,0x685,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_pmu_drain_pebs_icl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_drain_pebs_icl,0x1e,ctx->rbp - 0x198,"MOV qword ptr [RBP + -0x198],RDI",write stack
intel_pmu_drain_pebs_icl,0x2c,ctx->rbp - 0x160,"MOV qword ptr [RBP + -0x160],RSI",write stack
intel_pmu_drain_pebs_icl,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_drain_pebs_icl,0x54,ctx->rbp - 0x188,"MOV qword ptr [RBP + -0x188],RAX",write stack
intel_pmu_drain_pebs_icl,0x9b,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],R10",write other [TODO]
intel_pmu_drain_pebs_icl,0xaa,ctx->rbp - 0x1a0,"MOV qword ptr [RBP + -0x1a0],R10",write stack
intel_pmu_drain_pebs_icl,0xc3,ctx->rbp - 0x17c,"MOV dword ptr [RBP + -0x17c],ECX",write stack
intel_pmu_drain_pebs_icl,0xcf,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],RAX",write stack
intel_pmu_drain_pebs_icl,0x10b,ctx->rbp - 0x140,"MOV qword ptr [RBP + -0x140],RAX",write stack
intel_pmu_drain_pebs_icl,0x132,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_drain_pebs_icl,0x174,0xffffffff810120b0,CALL 0xffffffff810120b0,direct call
intel_pmu_drain_pebs_icl,0x19d,,RET,ret
intel_pmu_drain_pebs_icl,0x1ac,ctx->rbp - 0x190,"MOV qword ptr [RBP + -0x190],R15",write stack
intel_pmu_drain_pebs_icl,0x1c1,ctx->rbp - 0x158,"MOV qword ptr [RBP + -0x158],RAX",write stack
intel_pmu_drain_pebs_icl,0x1dd,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_pmu_drain_pebs_icl,0x1e2,ctx->rbp - 0x168,"MOV qword ptr [RBP + -0x168],RAX",write stack
intel_pmu_drain_pebs_icl,0x27b,ctx->rbp - 0x140,"MOV qword ptr [RBP + -0x140],RAX",write stack
intel_pmu_drain_pebs_icl,0x310,0xffffffff81011720,CALL 0xffffffff81011720,direct call
intel_pmu_drain_pebs_icl,0x32f,0xffffffff81275230,CALL 0xffffffff81275230,direct call
intel_pmu_drain_pebs_icl,0x355,ctx->rbp - 0x178,"MOV qword ptr [RBP + -0x178],R11",write stack
intel_pmu_drain_pebs_icl,0x35c,ctx->rbp - 0x170,"MOV dword ptr [RBP + -0x170],R9D",write stack
intel_pmu_drain_pebs_icl,0x36f,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],R10D",write stack
intel_pmu_drain_pebs_icl,0x376,0xffffffff810114a0,CALL 0xffffffff810114a0,direct call
intel_pmu_drain_pebs_icl,0x3b5,ctx->rbp - 0x160,"MOV qword ptr [RBP + -0x160],R11",write stack
intel_pmu_drain_pebs_icl,0x3bc,ctx->rbp - 0x178,"MOV qword ptr [RBP + -0x178],R9",write stack
intel_pmu_drain_pebs_icl,0x3c9,ctx->rbp - 0x170,"MOV qword ptr [RBP + -0x170],R13",write stack
intel_pmu_drain_pebs_icl,0x3ea,0xffffffff81011720,CALL 0xffffffff81011720,direct call
intel_pmu_drain_pebs_icl,0x3fc,0xffffffff81273f40,CALL 0xffffffff81273f40,direct call
intel_pmu_drain_pebs_icl,0x457,ctx->rbp - 0x148,"MOV qword ptr [RBP + -0x148],RAX",write stack
intel_pmu_drain_pebs_icl,0x4c9,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
intel_pmu_drain_pebs_icl,0x4df,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],R10D",write stack
intel_pmu_drain_pebs_icl,0x4e6,0xffffffff8100f770,CALL 0xffffffff8100f770,direct call
intel_pmu_drain_pebs_icl,0x537,0xffffffff81011720,CALL 0xffffffff81011720,direct call
intel_pmu_drain_pebs_icl,0x549,0xffffffff81273f40,CALL 0xffffffff81273f40,direct call
intel_pmu_drain_pebs_icl,0x5cc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_pmu_drain_pebs_core,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_drain_pebs_core,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_drain_pebs_core,0x54,ctx->rdx + 0x28,"MOV qword ptr [RDX + 0x28],R12",write other [TODO]
intel_pmu_drain_pebs_core,0x12c,ctx->rbp - 0xf8,"MOV qword ptr [RBP + -0xf8],R9",write stack
intel_pmu_drain_pebs_core,0x133,ctx->rbp - 0xf0,"MOV qword ptr [RBP + -0xf0],R11",write stack
intel_pmu_drain_pebs_core,0x146,ctx->rbp - 0xe8,"MOV dword ptr [RBP + -0xe8],R10D",write stack
intel_pmu_drain_pebs_core,0x14d,0xffffffff810114a0,CALL 0xffffffff810114a0,direct call
intel_pmu_drain_pebs_core,0x181,ctx->rsi,"MOV RSI,R11",write other [TODO]
intel_pmu_drain_pebs_core,0x190,ctx->rbp - 0xf8,"MOV qword ptr [RBP + -0xf8],R9",write stack
intel_pmu_drain_pebs_core,0x197,ctx->rbp - 0xf0,"MOV dword ptr [RBP + -0xf0],R10D",write stack
intel_pmu_drain_pebs_core,0x19e,ctx->rbp - 0xe8,"MOV qword ptr [RBP + -0xe8],R11",write stack
intel_pmu_drain_pebs_core,0x1a5,0xffffffff81011cf0,CALL 0xffffffff81011cf0,direct call
intel_pmu_drain_pebs_core,0x1b3,0xffffffff81273f40,CALL 0xffffffff81273f40,direct call
intel_pmu_drain_pebs_core,0x265,ctx->rbp - 0xe8,"MOV qword ptr [RBP + -0xe8],R11",write stack
intel_pmu_drain_pebs_core,0x26c,0xffffffff81011cf0,CALL 0xffffffff81011cf0,direct call
intel_pmu_drain_pebs_core,0x28e,0xffffffff81275230,CALL 0xffffffff81275230,direct call
intel_pmu_drain_pebs_core,0x2bb,,RET,ret
intel_pmu_drain_pebs_core,0x2c6,0xffffffff810114a0,CALL 0xffffffff810114a0,direct call
intel_pmu_drain_pebs_core,0x2d8,ctx->rbp - 0xe8,"MOV dword ptr [RBP + -0xe8],R10D",write stack
intel_pmu_drain_pebs_core,0x2df,0xffffffff8100f770,CALL 0xffffffff8100f770,direct call
intel_pmu_drain_pebs_core,0x310,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
intel_pmu_drain_pebs_core,0x349,0xffffffff81011cf0,CALL 0xffffffff81011cf0,direct call
intel_pmu_drain_pebs_core,0x357,0xffffffff81273f40,CALL 0xffffffff81273f40,direct call
intel_pmu_drain_pebs_core,0x36d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
adl_latency_data_small,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_latency_data_small,0x28,ctx->rax,"MOV RAX,qword ptr [RAX + RDX*0x8]",write other [TODO]
adl_latency_data_small,0x6f,,RET,ret
init_debug_store_on_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_debug_store_on_cpu,0x37,0xffffffff81646680,CALL 0xffffffff81646680,direct call
init_debug_store_on_cpu,0x3d,,RET,ret
init_debug_store_on_cpu,0x3e,,RET,ret
fini_debug_store_on_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fini_debug_store_on_cpu,0x2f,0xffffffff81646680,CALL 0xffffffff81646680,direct call
fini_debug_store_on_cpu,0x35,,RET,ret
fini_debug_store_on_cpu,0x36,,RET,ret
release_ds_buffers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_ds_buffers,0x5,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
release_ds_buffers,0x38,ctx->rdx + ctx->rbx * 0x1 + 0x938,"MOV qword ptr [RDX + RBX*0x1 + 0x938],0x0",write other [TODO]
release_ds_buffers,0x44,ctx->esi,"MOV ESI,ECX",write other [TODO]
release_ds_buffers,0x50,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
release_ds_buffers,0x89,0xffffffff81646680,CALL 0xffffffff81646680,direct call
release_ds_buffers,0x8e,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
release_ds_buffers,0x97,ctx->esi,"MOV ESI,ECX",write other [TODO]
release_ds_buffers,0xa3,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
release_ds_buffers,0xbe,0xffffffff810110c0,CALL 0xffffffff810110c0,direct call
release_ds_buffers,0xc6,0xffffffff81011020,CALL 0xffffffff81011020,direct call
release_ds_buffers,0xcb,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
release_ds_buffers,0xd7,ctx->esi,"MOV ESI,ECX",write other [TODO]
release_ds_buffers,0xe0,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
release_ds_buffers,0xf7,,RET,ret
release_ds_buffers,0xf8,,RET,ret
reserve_ds_buffers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reserve_ds_buffers,0x25,0xffffffff83115d58,"MOV byte ptr [0xffffffff83115d58],R13B",write .data
reserve_ds_buffers,0x46,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
reserve_ds_buffers,0x59,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
reserve_ds_buffers,0x61,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
reserve_ds_buffers,0x71,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
reserve_ds_buffers,0x90,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
reserve_ds_buffers,0xa3,ctx->rax + 0x1a000,"MOV qword ptr [RAX + 0x1a000],0x0",write other [TODO]
reserve_ds_buffers,0xb5,ctx->rax + 0x1aff8,"MOV qword ptr [RAX + 0x1aff8],0x0",write other [TODO]
reserve_ds_buffers,0xdd,ctx->rax + ctx->rsi * 0x1 + 0x938,"MOV qword ptr [RAX + RSI*0x1 + 0x938],RDX",write other [TODO]
reserve_ds_buffers,0x128,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R11",write stack
reserve_ds_buffers,0x12c,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],R10D",write stack
reserve_ds_buffers,0x130,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
reserve_ds_buffers,0x14f,0xffffffff81011430,CALL 0xffffffff81011430,direct call
reserve_ds_buffers,0x17a,ctx->r11 + 0x940,"MOV qword ptr [R11 + 0x940],R8",write other [TODO]
reserve_ds_buffers,0x184,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
reserve_ds_buffers,0x188,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
reserve_ds_buffers,0x18c,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
reserve_ds_buffers,0x1bb,ctx->r9 + 0x20,"MOV qword ptr [R9 + 0x20],RDI",write other [TODO]
reserve_ds_buffers,0x1bf,0xffffffff81010f80,CALL 0xffffffff81010f80,direct call
reserve_ds_buffers,0x1d4,ctx->r9 + 0x28,"MOV qword ptr [R9 + 0x28],RSI",write other [TODO]
reserve_ds_buffers,0x1ee,ctx->r9 + 0x30,"MOV qword ptr [R9 + 0x30],RCX",write other [TODO]
reserve_ds_buffers,0x200,0xffffffff81011090,CALL 0xffffffff81011090,direct call
reserve_ds_buffers,0x222,0xffffffff81011020,CALL 0xffffffff81011020,direct call
reserve_ds_buffers,0x23a,ctx->esi,"MOV ESI,EAX",write other [TODO]
reserve_ds_buffers,0x23c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
reserve_ds_buffers,0x2a6,0xffffffff81646680,CALL 0xffffffff81646680,direct call
reserve_ds_buffers,0x2be,ctx->esi,"MOV ESI,EAX",write other [TODO]
reserve_ds_buffers,0x2c0,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
reserve_ds_buffers,0x2ca,ctx->eax,"MOV EAX,dword ptr [0xffffffff8311b690]",write other [TODO]
reserve_ds_buffers,0x2e2,,RET,ret
reserve_ds_buffers,0x2f5,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
reserve_ds_buffers,0x2f9,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
reserve_ds_buffers,0x324,0xffffffff81011430,CALL 0xffffffff81011430,direct call
reserve_ds_buffers,0x33a,ctx->rcx + 0x948,"MOV qword ptr [RCX + 0x948],RAX",write other [TODO]
reserve_ds_buffers,0x344,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
reserve_ds_buffers,0x348,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
reserve_ds_buffers,0x34c,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
reserve_ds_buffers,0x36f,ctx->r9,"MOV qword ptr [R9],RDI",write other [TODO]
reserve_ds_buffers,0x380,0xffffffff81010f80,CALL 0xffffffff81010f80,direct call
reserve_ds_buffers,0x393,ctx->r9 + 0x8,"MOV qword ptr [R9 + 0x8],RAX",write other [TODO]
reserve_ds_buffers,0x39d,ctx->r9 + 0x10,"MOV qword ptr [R9 + 0x10],RDX",write other [TODO]
reserve_ds_buffers,0x3a1,ctx->r9 + 0x18,"MOV qword ptr [R9 + 0x18],RAX",write other [TODO]
reserve_ds_buffers,0x3c7,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R8",write stack
reserve_ds_buffers,0x3cb,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R9",write stack
reserve_ds_buffers,0x3cf,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R11",write stack
reserve_ds_buffers,0x3d3,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
reserve_ds_buffers,0x3fc,ctx->rcx + ctx->rdx * 0x1,"MOV qword ptr [RCX + RDX*0x1],RAX",write other [TODO]
reserve_ds_buffers,0x41b,0xffffffff810110c0,CALL 0xffffffff810110c0,direct call
reserve_ds_buffers,0x433,ctx->esi,"MOV ESI,EAX",write other [TODO]
reserve_ds_buffers,0x435,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
reserve_ds_buffers,0x46a,ctx->rdx + ctx->rbx * 0x1 + 0x938,"MOV qword ptr [RDX + RBX*0x1 + 0x938],0x0",write other [TODO]
reserve_ds_buffers,0x483,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
reserve_ds_buffers,0x4a0,,RET,ret
reserve_ds_buffers,0x4bb,0xffffffff83115d58,"MOV byte ptr [0xffffffff83115d58],DL",write .data
reserve_ds_buffers,0x4e1,0xffffffff830c7bae,"MOV byte ptr [0xffffffff830c7bae],0x1",write .data
reserve_ds_buffers,0x4e8,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
intel_pmu_enable_bts,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_enable_bts,0x17,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_enable_bts,0x5f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_enable_bts,0x69,,RET,ret
intel_pmu_disable_bts,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_disable_bts,0x2b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_disable_bts,0x44,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_disable_bts,0x4f,,RET,ret
intel_pmu_disable_bts,0x50,,RET,ret
intel_pmu_drain_bts_buffer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_drain_bts_buffer,0x29,ctx->rsp + 0x238,"MOV qword ptr [RSP + 0x238],RAX",write stack
intel_pmu_drain_bts_buffer,0x90,,RET,ret
intel_pmu_drain_bts_buffer,0xa9,ctx->rsp + 0x100,"MOV qword ptr [RSP + 0x100],0x100",write stack
intel_pmu_drain_bts_buffer,0xb5,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
intel_pmu_drain_bts_buffer,0xca,ctx->rsp + 0x108,"MOV qword ptr [RSP + 0x108],RAX",write stack
intel_pmu_drain_bts_buffer,0x101,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
intel_pmu_drain_bts_buffer,0x119,0xffffffff81273650,CALL 0xffffffff81273650,direct call
intel_pmu_drain_bts_buffer,0x151,0xffffffff81277560,CALL 0xffffffff81277560,direct call
intel_pmu_drain_bts_buffer,0x174,ctx->rsp + 0x148,"MOV qword ptr [RSP + 0x148],RAX",write stack
intel_pmu_drain_bts_buffer,0x195,ctx->rsp + 0x130,"MOV qword ptr [RSP + 0x130],RAX",write stack
intel_pmu_drain_bts_buffer,0x19d,0xffffffff81272bd0,CALL 0xffffffff81272bd0,direct call
intel_pmu_drain_bts_buffer,0x1b0,0xffffffff81277830,CALL 0xffffffff81277830,direct call
intel_pmu_drain_bts_buffer,0x1be,ctx->r12 + 0x30c,"MOV dword ptr [R12 + 0x30c],0x1",write other [TODO]
intel_pmu_drain_bts_buffer,0x1ca,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
intel_pmu_drain_bts_buffer,0x1da,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_pebs_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pebs_constraints,0x59,,RET,ret
intel_pebs_constraints,0x72,,RET,ret
intel_pebs_constraints,0x8b,,RET,ret
intel_pmu_pebs_sched_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_sched_task,0x37,0xffffffff81010ec0,CALL 0xffffffff81010ec0,direct call
intel_pmu_pebs_sched_task,0x3d,,RET,ret
intel_pmu_pebs_sched_task,0x3e,,RET,ret
intel_pmu_pebs_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_add,0x34,ctx->rsi + 0x958,"MOV dword ptr [RSI + 0x958],EAX",write other [TODO]
intel_pmu_pebs_add,0x5a,ctx->rsi + 0x960,"MOV dword ptr [RSI + 0x960],ECX",write other [TODO]
intel_pmu_pebs_add,0x65,0xffffffff81011160,CALL 0xffffffff81011160,direct call
intel_pmu_pebs_add,0x6b,,RET,ret
intel_pmu_pebs_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_enable,0x54,ctx->r12 + 0x950,"MOV qword ptr [R12 + 0x950],RAX",write other [TODO]
intel_pmu_pebs_enable,0x85,ctx->r12 + 0x950,"MOV qword ptr [R12 + 0x950],RAX",write other [TODO]
intel_pmu_pebs_enable,0xeb,ctx->r15 + ctx->r13 * 0x8 + 0x40,"MOV qword ptr [R15 + R13*0x8 + 0x40],RAX",write other [TODO]
intel_pmu_pebs_enable,0x135,ctx->r14 + 0x950,"MOV qword ptr [R14 + 0x950],RAX",write other [TODO]
intel_pmu_pebs_enable,0x155,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_pebs_enable,0x165,,RET,ret
intel_pmu_pebs_enable,0x174,ctx->r12 + 0x950,"MOV qword ptr [R12 + 0x950],RAX",write other [TODO]
intel_pmu_pebs_enable,0x1ad,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_pebs_enable,0x1bb,ctx->r12 + 0x970,"MOV qword ptr [R12 + 0x970],RAX",write other [TODO]
intel_pmu_pebs_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_del,0x34,ctx->rsi + 0x958,"MOV dword ptr [RSI + 0x958],EAX",write other [TODO]
intel_pmu_pebs_del,0x5a,ctx->rsi + 0x960,"MOV dword ptr [RSI + 0x960],ECX",write other [TODO]
intel_pmu_pebs_del,0x62,0xffffffff81011160,CALL 0xffffffff81011160,direct call
intel_pmu_pebs_del,0x68,,RET,ret
intel_pmu_pebs_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_disable,0x52,ctx->rbx + 0x950,"MOV qword ptr [RBX + 0x950],RAX",write other [TODO]
intel_pmu_pebs_disable,0x83,ctx->rbx + 0x950,"MOV qword ptr [RBX + 0x950],RSI",write other [TODO]
intel_pmu_pebs_disable,0xd1,,RET,ret
intel_pmu_pebs_disable,0xdc,ctx->rbx + 0x950,"MOV qword ptr [RBX + 0x950],RAX",write other [TODO]
intel_pmu_pebs_disable,0xed,ctx->rax + 0x950,"MOV qword ptr [RAX + 0x950],0x0",write other [TODO]
intel_pmu_pebs_disable,0x114,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_pebs_disable,0x128,0xffffffff81010ec0,CALL 0xffffffff81010ec0,direct call
intel_pmu_pebs_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_enable_all,0x20,,RET,ret
intel_pmu_pebs_enable_all,0x30,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_pebs_enable_all,0x37,,RET,ret
intel_pmu_pebs_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_pebs_disable_all,0x1e,,RET,ret
intel_pmu_pebs_disable_all,0x2d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_pebs_disable_all,0x34,,RET,ret
intel_pmu_auto_reload_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_auto_reload_read,0x1d,0xffffffff8126cae0,CALL 0xffffffff8126cae0,direct call
intel_pmu_auto_reload_read,0x22,0xffffffff81010ec0,CALL 0xffffffff81010ec0,direct call
intel_pmu_auto_reload_read,0x2e,0xffffffff8126cb10,CALL 0xffffffff8126cb10,direct call
intel_pmu_auto_reload_read,0x38,,RET,ret
perf_restore_debug_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_restore_debug_store,0x16,,RET,ret
perf_restore_debug_store,0x26,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
perf_restore_debug_store,0x2d,,RET,ret
knc_pmu_event_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knc_pmu_event_map,0x15,,RET,ret
cmask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cmask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cmask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
cmask_show,0x2c,,RET,ret
inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
inv_show,0x29,,RET,ret
edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
edge_show,0x29,,RET,ret
umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
umask_show,0x27,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
event_show,0x23,,RET,ret
knc_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knc_pmu_enable_event,0x2b,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
knc_pmu_enable_event,0x32,,RET,ret
knc_pmu_disable_event,0x27,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
knc_pmu_disable_event,0x2e,,RET,ret
knc_pmu_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knc_pmu_disable_all,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
knc_pmu_disable_all,0x28,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
knc_pmu_disable_all,0x33,,RET,ret
knc_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knc_pmu_enable_all,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
knc_pmu_enable_all,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
knc_pmu_enable_all,0x32,,RET,ret
knc_pmu_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knc_pmu_handle_irq,0x24,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RDI",write stack
knc_pmu_handle_irq,0x3a,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
knc_pmu_handle_irq,0x44,0xffffffff81014250,CALL 0xffffffff81014250,direct call
knc_pmu_handle_irq,0x4e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
knc_pmu_handle_irq,0x57,ctx->rsp + 0x2c,"MOV dword ptr [RSP + 0x2c],0x65",write stack
knc_pmu_handle_irq,0x71,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
knc_pmu_handle_irq,0x91,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
knc_pmu_handle_irq,0xbd,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
knc_pmu_handle_irq,0xdc,0xffffffff8100f770,CALL 0xffffffff8100f770,direct call
knc_pmu_handle_irq,0xf9,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
knc_pmu_handle_irq,0x102,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
knc_pmu_handle_irq,0x107,0xffffffff81275230,CALL 0xffffffff81275230,direct call
knc_pmu_handle_irq,0x14c,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
knc_pmu_handle_irq,0x15c,0xffffffff81007230,CALL 0xffffffff81007230,direct call
knc_pmu_handle_irq,0x190,,RET,ret
knc_pmu_handle_irq,0x193,0xffffffff81014290,CALL 0xffffffff81014290,direct call
knc_pmu_handle_irq,0x1a1,0xffffffff830c7baf,"MOV byte ptr [0xffffffff830c7baf],0x1",write .data
knc_pmu_handle_irq,0x1a8,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
knc_pmu_handle_irq,0x1b1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
x86_perf_get_lbr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_perf_get_lbr,0x13,ctx->rdi,"MOV dword ptr [RDI],EDX",write other [TODO]
x86_perf_get_lbr,0x29,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],EDX",write other [TODO]
x86_perf_get_lbr,0x32,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EDX",write other [TODO]
x86_perf_get_lbr,0x3c,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],EAX",write other [TODO]
x86_perf_get_lbr,0x41,,RET,ret
intel_pmu_lbr_filter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_filter,0x41,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R12D",write stack
intel_pmu_lbr_filter,0x56,ctx->rbp - 0x2d,"MOV byte ptr [RBP + -0x2d],0x0",write stack
FUN_ffffffff810145f7,-0x3b,ctx->r14,"MOV qword ptr [R14],0x0",write other [TODO]
FUN_ffffffff810145f7,-0x34,ctx->rbp - 0x2d,"MOV byte ptr [RBP + -0x2d],0x1",write stack
FUN_ffffffff810145f7,-0x27,0xffffffff81008260,CALL 0xffffffff81008260,direct call
FUN_ffffffff810145f7,-0x8,ctx->rsi + 0xa,"MOV byte ptr [RSI + 0xa],AL",write other [TODO]
FUN_ffffffff810145f7,0x16,0xffffffff81008220,CALL 0xffffffff81008220,direct call
FUN_ffffffff810145f7,0x3f,,RET,ret
FUN_ffffffff810145f7,0x9c,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDI",write other [TODO]
FUN_ffffffff810145f7,0xa4,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDI",write other [TODO]
FUN_ffffffff810145f7,0xac,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
FUN_ffffffff810145f7,0xc8,ctx->r15 + 0x998,"MOV qword ptr [R15 + 0x998],RSI",write other [TODO]
FUN_ffffffff810145f7,0xe4,ctx->r15 + 0x998,"MOV qword ptr [R15 + 0x998],RSI",write other [TODO]
intel_pmu_arch_lbr_xsaves,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_xsaves,0x12,0xffffffff810463f0,CALL 0xffffffff810463f0,direct call
intel_pmu_arch_lbr_xsaves,0x18,,RET,ret
intel_pmu_arch_lbr_xrstors,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_xrstors,0x12,0xffffffff81046430,CALL 0xffffffff81046430,direct call
intel_pmu_arch_lbr_xrstors,0x18,,RET,ret
intel_pmu_arch_lbr_reset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_reset,0x16,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_arch_lbr_reset,0x1d,,RET,ret
intel_pmu_arch_lbr_save,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_save,0x42,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_arch_lbr_save,0x63,ctx->r13 + ctx->rax * 0x8,"MOV qword ptr [R13 + RAX*0x8],0x0",write other [TODO]
intel_pmu_arch_lbr_save,0x74,,RET,ret
intel_pmu_arch_lbr_save,0x75,ctx->r12,"MOV qword ptr [R12],RDX",write other [TODO]
intel_pmu_arch_lbr_save,0x81,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_arch_lbr_save,0x87,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
intel_pmu_arch_lbr_save,0x94,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_arch_lbr_save,0x9a,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
intel_pmu_arch_lbr_save,0xb2,,RET,ret
intel_pmu_arch_lbr_save,0xbb,,RET,ret
intel_pmu_store_lbr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_store_lbr,0x1f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
intel_pmu_store_lbr,0x2b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
intel_pmu_store_lbr,0x1f4,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
FUN_ffffffff810148a2,0x47,ctx->rsi + 0x9b8,"MOV byte ptr [RSI + 0x9b8],DL",write other [TODO]
FUN_ffffffff81014911,-0xac,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
FUN_ffffffff81014911,-0x8b,ctx->r12,"MOV qword ptr [R12],RBX",write other [TODO]
FUN_ffffffff81014911,-0x83,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RBX",write other [TODO]
FUN_ffffffff81014911,0x1a,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EDX",write other [TODO]
FUN_ffffffff81014911,0x4d,ctx->rcx + 0xa,"MOV byte ptr [RCX + 0xa],AL",write other [TODO]
FUN_ffffffff81014911,0x77,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81014911,0x8a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
FUN_ffffffff81014911,0x92,ctx->r13 + 0x998,"MOV qword ptr [R13 + 0x998],RAX",write other [TODO]
FUN_ffffffff81014911,0xa7,,RET,ret
FUN_ffffffff81014911,0xce,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81014911,0xd7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
FUN_ffffffff81014911,0xe1,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_arch_lbr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_read,0xb,0xffffffff81014810,CALL 0xffffffff81014810,direct call
intel_pmu_arch_lbr_read,0x11,,RET,ret
intel_pmu_arch_lbr_read_xsave,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_read_xsave,0x24,0xffffffff810463f0,CALL 0xffffffff810463f0,direct call
intel_pmu_arch_lbr_read_xsave,0x33,0xffffffff81014810,CALL 0xffffffff81014810,direct call
intel_pmu_arch_lbr_read_xsave,0x3c,,RET,ret
intel_pmu_arch_lbr_read_xsave,0x3f,0xffffffff81014810,CALL 0xffffffff81014810,direct call
intel_pmu_arch_lbr_read_xsave,0x48,,RET,ret
intel_pmu_arch_lbr_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_arch_lbr_restore,0x4f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_arch_lbr_restore,0x68,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_arch_lbr_restore,0x81,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_arch_lbr_restore,0xaf,,RET,ret
intel_pmu_arch_lbr_restore,0xc7,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_reset_32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_reset_32,0x2a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_reset_32,0x41,,RET,ret
intel_pmu_lbr_reset_32,0x42,,RET,ret
intel_pmu_lbr_reset_64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_reset_64,0x39,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_reset_64,0x4e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_reset_64,0x6c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_reset_64,0x83,,RET,ret
intel_pmu_lbr_reset_64,0x84,,RET,ret
intel_pmu_lbr_reset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_reset,0x23,0xffffffff83115dd0,CALL qword ptr [0xffffffff83115dd0],in-direct call
intel_pmu_lbr_reset,0x29,ctx->rbx + 0xcb8,"MOV qword ptr [RBX + 0xcb8],0x0",write other [TODO]
intel_pmu_lbr_reset,0x34,ctx->rbx + 0xcc0,"MOV dword ptr [RBX + 0xcc0],0x0",write other [TODO]
FUN_ffffffff81014c89,-0x1,,RET,ret
FUN_ffffffff81014c89,0x14,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81014c89,0x1f,,RET,ret
lbr_from_signext_quirk_wr,0x5,,RET,ret
intel_pmu_lbr_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_restore,0x31,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
intel_pmu_lbr_restore,0x43,ctx->rbp - 0x2d,"MOV byte ptr [RBP + -0x2d],AL",write stack
intel_pmu_lbr_restore,0x4a,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
intel_pmu_lbr_restore,0x4d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
intel_pmu_lbr_restore,0x94,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0xb5,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0xd4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0xf4,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R14",write stack
intel_pmu_lbr_restore,0x127,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0x13b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0x154,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0x17f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0x1a1,,RET,ret
intel_pmu_lbr_restore,0x1cd,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_restore,0x1e1,,RET,ret
intel_pmu_lbr_save,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_save,0x1d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
intel_pmu_lbr_save,0x2f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
intel_pmu_lbr_save,0x3d,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],AL",write stack
intel_pmu_lbr_save,0x4a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_save,0x56,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
intel_pmu_lbr_save,0x7b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_save,0x92,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
intel_pmu_lbr_save,0x96,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],ESI",write other [TODO]
intel_pmu_lbr_save,0xb5,,RET,ret
intel_pmu_lbr_save,0xd9,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RDX",write other [TODO]
intel_pmu_lbr_save,0xe4,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_save,0xee,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
intel_pmu_lbr_save,0x110,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_save,0x116,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
intel_pmu_lbr_save,0x122,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_save,0x12c,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
intel_pmu_lbr_save,0x13d,,RET,ret
intel_pmu_lbr_swap_task_ctx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_swap_task_ctx,0x17,ctx->rdi + 0xf8,"MOV qword ptr [RDI + 0xf8],RDX",write other [TODO]
intel_pmu_lbr_swap_task_ctx,0x1e,ctx->rsi + 0xf8,"MOV qword ptr [RSI + 0xf8],RAX",write other [TODO]
FUN_ffffffff81015063,0x2,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
FUN_ffffffff81015070,-0x1,,RET,ret
FUN_ffffffff81015070,0x4,ctx->rdx,"MOV dword ptr [RDX],ECX",write other [TODO]
intel_pmu_lbr_sched_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81015105,0x0,ctx->r12 + 0x4,"MOV dword ptr [R12 + 0x4],0x0",write other [TODO]
FUN_ffffffff81015105,0xd,,RET,ret
FUN_ffffffff81015154,-0x1d,0xffffffff83115de0,CALL qword ptr [0xffffffff83115de0],in-direct call
FUN_ffffffff8101515b,-0x43,0xffffffff81014c40,CALL 0xffffffff81014c40,direct call
FUN_ffffffff8101515b,-0x3a,,RET,ret
FUN_ffffffff81015162,0x5,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],0x1",write other [TODO]
FUN_ffffffff81015162,0xc,ctx->rbx + 0xcb8,"MOV qword ptr [RBX + 0xcb8],R12",write other [TODO]
FUN_ffffffff8101517a,0x8,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EAX",write other [TODO]
FUN_ffffffff8101517a,0xd,ctx->rbx + 0xcc0,"MOV dword ptr [RBX + 0xcc0],EAX",write other [TODO]
FUN_ffffffff810151d8,-0xde,0xffffffff83115de8,CALL qword ptr [0xffffffff83115de8],in-direct call
FUN_ffffffff810151d8,0xb,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_add,0x35,ctx->r12 + 0xcc4,"MOV dword ptr [R12 + 0xcc4],0x1",write other [TODO]
intel_pmu_lbr_add,0x4a,ctx->r12 + 0xcb0,"MOV qword ptr [R12 + 0xcb0],RCX",write other [TODO]
FUN_ffffffff810152e9,-0x43,0xffffffff8126cbc0,CALL 0xffffffff8126cbc0,direct call
FUN_ffffffff810152e9,-0x33,ctx->r12 + 0x990,"MOV dword ptr [R12 + 0x990],EDX",write other [TODO]
FUN_ffffffff810152e9,-0x19,,RET,ret
FUN_ffffffff810152e9,0xe,0xffffffff81014c40,CALL 0xffffffff81014c40,direct call
FUN_ffffffff810152e9,0x17,,RET,ret
release_lbr_buffers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81015395,0x0,,RET,ret
reserve_lbr_buffers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81015436,0x0,,RET,ret
intel_pmu_lbr_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_del,0xb7,,RET,ret
FUN_ffffffff810154f9,-0x66,ctx->rax + 0xcc4,"MOV dword ptr [RAX + 0xcc4],0x0",write other [TODO]
FUN_ffffffff810154f9,-0x36,0xffffffff8126cb60,CALL 0xffffffff8126cb60,direct call
FUN_ffffffff810154f9,-0x30,,RET,ret
FUN_ffffffff810154f9,-0x20,ctx->rax + 0x994,"MOV dword ptr [RAX + 0x994],ECX",write other [TODO]
intel_pmu_lbr_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_enable_all,0x1e,,RET,ret
FUN_ffffffff8101557e,0x5,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff810155df,0x19,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81015603,-0x4c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_disable_all,0x1e,,RET,ret
FUN_ffffffff8101565d,-0x1,,RET,ret
FUN_ffffffff8101565d,0x8,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff8101565d,0x21,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pmu_lbr_read_32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_read_32,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
intel_pmu_lbr_read_32,0x31,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_read_32,0x63,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_read_32,0x79,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
intel_pmu_lbr_read_32,0x80,ctx->rbx - 0x10,"MOV qword ptr [RBX + -0x10],RAX",write other [TODO]
intel_pmu_lbr_read_32,0x94,ctx->rax + 0x998,"MOV qword ptr [RAX + 0x998],R12",write other [TODO]
intel_pmu_lbr_read_32,0x9b,ctx->rax + 0x9a0,"MOV qword ptr [RAX + 0x9a0],R13",write other [TODO]
intel_pmu_lbr_read_32,0xb0,,RET,ret
intel_pmu_lbr_read_64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_read_64,0x1f,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
intel_pmu_lbr_read_64,0x26,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
intel_pmu_lbr_read_64,0x37,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
intel_pmu_lbr_read_64,0x3b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_read_64,0x41,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
intel_pmu_lbr_read_64,0x70,ctx->rbp - 0x39,"MOV byte ptr [RBP + -0x39],AL",write stack
intel_pmu_lbr_read_64,0x73,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
intel_pmu_lbr_read_64,0x8f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RBX",write stack
intel_pmu_lbr_read_64,0xd7,ctx->rcx,"MOV qword ptr [RCX],RBX",write other [TODO]
intel_pmu_lbr_read_64,0xda,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
intel_pmu_lbr_read_64,0x109,ctx->rcx + 0x10,"MOV qword ptr [RCX + 0x10],RAX",write other [TODO]
intel_pmu_lbr_read_64,0x12e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_read_64,0x145,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_read_64,0x14e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_lbr_read_64,0x22d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_lbr_read_64,0x252,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_read_64,0x28c,ctx->rbx + 0x998,"MOV qword ptr [RBX + 0x998],RAX",write other [TODO]
intel_pmu_lbr_read_64,0x29a,ctx->rax + 0x9a0,"MOV qword ptr [RAX + 0x9a0],RBX",write other [TODO]
intel_pmu_lbr_read_64,0x2af,,RET,ret
intel_pmu_lbr_read_64,0x2d2,ctx->rbp - 0x39,"MOV byte ptr [RBP + -0x39],0x0",write stack
intel_pmu_lbr_read_64,0x2d6,ctx->rbp - 0x58,"MOV byte ptr [RBP + -0x58],0x0",write stack
intel_pmu_lbr_read_64,0x2fe,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_pmu_lbr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_read,0x2b,,RET,ret
intel_pmu_lbr_read,0x48,0xffffffff83115dd8,CALL qword ptr [0xffffffff83115dd8],in-direct call
intel_pmu_lbr_read,0x51,0xffffffff810144e0,CALL 0xffffffff810144e0,direct call
intel_pmu_lbr_read,0x5b,,RET,ret
intel_pmu_setup_lbr_filter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_setup_lbr_filter,0xba,ctx->r8 + 0x1b0,"MOV dword ptr [R8 + 0x1b0],EAX",write other [TODO]
intel_pmu_setup_lbr_filter,0xee,ctx->r8 + 0x1b8,"MOV dword ptr [R8 + 0x1b8],0x2",write other [TODO]
intel_pmu_setup_lbr_filter,0x166,,RET,ret
intel_pmu_setup_lbr_filter,0x186,,RET,ret
FUN_ffffffff81015bd5,0x13,ctx->r8 + 0x1a8,"MOV qword ptr [R8 + 0x1a8],RAX",write other [TODO]
FUN_ffffffff81015bd5,0x26,,RET,ret
FUN_ffffffff81015bd5,0x60,ctx->r8 + 0x1a8,"MOV qword ptr [R8 + 0x1a8],RAX",write other [TODO]
intel_pmu_store_pebs_lbrs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81015c9c,-0x21,ctx->r12 + 0x9a0,"MOV qword ptr [R12 + 0x9a0],RAX",write other [TODO]
FUN_ffffffff81015c9c,-0x13,0xffffffff81014810,CALL 0xffffffff81014810,direct call
FUN_ffffffff81015c9c,-0xb,0xffffffff810144e0,CALL 0xffffffff810144e0,direct call
FUN_ffffffff81015c9c,-0x1,,RET,ret
FUN_ffffffff81015c9c,0x1f,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_pmu_lbr_init_hsw,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_init_hsw,0x17,0xffffffff83115db0,"MOV dword ptr [0xffffffff83115db0],0x10",write .data
intel_pmu_lbr_init_hsw,0x25,0xffffffff83115da0,"MOV qword ptr [0xffffffff83115da0],RAX",write .data
intel_pmu_lbr_init_hsw,0x2c,0xffffffff83115da8,"MOV dword ptr [0xffffffff83115da8],0x6c0",write .data
intel_pmu_lbr_init_hsw,0x36,0xffffffff83115db8,"MOV qword ptr [0xffffffff83115db8],0x3ff",write .data
intel_pmu_lbr_init_hsw,0x41,0xffffffff83115dc0,"MOV qword ptr [0xffffffff83115dc0],-0x7ddfcc60",write .data
intel_pmu_lbr_init_hsw,0x4c,0xffffffff81006e30,CALL 0xffffffff81006e30,direct call
intel_pmu_lbr_init_hsw,0x67,0xffffffff812b2f30,CALL 0xffffffff812b2f30,direct call
intel_pmu_lbr_init_hsw,0x6c,ctx->rbx + 0xd8,"MOV qword ptr [RBX + 0xd8],RAX",write other [TODO]
intel_pmu_lbr_init_hsw,0x78,,RET,ret
intel_pmu_lbr_init_knl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_init_knl,0x10,0xffffffff83115da0,"MOV qword ptr [0xffffffff83115da0],RAX",write .data
intel_pmu_lbr_init_knl,0x1e,0xffffffff83115db0,"MOV dword ptr [0xffffffff83115db0],0x8",write .data
intel_pmu_lbr_init_knl,0x28,0xffffffff83115da8,"MOV dword ptr [0xffffffff83115da8],0x6c0",write .data
intel_pmu_lbr_init_knl,0x37,0xffffffff83115db8,"MOV qword ptr [0xffffffff83115db8],0x3ff",write .data
intel_pmu_lbr_init_knl,0x45,0xffffffff83115dc0,"MOV qword ptr [0xffffffff83115dc0],-0x7ddfcc00",write .data
intel_pmu_lbr_init_knl,0x56,,RET,ret
intel_pmu_lbr_init_knl,0x5e,0xffffffff83115d50,"MOV byte ptr [0xffffffff83115d50],AL",write .data
intel_pmu_lbr_init_knl,0x64,,RET,ret
intel_pmu_lbr_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pmu_lbr_init,0x3c,,RET,ret
intel_pmu_lbr_init,0x44,0xffffffff8127f930,CALL 0xffffffff8127f930,direct call
intel_pmu_lbr_init,0x50,0xffffffff8127f930,CALL 0xffffffff8127f930,direct call
intel_pmu_lbr_init,0x56,,RET,ret
intel_pmu_lbr_init,0x93,0xffffffff8127f930,CALL 0xffffffff8127f930,direct call
p4_pmu_event_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_event_map,0x46,,RET,ret
ht_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ht_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
ht_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
ht_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
ht_show,0x29,,RET,ret
escr_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
escr_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
escr_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
escr_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x32362d32",write other [TODO]
escr_show,0x2c,,RET,ret
cccr_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cccr_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cccr_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa31332d",write other [TODO]
cccr_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
cccr_show,0x27,,RET,ret
p4_pmu_set_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_set_period,0x21,0xffffffff81005bf0,CALL 0xffffffff81005bf0,direct call
p4_pmu_set_period,0x3e,,RET,ret
p4_pmu_set_period,0x54,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
p4_pmu_set_period,0x63,,RET,ret
p4_pmu_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_handle_irq,0x27,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RDI",write stack
p4_pmu_handle_irq,0x3d,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
p4_pmu_handle_irq,0x65,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
p4_pmu_handle_irq,0x89,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
p4_pmu_handle_irq,0xa2,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
p4_pmu_handle_irq,0xbe,0xffffffff81004410,CALL 0xffffffff81004410,direct call
p4_pmu_handle_irq,0xe0,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
p4_pmu_handle_irq,0xe9,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
p4_pmu_handle_irq,0xee,0xffffffff82000308,CALL 0xffffffff82000308,direct call
p4_pmu_handle_irq,0x104,0xffffffff81275230,CALL 0xffffffff81275230,direct call
p4_pmu_handle_irq,0x175,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
p4_pmu_handle_irq,0x19c,,RET,ret
p4_pmu_handle_irq,0x1b5,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
p4_pmu_handle_irq,0x1c2,0xffffffff81004410,CALL 0xffffffff81004410,direct call
p4_pmu_handle_irq,0x1cc,0xffffffff81004410,CALL 0xffffffff81004410,direct call
p4_pmu_handle_irq,0x1df,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
p4_pmu_handle_irq,0x1f0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
p4_pmu_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_disable_all,0x57,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
p4_pmu_disable_all,0x71,,RET,ret
p4_pmu_disable_event,0x1c,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
p4_pmu_disable_event,0x23,,RET,ret
__p4_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__p4_pmu_enable_event,0x9a,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
__p4_pmu_enable_event,0xaf,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
__p4_pmu_enable_event,0xc1,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
__p4_pmu_enable_event,0xe1,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
__p4_pmu_enable_event,0xf1,,RET,ret
p4_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_enable_event,0x2d,0xffffffff81016270,CALL 0xffffffff81016270,direct call
p4_pmu_enable_event,0x33,,RET,ret
p4_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_enable_all,0x3c,0xffffffff81016270,CALL 0xffffffff81016270,direct call
p4_pmu_enable_all,0x53,,RET,ret
p4_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_hw_config,0x62,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
p4_hw_config,0x81,0xffffffff81006740,CALL 0xffffffff81006740,direct call
p4_hw_config,0x9d,,RET,ret
p4_hw_config,0xae,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
p4_hw_config,0xcd,ctx->r12 + 0xe0,"MOV qword ptr [R12 + 0xe0],RAX",write other [TODO]
p4_hw_config,0x123,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
p4_hw_config,0x131,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
p4_hw_config,0x14c,0xffffffff81506130,CALL 0xffffffff81506130,direct call
p4_hw_config,0x1a3,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
p4_hw_config,0x1d1,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
p4_hw_config,0x20d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_hw_config,0x219,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_hw_config,0x25f,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_hw_config,0x265,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_hw_config,0x292,0xffffffff82000810,CALL 0xffffffff82000810,direct call
p4_hw_config,0x2a1,,RET,ret
p4_hw_config,0x2aa,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_hw_config,0x2b0,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_pmu_schedule_events,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4_pmu_schedule_events,0x19,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
p4_pmu_schedule_events,0x1d,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDX",write stack
p4_pmu_schedule_events,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
p4_pmu_schedule_events,0x30,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
p4_pmu_schedule_events,0x3f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
p4_pmu_schedule_events,0x47,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
p4_pmu_schedule_events,0x4a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
p4_pmu_schedule_events,0x52,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],ESI",write stack
p4_pmu_schedule_events,0x178,ctx->r15 + 0x160,"MOV qword ptr [R15 + 0x160],RAX",write other [TODO]
p4_pmu_schedule_events,0x1bf,ctx->r15 + 0x184,"MOV dword ptr [R15 + 0x184],0xffffffff",write other [TODO]
p4_pmu_schedule_events,0x21d,ctx->r15 + 0x160,"MOV qword ptr [R15 + 0x160],RAX",write other [TODO]
p4_pmu_schedule_events,0x22d,ctx->rax + ctx->r11 * 0x4,"MOV dword ptr [RAX + R11*0x4],R12D",write other [TODO]
p4_pmu_schedule_events,0x26e,,RET,ret
p4_pmu_schedule_events,0x297,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RCX",write stack
p4_pmu_schedule_events,0x29b,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R8",write stack
p4_pmu_schedule_events,0x29f,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EDX",write stack
p4_pmu_schedule_events,0x2a2,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R11",write stack
p4_pmu_schedule_events,0x2ae,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_pmu_schedule_events,0x2b4,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_pmu_schedule_events,0x2ea,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R11",write stack
p4_pmu_schedule_events,0x2f6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_pmu_schedule_events,0x2fc,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_pmu_schedule_events,0x31c,0xffffffff830c7bb0,"MOV byte ptr [0xffffffff830c7bb0],0x1",write .data
p4_pmu_schedule_events,0x323,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
p4_pmu_schedule_events,0x346,ctx->rcx + ctx->r11 * 0x4,"MOV dword ptr [RCX + R11*0x4],EBX",write other [TODO]
p4_pmu_schedule_events,0x34f,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R11",write stack
p4_pmu_schedule_events,0x35b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_pmu_schedule_events,0x361,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_pmu_schedule_events,0x397,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R11",write stack
p4_pmu_schedule_events,0x39b,ctx->rbp - 0x68,"MOV byte ptr [RBP + -0x68],CL",write stack
p4_pmu_schedule_events,0x3a6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_pmu_schedule_events,0x3ac,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_pmu_schedule_events,0x3d1,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R8",write stack
p4_pmu_schedule_events,0x3ef,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R11",write stack
p4_pmu_schedule_events,0x3f3,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
p4_pmu_schedule_events,0x3f7,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],R8D",write stack
p4_pmu_schedule_events,0x403,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
p4_pmu_schedule_events,0x409,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
p4_pmu_schedule_events,0x45a,ctx->r15 + 0x160,"MOV qword ptr [R15 + 0x160],RAX",write other [TODO]
p4_pmu_schedule_events,0x466,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
p6_pmu_event_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p6_pmu_event_map,0x15,,RET,ret
cmask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cmask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cmask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
cmask_show,0x2c,,RET,ret
inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
inv_show,0x29,,RET,ret
pc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
pc_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
pc_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
pc_show,0x29,,RET,ret
edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
edge_show,0x29,,RET,ret
umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
umask_show,0x27,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
event_show,0x23,,RET,ret
p6_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p6_pmu_enable_event,0x1c,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
p6_pmu_enable_event,0x23,,RET,ret
p6_pmu_disable_event,0x11,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
p6_pmu_disable_event,0x18,,RET,ret
p6_pmu_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p6_pmu_disable_all,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
p6_pmu_disable_all,0x2b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
p6_pmu_disable_all,0x36,,RET,ret
p6_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p6_pmu_enable_all,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
p6_pmu_enable_all,0x2a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
p6_pmu_enable_all,0x35,,RET,ret
pt_event_addr_filters_sync,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_addr_filters_sync,0xde,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
pt_event_addr_filters_sync,0xe4,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
pt_event_addr_filters_sync,0xfe,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],RAX",write other [TODO]
pt_event_addr_filters_sync,0x10e,ctx->r14 + 0x60,"MOV dword ptr [R14 + 0x60],R11D",write other [TODO]
pt_event_addr_filters_sync,0x11c,,RET,ret
pt_event_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_read,0xa,,RET,ret
intel_pt_validate_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pt_validate_cap,0x32,,RET,ret
pt_update_head,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_update_head,0x9,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
pt_update_head,0x61,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],RSI",write other [TODO]
pt_update_head,0x66,,RET,ret
pt_update_head,0x8f,,RET,ret
pt_update_head,0x94,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],RAX",write other [TODO]
pt_update_head,0x99,,RET,ret
pt_topa_entry_for_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_topa_entry_for_page,0xfb,,RET,ret
pt_topa_entry_for_page,0x105,,RET,ret
pt_buffer_reset_offsets,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_buffer_reset_offsets,0x30,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],R12",write other [TODO]
pt_buffer_reset_offsets,0x34,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
pt_buffer_reset_offsets,0x38,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],0x0",write other [TODO]
pt_buffer_reset_offsets,0x44,,RET,ret
pt_buffer_reset_offsets,0x57,0xffffffff81016fb0,CALL 0xffffffff81016fb0,direct call
pt_buffer_reset_offsets,0x74,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RCX",write other [TODO]
pt_buffer_reset_offsets,0x7a,ctx->rbx + 0x28,"MOV dword ptr [RBX + 0x28],EAX",write other [TODO]
pt_event_destroy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_destroy,0x14,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pt_event_destroy,0x1e,ctx->rbx + 0x1c8,"MOV qword ptr [RBX + 0x1c8],0x0",write other [TODO]
pt_event_destroy,0x29,0xffffffff810066f0,CALL 0xffffffff810066f0,direct call
pt_event_destroy,0x33,,RET,ret
psb_period_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
psb_period_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
psb_period_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
psb_period_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x37322d34",write other [TODO]
psb_period_show,0x2c,,RET,ret
cyc_thresh_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cyc_thresh_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cyc_thresh_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cyc_thresh_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x32322d39",write other [TODO]
cyc_thresh_show,0x2c,,RET,ret
mtc_period_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtc_period_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
mtc_period_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
mtc_period_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x37312d34",write other [TODO]
mtc_period_show,0x2c,,RET,ret
branch_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branch_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
branch_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
branch_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
branch_show,0x29,,RET,ret
ptw_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptw_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
ptw_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
ptw_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
ptw_show,0x29,,RET,ret
noretcomp_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noretcomp_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
noretcomp_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
noretcomp_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
noretcomp_show,0x29,,RET,ret
tsc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
tsc_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
tsc_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
tsc_show,0x29,,RET,ret
mtc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
mtc_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
mtc_show,0x25,,RET,ret
fup_on_ptw_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fup_on_ptw_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
fup_on_ptw_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
fup_on_ptw_show,0x25,,RET,ret
notnt_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
notnt_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
notnt_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
notnt_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
notnt_show,0x29,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
event_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
event_show,0x29,,RET,ret
pwr_evt_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pwr_evt_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
pwr_evt_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
pwr_evt_show,0x25,,RET,ret
cyc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cyc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cyc_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
cyc_show,0x25,,RET,ret
pt_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
pt_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
pt_show,0x25,,RET,ret
pt_timing_attr_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_timing_attr_show,0x2e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
pt_timing_attr_show,0x36,,RET,ret
pt_timing_attr_show,0x3f,,RET,ret
pt_timing_attr_show,0x4e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
pt_timing_attr_show,0x56,,RET,ret
pt_buffer_free_aux,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_buffer_free_aux,0x22,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pt_buffer_free_aux,0x35,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pt_buffer_free_aux,0x3e,,RET,ret
pt_topa_dump,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_topa_dump,0xac,,RET,ret
pt_read_offset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_read_offset,0x29,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
pt_read_offset,0x2f,ctx->rbx + 0xb0,"MOV qword ptr [RBX + 0xb0],RAX",write other [TODO]
pt_read_offset,0x40,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
pt_read_offset,0x51,ctx->r12 + 0x28,"MOV dword ptr [R12 + 0x28],EAX",write other [TODO]
pt_read_offset,0x5a,,RET,ret
pt_read_offset,0x60,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
pt_read_offset,0x66,ctx->rbx + 0xa8,"MOV qword ptr [RBX + 0xa8],RAX",write other [TODO]
pt_read_offset,0x7a,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
pt_event_addr_filters_validate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_addr_filters_validate,0x40,,RET,ret
pt_event_addr_filters_validate,0x44,,RET,ret
pt_config_buffer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_config_buffer,0x6d,ctx->r12 + 0xa8,"MOV qword ptr [R12 + 0xa8],RDX",write other [TODO]
pt_config_buffer,0x80,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_config_buffer,0xa9,ctx->r12 + 0xb0,"MOV qword ptr [R12 + 0xb0],RDX",write other [TODO]
pt_config_buffer,0xbe,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_config_buffer,0xca,,RET,ret
pt_event_snapshot_aux,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_snapshot_aux,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
pt_event_snapshot_aux,0x35,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
pt_event_snapshot_aux,0x5d,0xffffffff81017650,CALL 0xffffffff81017650,direct call
pt_event_snapshot_aux,0x65,0xffffffff81016f10,CALL 0xffffffff81016f10,direct call
pt_event_snapshot_aux,0x85,0xffffffff81277850,CALL 0xffffffff81277850,direct call
pt_event_snapshot_aux,0xa8,,RET,ret
pt_event_snapshot_aux,0xdd,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
pt_event_snapshot_aux,0xf1,ctx->rax + 0x160,"MOV qword ptr [RAX + 0x160],RCX",write other [TODO]
pt_event_snapshot_aux,0x134,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_event_snapshot_aux,0x13e,ctx->rax + 0x160,"MOV qword ptr [RAX + 0x160],RBX",write other [TODO]
pt_event_snapshot_aux,0x152,0xffffffff81276df0,CALL 0xffffffff81276df0,direct call
pt_event_snapshot_aux,0x179,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pt_handle_vmx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pt_handle_vmx,0x28,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
intel_pt_handle_vmx,0x31,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
intel_pt_handle_vmx,0x3a,ctx->rdi + 0xa4,"MOV dword ptr [RDI + 0xa4],EBX",write other [TODO]
intel_pt_handle_vmx,0x4a,0xffffffff81276df0,CALL 0xffffffff81276df0,direct call
intel_pt_handle_vmx,0x65,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pt_handle_vmx,0x74,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
intel_pt_handle_vmx,0x80,,RET,ret
intel_pt_validate_hw_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pt_validate_hw_cap,0x36,,RET,ret
pt_cap_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_cap_show,0x47,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
pt_cap_show,0x4f,,RET,ret
topa_alloc.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topa_alloc.constprop.0,0x33,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
topa_alloc.constprop.0,0x56,ctx->rdx + 0xff8,"MOV dword ptr [RDX + 0xff8],0x0",write other [TODO]
topa_alloc.constprop.0,0x8b,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
topa_alloc.constprop.0,0x97,,RET,ret
topa_insert_table,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topa_insert_table,0xe,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RSI",write other [TODO]
topa_insert_table,0x12,ctx->rsi,"MOV qword ptr [RSI],RDI",write other [TODO]
topa_insert_table,0x15,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RDX",write other [TODO]
topa_insert_table,0x1c,ctx->rdx,"MOV qword ptr [RDX],RSI",write other [TODO]
topa_insert_table,0x2e,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],RDX",write other [TODO]
topa_insert_table,0x32,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RSI",write other [TODO]
topa_insert_table,0x88,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],RDX",write other [TODO]
topa_insert_table,0x8f,ctx->rax - 0x8,"MOV byte ptr [RAX + -0x8],DL",write other [TODO]
topa_insert_table,0x93,,RET,ret
topa_insert_table,0x96,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RSI",write other [TODO]
topa_insert_table,0x9b,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RSI",write other [TODO]
topa_insert_table,0x9f,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RSI",write other [TODO]
topa_insert_table,0xa3,,RET,ret
pt_buffer_reset_markers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_buffer_reset_markers,0xd7,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RSI",write other [TODO]
pt_buffer_reset_markers,0xde,0xffffffff81016fb0,CALL 0xffffffff81016fb0,direct call
pt_buffer_reset_markers,0xe3,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
pt_buffer_reset_markers,0xf2,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
pt_buffer_reset_markers,0x113,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
pt_buffer_reset_markers,0x11c,0xffffffff81016fb0,CALL 0xffffffff81016fb0,direct call
pt_buffer_reset_markers,0x121,ctx->rbx + 0x70,"MOV qword ptr [RBX + 0x70],RAX",write other [TODO]
pt_buffer_reset_markers,0x130,ctx->rbx + 0x70,"MOV qword ptr [RBX + 0x70],RAX",write other [TODO]
pt_buffer_reset_markers,0x153,,RET,ret
pt_buffer_reset_markers,0x161,,RET,ret
pt_buffer_reset_markers,0x1c8,0xffffffff81276df0,CALL 0xffffffff81276df0,direct call
pt_event_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_start,0x2e,0xffffffff81277c70,CALL 0xffffffff81277c70,direct call
pt_event_start,0x46,0xffffffff810170d0,CALL 0xffffffff810170d0,direct call
pt_event_start,0x59,0xffffffff81017c20,CALL 0xffffffff81017c20,direct call
pt_event_start,0x66,ctx->r14 + 0xa0,"MOV dword ptr [R14 + 0xa0],0x1",write other [TODO]
pt_event_start,0x74,ctx->r13 + 0x1d8,"MOV dword ptr [R13 + 0x1d8],0x0",write other [TODO]
pt_event_start,0x7f,0xffffffff81017730,CALL 0xffffffff81017730,direct call
pt_event_start,0x93,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
pt_event_start,0xa0,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pt_event_start,0xcc,0xffffffff81263430,CALL 0xffffffff81263430,direct call
pt_event_start,0xe0,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R13",write stack
pt_event_start,0xf9,ctx->edi,"MOV EDI,dword ptr [RBX + -0x7ddfc8a0]",write other [TODO]
pt_event_start,0x103,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_event_start,0x10d,ctx->r14 + ctx->rbx * 0x1 + 0x38,"MOV qword ptr [R14 + RBX*0x1 + 0x38],RAX",write other [TODO]
pt_event_start,0x120,ctx->edi,"MOV EDI,dword ptr [RBX + -0x7ddfc898]",write other [TODO]
pt_event_start,0x12a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_event_start,0x135,ctx->r14 + ctx->rbx * 0x1 + 0x40,"MOV qword ptr [R14 + RBX*0x1 + 0x40],RAX",write other [TODO]
pt_event_start,0x1dc,ctx->r13 + 0x160,"MOV qword ptr [R13 + 0x160],RSI",write other [TODO]
pt_event_start,0x1f9,0xffffffff81276df0,CALL 0xffffffff81276df0,direct call
pt_event_start,0x1fe,ctx->r13 + 0x160,"MOV qword ptr [R13 + 0x160],RBX",write other [TODO]
pt_event_start,0x213,,RET,ret
pt_event_start,0x217,0xffffffff81275040,CALL 0xffffffff81275040,direct call
pt_event_start,0x226,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_event_start,0x242,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
pt_event_start,0x247,ctx->r13 + 0x1d8,"MOV dword ptr [R13 + 0x1d8],0x1",write other [TODO]
pt_event_start,0x260,,RET,ret
pt_event_start,0x270,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_event_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_add,0x29,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],0x1",write other [TODO]
pt_event_add,0x38,,RET,ret
pt_event_add,0x3b,0xffffffff81017e00,CALL 0xffffffff81017e00,direct call
pt_event_add,0x56,,RET,ret
pt_event_add,0x5c,,RET,ret
pt_handle_status,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_handle_status,0x13,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
pt_handle_status,0x20,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
pt_handle_status,0x1c1,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
pt_event_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_stop,0x25,ctx->r12 + 0xa0,"MOV dword ptr [R12 + 0xa0],0x0",write other [TODO]
pt_event_stop,0x51,ctx->rbx + 0x160,"MOV qword ptr [RBX + 0x160],R14",write other [TODO]
pt_event_stop,0x64,ctx->rbx + 0x1d8,"MOV dword ptr [RBX + 0x1d8],0x1",write other [TODO]
pt_event_stop,0x7c,,RET,ret
pt_event_stop,0x8c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pt_event_stop,0x97,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
pt_event_stop,0xad,0xffffffff81017650,CALL 0xffffffff81017650,direct call
pt_event_stop,0xb5,0xffffffff810180e0,CALL 0xffffffff810180e0,direct call
pt_event_stop,0xbd,0xffffffff81016f10,CALL 0xffffffff81016f10,direct call
pt_event_stop,0xd5,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
pt_event_stop,0xe3,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
pt_event_stop,0xf0,,RET,ret
pt_event_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_del,0xe,0xffffffff81018300,CALL 0xffffffff81018300,direct call
pt_event_del,0x14,,RET,ret
pt_buffer_setup_aux,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_buffer_setup_aux,0x6f,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
pt_buffer_setup_aux,0x80,ctx->rax,"MOV qword ptr [RAX],RAX",write other [TODO]
pt_buffer_setup_aux,0x83,ctx->rax + 0x50,"MOV byte ptr [RAX + 0x50],R12B",write other [TODO]
pt_buffer_setup_aux,0x87,ctx->rax + 0x78,"MOV qword ptr [RAX + 0x78],R14",write other [TODO]
pt_buffer_setup_aux,0x8b,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],-0x1",write other [TODO]
pt_buffer_setup_aux,0x93,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],-0x1",write other [TODO]
pt_buffer_setup_aux,0x9b,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RAX",write other [TODO]
pt_buffer_setup_aux,0xf8,ctx->r15 + 0x51,"MOV byte ptr [R15 + 0x51],0x1",write other [TODO]
pt_buffer_setup_aux,0xfd,ctx->r15 + 0x38,"MOV qword ptr [R15 + 0x38],R12",write other [TODO]
pt_buffer_setup_aux,0x112,,RET,ret
pt_buffer_setup_aux,0x13c,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pt_buffer_setup_aux,0x14f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pt_buffer_setup_aux,0x15f,0xffffffff81017ad0,CALL 0xffffffff81017ad0,direct call
pt_buffer_setup_aux,0x16f,0xffffffff81017b70,CALL 0xffffffff81017b70,direct call
pt_buffer_setup_aux,0x181,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],R13D",write stack
pt_buffer_setup_aux,0x18a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R12",write stack
pt_buffer_setup_aux,0x1e8,ctx->r12 + ctx->rcx * 0x8 - 0xfd8,"MOV qword ptr [R12 + RCX*0x8 + -0xfd8],R14",write other [TODO]
pt_buffer_setup_aux,0x1fc,ctx->wordctx->ptrctx->r12 + ctx->rcx * 0x8 - 0xfd8,"MOV word ptr [R12 + RCX*0x8 + -0xfd8],R14W",write other [TODO]
pt_buffer_setup_aux,0x22a,ctx->r12 + 0x20,"MOV dword ptr [R12 + 0x20],EDX",write other [TODO]
pt_buffer_setup_aux,0x245,ctx->r15 + 0x38,"MOV qword ptr [R15 + 0x38],RDX",write other [TODO]
pt_buffer_setup_aux,0x2dc,ctx->r12 + 0x24,"MOV dword ptr [R12 + 0x24],EAX",write other [TODO]
pt_buffer_setup_aux,0x2e9,0xffffffff81017ad0,CALL 0xffffffff81017ad0,direct call
pt_buffer_setup_aux,0x300,0xffffffff81017b70,CALL 0xffffffff81017b70,direct call
pt_buffer_setup_aux,0x38e,ctx->rcx + ctx->rsi * 0x8 - 0xfd8,"MOV qword ptr [RCX + RSI*0x8 + -0xfd8],RAX",write other [TODO]
pt_buffer_setup_aux,0x3a9,0xffffffff81017500,CALL 0xffffffff81017500,direct call
pt_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pt_event_init,0x120,,RET,ret
pt_event_init,0x14a,0xffffffff81006630,CALL 0xffffffff81006630,direct call
pt_event_init,0x196,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
pt_event_init,0x1ba,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
pt_event_init,0x1c1,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
pt_event_init,0x1c9,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
pt_event_init,0x1d1,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RCX",write other [TODO]
pt_event_init,0x1d9,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RCX",write other [TODO]
pt_event_init,0x1e1,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RCX",write other [TODO]
pt_event_init,0x1e9,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RCX",write other [TODO]
pt_event_init,0x1f1,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],RCX",write other [TODO]
pt_event_init,0x1f9,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],RCX",write other [TODO]
pt_event_init,0x201,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RCX",write other [TODO]
pt_event_init,0x209,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RCX",write other [TODO]
pt_event_init,0x211,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RCX",write other [TODO]
pt_event_init,0x219,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RDX",write other [TODO]
pt_event_init,0x21d,ctx->rbx + 0x1c8,"MOV qword ptr [RBX + 0x1c8],RAX",write other [TODO]
pt_event_init,0x224,ctx->rbx + 0x388,"MOV qword ptr [RBX + 0x388],-0x7efe8e80",write other [TODO]
pt_event_init,0x236,,RET,ret
pt_event_init,0x279,0xffffffff810066f0,CALL 0xffffffff810066f0,direct call
intel_pt_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_pt_interrupt,0x5b,ctx->rbx + 0x160,"MOV qword ptr [RBX + 0x160],R13",write other [TODO]
intel_pt_interrupt,0x68,0xffffffff81276dd0,CALL 0xffffffff81276dd0,direct call
intel_pt_interrupt,0x78,0xffffffff81017650,CALL 0xffffffff81017650,direct call
intel_pt_interrupt,0x80,0xffffffff810180e0,CALL 0xffffffff810180e0,direct call
intel_pt_interrupt,0x88,0xffffffff81016f10,CALL 0xffffffff81016f10,direct call
intel_pt_interrupt,0x96,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
intel_pt_interrupt,0xad,,RET,ret
intel_pt_interrupt,0xb4,0xffffffff81277c70,CALL 0xffffffff81277c70,direct call
intel_pt_interrupt,0xcd,0xffffffff810170d0,CALL 0xffffffff810170d0,direct call
intel_pt_interrupt,0xd8,0xffffffff81017c20,CALL 0xffffffff81017c20,direct call
intel_pt_interrupt,0xe4,0xffffffff81017730,CALL 0xffffffff81017730,direct call
intel_pt_interrupt,0x112,0xffffffff81276df0,CALL 0xffffffff81276df0,direct call
intel_pt_interrupt,0x117,ctx->rbx + 0x160,"MOV qword ptr [RBX + 0x160],R12",write other [TODO]
intel_pt_interrupt,0x12f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_pt_interrupt,0x13f,0xffffffff81277e20,CALL 0xffffffff81277e20,direct call
intel_pt_interrupt,0x149,ctx->rbx + 0x1d8,"MOV dword ptr [RBX + 0x1d8],0x1",write other [TODO]
intel_pt_interrupt,0x167,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cpu_emergency_stop_pt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_emergency_stop_pt,0x25,0xffffffff81018300,CALL 0xffffffff81018300,direct call
cpu_emergency_stop_pt,0x2b,,RET,ret
cpu_emergency_stop_pt,0x2c,,RET,ret
is_intel_pt_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_intel_pt_event,0x1a,,RET,ret
uncore_collect_events,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_collect_events,0x49,,RET,ret
uncore_collect_events,0x51,ctx->rcx + ctx->rax * 0x8 + 0x70,"MOV qword ptr [RCX + RAX*0x8 + 0x70],RSI",write other [TODO]
uncore_collect_events,0x93,ctx->rcx + ctx->rdx * 0x8 + 0x70,"MOV qword ptr [RCX + RDX*0x8 + 0x70],RAX",write other [TODO]
uncore_pci_find_dev_pmu_from_types,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_find_dev_pmu_from_types,0xc9,,RET,ret
uncore_change_context,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_change_context,0x19,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
uncore_change_context,0x36,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
uncore_change_context,0x41,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
uncore_change_context,0x49,ctx->rdx,"MOV RDX,qword ptr [RBP + -0x48]",write other [TODO]
uncore_change_context,0x81,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0xffffffff",write other [TODO]
uncore_change_context,0x94,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
uncore_change_context,0x97,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
uncore_change_context,0x9b,0xffffffff81155570,CALL 0xffffffff81155570,direct call
uncore_change_context,0xa9,0xffffffff81270d20,CALL 0xffffffff81270d20,direct call
uncore_change_context,0xb5,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],R14D",write other [TODO]
uncore_change_context,0xe7,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],R14D",write other [TODO]
uncore_change_context,0x11e,,RET,ret
uncore_get_attr_cpumask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_get_attr_cpumask,0x6,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
uncore_get_attr_cpumask,0x1e,0xffffffff815fa2e0,CALL 0xffffffff815fa2e0,direct call
uncore_get_attr_cpumask,0x26,,RET,ret
uncore_pci_find_dev_pmu.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_find_dev_pmu.part.0,0x6f,,RET,ret
uncore_pci_find_dev_pmu.part.0,0x73,,RET,ret
uncore_alloc_box.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_alloc_box.isra.0,0x25,0xffffffff812b3fa0,CALL 0xffffffff812b3fa0,direct call
uncore_alloc_box.isra.0,0x52,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
uncore_alloc_box.isra.0,0x73,0xffffffff811552d0,CALL 0xffffffff811552d0,direct call
uncore_alloc_box.isra.0,0x78,ctx->r12,"MOV dword ptr [R12],0xffffffff",write other [TODO]
uncore_alloc_box.isra.0,0x8a,ctx->r12 + 0x178,"MOV qword ptr [R12 + 0x178],RAX",write other [TODO]
uncore_alloc_box.isra.0,0x9a,ctx->r12 + 0x1d0,"MOV qword ptr [R12 + 0x1d0],RAX",write other [TODO]
uncore_alloc_box.isra.0,0xa2,ctx->r12 + 0x1a8,"MOV qword ptr [R12 + 0x1a8],-0x7efe5940",write other [TODO]
uncore_alloc_box.isra.0,0xae,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],0xffffffff",write other [TODO]
uncore_alloc_box.isra.0,0xb7,ctx->r12 + 0x1d8,"MOV qword ptr [R12 + 0x1d8],RAX",write other [TODO]
uncore_alloc_box.isra.0,0xc8,,RET,ret
allocate_boxes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
allocate_boxes,0x16,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDI",write stack
allocate_boxes,0x1d,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],ESI",write stack
allocate_boxes,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
allocate_boxes,0x33,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
allocate_boxes,0x37,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
allocate_boxes,0x49,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
allocate_boxes,0x5c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
allocate_boxes,0x9e,ctx->rcx,"MOV RCX,qword ptr [RBP + -0x48]",write other [TODO]
allocate_boxes,0xab,0xffffffff81018fd0,CALL 0xffffffff81018fd0,direct call
allocate_boxes,0xc7,ctx->rax + 0x170,"MOV qword ptr [RAX + 0x170],RBX",write other [TODO]
allocate_boxes,0xce,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
allocate_boxes,0xd4,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
allocate_boxes,0xd8,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RSI",write other [TODO]
allocate_boxes,0xdc,ctx->rax + 0x1d0,"MOV qword ptr [RAX + 0x1d0],RDI",write other [TODO]
allocate_boxes,0xe3,ctx->rax + 0x1d8,"MOV qword ptr [RAX + 0x1d8],RCX",write other [TODO]
allocate_boxes,0x133,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDI",write other [TODO]
allocate_boxes,0x137,ctx->rdi,"MOV qword ptr [RDI],RCX",write other [TODO]
allocate_boxes,0x13a,ctx->rax + 0x1d0,"MOV qword ptr [RAX + 0x1d0],RDX",write other [TODO]
allocate_boxes,0x141,ctx->rax + 0x1d8,"MOV qword ptr [RAX + 0x1d8],RDX",write other [TODO]
allocate_boxes,0x156,ctx->rdx + ctx->r15 * 0x1,"MOV qword ptr [RDX + R15*0x1],RAX",write other [TODO]
allocate_boxes,0x15a,ctx->rcx,"MOV RCX,qword ptr [RSI + 0x1d0]",write other [TODO]
allocate_boxes,0x1a9,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RCX",write other [TODO]
allocate_boxes,0x1ad,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
allocate_boxes,0x1b0,ctx->rdi + 0x1d0,"MOV qword ptr [RDI + 0x1d0],RAX",write other [TODO]
allocate_boxes,0x1b7,ctx->rdi + 0x1d8,"MOV qword ptr [RDI + 0x1d8],RAX",write other [TODO]
allocate_boxes,0x1be,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
allocate_boxes,0x208,,RET,ret
allocate_boxes,0x209,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uncore_box_ref.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_box_ref.part.0,0x9d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
uncore_box_ref.part.0,0xa1,ctx->rax,CALL RAX,in-direct call
uncore_box_ref.part.0,0xc6,,RET,ret
uncore_event_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_event_cpu_online,0x3b,ctx->rdi,"MOV RDI,R13",write other [TODO]
uncore_event_cpu_online,0x44,0xffffffff810190a0,CALL 0xffffffff810190a0,direct call
uncore_event_cpu_online,0x51,ctx->rdi,"MOV RDI,R13",write other [TODO]
uncore_event_cpu_online,0x57,0xffffffff810192b0,CALL 0xffffffff810192b0,direct call
uncore_event_cpu_online,0x5c,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a60]",write other [TODO]
uncore_event_cpu_online,0x6b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
uncore_event_cpu_online,0x6f,0xffffffff810190a0,CALL 0xffffffff810190a0,direct call
uncore_event_cpu_online,0x74,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x30]",write other [TODO]
uncore_event_cpu_online,0x82,0xffffffff810192b0,CALL 0xffffffff810192b0,direct call
uncore_event_cpu_online,0xa6,,RET,ret
uncore_event_cpu_online,0xaf,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
uncore_event_cpu_online,0xc7,0xffffffff81601d50,CALL 0xffffffff81601d50,direct call
uncore_event_cpu_online,0xec,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a68]",write other [TODO]
uncore_event_cpu_online,0xfb,0xffffffff81018df0,CALL 0xffffffff81018df0,direct call
uncore_event_cpu_online,0x110,,RET,ret
uncore_event_cpu_online,0x111,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a60]",write other [TODO]
uncore_event_cpu_online,0x120,0xffffffff81018df0,CALL 0xffffffff81018df0,direct call
uncore_event_cpu_online,0x127,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a70]",write other [TODO]
uncore_event_cpu_online,0x136,0xffffffff81018df0,CALL 0xffffffff81018df0,direct call
uncore_event_cpu_online,0x142,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a60]",write other [TODO]
uncore_event_cpu_online,0x151,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
uncore_event_cpu_online,0x155,0xffffffff810190a0,CALL 0xffffffff810190a0,direct call
uncore_assign_events,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_assign_events,0x1c,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EDX",write stack
uncore_assign_events,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
uncore_assign_events,0x2e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
uncore_assign_events,0x55,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
uncore_assign_events,0x5b,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
uncore_assign_events,0xa1,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
uncore_assign_events,0xab,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
uncore_assign_events,0xaf,ctx->rax,CALL RAX,in-direct call
uncore_assign_events,0x12e,ctx->r15 + ctx->rax * 0x4,"MOV dword ptr [R15 + RAX*0x4],EDX",write other [TODO]
uncore_assign_events,0x1ad,ctx->rax,CALL RAX,in-direct call
uncore_assign_events,0x1dd,,RET,ret
uncore_assign_events,0x1f4,0xffffffff81005090,CALL 0xffffffff81005090,direct call
uncore_assign_events,0x229,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uncore_box_unref,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_box_unref,0x9f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
uncore_box_unref,0xa3,ctx->rax,CALL RAX,in-direct call
uncore_box_unref,0xca,,RET,ret
uncore_event_cpu_offline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_event_cpu_offline,0x2d,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a70]",write other [TODO]
uncore_event_cpu_offline,0x40,0xffffffff81019720,CALL 0xffffffff81019720,direct call
uncore_event_cpu_offline,0x45,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a60]",write other [TODO]
uncore_event_cpu_offline,0x4f,0xffffffff81019720,CALL 0xffffffff81019720,direct call
uncore_event_cpu_offline,0x5e,,RET,ret
uncore_event_cpu_offline,0x67,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uncore_event_cpu_offline,0x8e,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
uncore_event_cpu_offline,0xa3,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a70]",write other [TODO]
uncore_event_cpu_offline,0xb0,0xffffffff81018df0,CALL 0xffffffff81018df0,direct call
uncore_event_cpu_offline,0xb5,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a60]",write other [TODO]
uncore_event_cpu_offline,0xc2,0xffffffff81018df0,CALL 0xffffffff81018df0,direct call
uncore_event_cpu_offline,0xc7,ctx->rdi,"MOV RDI,qword ptr [0xffffffff82e23a68]",write other [TODO]
uncore_event_cpu_offline,0xd4,0xffffffff81018df0,CALL 0xffffffff81018df0,direct call
uncore_pci_pmu_unregister,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_pmu_unregister,0x20,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
uncore_pci_pmu_unregister,0x65,ctx->rax,CALL RAX,in-direct call
uncore_pci_pmu_unregister,0x6a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
uncore_pci_pmu_unregister,0x74,,RET,ret
uncore_pci_pmu_unregister,0x7e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
uncore_pci_pmu_unregister,0x82,0xffffffff81263f20,CALL 0xffffffff81263f20,direct call
uncore_pci_pmu_unregister,0x8b,ctx->rdi + 0x150,"MOV byte ptr [RDI + 0x150],0x0",write other [TODO]
uncore_pmu_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_enable,0x5f,ctx->rax,CALL RAX,in-direct call
uncore_pmu_enable,0x62,,RET,ret
uncore_pmu_enable,0x63,,RET,ret
uncore_pmu_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_disable,0x5f,ctx->rax,CALL RAX,in-direct call
uncore_pmu_disable,0x62,,RET,ret
uncore_pmu_disable,0x63,,RET,ret
uncore_pmu_event_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_event_start,0x3e,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],0x0",write other [TODO]
uncore_pmu_event_start,0x48,ctx->rbx + ctx->rax * 0x8 + 0x20,"MOV qword ptr [RBX + RAX*0x8 + 0x20],RDI",write other [TODO]
uncore_pmu_event_start,0x74,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
uncore_pmu_event_start,0x7d,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],RAX",write other [TODO]
uncore_pmu_event_start,0x9a,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
uncore_pmu_event_start,0xa7,,RET,ret
uncore_pmu_event_start,0xbd,ctx->rbx + 0x1d8,"MOV qword ptr [RBX + 0x1d8],RDX",write other [TODO]
uncore_pmu_event_start,0xc4,ctx->rdi + 0x70,"MOV qword ptr [RDI + 0x70],RCX",write other [TODO]
uncore_pmu_event_start,0xc8,ctx->rdi + 0x78,"MOV qword ptr [RDI + 0x78],RAX",write other [TODO]
uncore_pmu_event_start,0xcf,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
uncore_pmu_event_start,0xe7,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
uncore_pmu_event_start,0xea,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],RAX",write other [TODO]
uncore_pmu_event_start,0xf8,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EDX",write other [TODO]
uncore_pmu_event_start,0x114,0xffffffff81154f40,CALL 0xffffffff81154f40,direct call
uncore_pmu_event_start,0x11d,,RET,ret
uncore_pmu_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_event_init,0x9d,ctx->r12 + 0x27c,"MOV dword ptr [R12 + 0x27c],EAX",write other [TODO]
uncore_pmu_event_init,0xb6,ctx->r12 + 0xa0,"MOV qword ptr [R12 + 0xa0],RDI",write other [TODO]
uncore_pmu_event_init,0xbe,ctx->r12 + 0x184,"MOV dword ptr [R12 + 0x184],0xffffffff",write other [TODO]
uncore_pmu_event_init,0xca,ctx->r12 + 0x168,"MOV qword ptr [R12 + 0x168],-0x1",write other [TODO]
uncore_pmu_event_init,0xd6,ctx->r12 + 0x1a0,"MOV dword ptr [R12 + 0x1a0],0xffffffff",write other [TODO]
uncore_pmu_event_init,0xe2,ctx->r12 + 0x1b8,"MOV dword ptr [R12 + 0x1b8],0xffffffff",write other [TODO]
uncore_pmu_event_init,0x111,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
uncore_pmu_event_init,0x137,ctx->rax,CALL RAX,in-direct call
uncore_pmu_event_init,0x167,,RET,ret
uncore_pmu_event_init,0x174,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],RAX",write other [TODO]
uncore_pmu_event_init,0x1af,,RET,ret
uncore_pmu_event_init,0x1c8,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],0x0",write other [TODO]
uncore_pmu_event_init,0x1f5,0xffffffff81018fd0,CALL 0xffffffff81018fd0,direct call
uncore_pmu_event_init,0x206,ctx->rax + 0x170,"MOV qword ptr [RAX + 0x170],RBX",write other [TODO]
uncore_pmu_event_init,0x218,0xffffffff81018c50,CALL 0xffffffff81018c50,direct call
uncore_pmu_event_init,0x225,ctx->r14 + 0x8,"MOV dword ptr [R14 + 0x8],EAX",write other [TODO]
uncore_pmu_event_init,0x231,0xffffffff81018c50,CALL 0xffffffff81018c50,direct call
uncore_pmu_event_init,0x240,ctx->r14 + 0x8,"MOV dword ptr [R14 + 0x8],EAX",write other [TODO]
uncore_pmu_event_init,0x249,0xffffffff810194f0,CALL 0xffffffff810194f0,direct call
uncore_pmu_event_init,0x251,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],EAX",write stack
uncore_pmu_event_init,0x254,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
uncore_pmu_event_init,0x268,,RET,ret
uncore_pmu_event_init,0x277,ctx->r12 + 0x160,"MOV qword ptr [R12 + 0x160],0x0",write other [TODO]
uncore_pmu_event_init,0x2a0,ctx->r12 + 0x184,"MOV dword ptr [R12 + 0x184],0x9",write other [TODO]
uncore_pmu_event_init,0x2dc,ctx->r12 + 0x178,"MOV qword ptr [R12 + 0x178],RAX",write other [TODO]
uncore_pmu_event_init,0x2f2,,RET,ret
uncore_pci_remove,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_remove,0x1a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
uncore_pci_remove,0x3e,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
uncore_pci_remove,0x63,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_remove,0x83,ctx->rbx + 0x148,"MOV qword ptr [RBX + 0x148],0x0",write other [TODO]
uncore_pci_remove,0x8e,0xffffffff810198e0,CALL 0xffffffff810198e0,direct call
uncore_pci_remove,0x97,,RET,ret
uncore_pci_remove,0xba,ctx->r12 + ctx->rdx * 0x8,"MOV qword ptr [R12 + RDX*0x8],0x0",write other [TODO]
uncore_pci_remove,0xcb,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_bus_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_bus_notify,0xd,,RET,ret
uncore_pci_bus_notify,0x21,0xffffffff81018d00,CALL 0xffffffff81018d00,direct call
uncore_pci_bus_notify,0x3c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
uncore_pci_bus_notify,0x5c,ctx->rdx,"MOV RDX,qword ptr [RDX]",write other [TODO]
uncore_pci_bus_notify,0x80,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_bus_notify,0x90,0xffffffff810198e0,CALL 0xffffffff810198e0,direct call
uncore_pci_bus_notify,0xa0,,RET,ret
uncore_pci_bus_notify,0xa8,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_bus_notify,0xb5,,RET,ret
uncore_pci_sub_bus_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_sub_bus_notify,0x18,,RET,ret
uncore_pci_sub_bus_notify,0x38,0xffffffff81018f50,CALL 0xffffffff81018f50,direct call
uncore_pci_sub_bus_notify,0x53,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
uncore_pci_sub_bus_notify,0x73,ctx->rdx,"MOV RDX,qword ptr [RDX]",write other [TODO]
uncore_pci_sub_bus_notify,0x97,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_sub_bus_notify,0xa7,0xffffffff810198e0,CALL 0xffffffff810198e0,direct call
uncore_pci_sub_bus_notify,0xb7,,RET,ret
uncore_pci_sub_bus_notify,0xbf,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_sub_bus_notify,0xcc,,RET,ret
uncore_pci_sub_bus_notify,0xcd,0xffffffff81018d00,CALL 0xffffffff81018d00,direct call
uncore_pcibus_to_dieid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pcibus_to_dieid,0x16,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
uncore_pcibus_to_dieid,0x35,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
uncore_pcibus_to_dieid,0x60,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pcibus_to_dieid,0x6c,,RET,ret
uncore_die_to_segment,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_die_to_segment,0x16,0xffffffff816789a0,CALL 0xffffffff816789a0,direct call
uncore_die_to_segment,0x2a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
uncore_die_to_segment,0x4b,ctx->rdx,"MOV RDX,qword ptr [RDX]",write other [TODO]
uncore_die_to_segment,0x71,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_die_to_segment,0x8b,,RET,ret
uncore_die_to_segment,0x9f,,RET,ret
__find_pci2phy_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__find_pci2phy_map,0x25,ctx->r12,"MOV R12,qword ptr [R12]",write other [TODO]
__find_pci2phy_map,0x3c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__find_pci2phy_map,0x4a,,RET,ret
__find_pci2phy_map,0x57,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__find_pci2phy_map,0x6d,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
__find_pci2phy_map,0x7c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__find_pci2phy_map,0x92,ctx->r13 + 0x10,"MOV dword ptr [R13 + 0x10],EBX",write other [TODO]
__find_pci2phy_map,0x9d,ctx->r13 + 0x14,"MOV qword ptr [R13 + 0x14],-0x1",write other [TODO]
__find_pci2phy_map,0xa5,ctx->r13 + 0x40c,"MOV qword ptr [R13 + 0x40c],-0x1",write other [TODO]
__find_pci2phy_map,0xcc,0xffffffff82e23a58,"MOV qword ptr [0xffffffff82e23a58],R13",write .data
__find_pci2phy_map,0xd3,ctx->r13,"MOV qword ptr [R13],-0x7d1dc5b0",write other [TODO]
__find_pci2phy_map,0xdb,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
__find_pci2phy_map,0xdf,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
uncore_event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_event_show,0x17,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
uncore_event_show,0x1f,,RET,ret
uncore_pmu_to_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_to_box,0x40,,RET,ret
uncore_msr_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_msr_read_counter,0xf,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
uncore_msr_read_counter,0x16,,RET,ret
uncore_mmio_exit_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_mmio_exit_box,0x15,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
uncore_mmio_exit_box,0x1b,,RET,ret
uncore_mmio_exit_box,0x1c,,RET,ret
uncore_mmio_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_mmio_read_counter,0x5b,,RET,ret
uncore_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_get_constraint,0x51,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
uncore_get_constraint,0x7e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
uncore_get_constraint,0x94,,RET,ret
uncore_get_constraint,0xbd,ctx->rax + 0x1f8,"MOV qword ptr [RAX + 0x1f8],RDX",write other [TODO]
uncore_get_constraint,0xcc,ctx->rax + 0x200,"MOV qword ptr [RAX + 0x200],RDX",write other [TODO]
uncore_get_constraint,0xd3,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
uncore_get_constraint,0xde,ctx->r12 + 0x19c,"MOV dword ptr [R12 + 0x19c],0x1",write other [TODO]
uncore_get_constraint,0xf6,,RET,ret
uncore_put_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_put_constraint,0x2c,ctx->rsi + 0x19c,"MOV dword ptr [RSI + 0x19c],0x0",write other [TODO]
uncore_put_constraint,0x37,,RET,ret
uncore_shared_reg_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_shared_reg_config,0x27,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
uncore_shared_reg_config,0x3a,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
uncore_shared_reg_config,0x48,,RET,ret
uncore_perf_event_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_perf_event_update,0x69,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
uncore_perf_event_update,0x94,,RET,ret
uncore_pmu_event_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_event_read,0x13,0xffffffff8101a5d0,CALL 0xffffffff8101a5d0,direct call
uncore_pmu_event_read,0x19,,RET,ret
uncore_pmu_hrtimer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_hrtimer,0x3f,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
uncore_pmu_hrtimer,0x48,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
uncore_pmu_hrtimer,0x65,0xffffffff8101a5d0,CALL 0xffffffff8101a5d0,direct call
uncore_pmu_hrtimer,0xb3,0xffffffff8101a5d0,CALL 0xffffffff8101a5d0,direct call
uncore_pmu_hrtimer,0xe3,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
uncore_pmu_hrtimer,0xf3,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
uncore_pmu_hrtimer,0xff,0xffffffff81154570,CALL 0xffffffff81154570,direct call
uncore_pmu_hrtimer,0x113,,RET,ret
uncore_pmu_hrtimer,0x114,,RET,ret
uncore_pmu_event_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_event_stop,0x4b,ctx->rax + 0x20,CALL qword ptr [RAX + 0x20],in-direct call
uncore_pmu_event_stop,0x5b,ctx->r13 + ctx->rax * 0x8 + 0x20,"MOV qword ptr [R13 + RAX*0x8 + 0x20],0x0",write other [TODO]
uncore_pmu_event_stop,0x77,ctx->r12 + 0x1d8,"MOV dword ptr [R12 + 0x1d8],EAX",write other [TODO]
uncore_pmu_event_stop,0x9d,,RET,ret
uncore_pmu_event_stop,0xa6,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
uncore_pmu_event_stop,0xaa,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
uncore_pmu_event_stop,0xb7,ctx->rdi + 0x70,"MOV qword ptr [RDI + 0x70],RAX",write other [TODO]
uncore_pmu_event_stop,0xbf,ctx->rdi + 0x78,"MOV qword ptr [RDI + 0x78],RAX",write other [TODO]
uncore_pmu_event_stop,0xd0,0xffffffff8101a5d0,CALL 0xffffffff8101a5d0,direct call
uncore_pmu_event_stop,0xdb,,RET,ret
uncore_pmu_event_stop,0xe3,0xffffffff81155570,CALL 0xffffffff81155570,direct call
uncore_pmu_event_stop,0xf5,0xffffffff8101a5d0,CALL 0xffffffff8101a5d0,direct call
uncore_pmu_event_stop,0x109,,RET,ret
uncore_pmu_event_stop,0x111,0xffffffff81155570,CALL 0xffffffff81155570,direct call
uncore_pmu_event_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_event_add,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
uncore_pmu_event_add,0x50,0xffffffff81018c50,CALL 0xffffffff81018c50,direct call
uncore_pmu_event_add,0x7d,ctx->r12 + 0x1d8,"MOV dword ptr [R12 + 0x1d8],EAX",write other [TODO]
uncore_pmu_event_add,0x85,0xffffffff810194f0,CALL 0xffffffff810194f0,direct call
uncore_pmu_event_add,0xae,ctx->rdi + 0x1d8,"MOV dword ptr [RDI + 0x1d8],EAX",write other [TODO]
uncore_pmu_event_add,0xbd,0xffffffff8101a7e0,CALL 0xffffffff8101a7e0,direct call
uncore_pmu_event_add,0x13d,ctx->rdi + 0x170,"MOV qword ptr [RDI + 0x170],RSI",write other [TODO]
uncore_pmu_event_add,0x166,ctx->rdi + 0x178,"MOV qword ptr [RDI + 0x178],RAX",write other [TODO]
uncore_pmu_event_add,0x178,0xffffffff81019a60,CALL 0xffffffff81019a60,direct call
uncore_pmu_event_add,0x1b8,ctx->rdi + 0x184,"MOV dword ptr [RDI + 0x184],EDX",write other [TODO]
uncore_pmu_event_add,0x1c7,ctx->rbx + ctx->rax * 0x8 + 0x8,"MOV qword ptr [RBX + RAX*0x8 + 0x8],RDX",write other [TODO]
uncore_pmu_event_add,0x1d2,ctx->rdi + 0x168,"MOV qword ptr [RDI + 0x168],RDX",write other [TODO]
uncore_pmu_event_add,0x201,ctx->rdi + 0x178,"MOV qword ptr [RDI + 0x178],RAX",write other [TODO]
uncore_pmu_event_add,0x227,ctx->rdi + 0x170,"MOV qword ptr [RDI + 0x170],RAX",write other [TODO]
uncore_pmu_event_add,0x233,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],R13D",write other [TODO]
uncore_pmu_event_add,0x25b,,RET,ret
uncore_pmu_event_add,0x26a,0xffffffff81019a60,CALL 0xffffffff81019a60,direct call
uncore_pmu_event_add,0x3f4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uncore_pmu_event_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_event_del,0x1d,0xffffffff8101a7e0,CALL 0xffffffff8101a7e0,direct call
uncore_pmu_event_del,0x79,ctx->rax,CALL RAX,in-direct call
uncore_pmu_event_del,0xa0,ctx->r13 + ctx->rsi * 0x8 + 0x70,"MOV qword ptr [R13 + RSI*0x8 + 0x70],RDI",write other [TODO]
uncore_pmu_event_del,0xa9,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],ECX",write other [TODO]
uncore_pmu_event_del,0xad,ctx->r12 + 0x184,"MOV dword ptr [R12 + 0x184],0xffffffff",write other [TODO]
uncore_pmu_event_del,0xb9,ctx->r12 + 0x168,"MOV qword ptr [R12 + 0x168],-0x1",write other [TODO]
uncore_pmu_event_del,0xcb,,RET,ret
uncore_pmu_start_hrtimer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_start_hrtimer,0x1e,0xffffffff81154f40,CALL 0xffffffff81154f40,direct call
uncore_pmu_start_hrtimer,0x24,,RET,ret
uncore_pmu_cancel_hrtimer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_cancel_hrtimer,0x10,0xffffffff81155570,CALL 0xffffffff81155570,direct call
uncore_pmu_cancel_hrtimer,0x16,,RET,ret
uncore_get_alias_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_get_alias_name,0x2e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
uncore_get_alias_name,0x34,,RET,ret
uncore_get_alias_name,0x3c,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
uncore_get_alias_name,0x42,,RET,ret
uncore_pmu_register,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pmu_register,0x35,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
uncore_pmu_register,0x38,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],R8",write other [TODO]
uncore_pmu_register,0x44,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
uncore_pmu_register,0x84,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
uncore_pmu_register,0x94,0xffffffff81266920,CALL 0xffffffff81266920,direct call
uncore_pmu_register,0x9d,ctx->r12 + 0x150,"MOV byte ptr [R12 + 0x150],0x1",write other [TODO]
uncore_pmu_register,0xad,,RET,ret
uncore_pmu_register,0xb1,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
uncore_pmu_register,0xcc,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
uncore_pmu_register,0xe5,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],R8",write other [TODO]
uncore_pmu_register,0xea,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],R9",write other [TODO]
uncore_pmu_register,0xef,ctx->r12 + 0x3c,"MOV dword ptr [R12 + 0x3c],0x80",write other [TODO]
uncore_pmu_register,0xf8,ctx->r12 + 0x54,"MOV dword ptr [R12 + 0x54],0xffffffff",write other [TODO]
uncore_pmu_register,0x101,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],-0x7efe6680",write other [TODO]
uncore_pmu_register,0x10a,ctx->r12 + 0x68,"MOV qword ptr [R12 + 0x68],-0x7efe6610",write other [TODO]
uncore_pmu_register,0x113,ctx->r12 + 0x70,"MOV qword ptr [R12 + 0x70],-0x7efe6470",write other [TODO]
uncore_pmu_register,0x11c,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],-0x7efe5700",write other [TODO]
uncore_pmu_register,0x128,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],-0x7efe5300",write other [TODO]
uncore_pmu_register,0x134,ctx->r12 + 0x98,"MOV qword ptr [R12 + 0x98],-0x7efe65a0",write other [TODO]
uncore_pmu_register,0x140,ctx->r12 + 0xa0,"MOV qword ptr [R12 + 0xa0],-0x7efe5820",write other [TODO]
uncore_pmu_register,0x14c,ctx->r12 + 0xa8,"MOV qword ptr [R12 + 0xa8],-0x7efe5960",write other [TODO]
uncore_pmu_register,0x162,ctx->r12 + 0x128,"MOV dword ptr [R12 + 0x128],0x6f636e75",write other [TODO]
uncore_pmu_register,0x16e,ctx->wordctx->ptrctx->r13 + 0x4,"MOV word ptr [R13 + 0x4],AX",write other [TODO]
uncore_pmu_register,0x173,ctx->r13 + 0x6,"MOV byte ptr [R13 + 0x6],0x0",write other [TODO]
uncore_pmu_register,0x183,0xffffffff8101ae30,CALL 0xffffffff8101ae30,direct call
uncore_pci_pmu_register,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_pmu_register,0x3a,0xffffffff81018fd0,CALL 0xffffffff81018fd0,direct call
uncore_pci_pmu_register,0x6e,ctx->r12,"MOV dword ptr [R12],R14D",write other [TODO]
uncore_pci_pmu_register,0x72,ctx->r12 + 0x168,"MOV qword ptr [R12 + 0x168],R15",write other [TODO]
uncore_pci_pmu_register,0x7a,ctx->r12 + 0x170,"MOV qword ptr [R12 + 0x170],RBX",write other [TODO]
uncore_pci_pmu_register,0xad,ctx->rax,CALL RAX,in-direct call
uncore_pci_pmu_register,0xb6,ctx->rax + ctx->r13 * 0x8,"MOV qword ptr [RAX + R13*0x8],R12",write other [TODO]
uncore_pci_pmu_register,0xdf,,RET,ret
uncore_pci_pmu_register,0xe3,0xffffffff8101ae80,CALL 0xffffffff8101ae80,direct call
uncore_pci_pmu_register,0xf3,ctx->rdx + ctx->r13 * 0x8,"MOV qword ptr [RDX + R13*0x8],0x0",write other [TODO]
uncore_pci_pmu_register,0x124,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
uncore_pci_pmu_register,0x12a,ctx->rdx,CALL RDX,in-direct call
uncore_pci_pmu_register,0x132,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
uncore_pci_pmu_register,0x135,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
uncore_pci_pmu_register,0x14b,,RET,ret
uncore_pci_pmu_register,0x14c,ctx->rbx + 0x14c,"MOV dword ptr [RBX + 0x14c],EDX",write other [TODO]
uncore_pci_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_pci_probe,0x21,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
uncore_pci_probe,0x44,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
uncore_pci_probe,0x6c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uncore_pci_probe,0x8e,ctx->rcx,"MOV RCX,qword ptr [0xffffffff82e23a68]",write other [TODO]
uncore_pci_probe,0xc1,0xffffffff81018f50,CALL 0xffffffff81018f50,direct call
uncore_pci_probe,0xf2,0xffffffff8101b010,CALL 0xffffffff8101b010,direct call
uncore_pci_probe,0x102,ctx->r12 + 0x148,"MOV qword ptr [R12 + 0x148],RDX",write other [TODO]
uncore_pci_probe,0x112,,RET,ret
uncore_pci_probe,0x121,ctx->r13 + ctx->rax * 0x8,"MOV qword ptr [R13 + RAX*0x8],R12",write other [TODO]
uncore_pci_probe,0x129,ctx->r12 + 0x148,"MOV qword ptr [R12 + 0x148],0x0",write other [TODO]
uncore_pci_probe,0x13c,,RET,ret
uncore_pci_probe,0x13d,0xffffffff81018d00,CALL 0xffffffff81018d00,direct call
uncore_pci_probe,0x14e,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
nhmex_bbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_bbox_hw_config,0x28,,RET,ret
nhmex_bbox_hw_config,0x5a,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
nhmex_bbox_hw_config,0x6e,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],EAX",write other [TODO]
nhmex_bbox_hw_config,0x7b,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
nhmex_bbox_hw_config,0x89,ctx->rsi + 0x1a8,"MOV qword ptr [RSI + 0x1a8],RAX",write other [TODO]
nhmex_bbox_hw_config,0x92,,RET,ret
nhmex_mbox_alter_er,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_alter_er,0x80,ctx->rdi + 0x190,"MOV qword ptr [RDI + 0x190],RAX",write other [TODO]
nhmex_mbox_alter_er,0x9b,ctx->rdi + 0x1a0,"MOV dword ptr [RDI + 0x1a0],ESI",write other [TODO]
nhmex_mbox_alter_er,0xa1,ctx->rdi + 0x160,"MOV qword ptr [RDI + 0x160],RDX",write other [TODO]
nhmex_mbox_alter_er,0xad,,RET,ret
nhmex_rbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_rbox_hw_config,0x2d,ctx->rdx + 0x1a0,"MOV dword ptr [RDX + 0x1a0],EAX",write other [TODO]
nhmex_rbox_hw_config,0x36,ctx->rdx + 0x190,"MOV qword ptr [RDX + 0x190],RCX",write other [TODO]
nhmex_rbox_hw_config,0x6a,ctx->rdx + 0x160,"MOV qword ptr [RDX + 0x160],RAX",write other [TODO]
nhmex_rbox_hw_config,0x78,ctx->rdx + 0x1a8,"MOV qword ptr [RDX + 0x1a8],RAX",write other [TODO]
nhmex_rbox_hw_config,0x83,,RET,ret
__uncore_thresh8_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thresh8_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thresh8_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thresh8_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
__uncore_thresh8_show,0x2c,,RET,ret
__uncore_inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_inv_show,0x29,,RET,ret
__uncore_edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_edge_show,0x29,,RET,ret
__uncore_umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
__uncore_umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_umask_show,0x27,,RET,ret
__uncore_event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
__uncore_event_show,0x23,,RET,ret
__uncore_qlx_cfg_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_qlx_cfg_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_qlx_cfg_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_qlx_cfg_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x35312d30",write other [TODO]
__uncore_qlx_cfg_show,0x2c,,RET,ret
__uncore_xbr_mm_cfg_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_xbr_mm_cfg_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_xbr_mm_cfg_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_xbr_mm_cfg_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33362d32",write other [TODO]
__uncore_xbr_mm_cfg_show,0x2c,,RET,ret
__uncore_event5_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event5_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event5_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa352d",write other [TODO]
__uncore_event5_show,0x23,,RET,ret
__uncore_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33362d30",write other [TODO]
__uncore_mask_show,0x2c,,RET,ret
__uncore_match_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33362d30",write other [TODO]
__uncore_match_show,0x2c,,RET,ret
__uncore_counter_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_counter_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_counter_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
__uncore_counter_show,0x23,,RET,ret
__uncore_pld_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_pld_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_pld_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_pld_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3233",write other [TODO]
__uncore_pld_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_pld_show,0x30,,RET,ret
__uncore_dsp_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_dsp_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_dsp_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_dsp_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_dsp_show,0x2c,,RET,ret
__uncore_filter_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3433",write other [TODO]
__uncore_filter_mask_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_mask_show,0x30,,RET,ret
__uncore_filter_match_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_match_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_match_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_match_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33332d30",write other [TODO]
__uncore_filter_match_show,0x2c,,RET,ret
__uncore_filter_cfg_en_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_cfg_en_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_cfg_en_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3336",write other [TODO]
__uncore_filter_cfg_en_show,0x23,,RET,ret
__uncore_set_flag_sel_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_set_flag_sel_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_set_flag_sel_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_set_flag_sel_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31322d39",write other [TODO]
__uncore_set_flag_sel_show,0x2c,,RET,ret
__uncore_inc_sel_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_inc_sel_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_inc_sel_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa33312d",write other [TODO]
__uncore_inc_sel_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_inc_sel_show,0x27,,RET,ret
__uncore_flag_mode_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_flag_mode_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_flag_mode_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_flag_mode_show,0x25,,RET,ret
__uncore_wrap_mode_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_wrap_mode_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_wrap_mode_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_wrap_mode_show,0x25,,RET,ret
__uncore_storage_mode_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_storage_mode_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_storage_mode_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa352d",write other [TODO]
__uncore_storage_mode_show,0x23,,RET,ret
__uncore_count_mode_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_count_mode_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_count_mode_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa332d",write other [TODO]
__uncore_count_mode_show,0x23,,RET,ret
nhmex_mbox_get_shared_reg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_get_shared_reg,0x45,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
nhmex_mbox_get_shared_reg,0xe3,ctx->r12 + 0x308,"MOV qword ptr [R12 + 0x308],R13",write other [TODO]
nhmex_mbox_get_shared_reg,0xee,ctx->rbp - 0x29,"MOV byte ptr [RBP + -0x29],AL",write stack
nhmex_mbox_get_shared_reg,0xf1,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_mbox_get_shared_reg,0x108,,RET,ret
nhmex_mbox_get_shared_reg,0x149,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
nhmex_mbox_get_shared_reg,0x166,ctx->r12 + ctx->rax * 0x8 + 0x1f0,"MOV qword ptr [R12 + RAX*0x8 + 0x1f0],R13",write other [TODO]
nhmex_mbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_hw_config,0x8f,,RET,ret
nhmex_mbox_hw_config,0xcc,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],R13D",write other [TODO]
nhmex_mbox_hw_config,0xd3,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],R8D",write other [TODO]
nhmex_mbox_hw_config,0xf3,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],R9",write other [TODO]
nhmex_mbox_hw_config,0x100,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],R8D",write other [TODO]
nhmex_mbox_hw_config,0x107,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],EDI",write other [TODO]
nhmex_mbox_hw_config,0x12b,,RET,ret
nhmex_mbox_hw_config,0x169,ctx->rsi + 0x1b8,"MOV dword ptr [RSI + 0x1b8],0x0",write other [TODO]
nhmex_mbox_hw_config,0x17a,ctx->rsi + 0x1a8,"MOV qword ptr [RSI + 0x1a8],RAX",write other [TODO]
nhmex_mbox_hw_config,0x192,ctx->rsi + 0x1b0,"MOV dword ptr [RSI + 0x1b0],0xe54",write other [TODO]
nhmex_mbox_hw_config,0x1a1,ctx->rsi + 0x1b0,"MOV dword ptr [RSI + 0x1b0],0xe5c",write other [TODO]
nhmex_sbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_sbox_hw_config,0x20,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
nhmex_sbox_hw_config,0x34,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],EAX",write other [TODO]
nhmex_sbox_hw_config,0x41,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
nhmex_sbox_hw_config,0x4f,ctx->rsi + 0x1a8,"MOV qword ptr [RSI + 0x1a8],RAX",write other [TODO]
nhmex_sbox_hw_config,0x59,,RET,ret
nhmex_mbox_put_shared_reg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_put_shared_reg,0x24,,RET,ret
nhmex_mbox_put_shared_reg,0x35,,RET,ret
nhmex_mbox_put_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_put_constraint,0x26,ctx->rbx + 0x19c,"MOV dword ptr [RBX + 0x19c],0x0",write other [TODO]
nhmex_mbox_put_constraint,0x3e,,RET,ret
nhmex_mbox_put_constraint,0x48,0xffffffff8101bd10,CALL 0xffffffff8101bd10,direct call
nhmex_mbox_put_constraint,0x4d,ctx->rbx + 0x1b4,"MOV dword ptr [RBX + 0x1b4],0x0",write other [TODO]
nhmex_mbox_put_constraint,0x5b,,RET,ret
nhmex_mbox_put_constraint,0x66,0xffffffff8101bd10,CALL 0xffffffff8101bd10,direct call
nhmex_mbox_put_constraint,0x74,0xffffffff8101bd10,CALL 0xffffffff8101bd10,direct call
nhmex_mbox_put_constraint,0x85,,RET,ret
nhmex_mbox_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_get_constraint,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
nhmex_mbox_get_constraint,0x35,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
nhmex_mbox_get_constraint,0x45,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EDX",write stack
nhmex_mbox_get_constraint,0x48,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
nhmex_mbox_get_constraint,0x6c,ctx->rbp + ctx->rbx * 0x4 - 0x38,"MOV dword ptr [RBP + RBX*0x4 + -0x38],0xff",write stack
nhmex_mbox_get_constraint,0xab,0xffffffff8101b930,CALL 0xffffffff8101b930,direct call
nhmex_mbox_get_constraint,0x100,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],ESI",write stack
nhmex_mbox_get_constraint,0x10e,0xffffffff8101b390,CALL 0xffffffff8101b390,direct call
nhmex_mbox_get_constraint,0x118,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
nhmex_mbox_get_constraint,0x147,0xffffffff8101b930,CALL 0xffffffff8101b930,direct call
nhmex_mbox_get_constraint,0x1b1,,RET,ret
nhmex_mbox_get_constraint,0x1d9,0xffffffff8101b390,CALL 0xffffffff8101b390,direct call
nhmex_mbox_get_constraint,0x1ef,ctx->r14 + 0x1b4,"MOV dword ptr [R14 + 0x1b4],0x1",write other [TODO]
nhmex_mbox_get_constraint,0x201,0xffffffff8101bd10,CALL 0xffffffff8101bd10,direct call
nhmex_mbox_get_constraint,0x21d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
nhmex_mbox_get_constraint,0x221,0xffffffff8101bd10,CALL 0xffffffff8101bd10,direct call
nhmex_mbox_get_constraint,0x22f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
nhmex_rbox_put_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_rbox_put_constraint,0x77,ctx->rdx + 0x19c,"MOV dword ptr [RDX + 0x19c],0x0",write other [TODO]
nhmex_rbox_put_constraint,0x82,,RET,ret
nhmex_rbox_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_rbox_get_constraint,0x5b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
nhmex_rbox_get_constraint,0xa0,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
nhmex_rbox_get_constraint,0xa4,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
nhmex_rbox_get_constraint,0xeb,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_rbox_get_constraint,0x137,,RET,ret
nhmex_rbox_get_constraint,0x138,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_rbox_get_constraint,0x1a3,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
nhmex_rbox_get_constraint,0x1aa,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
nhmex_rbox_get_constraint,0x1ae,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
nhmex_rbox_get_constraint,0x1f9,ctx->r12 + ctx->rax * 0x8 + 0x1f0,"MOV qword ptr [R12 + RAX*0x8 + 0x1f0],RCX",write other [TODO]
nhmex_rbox_get_constraint,0x201,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_rbox_get_constraint,0x23c,ctx->r13 + 0x19c,"MOV dword ptr [R13 + 0x19c],0x1",write other [TODO]
nhmex_rbox_get_constraint,0x257,,RET,ret
nhmex_rbox_get_constraint,0x2b5,ctx->rax + 0x1f0,"MOV qword ptr [RAX + 0x1f0],R14",write other [TODO]
nhmex_rbox_get_constraint,0x2bc,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_rbox_get_constraint,0x313,ctx->r12 + ctx->rcx * 0x8 + 0x1f0,"MOV qword ptr [R12 + RCX*0x8 + 0x1f0],RDX",write other [TODO]
nhmex_rbox_get_constraint,0x322,ctx->rax + 0x1f8,"MOV qword ptr [RAX + 0x1f8],RCX",write other [TODO]
nhmex_rbox_get_constraint,0x330,ctx->rax + 0x200,"MOV qword ptr [RAX + 0x200],RCX",write other [TODO]
nhmex_rbox_get_constraint,0x337,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_rbox_get_constraint,0x354,ctx->r13 + 0x160,"MOV qword ptr [R13 + 0x160],RAX",write other [TODO]
nhmex_rbox_get_constraint,0x36a,ctx->r13 + 0x1a0,"MOV dword ptr [R13 + 0x1a0],ECX",write other [TODO]
__uncore_iss_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_iss_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_iss_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_iss_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_iss_show,0x2c,,RET,ret
__uncore_iperf_cfg_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_iperf_cfg_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_iperf_cfg_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_iperf_cfg_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_iperf_cfg_show,0x2c,,RET,ret
__uncore_thr_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thr_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thr_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thr_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_thr_show,0x2c,,RET,ret
__uncore_fvc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_fvc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_fvc_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_fvc_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_fvc_show,0x2c,,RET,ret
__uncore_pgt_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_pgt_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_pgt_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_pgt_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_pgt_show,0x2c,,RET,ret
__uncore_map_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_map_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_map_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_map_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_map_show,0x2c,,RET,ret
__uncore_xbr_match_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_xbr_match_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_xbr_match_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_xbr_match_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33362d30",write other [TODO]
__uncore_xbr_match_show,0x2c,,RET,ret
__uncore_xbr_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_xbr_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_xbr_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_xbr_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33362d30",write other [TODO]
__uncore_xbr_mask_show,0x2c,,RET,ret
nhmex_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_msr_init_box,0x15,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_init_box,0x1c,,RET,ret
nhmex_uncore_msr_exit_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_msr_exit_box,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_exit_box,0x1a,,RET,ret
nhmex_uncore_msr_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_msr_disable_event,0x14,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_disable_event,0x1b,,RET,ret
nhmex_bbox_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_bbox_msr_enable_event,0x29,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_bbox_msr_enable_event,0x45,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_bbox_msr_enable_event,0x61,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_bbox_msr_enable_event,0x6c,,RET,ret
nhmex_sbox_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_sbox_msr_enable_event,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_sbox_msr_enable_event,0x43,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_sbox_msr_enable_event,0x5f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_sbox_msr_enable_event,0x73,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_sbox_msr_enable_event,0x92,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_sbox_msr_enable_event,0x9c,,RET,ret
nhmex_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_msr_enable_box,0x40,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
nhmex_uncore_msr_enable_box,0x94,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_enable_box,0x9e,,RET,ret
nhmex_uncore_msr_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_msr_disable_box,0x40,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
nhmex_uncore_msr_disable_box,0x92,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_disable_box,0x9c,,RET,ret
nhmex_uncore_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_msr_enable_event,0x46,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_enable_event,0x4d,,RET,ret
nhmex_uncore_msr_enable_event,0x52,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_enable_event,0x59,,RET,ret
nhmex_uncore_msr_enable_event,0x61,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_msr_enable_event,0x68,,RET,ret
nhmex_mbox_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_mbox_msr_enable_event,0x4d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_mbox_msr_enable_event,0x87,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_mbox_msr_enable_event,0xac,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_mbox_msr_enable_event,0xba,,RET,ret
nhmex_mbox_msr_enable_event,0xc5,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
nhmex_mbox_msr_enable_event,0xd8,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_mbox_msr_enable_event,0xed,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
nhmex_mbox_msr_enable_event,0x100,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
nhmex_mbox_msr_enable_event,0x119,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_mbox_msr_enable_event,0x142,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_mbox_msr_enable_event,0x165,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_mbox_msr_enable_event,0x179,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_rbox_msr_enable_event,0x6f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x8a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0xa5,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0xc1,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0xcb,,RET,ret
nhmex_rbox_msr_enable_event,0xd0,0xffffffff8101a580,CALL 0xffffffff8101a580,direct call
nhmex_rbox_msr_enable_event,0xf6,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x11e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x139,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x154,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x174,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_rbox_msr_enable_event,0x194,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhmex_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhmex_uncore_cpu_init,0x12,0xffffffff82e23ee8,"MOV qword ptr [0xffffffff82e23ee8],-0x7d1dc040",write .data
nhmex_uncore_cpu_init,0x2c,0xffffffff82e24b6c,"MOV dword ptr [0xffffffff82e24b6c],EAX",write .data
nhmex_uncore_cpu_init,0x32,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1dc580",write .data
nhmex_uncore_cpu_init,0x3e,,RET,ret
nhmex_uncore_cpu_init,0x3f,0xffffffff833fce22,"MOV byte ptr [0xffffffff833fce22],0x1",write .data
uncore_freerunning_hw_config,0x30,,RET,ret
snb_uncore_imc_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_enable_box,0xa,,RET,ret
snb_uncore_imc_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_enable_event,0xa,,RET,ret
snb_uncore_imc_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_hw_config,0xc,,RET,ret
snb_uncore_imc_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_read_counter,0x1c,,RET,ret
adl_uncore_mmio_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_mmio_disable_box,0x38,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
adl_uncore_mmio_disable_box,0x3b,,RET,ret
adl_uncore_mmio_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_mmio_enable_box,0x35,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
adl_uncore_mmio_enable_box,0x38,,RET,ret
__uncore_cmask5_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_cmask5_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_cmask5_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_cmask5_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x38322d34",write other [TODO]
__uncore_cmask5_show,0x2c,,RET,ret
__uncore_inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_inv_show,0x29,,RET,ret
__uncore_edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_edge_show,0x29,,RET,ret
__uncore_umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
__uncore_umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_umask_show,0x27,,RET,ret
__uncore_event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
__uncore_event_show,0x23,,RET,ret
__uncore_threshold_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_threshold_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_threshold_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_threshold_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x39322d34",write other [TODO]
__uncore_threshold_show,0x2c,,RET,ret
__uncore_cmask8_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_cmask8_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_cmask8_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_cmask8_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
__uncore_cmask8_show,0x2c,,RET,ret
__uncore_chmask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_chmask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_chmask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa31312d",write other [TODO]
__uncore_chmask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_chmask_show,0x27,,RET,ret
snb_uncore_imc_event_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_event_init,0x74,0xffffffff8101a350,CALL 0xffffffff8101a350,direct call
snb_uncore_imc_event_init,0x89,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],RAX",write other [TODO]
snb_uncore_imc_event_init,0x9c,ctx->rbx + 0x27c,"MOV dword ptr [RBX + 0x27c],EDX",write other [TODO]
snb_uncore_imc_event_init,0xa2,ctx->rbx + 0x184,"MOV dword ptr [RBX + 0x184],0xffffffff",write other [TODO]
snb_uncore_imc_event_init,0xac,ctx->rbx + 0x168,"MOV qword ptr [RBX + 0x168],-0x1",write other [TODO]
snb_uncore_imc_event_init,0xb7,ctx->rbx + 0x1a0,"MOV dword ptr [RBX + 0x1a0],0xffffffff",write other [TODO]
snb_uncore_imc_event_init,0xc1,ctx->rbx + 0x1b8,"MOV dword ptr [RBX + 0x1b8],0xffffffff",write other [TODO]
snb_uncore_imc_event_init,0xdd,ctx->rbx + 0x184,"MOV dword ptr [RBX + 0x184],0x9",write other [TODO]
snb_uncore_imc_event_init,0xed,ctx->rbx + 0x178,"MOV qword ptr [RBX + 0x178],RDX",write other [TODO]
snb_uncore_imc_event_init,0xf4,ctx->rbx + 0x160,"MOV qword ptr [RBX + 0x160],RAX",write other [TODO]
snb_uncore_imc_event_init,0x101,,RET,ret
snb_uncore_imc_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_init_box,0x30,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
snb_uncore_imc_init_box,0x45,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snb_uncore_imc_init_box,0x5a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snb_uncore_imc_init_box,0x73,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
snb_uncore_imc_init_box,0x78,ctx->r12 + 0x1e0,"MOV qword ptr [R12 + 0x1e0],RAX",write other [TODO]
__uncore_imc_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_imc_init_box,0x31,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__uncore_imc_init_box,0x48,ctx->esi,"MOV ESI,dword ptr [RBX + 0x4]",write other [TODO]
__uncore_imc_init_box,0x52,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
__uncore_imc_init_box,0x79,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
__uncore_imc_init_box,0x9a,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
__uncore_imc_init_box,0xa2,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
__uncore_imc_init_box,0xbb,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
__uncore_imc_init_box,0xc0,ctx->r14 + 0x1e0,"MOV qword ptr [R14 + 0x1e0],RAX",write other [TODO]
__uncore_imc_init_box,0xc71120,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
tgl_uncore_imc_freerunning_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tgl_uncore_imc_freerunning_init_box,0xb,0xffffffff8101d120,CALL 0xffffffff8101d120,direct call
tgl_uncore_imc_freerunning_init_box,0x11,,RET,ret
adl_uncore_imc_freerunning_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_imc_freerunning_init_box,0xe,0xffffffff8101d120,CALL 0xffffffff8101d120,direct call
adl_uncore_imc_freerunning_init_box,0x14,,RET,ret
adl_uncore_imc_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_imc_init_box,0x12,0xffffffff8101d120,CALL 0xffffffff8101d120,direct call
adl_uncore_imc_init_box,0x38,,RET,ret
adl_uncore_imc_init_box,0x3e,ctx->rax + 0xc0,"MOV dword ptr [RAX + 0xc0],EDX",write other [TODO]
adl_uncore_imc_init_box,0x49,,RET,ret
skl_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skl_uncore_msr_init_box,0x28,,RET,ret
skl_uncore_msr_init_box,0x35,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
skl_uncore_msr_init_box,0x58,,RET,ret
snb_uncore_imc_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_disable_event,0xa,,RET,ret
snb_uncore_imc_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_imc_disable_box,0xa,,RET,ret
adl_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_msr_enable_box,0x15,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
adl_uncore_msr_enable_box,0x1c,,RET,ret
nhm_uncore_msr_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhm_uncore_msr_disable_box,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhm_uncore_msr_disable_box,0x1a,,RET,ret
nhm_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhm_uncore_msr_enable_box,0x18,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhm_uncore_msr_enable_box,0x1f,,RET,ret
snb_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_msr_enable_box,0x15,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snb_uncore_msr_enable_box,0x1c,,RET,ret
skl_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skl_uncore_msr_enable_box,0x15,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
skl_uncore_msr_enable_box,0x1c,,RET,ret
snb_uncore_msr_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_msr_disable_event,0x14,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snb_uncore_msr_disable_event,0x1b,,RET,ret
adl_uncore_msr_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_msr_disable_box,0x16,,RET,ret
adl_uncore_msr_disable_box,0x25,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
adl_uncore_msr_disable_box,0x2c,,RET,ret
skl_uncore_msr_exit_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skl_uncore_msr_exit_box,0x16,,RET,ret
skl_uncore_msr_exit_box,0x25,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
skl_uncore_msr_exit_box,0x2c,,RET,ret
rkl_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rkl_uncore_msr_init_box,0x16,,RET,ret
rkl_uncore_msr_init_box,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
rkl_uncore_msr_init_box,0x2e,,RET,ret
snb_uncore_msr_exit_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_msr_exit_box,0x16,,RET,ret
snb_uncore_msr_exit_box,0x25,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snb_uncore_msr_exit_box,0x2c,,RET,ret
adl_uncore_msr_exit_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_msr_exit_box,0x16,,RET,ret
adl_uncore_msr_exit_box,0x25,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
adl_uncore_msr_exit_box,0x2c,,RET,ret
snb_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_msr_init_box,0x16,,RET,ret
snb_uncore_msr_init_box,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snb_uncore_msr_init_box,0x2e,,RET,ret
adl_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_msr_init_box,0x16,,RET,ret
adl_uncore_msr_init_box,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
adl_uncore_msr_init_box,0x2e,,RET,ret
snb_uncore_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_msr_enable_event,0x2b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snb_uncore_msr_enable_event,0x32,,RET,ret
snb_uncore_msr_enable_event,0x3a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snb_uncore_msr_enable_event,0x41,,RET,ret
nhm_uncore_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhm_uncore_msr_enable_event,0x2b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhm_uncore_msr_enable_event,0x32,,RET,ret
nhm_uncore_msr_enable_event,0x3a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
nhm_uncore_msr_enable_event,0x41,,RET,ret
snb_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_cpu_init,0x13,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d8d70",write .data
snb_uncore_cpu_init,0x23,0xffffffff82e273ec,"MOV dword ptr [0xffffffff82e273ec],EAX",write .data
snb_uncore_cpu_init,0x2a,,RET,ret
skl_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skl_uncore_cpu_init,0x13,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d8f10",write .data
skl_uncore_cpu_init,0x23,0xffffffff82e2712c,"MOV dword ptr [0xffffffff82e2712c],EAX",write .data
skl_uncore_cpu_init,0x29,0xffffffff82e27360,"MOV qword ptr [0xffffffff82e27360],-0x7d1d8dc0",write .data
skl_uncore_cpu_init,0x35,,RET,ret
icl_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icl_uncore_cpu_init,0xb,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d9380",write .data
icl_uncore_cpu_init,0x19,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
icl_uncore_cpu_init,0x22,0xffffffff82e26f8c,"MOV dword ptr [0xffffffff82e26f8c],EAX",write .data
icl_uncore_cpu_init,0x29,,RET,ret
tgl_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tgl_uncore_cpu_init,0xb,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d93a0",write .data
tgl_uncore_cpu_init,0x19,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
tgl_uncore_cpu_init,0x1f,0xffffffff82e27020,"MOV qword ptr [0xffffffff82e27020],-0x7d1d8dc0",write .data
tgl_uncore_cpu_init,0x2d,0xffffffff82e26f8c,"MOV dword ptr [0xffffffff82e26f8c],EAX",write .data
tgl_uncore_cpu_init,0x33,0xffffffff82e26e60,"MOV qword ptr [0xffffffff82e26e60],-0x7d1d8dc0",write .data
tgl_uncore_cpu_init,0x3e,0xffffffff82e27360,"MOV qword ptr [0xffffffff82e27360],-0x7d1d8dc0",write .data
tgl_uncore_cpu_init,0x49,0xffffffff82e27240,"MOV qword ptr [0xffffffff82e27240],-0x7efe2bb0",write .data
tgl_uncore_cpu_init,0x55,,RET,ret
adl_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_cpu_init,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
adl_uncore_cpu_init,0x14,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d97c0",write .data
adl_uncore_cpu_init,0x22,0xffffffff82e26aac,"MOV dword ptr [0xffffffff82e26aac],EAX",write .data
adl_uncore_cpu_init,0x29,,RET,ret
snb_pci2phy_map_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_pci2phy_map_init,0x17,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
snb_pci2phy_map_init,0x40,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
snb_pci2phy_map_init,0x48,0xffffffff8101a240,CALL 0xffffffff8101a240,direct call
snb_pci2phy_map_init,0x52,ctx->rax + ctx->rbx * 0x4 + 0x14,"MOV dword ptr [RAX + RBX*0x4 + 0x14],0x0",write other [TODO]
snb_pci2phy_map_init,0x61,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snb_pci2phy_map_init,0x69,0xffffffff81676870,CALL 0xffffffff81676870,direct call
snb_pci2phy_map_init,0x76,,RET,ret
snb_pci2phy_map_init,0x85,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snb_pci2phy_map_init,0x8d,0xffffffff81676870,CALL 0xffffffff81676870,direct call
snb_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snb_uncore_pci_init,0x23,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
snb_uncore_pci_init,0x35,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d9db0",write .data
snb_uncore_pci_init,0x44,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],RDX",write .data
snb_uncore_pci_init,0x4c,,RET,ret
snb_uncore_pci_init,0x57,,RET,ret
ivb_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivb_uncore_pci_init,0x23,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
ivb_uncore_pci_init,0x35,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d9db0",write .data
ivb_uncore_pci_init,0x44,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],RDX",write .data
ivb_uncore_pci_init,0x4c,,RET,ret
ivb_uncore_pci_init,0x57,,RET,ret
hsw_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hsw_uncore_pci_init,0x23,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
hsw_uncore_pci_init,0x35,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d9db0",write .data
hsw_uncore_pci_init,0x44,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],RDX",write .data
hsw_uncore_pci_init,0x4c,,RET,ret
hsw_uncore_pci_init,0x57,,RET,ret
bdw_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bdw_uncore_pci_init,0x23,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
bdw_uncore_pci_init,0x35,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d9db0",write .data
bdw_uncore_pci_init,0x44,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],RDX",write .data
bdw_uncore_pci_init,0x4c,,RET,ret
bdw_uncore_pci_init,0x57,,RET,ret
skl_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skl_uncore_pci_init,0x23,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
skl_uncore_pci_init,0x35,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d9db0",write .data
skl_uncore_pci_init,0x44,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],RDX",write .data
skl_uncore_pci_init,0x4c,,RET,ret
skl_uncore_pci_init,0x57,,RET,ret
nhm_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nhm_uncore_cpu_init,0x6,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1da8a0",write .data
nhm_uncore_cpu_init,0x15,,RET,ret
tgl_l_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tgl_l_uncore_mmio_init,0x6,0xffffffff82e25410,"MOV qword ptr [0xffffffff82e25410],-0x7d1da900",write .data
tgl_l_uncore_mmio_init,0x11,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],-0x7d1dacb0",write .data
tgl_l_uncore_mmio_init,0x20,,RET,ret
tgl_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tgl_uncore_mmio_init,0x6,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],-0x7d1dacb0",write .data
tgl_uncore_mmio_init,0x15,,RET,ret
adl_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adl_uncore_mmio_init,0x6,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],-0x7d1db040",write .data
adl_uncore_mmio_init,0x15,,RET,ret
uncore_freerunning_hw_config,0x30,,RET,ret
__snbep_cbox_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__snbep_cbox_get_constraint,0x1d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
__snbep_cbox_get_constraint,0x3a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__snbep_cbox_get_constraint,0x46,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
__snbep_cbox_get_constraint,0x4b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__snbep_cbox_get_constraint,0x7e,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDI",write stack
__snbep_cbox_get_constraint,0x81,ctx->rax,CALL RAX,in-direct call
__snbep_cbox_get_constraint,0xd7,ctx->r12 + 0x1f0,"MOV qword ptr [R12 + 0x1f0],RCX",write other [TODO]
__snbep_cbox_get_constraint,0xe9,ctx->r12 + 0x1f0,"MOV qword ptr [R12 + 0x1f0],RAX",write other [TODO]
__snbep_cbox_get_constraint,0x105,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
__snbep_cbox_get_constraint,0x129,,RET,ret
__snbep_cbox_get_constraint,0x132,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
__snbep_cbox_get_constraint,0x136,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
__snbep_cbox_get_constraint,0x176,,RET,ret
snbep_cbox_filter_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_cbox_filter_mask,0x49,,RET,ret
snbep_cbox_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_cbox_get_constraint,0x10,0xffffffff8101da60,CALL 0xffffffff8101da60,direct call
snbep_cbox_get_constraint,0x16,,RET,ret
snbep_pcu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_pcu_hw_config,0x18,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],ECX",write other [TODO]
snbep_pcu_hw_config,0x26,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],0xc34",write other [TODO]
snbep_pcu_hw_config,0x3b,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
snbep_pcu_hw_config,0x45,,RET,ret
ivbep_cbox_filter_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_cbox_filter_mask,0x61,,RET,ret
ivbep_cbox_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_cbox_get_constraint,0x10,0xffffffff8101da60,CALL 0xffffffff8101da60,direct call
ivbep_cbox_get_constraint,0x16,,RET,ret
ivbep_cbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_cbox_hw_config,0x3a,ctx->edx,"MOV EDX,dword ptr [RAX + 0x24]",write other [TODO]
ivbep_cbox_hw_config,0x60,ctx->r12 + 0x198,"MOV dword ptr [R12 + 0x198],EAX",write other [TODO]
ivbep_cbox_hw_config,0x68,0xffffffff8101dca0,CALL 0xffffffff8101dca0,direct call
ivbep_cbox_hw_config,0x75,ctx->r12 + 0x1a0,"MOV dword ptr [R12 + 0x1a0],EBX",write other [TODO]
ivbep_cbox_hw_config,0x7d,ctx->r12 + 0x190,"MOV qword ptr [R12 + 0x190],RAX",write other [TODO]
ivbep_cbox_hw_config,0x8b,,RET,ret
ivbep_cbox_hw_config,0x8e,,RET,ret
knl_cha_filter_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_cha_filter_mask,0x3e,,RET,ret
knl_cha_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_cha_get_constraint,0x10,0xffffffff8101da60,CALL 0xffffffff8101da60,direct call
knl_cha_get_constraint,0x16,,RET,ret
hswep_ubox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_ubox_hw_config,0xd,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],0x707",write other [TODO]
hswep_ubox_hw_config,0x17,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
hswep_ubox_hw_config,0x27,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
hswep_ubox_hw_config,0x31,,RET,ret
hswep_cbox_filter_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_cbox_filter_mask,0x61,,RET,ret
hswep_cbox_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_cbox_get_constraint,0x10,0xffffffff8101da60,CALL 0xffffffff8101da60,direct call
hswep_cbox_get_constraint,0x16,,RET,ret
hswep_cbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_cbox_hw_config,0x3a,ctx->edx,"MOV EDX,dword ptr [RAX + 0x24]",write other [TODO]
hswep_cbox_hw_config,0x60,ctx->r12 + 0x198,"MOV dword ptr [R12 + 0x198],EAX",write other [TODO]
hswep_cbox_hw_config,0x68,0xffffffff8101de60,CALL 0xffffffff8101de60,direct call
hswep_cbox_hw_config,0x75,ctx->r12 + 0x1a0,"MOV dword ptr [R12 + 0x1a0],EBX",write other [TODO]
hswep_cbox_hw_config,0x7d,ctx->r12 + 0x190,"MOV qword ptr [R12 + 0x190],RAX",write other [TODO]
hswep_cbox_hw_config,0x8b,,RET,ret
hswep_cbox_hw_config,0x8e,,RET,ret
hswep_pcu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_pcu_hw_config,0x1d,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],ECX",write other [TODO]
hswep_pcu_hw_config,0x23,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],0x715",write other [TODO]
hswep_pcu_hw_config,0x38,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
hswep_pcu_hw_config,0x42,,RET,ret
skx_cha_filter_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_cha_filter_mask,0x4c,,RET,ret
skx_cha_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_cha_get_constraint,0x10,0xffffffff8101da60,CALL 0xffffffff8101da60,direct call
skx_cha_get_constraint,0x16,,RET,ret
skx_iio_mapping_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_iio_mapping_visible,0x44,,RET,ret
snr_cha_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_cha_hw_config,0x22,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
snr_cha_hw_config,0x31,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],EAX",write other [TODO]
snr_cha_hw_config,0x43,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
snr_cha_hw_config,0x4c,,RET,ret
snr_pcu_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_pcu_hw_config,0x1d,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],ECX",write other [TODO]
snr_pcu_hw_config,0x23,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],0x1efc",write other [TODO]
snr_pcu_hw_config,0x38,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
snr_pcu_hw_config,0x42,,RET,ret
snr_uncore_mmio_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_disable_box,0x21,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
snr_uncore_mmio_disable_box,0x24,,RET,ret
snr_uncore_mmio_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_enable_box,0x21,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
snr_uncore_mmio_enable_box,0x24,,RET,ret
spr_cha_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_cha_hw_config,0x2e,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
spr_cha_hw_config,0x40,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],EAX",write other [TODO]
spr_cha_hw_config,0x52,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
spr_cha_hw_config,0x5c,,RET,ret
spr_uncore_mmio_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_mmio_enable_event,0x2b,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
spr_uncore_mmio_enable_event,0x2e,,RET,ret
spr_uncore_mmio_enable_event,0x34,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
spr_uncore_mmio_enable_event,0x37,,RET,ret
uncore_type_max_boxes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_type_max_boxes,0x56,,RET,ret
uncore_type_max_boxes,0x5a,,RET,ret
uncore_type_max_boxes,0x61,,RET,ret
__uncore_filter_band3_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_band3_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_band3_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_band3_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x332d3432",write other [TODO]
__uncore_filter_band3_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_band3_show,0x30,,RET,ret
__uncore_filter_band2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_band2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_band2_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_band2_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322d3631",write other [TODO]
__uncore_filter_band2_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_band2_show,0x30,,RET,ret
__uncore_filter_band1_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_band1_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_band1_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_band1_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x35312d38",write other [TODO]
__uncore_filter_band1_show,0x2c,,RET,ret
__uncore_filter_band0_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_band0_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_band0_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d30",write other [TODO]
__uncore_filter_band0_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_band0_show,0x27,,RET,ret
__uncore_occ_edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_occ_edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_occ_edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_occ_edge_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31352d34",write other [TODO]
__uncore_occ_edge_show,0x2c,,RET,ret
__uncore_occ_invert_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_occ_invert_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_occ_invert_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_occ_invert_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_occ_invert_show,0x29,,RET,ret
__uncore_thresh5_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thresh5_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thresh5_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thresh5_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x38322d34",write other [TODO]
__uncore_thresh5_show,0x2c,,RET,ret
__uncore_inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_inv_show,0x29,,RET,ret
__uncore_edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_edge_show,0x29,,RET,ret
__uncore_occ_sel_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_occ_sel_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_occ_sel_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_occ_sel_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x35312d34",write other [TODO]
__uncore_occ_sel_show,0x2c,,RET,ret
__uncore_event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
__uncore_event_show,0x23,,RET,ret
__uncore_umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
__uncore_umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_umask_show,0x27,,RET,ret
__uncore_filter_opc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_opc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_opc_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_opc_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x332d3332",write other [TODO]
__uncore_filter_opc_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_opc_show,0x30,,RET,ret
__uncore_filter_state_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_state_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_state_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_state_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322d3831",write other [TODO]
__uncore_filter_state_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_state_show,0x30,,RET,ret
__uncore_filter_nid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_nid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_nid_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_nid_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x312d3031",write other [TODO]
__uncore_filter_nid_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_nid_show,0x30,,RET,ret
__uncore_filter_tid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_tid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_tid_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa342d30",write other [TODO]
__uncore_filter_tid_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_tid_show,0x27,,RET,ret
__uncore_thresh8_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thresh8_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thresh8_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thresh8_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
__uncore_thresh8_show,0x2c,,RET,ret
__uncore_tid_en_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_tid_en_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_tid_en_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_tid_en_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_tid_en_show,0x29,,RET,ret
__uncore_mask1_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask1_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask1_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask1_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3233",write other [TODO]
__uncore_mask1_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_mask1_show,0x30,,RET,ret
__uncore_mask0_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask0_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask0_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask0_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_mask0_show,0x2c,,RET,ret
__uncore_mask_vnw_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_vnw_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_vnw_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa342d33",write other [TODO]
__uncore_mask_vnw_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_mask_vnw_show,0x27,,RET,ret
__uncore_mask_opc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_opc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_opc_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa382d35",write other [TODO]
__uncore_mask_opc_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_mask_opc_show,0x27,,RET,ret
__uncore_mask_mc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_mc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_mc_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask_mc_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x32312d39",write other [TODO]
__uncore_mask_mc_show,0x2c,,RET,ret
__uncore_mask_dnid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_dnid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_dnid_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask_dnid_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x312d3331",write other [TODO]
__uncore_mask_dnid_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_mask_dnid_show,0x30,,RET,ret
__uncore_mask_rnid4_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_rnid4_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_rnid4_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3133",write other [TODO]
__uncore_mask_rnid4_show,0x23,,RET,ret
__uncore_mask_rnid30_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_rnid30_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_rnid30_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask_rnid30_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x332d3233",write other [TODO]
__uncore_mask_rnid30_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_mask_rnid30_show,0x30,,RET,ret
__uncore_mask_rds_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_mask_rds_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_mask_rds_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_mask_rds_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x352d3834",write other [TODO]
__uncore_mask_rds_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_mask_rds_show,0x30,,RET,ret
__uncore_match1_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match1_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match1_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match1_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3233",write other [TODO]
__uncore_match1_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_match1_show,0x30,,RET,ret
__uncore_match0_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match0_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match0_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match0_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d30",write other [TODO]
__uncore_match0_show,0x2c,,RET,ret
__uncore_match_vnw_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_vnw_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_vnw_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa342d33",write other [TODO]
__uncore_match_vnw_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_match_vnw_show,0x27,,RET,ret
__uncore_match_mc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_mc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_mc_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match_mc_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x32312d39",write other [TODO]
__uncore_match_mc_show,0x2c,,RET,ret
__uncore_match_dnid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_dnid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_dnid_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match_dnid_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x312d3331",write other [TODO]
__uncore_match_dnid_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_match_dnid_show,0x30,,RET,ret
__uncore_match_rnid4_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_rnid4_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_rnid4_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3133",write other [TODO]
__uncore_match_rnid4_show,0x23,,RET,ret
__uncore_match_rnid30_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_rnid30_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_rnid30_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match_rnid30_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x332d3233",write other [TODO]
__uncore_match_rnid30_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_match_rnid30_show,0x30,,RET,ret
__uncore_match_rds_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_rds_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_rds_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_match_rds_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x352d3834",write other [TODO]
__uncore_match_rds_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_match_rds_show,0x30,,RET,ret
__uncore_event_ext_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event_ext_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event_ext_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_event_ext_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322c372d",write other [TODO]
__uncore_event_ext_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_event_ext_show,0x30,,RET,ret
__uncore_filter_isoc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_isoc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_isoc_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3336",write other [TODO]
__uncore_filter_isoc_show,0x23,,RET,ret
__uncore_filter_c6_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_c6_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_c6_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3136",write other [TODO]
__uncore_filter_c6_show,0x23,,RET,ret
__uncore_filter_nc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_nc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_nc_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3236",write other [TODO]
__uncore_filter_nc_show,0x23,,RET,ret
__uncore_filter_opc2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_opc2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_opc2_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_opc2_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3235",write other [TODO]
__uncore_filter_opc2_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_opc2_show,0x30,,RET,ret
__uncore_filter_nid2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_nid2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_nid2_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_nid2_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x342d3233",write other [TODO]
__uncore_filter_nid2_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_nid2_show,0x30,,RET,ret
__uncore_filter_state2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_state2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_state2_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_state2_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322d3731",write other [TODO]
__uncore_filter_state2_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_state2_show,0x30,,RET,ret
__uncore_filter_link_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_link_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_link_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa382d35",write other [TODO]
__uncore_filter_link_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_link_show,0x27,,RET,ret
__uncore_occ_edge_det_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_occ_edge_det_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_occ_edge_det_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_occ_edge_det_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_occ_edge_det_show,0x29,,RET,ret
__uncore_thresh6_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thresh6_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thresh6_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thresh6_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x39322d34",write other [TODO]
__uncore_thresh6_show,0x2c,,RET,ret
__uncore_use_occ_ctr_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_use_occ_ctr_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_use_occ_ctr_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_use_occ_ctr_show,0x25,,RET,ret
__uncore_event2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event2_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa362d",write other [TODO]
__uncore_event2_show,0x23,,RET,ret
__uncore_filter_opc3_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_opc3_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_opc3_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_opc3_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3134",write other [TODO]
__uncore_filter_opc3_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_opc3_show,0x30,,RET,ret
__uncore_filter_all_op_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_all_op_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_all_op_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3533",write other [TODO]
__uncore_filter_all_op_show,0x23,,RET,ret
__uncore_filter_state4_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_state4_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_state4_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_state4_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322d3831",write other [TODO]
__uncore_filter_state4_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_state4_show,0x30,,RET,ret
__uncore_filter_link3_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_link3_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_link3_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3231",write other [TODO]
__uncore_filter_link3_show,0x23,,RET,ret
__uncore_filter_tid4_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_tid4_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_tid4_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa382d30",write other [TODO]
__uncore_filter_tid4_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_tid4_show,0x27,,RET,ret
__uncore_qor_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_qor_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_qor_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_qor_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_qor_show,0x29,,RET,ret
__uncore_filter_cid_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_cid_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_cid_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_filter_cid_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_filter_cid_show,0x29,,RET,ret
__uncore_filter_tid2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_tid2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_tid2_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_filter_tid2_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_filter_tid2_show,0x29,,RET,ret
__uncore_filter_state3_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_state3_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_state3_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_state3_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322d3731",write other [TODO]
__uncore_filter_state3_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_state3_show,0x30,,RET,ret
__uncore_filter_link2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_link2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_link2_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa382d36",write other [TODO]
__uncore_filter_link2_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_link2_show,0x27,,RET,ret
__uncore_filter_tid3_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_tid3_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_tid3_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa352d30",write other [TODO]
__uncore_filter_tid3_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_tid3_show,0x27,,RET,ret
skx_iio_mapping_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_iio_mapping_show,0x4e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
skx_iio_mapping_show,0x56,,RET,ret
__uncore_fc_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_fc_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_fc_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_fc_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x36342d34",write other [TODO]
__uncore_fc_mask_show,0x2c,,RET,ret
__uncore_ch_mask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_ch_mask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_ch_mask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_ch_mask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x33342d36",write other [TODO]
__uncore_ch_mask_show,0x2c,,RET,ret
__uncore_thresh9_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thresh9_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thresh9_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thresh9_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x35332d34",write other [TODO]
__uncore_thresh9_show,0x2c,,RET,ret
__uncore_filter_opc_1_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_opc_1_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_opc_1_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_opc_1_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x362d3135",write other [TODO]
__uncore_filter_opc_1_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_opc_1_show,0x30,,RET,ret
__uncore_filter_opc_0_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_opc_0_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_opc_0_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_opc_0_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x352d3134",write other [TODO]
__uncore_filter_opc_0_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_opc_0_show,0x30,,RET,ret
__uncore_filter_not_nm_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_not_nm_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_not_nm_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3733",write other [TODO]
__uncore_filter_not_nm_show,0x23,,RET,ret
__uncore_filter_nm_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_nm_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_nm_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3633",write other [TODO]
__uncore_filter_nm_show,0x23,,RET,ret
__uncore_filter_loc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_loc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_loc_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3333",write other [TODO]
__uncore_filter_loc_show,0x23,,RET,ret
__uncore_filter_rem_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_rem_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_rem_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3233",write other [TODO]
__uncore_filter_rem_show,0x23,,RET,ret
__uncore_filter_state5_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_state5_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_state5_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_filter_state5_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x322d3731",write other [TODO]
__uncore_filter_state5_show,0x2c,ctx->rdx + 0xe,"MOV byte ptr [RDX + 0xe],0x0",write other [TODO]
__uncore_filter_state5_show,0x30,,RET,ret
__uncore_umask_ext_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_ext_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_ext_show,0x1d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__uncore_umask_ext_show,0x2e,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RAX",write other [TODO]
__uncore_umask_ext_show,0x38,ctx->rdx + 0x18,"MOV byte ptr [RDX + 0x18],0x0",write other [TODO]
__uncore_umask_ext_show,0x3c,,RET,ret
__uncore_fc_mask2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_fc_mask2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_fc_mask2_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_fc_mask2_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x30352d38",write other [TODO]
__uncore_fc_mask2_show,0x2c,,RET,ret
__uncore_ch_mask2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_ch_mask2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_ch_mask2_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_ch_mask2_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x37342d36",write other [TODO]
__uncore_ch_mask2_show,0x2c,,RET,ret
__uncore_filter_tid5_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_tid5_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_tid5_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa392d30",write other [TODO]
__uncore_filter_tid5_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_filter_tid5_show,0x27,,RET,ret
__uncore_umask_ext2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_ext2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_ext2_show,0x1d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__uncore_umask_ext2_show,0x29,ctx->wordctx->ptrctx->rdx + 0x10,"MOV word ptr [RDX + 0x10],AX",write other [TODO]
__uncore_umask_ext2_show,0x33,ctx->rdx + 0x12,"MOV byte ptr [RDX + 0x12],0x0",write other [TODO]
__uncore_umask_ext2_show,0x37,,RET,ret
__uncore_umask_ext3_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_ext3_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_ext3_show,0x1d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__uncore_umask_ext3_show,0x29,ctx->wordctx->ptrctx->rdx + 0x10,"MOV word ptr [RDX + 0x10],AX",write other [TODO]
__uncore_umask_ext3_show,0x33,ctx->rdx + 0x12,"MOV byte ptr [RDX + 0x12],0x0",write other [TODO]
__uncore_umask_ext3_show,0x37,,RET,ret
__uncore_umask_ext4_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_ext4_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_ext4_show,0x1d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__uncore_umask_ext4_show,0x29,ctx->wordctx->ptrctx->rdx + 0x10,"MOV word ptr [RDX + 0x10],AX",write other [TODO]
__uncore_umask_ext4_show,0x33,ctx->rdx + 0x12,"MOV byte ptr [RDX + 0x12],0x0",write other [TODO]
__uncore_umask_ext4_show,0x37,,RET,ret
snbep_uncore_pci_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_read_counter,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
snbep_uncore_pci_read_counter,0x33,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
snbep_uncore_pci_read_counter,0x3e,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snbep_uncore_pci_read_counter,0x54,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snbep_uncore_pci_read_counter,0x74,,RET,ret
snbep_uncore_pci_read_counter,0x75,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ivbep_uncore_irp_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_irp_read_counter,0x27,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ivbep_uncore_irp_read_counter,0x34,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
ivbep_uncore_irp_read_counter,0x46,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ivbep_uncore_irp_read_counter,0x63,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ivbep_uncore_irp_read_counter,0x83,,RET,ret
ivbep_uncore_irp_read_counter,0x84,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hswep_uncore_irp_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_uncore_irp_read_counter,0x27,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
hswep_uncore_irp_read_counter,0x34,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
hswep_uncore_irp_read_counter,0x46,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
hswep_uncore_irp_read_counter,0x63,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
hswep_uncore_irp_read_counter,0x83,,RET,ret
hswep_uncore_irp_read_counter,0x84,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snbep_uncore_pci_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_enable_event,0x22,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_uncore_pci_enable_event,0x28,,RET,ret
snbep_uncore_pci_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_disable_event,0x1c,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_uncore_pci_disable_event,0x22,,RET,ret
snbep_uncore_pci_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_enable_box,0x25,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
snbep_uncore_pci_enable_box,0x32,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0x0",write stack
snbep_uncore_pci_enable_box,0x4a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snbep_uncore_pci_enable_box,0x6b,,RET,ret
snbep_uncore_pci_enable_box,0x78,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EDX",write stack
snbep_uncore_pci_enable_box,0x7b,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_uncore_pci_enable_box,0x82,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snbep_uncore_pci_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_disable_box,0x25,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
snbep_uncore_pci_disable_box,0x32,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0x0",write stack
snbep_uncore_pci_disable_box,0x4a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snbep_uncore_pci_disable_box,0x6b,,RET,ret
snbep_uncore_pci_disable_box,0x78,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EDX",write stack
snbep_uncore_pci_disable_box,0x7b,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_uncore_pci_disable_box,0x82,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snbep_uncore_pci_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_init_box,0x26,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_uncore_pci_init_box,0x2c,,RET,ret
snbep_qpi_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_qpi_enable_event,0x55,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_qpi_enable_event,0x6c,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_qpi_enable_event,0x80,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_qpi_enable_event,0x97,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_qpi_enable_event,0xb1,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snbep_qpi_enable_event,0xbc,,RET,ret
ivbep_uncore_pci_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_pci_init_box,0x1a,0xffffffff81669050,CALL 0xffffffff81669050,direct call
ivbep_uncore_pci_init_box,0x20,,RET,ret
ivbep_uncore_irp_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_irp_enable_event,0x2a,0xffffffff81669050,CALL 0xffffffff81669050,direct call
ivbep_uncore_irp_enable_event,0x30,,RET,ret
ivbep_uncore_irp_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_irp_disable_event,0x28,0xffffffff81669050,CALL 0xffffffff81669050,direct call
ivbep_uncore_irp_disable_event,0x2e,,RET,ret
knl_uncore_imc_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_uncore_imc_enable_event,0x36,0xffffffff81669050,CALL 0xffffffff81669050,direct call
knl_uncore_imc_enable_event,0x3c,,RET,ret
knl_uncore_imc_enable_event,0x43,0xffffffff81669050,CALL 0xffffffff81669050,direct call
knl_uncore_imc_enable_event,0x49,,RET,ret
knl_uncore_imc_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_uncore_imc_enable_box,0x23,0xffffffff81669050,CALL 0xffffffff81669050,direct call
knl_uncore_imc_enable_box,0x29,,RET,ret
snr_uncore_pci_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_pci_enable_event,0x2b,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snr_uncore_pci_enable_event,0x42,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snr_uncore_pci_enable_event,0x4b,,RET,ret
spr_uncore_pci_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_pci_enable_event,0x28,0xffffffff81669050,CALL 0xffffffff81669050,direct call
spr_uncore_pci_enable_event,0x3c,0xffffffff81669050,CALL 0xffffffff81669050,direct call
spr_uncore_pci_enable_event,0x45,,RET,ret
skx_upi_uncore_pci_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_upi_uncore_pci_init_box,0x23,0xffffffff81669050,CALL 0xffffffff81669050,direct call
skx_upi_uncore_pci_init_box,0x29,,RET,ret
skx_m2m_uncore_pci_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_m2m_uncore_pci_init_box,0x23,0xffffffff81669050,CALL 0xffffffff81669050,direct call
skx_m2m_uncore_pci_init_box,0x29,,RET,ret
snr_m2m_uncore_pci_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_m2m_uncore_pci_init_box,0x2f,0xffffffff81669050,CALL 0xffffffff81669050,direct call
snr_m2m_uncore_pci_init_box,0x35,,RET,ret
snbep_pci2phy_map_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_pci2phy_map_init,0x20,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDI",write stack
snbep_pci2phy_map_init,0x23,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],ESI",write stack
snbep_pci2phy_map_init,0x26,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EDX",write stack
snbep_pci2phy_map_init,0x29,ctx->rbp - 0x4d,"MOV byte ptr [RBP + -0x4d],CL",write stack
snbep_pci2phy_map_init,0x35,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
snbep_pci2phy_map_init,0x3b,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
snbep_pci2phy_map_init,0x4d,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
snbep_pci2phy_map_init,0x81,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snbep_pci2phy_map_init,0x9f,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snbep_pci2phy_map_init,0xc8,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R9D",write stack
snbep_pci2phy_map_init,0xcc,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
snbep_pci2phy_map_init,0xd4,0xffffffff8101a240,CALL 0xffffffff8101a240,direct call
snbep_pci2phy_map_init,0x10d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snbep_pci2phy_map_init,0x12c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
snbep_pci2phy_map_init,0x134,0xffffffff8101a240,CALL 0xffffffff8101a240,direct call
snbep_pci2phy_map_init,0x139,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
snbep_pci2phy_map_init,0x14d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
snbep_pci2phy_map_init,0x19e,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
snbep_pci2phy_map_init,0x1a3,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
snbep_pci2phy_map_init,0x1b4,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snbep_pci2phy_map_init,0x1ed,,RET,ret
snbep_pci2phy_map_init,0x1f9,ctx->rdi + ctx->r14 * 0x4 + 0x14,"MOV dword ptr [RDI + R14*0x4 + 0x14],EAX",write other [TODO]
snbep_pci2phy_map_init,0x205,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snbep_pci2phy_map_init,0x218,ctx->rdx + ctx->r14 * 0x4 + 0x14,"MOV dword ptr [RDX + R14*0x4 + 0x14],R12D",write other [TODO]
snbep_pci2phy_map_init,0x224,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snbep_pci2phy_map_init,0x231,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
snbep_pci2phy_map_init,0x235,0xffffffff8106d0b0,CALL 0xffffffff8106d0b0,direct call
snbep_pci2phy_map_init,0x254,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
snbep_pci2phy_map_init,0x28c,ctx->edx,"MOV EDX,dword ptr [RAX]",write other [TODO]
snbep_pci2phy_map_init,0x293,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
snbep_pci2phy_map_init,0x29e,ctx->rdi,"MOV RDI,qword ptr [RDI]",write other [TODO]
snbep_pci2phy_map_init,0x2b4,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snbep_pci2phy_map_init,0x2bb,0xffffffff81676870,CALL 0xffffffff81676870,direct call
snbep_pci2phy_map_init,0x2e9,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
snbep_pci2phy_map_init,0x2fa,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
snbep_pci2phy_map_init,0x302,0xffffffff81676870,CALL 0xffffffff81676870,direct call
snbep_pci2phy_map_init,0x30f,0xffffffff81676870,CALL 0xffffffff81676870,direct call
snbep_pci2phy_map_init,0x341,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pmu_iio_cleanup_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_iio_cleanup_mapping,0x2c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_cleanup_mapping,0x41,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_cleanup_mapping,0x4b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_cleanup_mapping,0x50,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],0x0",write other [TODO]
pmu_iio_cleanup_mapping,0x60,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_cleanup_mapping,0x6b,,RET,ret
skx_iio_cleanup_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_iio_cleanup_mapping,0x10,0xffffffff8101fc80,CALL 0xffffffff8101fc80,direct call
skx_iio_cleanup_mapping,0x16,,RET,ret
snr_iio_cleanup_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_iio_cleanup_mapping,0x10,0xffffffff8101fc80,CALL 0xffffffff8101fc80,direct call
snr_iio_cleanup_mapping,0x16,,RET,ret
icx_iio_cleanup_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_iio_cleanup_mapping,0x10,0xffffffff8101fc80,CALL 0xffffffff8101fc80,direct call
icx_iio_cleanup_mapping,0x16,,RET,ret
snr_uncore_mmio_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_map,0x21,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ESI",write stack
snr_uncore_mmio_map,0x30,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
snr_uncore_mmio_map,0x3c,0xffffffff8101a130,CALL 0xffffffff8101a130,direct call
snr_uncore_mmio_map,0x50,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
snr_uncore_mmio_map,0x9e,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snr_uncore_mmio_map,0xc1,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
snr_uncore_mmio_map,0xdf,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
snr_uncore_mmio_map,0xe4,ctx->r14 + 0x1e0,"MOV qword ptr [R14 + 0x1e0],RAX",write other [TODO]
icx_uncore_imc_freerunning_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_uncore_imc_freerunning_init_box,0x30,0xffffffff8101fd50,CALL 0xffffffff8101fd50,direct call
icx_uncore_imc_freerunning_init_box,0x36,,RET,ret
spr_uncore_imc_freerunning_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_imc_freerunning_init_box,0x30,0xffffffff8101fd50,CALL 0xffffffff8101fd50,direct call
spr_uncore_imc_freerunning_init_box,0x36,,RET,ret
uncore_get_uncores,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uncore_get_uncores,0x11,0xffffffff810224f0,CALL 0xffffffff810224f0,direct call
uncore_get_uncores,0x4e,ctx->rax,"MOV qword ptr [RAX],RSI",write other [TODO]
uncore_get_uncores,0x58,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],ESI",write other [TODO]
uncore_get_uncores,0x62,ctx->rax + 0x28,"MOV dword ptr [RAX + 0x28],ESI",write other [TODO]
uncore_get_uncores,0x6c,ctx->rax + 0x2c,"MOV dword ptr [RAX + 0x2c],ESI",write other [TODO]
uncore_get_uncores,0x76,ctx->rax + 0x30,"MOV dword ptr [RAX + 0x30],ESI",write other [TODO]
uncore_get_uncores,0x80,ctx->rax + 0x34,"MOV dword ptr [RAX + 0x34],ESI",write other [TODO]
uncore_get_uncores,0x8a,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],ESI",write other [TODO]
uncore_get_uncores,0x96,ctx->rax + 0x50,"MOV byte ptr [RAX + 0x50],SIL",write other [TODO]
uncore_get_uncores,0xa6,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],RSI",write other [TODO]
uncore_get_uncores,0xb9,ctx->rax + 0xa0,"MOV qword ptr [RAX + 0xa0],RSI",write other [TODO]
uncore_get_uncores,0xcc,ctx->rax + 0xa8,"MOV qword ptr [RAX + 0xa8],RSI",write other [TODO]
uncore_get_uncores,0xdf,ctx->rax + 0xc0,"MOV qword ptr [RAX + 0xc0],RSI",write other [TODO]
uncore_get_uncores,0xf2,ctx->rax + 0xd8,"MOV qword ptr [RAX + 0xd8],RDX",write other [TODO]
uncore_get_uncores,0x113,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
uncore_get_uncores,0x11d,,RET,ret
alias_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alias_show,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
alias_show,0x29,0xffffffff8101ae30,CALL 0xffffffff8101ae30,direct call
alias_show,0x3c,0xffffffff81417b00,CALL 0xffffffff81417b00,direct call
alias_show,0x57,,RET,ret
alias_show,0x58,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snbep_cbox_put_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_cbox_put_constraint,0x3b,ctx->rsi + 0x19c,"MOV dword ptr [RSI + 0x19c],0x0",write other [TODO]
snbep_cbox_put_constraint,0x46,,RET,ret
snbep_pcu_put_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_pcu_put_constraint,0x34,ctx->rsi + 0x19c,"MOV dword ptr [RSI + 0x19c],0x0",write other [TODO]
snbep_pcu_put_constraint,0x3f,,RET,ret
snbep_qpi_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_qpi_hw_config,0x19,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
snbep_qpi_hw_config,0x23,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],0x228",write other [TODO]
snbep_qpi_hw_config,0x2d,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
snbep_qpi_hw_config,0x3b,ctx->rsi + 0x1b0,"MOV dword ptr [RSI + 0x1b0],0x238",write other [TODO]
snbep_qpi_hw_config,0x45,ctx->rsi + 0x1a8,"MOV qword ptr [RSI + 0x1a8],RAX",write other [TODO]
snbep_qpi_hw_config,0x4f,,RET,ret
icx_cha_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_cha_hw_config,0x20,ctx->rsi + 0x1a0,"MOV dword ptr [RSI + 0x1a0],0x0",write other [TODO]
icx_cha_hw_config,0x36,ctx->rsi + 0x198,"MOV dword ptr [RSI + 0x198],EAX",write other [TODO]
icx_cha_hw_config,0x48,ctx->rsi + 0x190,"MOV qword ptr [RSI + 0x190],RAX",write other [TODO]
icx_cha_hw_config,0x52,,RET,ret
snr_uncore_mmio_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_enable_event,0x3b,,RET,ret
snr_uncore_mmio_enable_event,0x3c,,RET,ret
snr_uncore_mmio_enable_event,0x4d,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
snr_uncore_mmio_enable_event,0x4f,,RET,ret
icx_uncore_imc_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_uncore_imc_init_box,0x53,0xffffffff8101fd50,CALL 0xffffffff8101fd50,direct call
icx_uncore_imc_init_box,0x68,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
icx_uncore_imc_init_box,0x6f,,RET,ret
__uncore_match_opc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_match_opc_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_match_opc_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa382d35",write other [TODO]
__uncore_match_opc_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_match_opc_show,0x27,,RET,ret
__uncore_tid_en2_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_tid_en2_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_tid_en2_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_tid_en2_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_tid_en2_show,0x29,,RET,ret
__uncore_filter_local_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_local_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_local_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3333",write other [TODO]
__uncore_filter_local_show,0x23,,RET,ret
__uncore_filter_nnm_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_filter_nnm_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_filter_nnm_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa3733",write other [TODO]
__uncore_filter_nnm_show,0x23,,RET,ret
snbep_pcu_get_constraint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_pcu_get_constraint,0x5f,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
snbep_pcu_get_constraint,0x62,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
snbep_pcu_get_constraint,0x66,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
snbep_pcu_get_constraint,0xb2,ctx->r15 + 0x1f0,"MOV qword ptr [R15 + 0x1f0],R12",write other [TODO]
snbep_pcu_get_constraint,0xb9,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
snbep_pcu_get_constraint,0xd4,ctx->r13 + 0x19c,"MOV dword ptr [R13 + 0x19c],0x1",write other [TODO]
snbep_pcu_get_constraint,0xef,,RET,ret
snbep_pcu_get_constraint,0xf6,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
snbep_pcu_get_constraint,0x153,,RET,ret
snbep_pcu_get_constraint,0x170,ctx->r13 + 0x190,"MOV qword ptr [R13 + 0x190],RSI",write other [TODO]
snbep_pcu_get_constraint,0x17e,ctx->r13 + 0x1a0,"MOV dword ptr [R13 + 0x1a0],EBX",write other [TODO]
snbep_pcu_get_constraint,0x185,ctx->r13 + 0x19c,"MOV dword ptr [R13 + 0x19c],0x1",write other [TODO]
snr_uncore_mmio_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_init_box,0x32,0xffffffff8101fd50,CALL 0xffffffff8101fd50,direct call
snr_uncore_mmio_init_box,0x47,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
snr_uncore_mmio_init_box,0x4e,,RET,ret
icx_iio_mapping_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_iio_mapping_visible,0x45,,RET,ret
snr_iio_mapping_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_iio_mapping_visible,0x45,,RET,ret
snr_uncore_mmio_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_disable_event,0x3b,,RET,ret
snr_uncore_mmio_disable_event,0x3c,,RET,ret
snr_uncore_mmio_disable_event,0x46,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
snr_uncore_mmio_disable_event,0x48,,RET,ret
snbep_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_msr_enable_box,0x3b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
snbep_uncore_msr_enable_box,0x54,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snbep_uncore_msr_enable_box,0x5f,,RET,ret
knl_cha_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_cha_hw_config,0x68,ctx->r9 + 0x198,"MOV dword ptr [R9 + 0x198],EAX",write other [TODO]
knl_cha_hw_config,0x9a,ctx->r9 + 0x1a0,"MOV dword ptr [R9 + 0x1a0],ESI",write other [TODO]
knl_cha_hw_config,0xae,ctx->r9 + 0x190,"MOV qword ptr [R9 + 0x190],RAX",write other [TODO]
knl_cha_hw_config,0xb8,,RET,ret
snbep_cbox_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_cbox_hw_config,0x66,ctx->r9 + 0x198,"MOV dword ptr [R9 + 0x198],EAX",write other [TODO]
snbep_cbox_hw_config,0xa8,ctx->r9 + 0x1a0,"MOV dword ptr [R9 + 0x1a0],ESI",write other [TODO]
snbep_cbox_hw_config,0xaf,ctx->r9 + 0x190,"MOV qword ptr [R9 + 0x190],RAX",write other [TODO]
snbep_cbox_hw_config,0xb9,,RET,ret
skx_cha_hw_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_cha_hw_config,0x7b,ctx->r9 + 0x198,"MOV dword ptr [R9 + 0x198],EAX",write other [TODO]
skx_cha_hw_config,0xbe,ctx->r9 + 0x1a0,"MOV dword ptr [R9 + 0x1a0],ESI",write other [TODO]
skx_cha_hw_config,0xc5,ctx->r9 + 0x190,"MOV qword ptr [R9 + 0x190],RAX",write other [TODO]
skx_cha_hw_config,0xcf,,RET,ret
skx_cha_hw_config,0xfc,ctx->r9 + 0x198,"MOV dword ptr [R9 + 0x198],EAX",write other [TODO]
sad_cfg_iio_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sad_cfg_iio_topology,0x20,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
sad_cfg_iio_topology,0x46,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
sad_cfg_iio_topology,0x4b,ctx->rbx + 0xe8,"MOV qword ptr [RBX + 0xe8],RAX",write other [TODO]
sad_cfg_iio_topology,0x72,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
sad_cfg_iio_topology,0x86,0xffffffff8101a130,CALL 0xffffffff8101a130,direct call
sad_cfg_iio_topology,0xc9,ctx->rdi + ctx->rdx * 0x1,"MOV byte ptr [RDI + RDX*0x1],CL",write other [TODO]
sad_cfg_iio_topology,0xe0,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV dword ptr [RDX + RAX*0x1 + 0x8],ECX",write other [TODO]
sad_cfg_iio_topology,0xf1,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
sad_cfg_iio_topology,0x129,,RET,ret
sad_cfg_iio_topology,0x137,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sad_cfg_iio_topology,0x13c,ctx->rbx + 0xe8,"MOV qword ptr [RBX + 0xe8],0x0",write other [TODO]
sad_cfg_iio_topology,0x179,ctx->rbx + 0xe8,"MOV qword ptr [RBX + 0xe8],0x0",write other [TODO]
sad_cfg_iio_topology,0x19a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snr_iio_get_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_iio_get_topology,0x10,0xffffffff81020920,CALL 0xffffffff81020920,direct call
snr_iio_get_topology,0x16,,RET,ret
icx_iio_get_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_iio_get_topology,0x10,0xffffffff81020920,CALL 0xffffffff81020920,direct call
icx_iio_get_topology,0x16,,RET,ret
skx_iio_get_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_iio_get_topology,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
skx_iio_get_topology,0x45,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
skx_iio_get_topology,0x4a,ctx->r15 + 0xe8,"MOV qword ptr [R15 + 0xe8],RAX",write other [TODO]
skx_iio_get_topology,0x74,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
skx_iio_get_topology,0x7c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
skx_iio_get_topology,0xb2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
skx_iio_get_topology,0xb7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
skx_iio_get_topology,0xc5,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDI",write stack
skx_iio_get_topology,0xc8,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
skx_iio_get_topology,0xd9,0xffffffff81646600,CALL 0xffffffff81646600,direct call
skx_iio_get_topology,0xeb,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
skx_iio_get_topology,0xf0,0xffffffff8101a1a0,CALL 0xffffffff8101a1a0,direct call
skx_iio_get_topology,0x109,ctx->rdx + ctx->r13 * 0x1 + 0x8,"MOV dword ptr [RDX + R13*0x1 + 0x8],EAX",write other [TODO]
skx_iio_get_topology,0x126,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
skx_iio_get_topology,0x129,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
skx_iio_get_topology,0x131,ctx->r15 + 0xe8,"MOV qword ptr [R15 + 0xe8],0x0",write other [TODO]
skx_iio_get_topology,0x159,,RET,ret
skx_iio_get_topology,0x176,ctx->r15 + 0xe8,"MOV qword ptr [R15 + 0xe8],0x0",write other [TODO]
skx_iio_get_topology,0x188,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pmu_iio_set_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_iio_set_mapping,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pmu_iio_set_mapping,0x2b,ctx->rdi + 0xf0,CALL qword ptr [RDI + 0xf0],in-direct call
pmu_iio_set_mapping,0x5b,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
pmu_iio_set_mapping,0x8c,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
pmu_iio_set_mapping,0x91,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
pmu_iio_set_mapping,0xbd,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
pmu_iio_set_mapping,0xcb,0xffffffff812a7670,CALL 0xffffffff812a7670,direct call
pmu_iio_set_mapping,0xd0,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
pmu_iio_set_mapping,0xdd,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],R15",write other [TODO]
pmu_iio_set_mapping,0xe1,ctx->wordctx->ptrctx->rbx + 0x8,"MOV word ptr [RBX + 0x8],AX",write other [TODO]
pmu_iio_set_mapping,0xec,ctx->r12 + ctx->r15 * 0x8,"MOV qword ptr [R12 + R15*0x8],RBX",write other [TODO]
pmu_iio_set_mapping,0xf8,ctx->rbx - 0x18,"MOV qword ptr [RBX + -0x18],-0x7efe1140",write other [TODO]
pmu_iio_set_mapping,0x100,ctx->rbx - 0x10,"MOV qword ptr [RBX + -0x10],0x0",write other [TODO]
pmu_iio_set_mapping,0x10d,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],R12",write other [TODO]
pmu_iio_set_mapping,0x130,,RET,ret
pmu_iio_set_mapping,0x14e,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_set_mapping,0x15c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_set_mapping,0x164,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_set_mapping,0x170,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
pmu_iio_set_mapping,0x17a,ctx->r13 + 0xd8,"MOV qword ptr [R13 + 0xd8],0x0",write other [TODO]
pmu_iio_set_mapping,0x187,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
skx_iio_set_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_iio_set_mapping,0x10,0xffffffff81020c90,CALL 0xffffffff81020c90,direct call
skx_iio_set_mapping,0x16,,RET,ret
snr_iio_set_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_iio_set_mapping,0x10,0xffffffff81020c90,CALL 0xffffffff81020c90,direct call
snr_iio_set_mapping,0x16,,RET,ret
icx_iio_set_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_iio_set_mapping,0x10,0xffffffff81020c90,CALL 0xffffffff81020c90,direct call
icx_iio_set_mapping,0x16,,RET,ret
hswep_uncore_sbox_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_uncore_sbox_msr_init_box,0x79,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hswep_uncore_sbox_msr_init_box,0xa3,,RET,ret
hswep_uncore_sbox_msr_init_box,0xb2,,RET,ret
snbep_uncore_msr_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_msr_disable_event,0x1c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snbep_uncore_msr_disable_event,0x23,,RET,ret
skx_iio_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_iio_enable_event,0x22,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
skx_iio_enable_event,0x29,,RET,ret
spr_uncore_msr_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_msr_disable_event,0x21,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
spr_uncore_msr_disable_event,0x32,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
spr_uncore_msr_disable_event,0x3d,,RET,ret
spr_uncore_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_msr_enable_event,0x29,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
spr_uncore_msr_enable_event,0x42,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
spr_uncore_msr_enable_event,0x4d,,RET,ret
snr_cha_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_cha_enable_event,0x29,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snr_cha_enable_event,0x48,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snr_cha_enable_event,0x53,,RET,ret
snbep_uncore_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_msr_enable_event,0x18,0xffffffff8101a580,CALL 0xffffffff8101a580,direct call
snbep_uncore_msr_enable_event,0x2c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snbep_uncore_msr_enable_event,0x4b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snbep_uncore_msr_enable_event,0x56,,RET,ret
snbep_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_msr_init_box,0x3e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snbep_uncore_msr_init_box,0x45,,RET,ret
snbep_uncore_msr_init_box,0x46,,RET,ret
ivbep_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_msr_init_box,0x3e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
ivbep_uncore_msr_init_box,0x45,,RET,ret
ivbep_uncore_msr_init_box,0x46,,RET,ret
ivbep_cbox_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_cbox_enable_event,0x1f,0xffffffff8101a580,CALL 0xffffffff8101a580,direct call
ivbep_cbox_enable_event,0x32,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
ivbep_cbox_enable_event,0x4b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
ivbep_cbox_enable_event,0x6a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
ivbep_cbox_enable_event,0x76,,RET,ret
hswep_cbox_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_cbox_enable_event,0x1f,0xffffffff8101a580,CALL 0xffffffff8101a580,direct call
hswep_cbox_enable_event,0x32,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hswep_cbox_enable_event,0x4b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hswep_cbox_enable_event,0x6a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hswep_cbox_enable_event,0x76,,RET,ret
snbep_uncore_msr_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_msr_disable_box,0x3b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
snbep_uncore_msr_disable_box,0x53,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
snbep_uncore_msr_disable_box,0x5e,,RET,ret
snbep_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_cpu_init,0x18,0xffffffff82e3438c,"MOV dword ptr [0xffffffff82e3438c],EAX",write .data
snbep_uncore_cpu_init,0x1e,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1cbe20",write .data
snbep_uncore_cpu_init,0x2a,,RET,ret
snbep_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snbep_uncore_pci_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
snbep_uncore_pci_init,0x26,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1cc460",write .data
snbep_uncore_pci_init,0x31,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1cc5a0",write .data
snbep_uncore_pci_init,0x3d,,RET,ret
ivbep_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_cpu_init,0x18,0xffffffff82e3304c,"MOV dword ptr [0xffffffff82e3304c],EAX",write .data
ivbep_uncore_cpu_init,0x1e,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1cd160",write .data
ivbep_uncore_cpu_init,0x2a,,RET,ret
ivbep_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ivbep_uncore_pci_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
ivbep_uncore_pci_init,0x26,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1cd920",write .data
ivbep_uncore_pci_init,0x31,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1cda60",write .data
ivbep_uncore_pci_init,0x3d,,RET,ret
knl_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_uncore_cpu_init,0x6,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1ce0c0",write .data
knl_uncore_cpu_init,0x15,,RET,ret
knl_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
knl_uncore_pci_init,0xe,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
knl_uncore_pci_init,0x18,,RET,ret
knl_uncore_pci_init,0x1e,0xffffffff8101d710,CALL 0xffffffff8101d710,direct call
knl_uncore_pci_init,0x27,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1ce8c0",write .data
knl_uncore_pci_init,0x33,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1cea00",write .data
knl_uncore_pci_init,0x3e,,RET,ret
hswep_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_uncore_cpu_init,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
hswep_uncore_cpu_init,0x2b,0xffffffff82e30c4c,"MOV dword ptr [0xffffffff82e30c4c],EAX",write .data
hswep_uncore_cpu_init,0x3d,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
hswep_uncore_cpu_init,0x53,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
hswep_uncore_cpu_init,0x5e,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1cf740",write .data
hswep_uncore_cpu_init,0x79,,RET,ret
hswep_uncore_cpu_init,0x7a,0xffffffff82e30a8c,"MOV dword ptr [0xffffffff82e30a8c],0x2",write .data
hswep_uncore_cpu_init,0x86,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hswep_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hswep_uncore_pci_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
hswep_uncore_pci_init,0x26,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d0840",write .data
hswep_uncore_pci_init,0x31,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1d0980",write .data
hswep_uncore_pci_init,0x3d,,RET,ret
bdx_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bdx_uncore_cpu_init,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
bdx_uncore_cpu_init,0x2b,0xffffffff82e2f36c,"MOV dword ptr [0xffffffff82e2f36c],EAX",write .data
bdx_uncore_cpu_init,0x3f,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d0e00",write .data
bdx_uncore_cpu_init,0x4c,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x0",write other [TODO]
bdx_uncore_cpu_init,0x54,0xffffffff82e30990,"MOV qword ptr [0xffffffff82e30990],-0x7d1d0e60",write .data
bdx_uncore_cpu_init,0x6f,,RET,ret
bdx_uncore_cpu_init,0x7c,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
bdx_uncore_cpu_init,0x92,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
bdx_uncore_cpu_init,0xa6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
bdx_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bdx_uncore_pci_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
bdx_uncore_pci_init,0x26,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d1be0",write .data
bdx_uncore_pci_init,0x31,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1d1d20",write .data
bdx_uncore_pci_init,0x3d,,RET,ret
skx_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_uncore_cpu_init,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
skx_uncore_cpu_init,0x2a,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x0",write stack
skx_uncore_cpu_init,0x31,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
skx_uncore_cpu_init,0x4a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
skx_uncore_cpu_init,0x59,0xffffffff81676870,CALL 0xffffffff81676870,direct call
skx_uncore_cpu_init,0x61,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d3080",write .data
skx_uncore_cpu_init,0x6c,0xffffffff81647310,CALL 0xffffffff81647310,direct call
skx_uncore_cpu_init,0x71,0xffffffff82e2ddec,"MOV dword ptr [0xffffffff82e2ddec],EAX",write .data
skx_uncore_cpu_init,0x8b,,RET,ret
skx_uncore_cpu_init,0x8c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
skx_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skx_uncore_pci_init,0x1a,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
skx_uncore_pci_init,0x23,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d3940",write .data
skx_uncore_pci_init,0x2e,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1d3a80",write .data
skx_uncore_pci_init,0x3a,,RET,ret
snr_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_cpu_init,0x6,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d4940",write .data
snr_uncore_cpu_init,0x15,,RET,ret
snr_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_pci_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
snr_uncore_pci_init,0x26,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d4cb0",write .data
snr_uncore_pci_init,0x31,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1d4de0",write .data
snr_uncore_pci_init,0x3c,0xffffffff833fca00,"MOV qword ptr [0xffffffff833fca00],-0x7d1d4f20",write .data
snr_uncore_pci_init,0x48,,RET,ret
snr_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
snr_uncore_mmio_init,0x6,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],-0x7d1d5500",write .data
snr_uncore_mmio_init,0x15,,RET,ret
icx_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_uncore_cpu_init,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
icx_uncore_cpu_init,0x2a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
icx_uncore_cpu_init,0x32,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
icx_uncore_cpu_init,0x4b,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
icx_uncore_cpu_init,0x5c,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
icx_uncore_cpu_init,0x64,0xffffffff81676870,CALL 0xffffffff81676870,direct call
icx_uncore_cpu_init,0x6d,0xffffffff81647350,CALL 0xffffffff81647350,direct call
icx_uncore_cpu_init,0x78,0xffffffff82e2a8ec,"MOV dword ptr [0xffffffff82e2a8ec],EAX",write .data
icx_uncore_cpu_init,0x7e,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],-0x7d1d62c0",write .data
icx_uncore_cpu_init,0x9d,,RET,ret
icx_uncore_cpu_init,0xa2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
icx_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_uncore_pci_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
icx_uncore_pci_init,0x26,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],-0x7d1d6800",write .data
icx_uncore_pci_init,0x31,0xffffffff833fca08,"MOV qword ptr [0xffffffff833fca08],-0x7d1d6940",write .data
icx_uncore_pci_init,0x3d,,RET,ret
icx_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
icx_uncore_mmio_init,0x6,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],-0x7d1d6f10",write .data
icx_uncore_mmio_init,0x15,,RET,ret
spr_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_cpu_init,0x17,0xffffffff8101fed0,CALL 0xffffffff8101fed0,direct call
spr_uncore_cpu_init,0x24,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],RAX",write .data
spr_uncore_cpu_init,0x2b,0xffffffff8101e230,CALL 0xffffffff8101e230,direct call
spr_uncore_cpu_init,0x31,0xffffffff82e27a0c,"MOV dword ptr [0xffffffff82e27a0c],EAX",write .data
spr_uncore_cpu_init,0x37,,RET,ret
spr_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_pci_init,0x12,0xffffffff8101fed0,CALL 0xffffffff8101fed0,direct call
spr_uncore_pci_init,0x18,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],RAX",write .data
spr_uncore_pci_init,0x21,,RET,ret
spr_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spr_uncore_mmio_init,0x1d,0xffffffff8101f930,CALL 0xffffffff8101f930,direct call
spr_uncore_mmio_init,0x2f,0xffffffff8101fed0,CALL 0xffffffff8101fed0,direct call
spr_uncore_mmio_init,0x35,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],RAX",write .data
spr_uncore_mmio_init,0x3c,,RET,ret
spr_uncore_mmio_init,0x4e,0xffffffff8101fed0,CALL 0xffffffff8101fed0,direct call
spr_uncore_mmio_init,0x5b,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],RAX",write .data
spr_uncore_mmio_init,0x62,0xffffffff8101e230,CALL 0xffffffff8101e230,direct call
spr_uncore_mmio_init,0x71,0xffffffff82e277ac,"MOV dword ptr [0xffffffff82e277ac],EAX",write .data
spr_uncore_mmio_init,0x77,,RET,ret
intel_generic_uncore_mmio_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_mmio_disable_box,0x1a,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
intel_generic_uncore_mmio_disable_box,0x1d,,RET,ret
intel_generic_uncore_mmio_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_mmio_enable_box,0x17,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
intel_generic_uncore_mmio_enable_box,0x1a,,RET,ret
intel_generic_uncore_mmio_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_mmio_enable_event,0x22,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
intel_generic_uncore_mmio_enable_event,0x25,,RET,ret
intel_generic_uncore_mmio_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_mmio_disable_event,0x1e,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
intel_generic_uncore_mmio_disable_event,0x21,,RET,ret
intel_generic_uncore_pci_read_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_pci_read_counter,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
intel_generic_uncore_pci_read_counter,0x33,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
intel_generic_uncore_pci_read_counter,0x3e,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
intel_generic_uncore_pci_read_counter,0x54,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
intel_generic_uncore_pci_read_counter,0x74,,RET,ret
intel_generic_uncore_pci_read_counter,0x75,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_generic_uncore_mmio_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_mmio_init_box,0x65,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
intel_generic_uncore_mmio_init_box,0x6a,ctx->rbx + 0x1e0,"MOV qword ptr [RBX + 0x1e0],RAX",write other [TODO]
intel_generic_uncore_mmio_init_box,0x7f,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
intel_generic_uncore_mmio_init_box,0x87,,RET,ret
intel_generic_uncore_mmio_init_box,0xc6c862,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
intel_generic_uncore_pci_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_pci_init_box,0x2f,0xffffffff81669050,CALL 0xffffffff81669050,direct call
intel_generic_uncore_pci_init_box,0x35,,RET,ret
intel_generic_uncore_pci_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_pci_disable_box,0x26,0xffffffff81669050,CALL 0xffffffff81669050,direct call
intel_generic_uncore_pci_disable_box,0x2c,,RET,ret
intel_generic_uncore_pci_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_pci_enable_box,0x23,0xffffffff81669050,CALL 0xffffffff81669050,direct call
intel_generic_uncore_pci_enable_box,0x29,,RET,ret
intel_generic_uncore_pci_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_pci_disable_event,0x18,0xffffffff81669050,CALL 0xffffffff81669050,direct call
intel_generic_uncore_pci_disable_event,0x1e,,RET,ret
intel_generic_uncore_pci_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_pci_enable_event,0x1c,0xffffffff81669050,CALL 0xffffffff81669050,direct call
intel_generic_uncore_pci_enable_event,0x22,,RET,ret
__uncore_thresh_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_thresh_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_thresh_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
__uncore_thresh_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
__uncore_thresh_show,0x2c,,RET,ret
__uncore_inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_inv_show,0x29,,RET,ret
__uncore_edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
__uncore_edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
__uncore_edge_show,0x29,,RET,ret
__uncore_umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
__uncore_umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
__uncore_umask_show,0x27,,RET,ret
__uncore_event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uncore_event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__uncore_event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
__uncore_event_show,0x23,,RET,ret
intel_generic_uncore_msr_init_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_msr_init_box,0x3d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_generic_uncore_msr_init_box,0x44,,RET,ret
intel_generic_uncore_msr_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_msr_disable_event,0x14,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_generic_uncore_msr_disable_event,0x1b,,RET,ret
intel_generic_uncore_msr_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_msr_enable_event,0x1c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_generic_uncore_msr_enable_event,0x23,,RET,ret
intel_generic_uncore_msr_disable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_msr_disable_box,0x3d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_generic_uncore_msr_disable_box,0x44,,RET,ret
intel_generic_uncore_msr_enable_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_generic_uncore_msr_enable_box,0x3b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_generic_uncore_msr_enable_box,0x42,,RET,ret
intel_uncore_has_discovery_tables,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_uncore_has_discovery_tables,0x2b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_uncore_has_discovery_tables,0x31,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
intel_uncore_has_discovery_tables,0x48,0xffffffff8166fa90,CALL 0xffffffff8166fa90,direct call
intel_uncore_has_discovery_tables,0x52,0xffffffff81676870,CALL 0xffffffff81676870,direct call
intel_uncore_has_discovery_tables,0x57,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x9a7",write stack
intel_uncore_has_discovery_tables,0x66,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0xffffffff",write stack
intel_uncore_has_discovery_tables,0x77,ctx->rbp - 0x75,"MOV byte ptr [RBP + -0x75],0x0",write stack
intel_uncore_has_discovery_tables,0x7e,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
intel_uncore_has_discovery_tables,0x82,ctx->esi,"MOV ESI,dword ptr [RBP + -0x8c]",write other [TODO]
intel_uncore_has_discovery_tables,0x90,0xffffffff81678d40,CALL 0xffffffff81678d40,direct call
intel_uncore_has_discovery_tables,0xaf,0xffffffff8166fa90,CALL 0xffffffff8166fa90,direct call
intel_uncore_has_discovery_tables,0xc9,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
intel_uncore_has_discovery_tables,0xe1,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
intel_uncore_has_discovery_tables,0xe9,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EAX",write stack
intel_uncore_has_discovery_tables,0x10a,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],R12D",write stack
intel_uncore_has_discovery_tables,0x11a,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
intel_uncore_has_discovery_tables,0x15c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
intel_uncore_has_discovery_tables,0x17e,0xffffffff833fce28,"MOV dword ptr [0xffffffff833fce28],EAX",write .data
intel_uncore_has_discovery_tables,0x19d,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],ESI",write stack
intel_uncore_has_discovery_tables,0x1a0,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
intel_uncore_has_discovery_tables,0x1cf,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
intel_uncore_has_discovery_tables,0x1ec,0xffffffff816473b0,CALL 0xffffffff816473b0,direct call
intel_uncore_has_discovery_tables,0x226,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
intel_uncore_has_discovery_tables,0x248,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
intel_uncore_has_discovery_tables,0x269,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],R12D",write stack
intel_uncore_has_discovery_tables,0x273,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
intel_uncore_has_discovery_tables,0x292,0xffffffff816473b0,CALL 0xffffffff816473b0,direct call
intel_uncore_has_discovery_tables,0x2e2,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
intel_uncore_has_discovery_tables,0x2e7,ctx->rbp - 0x75,"MOV byte ptr [RBP + -0x75],0x1",write stack
intel_uncore_has_discovery_tables,0x341,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
intel_uncore_has_discovery_tables,0x375,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
intel_uncore_has_discovery_tables,0x391,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],R9",write stack
intel_uncore_has_discovery_tables,0x3a0,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
intel_uncore_has_discovery_tables,0x3e8,ctx->r10 + ctx->rax * 0x1,"MOV dword ptr [R10 + RAX*0x1],ECX",write other [TODO]
intel_uncore_has_discovery_tables,0x3f4,ctx->r9 + ctx->rax * 0x1,"MOV dword ptr [R9 + RAX*0x1],ESI",write other [TODO]
intel_uncore_has_discovery_tables,0x3fc,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],R9",write stack
intel_uncore_has_discovery_tables,0x417,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_has_discovery_tables,0x455,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
intel_uncore_has_discovery_tables,0x489,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RDX",write stack
intel_uncore_has_discovery_tables,0x490,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
intel_uncore_has_discovery_tables,0x49f,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
intel_uncore_has_discovery_tables,0x4b5,ctx->wordctx->ptrctx->r12 + 0x30,"MOV word ptr [R12 + 0x30],DI",write other [TODO]
intel_uncore_has_discovery_tables,0x4c6,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],EAX",write other [TODO]
intel_uncore_has_discovery_tables,0x4f8,ctx->r12,"MOV qword ptr [R12],RDX",write other [TODO]
intel_uncore_has_discovery_tables,0x4ff,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
intel_uncore_has_discovery_tables,0x508,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],0x0",write other [TODO]
intel_uncore_has_discovery_tables,0x511,ctx->rsi,"MOV qword ptr [RSI],R12",write other [TODO]
intel_uncore_has_discovery_tables,0x51b,0xffffffff81c7d690,CALL 0xffffffff81c7d690,direct call
intel_uncore_has_discovery_tables,0x53c,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
intel_uncore_has_discovery_tables,0x55d,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
intel_uncore_has_discovery_tables,0x562,ctx->rdx + ctx->rcx * 0x1,"MOV qword ptr [RDX + RCX*0x1],RAX",write other [TODO]
intel_uncore_has_discovery_tables,0x56a,ctx->r12 + 0x32,"MOV byte ptr [R12 + 0x32],AL",write other [TODO]
intel_uncore_has_discovery_tables,0x577,ctx->wordctx->ptrctx->r12 + 0x33,"MOV word ptr [R12 + 0x33],AX",write other [TODO]
intel_uncore_has_discovery_tables,0x581,ctx->r12 + 0x35,"MOV byte ptr [R12 + 0x35],AL",write other [TODO]
intel_uncore_has_discovery_tables,0x58a,ctx->r10,"MOV dword ptr [R10],EAX",write other [TODO]
intel_uncore_has_discovery_tables,0x594,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],R10",write other [TODO]
intel_uncore_has_discovery_tables,0x599,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],R9",write other [TODO]
intel_uncore_has_discovery_tables,0x5a3,ctx->rbp - 0x75,"MOV byte ptr [RBP + -0x75],0x0",write stack
intel_uncore_has_discovery_tables,0x5aa,0xffffffff81676870,CALL 0xffffffff81676870,direct call
intel_uncore_has_discovery_tables,0x5d0,,RET,ret
intel_uncore_has_discovery_tables,0x5d4,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R10",write stack
intel_uncore_has_discovery_tables,0x5db,ctx->r10 + ctx->rdx * 0x4,"MOV dword ptr [R10 + RDX*0x4],EDI",write other [TODO]
intel_uncore_has_discovery_tables,0x5e8,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],R9",write stack
intel_uncore_has_discovery_tables,0x5ef,ctx->r9 + ctx->rdx * 0x4,"MOV dword ptr [R9 + RDX*0x4],EAX",write other [TODO]
intel_uncore_has_discovery_tables,0x5f8,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_has_discovery_tables,0x602,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_has_discovery_tables,0x626,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],0x0",write other [TODO]
intel_uncore_has_discovery_tables,0x632,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_has_discovery_tables,0x63c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_uncore_has_discovery_tables,0xc6c4cb,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
intel_uncore_has_discovery_tables,0xc6c4d3,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
intel_uncore_clear_discovery_tables,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_uncore_clear_discovery_tables,0x13,0xffffffff81c7d660,CALL 0xffffffff81c7d660,direct call
intel_uncore_clear_discovery_tables,0x23,0xffffffff81c7d620,CALL 0xffffffff81c7d620,direct call
intel_uncore_clear_discovery_tables,0x35,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_clear_discovery_tables,0x40,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_clear_discovery_tables,0x47,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_clear_discovery_tables,0x4f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_clear_discovery_tables,0x58,,RET,ret
intel_uncore_generic_init_uncores,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_uncore_generic_init_uncores,0x39,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
intel_uncore_generic_init_uncores,0x51,0xffffffff81c7d500,CALL 0xffffffff81c7d500,direct call
intel_uncore_generic_init_uncores,0x6a,0xffffffff81c7d980,CALL 0xffffffff81c7d980,direct call
intel_uncore_generic_init_uncores,0x93,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
intel_uncore_generic_init_uncores,0xa0,ctx->rax + 0x28,"MOV dword ptr [RAX + 0x28],0xff84ffff",write other [TODO]
intel_uncore_generic_init_uncores,0xa7,ctx->rax + 0xc0,"MOV qword ptr [RAX + 0xc0],-0x7ddf8f40",write other [TODO]
intel_uncore_generic_init_uncores,0xb8,ctx->rdi + 0x1c,"MOV dword ptr [RDI + 0x1c],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0xc1,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0xca,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0xd3,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0xdb,ctx->rdi + 0x60,"MOV qword ptr [RDI + 0x60],RAX",write other [TODO]
intel_uncore_generic_init_uncores,0xf1,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
intel_uncore_generic_init_uncores,0xf9,0xffffffff81c7d980,CALL 0xffffffff81c7d980,direct call
intel_uncore_generic_init_uncores,0x115,,RET,ret
intel_uncore_generic_init_uncores,0x116,ctx->rdi + 0xa0,"MOV qword ptr [RDI + 0xa0],-0x7d1c9d60",write other [TODO]
intel_uncore_generic_init_uncores,0x127,ctx->rdi + 0x20,"MOV dword ptr [RDI + 0x20],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x130,ctx->rdi + 0x24,"MOV dword ptr [RDI + 0x24],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x138,ctx->rdi + 0x38,"MOV dword ptr [RDI + 0x38],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x140,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],RAX",write other [TODO]
intel_uncore_generic_init_uncores,0x149,ctx->rdi + 0x4c,"MOV dword ptr [RDI + 0x4c],0x4000",write other [TODO]
intel_uncore_generic_init_uncores,0x150,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],RAX",write other [TODO]
intel_uncore_generic_init_uncores,0x15b,ctx->r14 + ctx->rax * 0x8,"MOV qword ptr [R14 + RAX*0x8],RDI",write other [TODO]
intel_uncore_generic_init_uncores,0x164,ctx->rdi + 0xa0,"MOV qword ptr [RDI + 0xa0],-0x7d1c9ca0",write other [TODO]
intel_uncore_generic_init_uncores,0x17a,ctx->rdi + 0x20,"MOV dword ptr [RDI + 0x20],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x188,ctx->rdi + 0x24,"MOV dword ptr [RDI + 0x24],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x190,ctx->rdi + 0x38,"MOV dword ptr [RDI + 0x38],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x198,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],RAX",write other [TODO]
intel_uncore_generic_init_uncores,0x19e,ctx->rdi + 0xa0,"MOV qword ptr [RDI + 0xa0],-0x7d1c9d00",write other [TODO]
intel_uncore_generic_init_uncores,0x1bb,ctx->rdi + 0x20,"MOV dword ptr [RDI + 0x20],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x1d0,ctx->rdi + 0x24,"MOV dword ptr [RDI + 0x24],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x1dd,ctx->rdi + 0x38,"MOV dword ptr [RDI + 0x38],EAX",write other [TODO]
intel_uncore_generic_init_uncores,0x1e5,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],RAX",write other [TODO]
intel_uncore_generic_init_uncores,0x1ee,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],RAX",write other [TODO]
intel_uncore_generic_init_uncores,0x201,ctx->rax,"MOV RAX,R14",write other [TODO]
intel_uncore_generic_init_uncores,0x209,,RET,ret
intel_uncore_generic_uncore_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_uncore_generic_uncore_cpu_init,0xd,0xffffffff810224f0,CALL 0xffffffff810224f0,direct call
intel_uncore_generic_uncore_cpu_init,0x13,0xffffffff82e23a70,"MOV qword ptr [0xffffffff82e23a70],RAX",write .data
intel_uncore_generic_uncore_cpu_init,0x1a,,RET,ret
intel_uncore_generic_uncore_pci_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_uncore_generic_uncore_pci_init,0x10,0xffffffff810224f0,CALL 0xffffffff810224f0,direct call
intel_uncore_generic_uncore_pci_init,0x16,0xffffffff82e23a68,"MOV qword ptr [0xffffffff82e23a68],RAX",write .data
intel_uncore_generic_uncore_pci_init,0x1f,,RET,ret
intel_uncore_generic_uncore_mmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_uncore_generic_uncore_mmio_init,0x10,0xffffffff810224f0,CALL 0xffffffff810224f0,direct call
intel_uncore_generic_uncore_mmio_init,0x16,0xffffffff82e23a60,"MOV qword ptr [0xffffffff82e23a60],RAX",write .data
intel_uncore_generic_uncore_mmio_init,0x1d,,RET,ret
zhaoxin_pmu_event_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_pmu_event_map,0x15,,RET,ret
zhaoxin_get_event_constraints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_get_event_constraints,0x3c,,RET,ret
zhaoxin_get_event_constraints,0x45,,RET,ret
zhaoxin_event_sysfs_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_event_sysfs_show,0xd,0xffffffff810075b0,CALL 0xffffffff810075b0,direct call
zhaoxin_event_sysfs_show,0x13,,RET,ret
cmask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cmask_show,0x18,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cmask_show,0x24,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x31332d34",write other [TODO]
cmask_show,0x2c,,RET,ret
inv_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
inv_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
inv_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
inv_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
inv_show,0x29,,RET,ret
edge_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
edge_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
edge_show,0x18,ctx->wordctx->ptrctx->rdx + 0x8,"MOV word ptr [RDX + 0x8],AX",write other [TODO]
edge_show,0x24,ctx->rdx + 0xa,"MOV byte ptr [RDX + 0xa],0x0",write other [TODO]
edge_show,0x29,,RET,ret
umask_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umask_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
umask_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa35312d",write other [TODO]
umask_show,0x22,ctx->rdx + 0xc,"MOV byte ptr [RDX + 0xc],0x0",write other [TODO]
umask_show,0x27,,RET,ret
event_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
event_show,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
event_show,0x18,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa372d",write other [TODO]
event_show,0x23,,RET,ret
zhaoxin_pmu_disable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_pmu_disable_all,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_disable_all,0x1a,,RET,ret
zhaoxin_pmu_enable_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_pmu_enable_all,0x1b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_enable_all,0x22,,RET,ret
zhaoxin_pmu_handle_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_pmu_handle_irq,0x29,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RDI",write stack
zhaoxin_pmu_handle_irq,0x44,ctx->rsp + 0x178,"MOV qword ptr [RSP + 0x178],RAX",write stack
zhaoxin_pmu_handle_irq,0x55,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
zhaoxin_pmu_handle_irq,0x62,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_handle_irq,0x6d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
zhaoxin_pmu_handle_irq,0x76,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
zhaoxin_pmu_handle_irq,0x97,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_handle_irq,0xa8,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_handle_irq,0xb8,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_handle_irq,0xe1,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
zhaoxin_pmu_handle_irq,0xe7,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
zhaoxin_pmu_handle_irq,0x117,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_handle_irq,0x181,0xffffffff81004410,CALL 0xffffffff81004410,direct call
zhaoxin_pmu_handle_irq,0x190,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x100",write stack
zhaoxin_pmu_handle_irq,0x199,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
zhaoxin_pmu_handle_irq,0x19e,0xffffffff81005bf0,CALL 0xffffffff81005bf0,direct call
zhaoxin_pmu_handle_irq,0x1b4,0xffffffff81275230,CALL 0xffffffff81275230,direct call
zhaoxin_pmu_handle_irq,0x1c2,0xffffffff810048f0,CALL 0xffffffff810048f0,direct call
zhaoxin_pmu_handle_irq,0x1de,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_handle_irq,0x208,,RET,ret
zhaoxin_pmu_handle_irq,0x209,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
zhaoxin_pmu_enable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_pmu_enable_event,0x5f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_enable_event,0x6d,,RET,ret
zhaoxin_pmu_enable_event,0x7b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_enable_event,0xb2,ctx->rax,CALL RAX,in-direct call
zhaoxin_pmu_enable_event,0xc5,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_enable_event,0x112,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
zhaoxin_pmu_enable_event,0x13e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_enable_event,0x14c,,RET,ret
zhaoxin_pmu_disable_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zhaoxin_pmu_disable_event,0x39,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_disable_event,0x4c,,RET,ret
zhaoxin_pmu_disable_event,0x6d,ctx->rax,CALL RAX,in-direct call
zhaoxin_pmu_disable_event,0x7a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_disable_event,0x84,,RET,ret
zhaoxin_pmu_disable_event,0x9b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
zhaoxin_pmu_disable_event,0xb6,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
zhaoxin_pmu_disable_event,0xc0,,RET,ret
xen_cpu_up_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpu_up_online,0x9,0xffffffff81031290,CALL 0xffffffff81031290,direct call
xen_cpu_up_online,0x11,,RET,ret
xen_arch_register_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_arch_register_cpu,0x9,0xffffffff8103e2f0,CALL 0xffffffff8103e2f0,direct call
xen_arch_register_cpu,0xf,,RET,ret
xen_arch_unregister_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_arch_unregister_cpu,0x9,0xffffffff8103e420,CALL 0xffffffff8103e420,direct call
xen_arch_unregister_cpu,0xf,,RET,ret
xen_cpuhp_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpuhp_setup,0x21,0xffffffff810a7280,CALL 0xffffffff810a7280,direct call
xen_cpuhp_setup,0x38,,RET,ret
xen_cpuhp_setup,0x54,0xffffffff810a7280,CALL 0xffffffff810a7280,direct call
xen_cpuhp_setup,0x66,0xffffffff810a7480,CALL 0xffffffff810a7480,direct call
xen_cpuhp_setup,0x77,,RET,ret
xen_vcpu_info_reset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_vcpu_info_reset,0x21,ctx->eax,"MOV EAX,dword ptr [RDX + RAX*0x1]",write other [TODO]
xen_vcpu_info_reset,0x36,ctx->rdx + ctx->rcx * 0x1,"MOV qword ptr [RDX + RCX*0x1],RAX",write other [TODO]
xen_vcpu_info_reset,0x3b,,RET,ret
xen_vcpu_info_reset,0x43,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],0x0",write other [TODO]
xen_vcpu_info_reset,0x4c,,RET,ret
xen_vcpu_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_vcpu_setup,0x1b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
xen_vcpu_setup,0x70,0xffffffff81023420,CALL 0xffffffff81023420,direct call
xen_vcpu_setup,0x82,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_vcpu_setup,0x8d,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],EAX",write stack
xen_vcpu_setup,0x9f,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpu_setup,0xbd,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],RBX",write other [TODO]
xen_vcpu_setup,0xda,,RET,ret
xen_vcpu_setup,0xdd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_vcpu_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_vcpu_restore,0x3e,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpu_restore,0x4e,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_vcpu_restore,0x5e,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_vcpu_restore,0x9e,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpu_restore,0xc2,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpu_restore,0xe0,0xffffffff8175c4d0,CALL 0xffffffff8175c4d0,direct call
xen_vcpu_restore,0xe8,0xffffffff81022e20,CALL 0xffffffff81022e20,direct call
xen_vcpu_restore,0xff,0xffffffff81022e70,CALL 0xffffffff81022e70,direct call
xen_vcpu_restore,0x11c,0xffffffff81022e70,CALL 0xffffffff81022e70,direct call
xen_vcpu_restore,0x130,,RET,ret
xen_running_on_version_or_later,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_running_on_version_or_later,0x1c,0xffffffff81cfe220,CALL 0xffffffff81cfe220,direct call
xen_running_on_version_or_later,0x2f,,RET,ret
xen_running_on_version_or_later,0x43,,RET,ret
xen_running_on_version_or_later,0x4a,,RET,ret
xen_reboot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_reboot,0x19,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
xen_reboot,0x1f,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EDI",write stack
xen_reboot,0x24,0xffffffff810254f0,CALL 0xffffffff810254f0,direct call
xen_reboot,0x2c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_reboot,0x3c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_reboot,0x57,0xffffffff81cfe3a0,CALL 0xffffffff81cfe3a0,direct call
xen_reboot,0x74,,RET,ret
xen_reboot,0x77,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_panic_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_panic_event,0x9,0xffffffff81171b20,CALL 0xffffffff81171b20,direct call
xen_panic_event,0x1b,0xffffffff82e36598,"MOV dword ptr [0xffffffff82e36598],0x3",write .data
xen_panic_event,0x2f,0xffffffff8346b408,"MOV dword ptr [0xffffffff8346b408],0xffffffff",write .data
xen_panic_event,0x3c,,RET,ret
xen_panic_event,0x42,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_emergency_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_emergency_restart,0xf,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_emergency_restart,0x15,,RET,ret
xen_panic_handler_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_panic_handler_init,0x17,0xffffffff810d2e80,CALL 0xffffffff810d2e80,direct call
xen_panic_handler_init,0x1f,,RET,ret
xen_pin_vcpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pin_vcpu,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_pin_vcpu,0x25,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EDI",write stack
xen_pin_vcpu,0x34,0xffffffff81cfe3a0,CALL 0xffffffff81cfe3a0,direct call
xen_pin_vcpu,0x56,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_pin_vcpu,0x7c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_pin_vcpu,0xc6b151,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_0,0x10,,RET,ret
caseD_0,0x28,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arbitrary_virt_to_machine,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arbitrary_virt_to_machine,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
arbitrary_virt_to_machine,0x22,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
arbitrary_virt_to_machine,0x90,,RET,ret
arbitrary_virt_to_machine,0xc1,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
arbitrary_virt_to_machine,0x10a,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
arbitrary_virt_to_machine,0x121,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_unmap_domain_gfn_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_unmap_domain_gfn_range,0x16,,RET,ret
xen_unmap_domain_gfn_range,0x1b,0xffffffff8176d430,CALL 0xffffffff8176d430,direct call
xen_unmap_domain_gfn_range,0x21,,RET,ret
arbitrary_virt_to_mfn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arbitrary_virt_to_mfn,0x9,0xffffffff810232a0,CALL 0xffffffff810232a0,direct call
arbitrary_virt_to_mfn,0x13,,RET,ret
xen_set_wallclock,0x5,,RET,ret
xen_cs_enable,0x9,0xffffffff83115910,"MOV dword ptr [0xffffffff83115910],EAX",write .data
xen_cs_enable,0x11,,RET,ret
xen_timerop_shutdown,0x8,0xffffffff81cfe1e0,CALL 0xffffffff81cfe1e0,direct call
xen_timerop_shutdown,0x10,,RET,ret
xen_timer_interrupt,0x1b,ctx->rdx,CALL RDX,in-direct call
xen_timer_interrupt,0x23,,RET,ret
xen_timer_interrupt,0x26,,RET,ret
xen_vcpuop_shutdown,0x29,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpuop_shutdown,0x45,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpuop_shutdown,0x51,,RET,ret
xen_vcpuop_set_oneshot,0x28,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpuop_set_oneshot,0x34,,RET,ret
xen_hvm_setup_cpu_clockevents,0xb,0xffffffff8175c4d0,CALL 0xffffffff8175c4d0,direct call
xen_hvm_setup_cpu_clockevents,0x1f,0xffffffff81164180,CALL 0xffffffff81164180,direct call
xen_hvm_setup_cpu_clockevents,0x25,,RET,ret
xen_tsc_khz,0x1f,0xffffffff81080910,CALL 0xffffffff81080910,direct call
xen_tsc_khz,0x25,,RET,ret
xen_get_wallclock,0x32,0xffffffff81080a60,CALL 0xffffffff81080a60,direct call
xen_get_wallclock,0x41,,RET,ret
xen_get_wallclock,0x42,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_get_wallclock,0x48,,RET,ret
xen_clocksource_get_cycles,0x17,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_clocksource_get_cycles,0x26,,RET,ret
xen_clocksource_get_cycles,0x27,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_clocksource_get_cycles,0x2d,,RET,ret
xen_pvclock_gtod_notify,0x1e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
xen_pvclock_gtod_notify,0x59,ctx->rbp - 0xa0,"MOV dword ptr [RBP + -0xa0],0x3e",write stack
xen_pvclock_gtod_notify,0x63,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
xen_pvclock_gtod_notify,0x6d,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R12",write stack
xen_pvclock_gtod_notify,0x74,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],EBX",write stack
xen_pvclock_gtod_notify,0x8d,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_pvclock_gtod_notify,0x9f,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
xen_pvclock_gtod_notify,0xa6,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],0x3000001",write stack
xen_pvclock_gtod_notify,0xb7,0xffffffff81cfe0e0,CALL 0xffffffff81cfe0e0,direct call
xen_pvclock_gtod_notify,0xce,0xffffffff82e365b0,"MOV byte ptr [0xffffffff82e365b0],0x0",write .data
xen_pvclock_gtod_notify,0xd5,ctx->rbp - 0xa0,"MOV dword ptr [RBP + -0xa0],0x11",write stack
xen_pvclock_gtod_notify,0xdf,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],R12D",write stack
xen_pvclock_gtod_notify,0xe6,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],EBX",write stack
xen_pvclock_gtod_notify,0xff,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_pvclock_gtod_notify,0x10d,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
xen_pvclock_gtod_notify,0x121,0xffffffff833fdad8,"MOV qword ptr [0xffffffff833fdad8],RBX",write .data
xen_pvclock_gtod_notify,0x12d,0xffffffff833fdad0,"MOV qword ptr [0xffffffff833fdad0],R12",write .data
xen_pvclock_gtod_notify,0x14e,,RET,ret
xen_pvclock_gtod_notify,0x156,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_pvclock_gtod_notify,0x160,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_pvclock_gtod_notify,0x16e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_sched_clock,0x17,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_sched_clock,0x2d,,RET,ret
xen_sched_clock,0x2e,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_sched_clock,0x3b,,RET,ret
xen_timerop_set_next_event,0x21,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_timerop_set_next_event,0x3a,0xffffffff81cfe1e0,CALL 0xffffffff81cfe1e0,direct call
xen_timerop_set_next_event,0x4b,,RET,ret
xen_timerop_set_next_event,0x50,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_vcpuop_set_next_event,0x17,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
xen_vcpuop_set_next_event,0x3e,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_vcpuop_set_next_event,0x57,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
xen_vcpuop_set_next_event,0x66,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RBX",write stack
xen_vcpuop_set_next_event,0x79,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_vcpuop_set_next_event,0x9b,,RET,ret
xen_vcpuop_set_next_event,0xa0,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_vcpuop_set_next_event,0xa9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_teardown_timer,0x1c,,RET,ret
xen_teardown_timer,0x27,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_teardown_timer,0x2c,ctx->rbx + 0xa4,"MOV dword ptr [RBX + 0xa4],0xffffffff",write other [TODO]
xen_teardown_timer,0x3b,,RET,ret
xen_setup_timer,0x3c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_setup_cpu_clockevents,0x13,0xffffffff81164180,CALL 0xffffffff81164180,direct call
xen_setup_cpu_clockevents,0x19,,RET,ret
xen_timer_resume,0xd,,RET,ret
xen_timer_resume,0x34,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_timer_resume,0x40,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_timer_resume,0x50,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_timer_resume,0x65,,RET,ret
xen_save_time_memory_area,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_save_time_memory_area,0x2a,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_save_time_memory_area,0x47,0xffffffff833fdae0,"MOV qword ptr [0xffffffff833fdae0],RAX",write .data
xen_save_time_memory_area,0x50,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],0x0",write stack
xen_save_time_memory_area,0x63,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_save_time_memory_area,0x79,0xffffffff81c89670,CALL 0xffffffff81c89670,direct call
xen_save_time_memory_area,0x8e,,RET,ret
xen_save_time_memory_area,0x8f,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_save_time_memory_area,0x96,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_restore_time_memory_area,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_restore_time_memory_area,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
xen_restore_time_memory_area,0x30,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_restore_time_memory_area,0x3f,0xffffffff81080960,CALL 0xffffffff81080960,direct call
xen_restore_time_memory_area,0x57,0xffffffff81080990,CALL 0xffffffff81080990,direct call
xen_restore_time_memory_area,0x6c,0xffffffff83117978,"MOV qword ptr [0xffffffff83117978],RAX",write .data
xen_restore_time_memory_area,0x83,,RET,ret
xen_restore_time_memory_area,0x84,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_restore_time_memory_area,0x8b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
gnttab_apply,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gnttab_apply,0x14,ctx->rdx + 0x10,"MOV dword ptr [RDX + 0x10],ESI",write other [TODO]
gnttab_apply,0x17,ctx->rcx + ctx->rax * 0x8,"MOV qword ptr [RCX + RAX*0x8],RDI",write other [TODO]
gnttab_apply,0x1e,,RET,ret
arch_gnttab_valloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_gnttab_valloc,0x20,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
arch_gnttab_valloc,0x25,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
arch_gnttab_valloc,0x3a,0xffffffff812e95f0,CALL 0xffffffff812e95f0,direct call
arch_gnttab_valloc,0x3f,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
arch_gnttab_valloc,0x60,0xffffffff812cac70,CALL 0xffffffff812cac70,direct call
arch_gnttab_valloc,0x6e,,RET,ret
arch_gnttab_valloc,0x73,0xffffffff812e9cb0,CALL 0xffffffff812e9cb0,direct call
arch_gnttab_valloc,0x7c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
arch_gnttab_map_shared,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_gnttab_map_shared,0x65,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
arch_gnttab_map_shared,0x7e,,RET,ret
arch_gnttab_map_shared,0x8a,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
arch_gnttab_map_status,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_gnttab_map_status,0x65,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
arch_gnttab_map_status,0x7e,,RET,ret
arch_gnttab_map_status,0x8a,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
arch_gnttab_unmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_gnttab_unmap,0x34,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
arch_gnttab_unmap,0x41,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
arch_gnttab_unmap,0x58,,RET,ret
arch_gnttab_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_gnttab_init,0x10,,RET,ret
arch_gnttab_init,0x22,0xffffffff81023bb0,CALL 0xffffffff81023bb0,direct call
arch_gnttab_init,0x34,0xffffffff81023bb0,CALL 0xffffffff81023bb0,direct call
arch_gnttab_init,0x44,,RET,ret
arch_gnttab_init,0x4c,0xffffffff812e9cb0,CALL 0xffffffff812e9cb0,direct call
arch_gnttab_init,0x58,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_vcpu_notify_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_vcpu_notify_suspend,0xa,0xffffffff811654f0,CALL 0xffffffff811654f0,direct call
xen_vcpu_notify_suspend,0x1d,,RET,ret
xen_vcpu_notify_suspend,0x34,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
xen_vcpu_notify_suspend,0x3a,ctx->gs + 0x1e280,"MOV qword ptr GS:[0x1e280],RAX",write other [TODO]
xen_vcpu_notify_suspend,0x4a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
xen_vcpu_notify_suspend,0x55,,RET,ret
xen_vcpu_notify_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_vcpu_notify_restore,0x1e,,RET,ret
xen_vcpu_notify_restore,0x1f,0xffffffff81165520,CALL 0xffffffff81165520,direct call
xen_vcpu_notify_restore,0x25,,RET,ret
xen_vcpu_notify_restore,0x47,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
xen_arch_pre_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_arch_pre_suspend,0x9,0xffffffff81023a60,CALL 0xffffffff81023a60,direct call
xen_arch_pre_suspend,0x18,,RET,ret
xen_arch_pre_suspend,0x19,0xffffffff81025590,CALL 0xffffffff81025590,direct call
xen_arch_pre_suspend,0x1f,,RET,ret
xen_arch_post_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_arch_post_suspend,0x12,0xffffffff81024350,CALL 0xffffffff81024350,direct call
xen_arch_post_suspend,0x17,0xffffffff81023b00,CALL 0xffffffff81023b00,direct call
xen_arch_post_suspend,0x1d,,RET,ret
xen_arch_post_suspend,0x1e,0xffffffff81025800,CALL 0xffffffff81025800,direct call
xen_arch_post_suspend,0x23,0xffffffff81023b00,CALL 0xffffffff81023b00,direct call
xen_arch_post_suspend,0x29,,RET,ret
xen_arch_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_arch_resume,0x21,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
xen_arch_resume,0x2a,0xffffffff81025260,CALL 0xffffffff81025260,direct call
xen_arch_resume,0x32,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_arch_resume,0x42,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_arch_resume,0x59,,RET,ret
xen_arch_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_arch_suspend,0xe,0xffffffff810254f0,CALL 0xffffffff810254f0,direct call
xen_arch_suspend,0x16,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_arch_suspend,0x26,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_arch_suspend,0x4f,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
xen_arch_suspend,0x59,,RET,ret
__sysvec_xen_hvm_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_xen_hvm_callback,0x12,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_xen_hvm_callback,0x31,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_xen_hvm_callback,0x3a,0xffffffff8175c8b0,CALL 0xffffffff8175c8b0,direct call
__sysvec_xen_hvm_callback,0x3f,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__sysvec_xen_hvm_callback,0x4c,,RET,ret
xen_hvm_crash_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_hvm_crash_shutdown,0x9,0xffffffff81079490,CALL 0xffffffff81079490,direct call
xen_hvm_crash_shutdown,0x13,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_hvm_crash_shutdown,0x19,,RET,ret
xen_hvm_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_hvm_shutdown,0x9,0xffffffff8106c3e0,CALL 0xffffffff8106c3e0,direct call
xen_hvm_shutdown,0x18,,RET,ret
xen_hvm_shutdown,0x1e,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_hvm_shutdown,0x24,,RET,ret
xen_cpu_up_prepare_hvm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpu_up_prepare_hvm,0x12,0xffffffff810d67d0,CALL 0xffffffff810d67d0,direct call
xen_cpu_up_prepare_hvm,0x3c,ctx->eax,"MOV EAX,dword ptr [RDX + RAX*0x1]",write other [TODO]
xen_cpu_up_prepare_hvm,0x46,ctx->rdx + ctx->rcx * 0x1,"MOV dword ptr [RDX + RCX*0x1],EAX",write other [TODO]
xen_cpu_up_prepare_hvm,0x4c,0xffffffff81022e70,CALL 0xffffffff81022e70,direct call
xen_cpu_up_prepare_hvm,0x71,0xffffffff81030300,CALL 0xffffffff81030300,direct call
xen_cpu_up_prepare_hvm,0x7f,,RET,ret
xen_cpu_up_prepare_hvm,0x83,0xffffffff817602d0,CALL 0xffffffff817602d0,direct call
xen_cpu_up_prepare_hvm,0x98,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
xen_cpu_up_prepare_hvm,0x9b,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_cpu_up_prepare_hvm,0xb3,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
xen_cpu_up_prepare_hvm,0xb6,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_cpu_up_prepare_hvm,0xc9,0xffffffff81023950,CALL 0xffffffff81023950,direct call
xen_cpu_up_prepare_hvm,0xd1,0xffffffff81030300,CALL 0xffffffff81030300,direct call
xen_cpu_up_prepare_hvm,0xe3,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_cpu_up_prepare_hvm,0xef,0xffffffff81030190,CALL 0xffffffff81030190,direct call
xen_cpu_up_prepare_hvm,0xf7,0xffffffff81031350,CALL 0xffffffff81031350,direct call
xen_cpu_dead_hvm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpu_dead_hvm,0xe,0xffffffff81030190,CALL 0xffffffff81030190,direct call
xen_cpu_dead_hvm,0x2c,,RET,ret
xen_cpu_dead_hvm,0x30,0xffffffff81023910,CALL 0xffffffff81023910,direct call
xen_cpu_dead_hvm,0x3c,,RET,ret
xen_hvm_init_shared_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_hvm_init_shared_info,0x1b,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_hvm_init_shared_info,0x26,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0x0",write stack
xen_hvm_init_shared_info,0x31,ctx->wordctx->ptrctx->rbp - 0x20,"MOV word ptr [RBP + -0x20],AX",write stack
xen_hvm_init_shared_info,0x3c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
xen_hvm_init_shared_info,0x44,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
xen_hvm_init_shared_info,0x48,0xffffffff81cfe180,CALL 0xffffffff81cfe180,direct call
xen_hvm_init_shared_info,0x62,,RET,ret
xen_hvm_init_shared_info,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_hvm_exit_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_hvm_exit_mmap,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_hvm_exit_mmap,0x21,ctx->wordctx->ptrctx->rbp - 0x18,"MOV word ptr [RBP + -0x18],AX",write stack
xen_hvm_exit_mmap,0x4a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
xen_hvm_exit_mmap,0x4e,0xffffffff81cfe440,CALL 0xffffffff81cfe440,direct call
xen_hvm_exit_mmap,0x67,,RET,ret
xen_hvm_exit_mmap,0x75,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_vmcore_pfn_is_ram,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_vmcore_pfn_is_ram,0x1b,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_vmcore_pfn_is_ram,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
xen_vmcore_pfn_is_ram,0x29,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x7ff0",write stack
xen_vmcore_pfn_is_ram,0x31,0xffffffff81cfe440,CALL 0xffffffff81cfe440,direct call
xen_vmcore_pfn_is_ram,0x53,,RET,ret
xen_vmcore_pfn_is_ram,0x64,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_hvm_post_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_hvm_post_suspend,0x1e,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_hvm_post_suspend,0x2d,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_hvm_post_suspend,0x3f,0xffffffff817602d0,CALL 0xffffffff817602d0,direct call
xen_hvm_post_suspend,0x4a,0xffffffff817602a0,CALL 0xffffffff817602a0,direct call
xen_hvm_post_suspend,0x4f,0xffffffff810244f0,CALL 0xffffffff810244f0,direct call
xen_hvm_post_suspend,0x59,,RET,ret
xen_hvm_post_suspend,0x5a,0xffffffff810241f0,CALL 0xffffffff810241f0,direct call
xen_hvm_post_suspend,0x5f,0xffffffff81022f60,CALL 0xffffffff81022f60,direct call
xen_has_pv_devices,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_has_pv_devices,0x46,,RET,ret
xen_has_pv_and_legacy_disk_devices,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_has_pv_and_legacy_disk_devices,0x1f,,RET,ret
xen_has_pv_disk_devices,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_has_pv_disk_devices,0x4b,,RET,ret
xen_has_pv_disk_devices,0x5b,,RET,ret
xen_has_pv_nic_devices,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_has_pv_nic_devices,0x4b,,RET,ret
xen_has_pv_nic_devices,0x5b,,RET,ret
xen_unplug_emulated_devices,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_unplug_emulated_devices,0x17,,RET,ret
xen_unplug_emulated_devices,0x6a,0xffffffff833fdb34,"MOV dword ptr [0xffffffff833fdb34],EAX",write .data
xen_unplug_emulated_devices,0x75,,RET,ret
xen_unplug_emulated_devices,0xc6a03a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
xen_unplug_emulated_devices,0xc6a04b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
xen_unplug_emulated_devices,0xc6a05c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
xen_unplug_emulated_devices,0xc6a06f,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
xen_unplug_emulated_devices,0xc6a07d,0xffffffff833fdb30,"MOV dword ptr [0xffffffff833fdb30],EAX",write .data
xen_enable_sysenter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_enable_sysenter,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_enable_syscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_enable_syscall,0x18,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_enable_syscall,0x22,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x10002",write stack
xen_enable_syscall,0x29,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],-0x7efd3590",write stack
xen_enable_syscall,0x31,0xffffffff81cfe3c0,CALL 0xffffffff81cfe3c0,direct call
xen_set_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_get_apic_id,0xf,,RET,ret
xen_apic_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_apic_read,0x20,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xen_apic_read,0x35,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
xen_apic_read,0x7b,,RET,ret
xen_apic_read,0x83,0xffffffff81cfe0e0,CALL 0xffffffff81cfe0e0,direct call
xen_apic_read,0xa8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_apic_icr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_apic_icr_read,0xc,,RET,ret
xen_apic_icr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_safe_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_safe_apic_wait_icr_idle,0xc,,RET,ret
xen_apic_probe_pv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_apic_probe_pv,0x16,,RET,ret
xen_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_madt_oem_check,0x16,,RET,ret
xen_id_always_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_id_always_valid,0xf,,RET,ret
xen_id_always_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_id_always_registered,0xf,,RET,ret
xen_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_phys_pkg_id,0x10,,RET,ret
xen_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_noop,0xa,,RET,ret
xen_silent_inquire,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_silent_inquire,0xa,,RET,ret
xen_apic_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_apic_write,0x1c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_apic_write,0x25,0xffffffff810250d0,CALL 0xffffffff810250d0,direct call
xen_apic_write,0x2b,,RET,ret
xen_cpu_present_to_apicid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpu_present_to_apicid,0x35,,RET,ret
xen_io_apic_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_io_apic_read,0x1e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
xen_io_apic_read,0x24,0xffffffff81074860,CALL 0xffffffff81074860,direct call
xen_io_apic_read,0x29,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],R12D",write stack
xen_io_apic_read,0x38,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
xen_io_apic_read,0x3c,0xffffffff81cfe420,CALL 0xffffffff81cfe420,direct call
xen_io_apic_read,0x70,,RET,ret
xen_io_apic_read,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
physid_set_mask_of_physid,0x10,ctx->rsi,"MOV qword ptr [RSI],0x0",write other [TODO]
physid_set_mask_of_physid,0x17,ctx->rsi + 0xff8,"MOV qword ptr [RSI + 0xff8],0x0",write other [TODO]
physid_set_mask_of_physid,0x36,,RET,ret
xen_guest_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_guest_state,0x69,,RET,ret
xen_guest_state,0x86,,RET,ret
xen_guest_state,0x9f,,RET,ret
xen_get_guest_ip,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_get_guest_ip,0x2e,,RET,ret
xen_get_guest_ip,0x47,,RET,ret
pmu_msr_chk_emulated,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_msr_chk_emulated,0x16f,ctx->r9,"MOV byte ptr [R9],DIL",write other [TODO]
pmu_msr_chk_emulated,0x183,,RET,ret
pmu_msr_chk_emulated,0x213,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
pmu_msr_chk_emulated,0x224,ctx->r9,"MOV byte ptr [R9],R8B",write other [TODO]
pmu_msr_chk_emulated,0x238,,RET,ret
pmu_msr_chk_emulated,0x2e0,ctx->r10,"MOV qword ptr [R10],RAX",write other [TODO]
pmu_msr_chk_emulated,0x303,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
pmu_msr_chk_emulated,0x351,ctx->r10,"MOV qword ptr [R10],RAX",write other [TODO]
pmu_msr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_msr_read,0x31,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pmu_msr_read,0x37,0xffffffff81024a60,CALL 0xffffffff81024a60,direct call
pmu_msr_read,0x57,ctx->r14,"MOV dword ptr [R14],ECX",write other [TODO]
pmu_msr_read,0x66,ctx->rbx,"MOV qword ptr [RBX],R15",write other [TODO]
pmu_msr_read,0x89,,RET,ret
pmu_msr_read,0xc8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pmu_msr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_msr_write,0x2a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
pmu_msr_write,0x37,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pmu_msr_write,0x4d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R14",write stack
pmu_msr_write,0x51,0xffffffff81024a60,CALL 0xffffffff81024a60,direct call
pmu_msr_write,0x7e,ctx->rax,"MOV dword ptr [RAX],EBX",write other [TODO]
pmu_msr_write,0xa0,,RET,ret
pmu_msr_write,0xd3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_read_pmc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_read_pmc,0x45,,RET,ret
xen_read_pmc,0x79,,RET,ret
xen_read_pmc,0x9f,,RET,ret
xen_read_pmc,0x108,,RET,ret
pmu_apic_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmu_apic_update,0x22,ctx->rax + 0x58,"MOV dword ptr [RAX + 0x58],EDI",write other [TODO]
pmu_apic_update,0x35,0xffffffff81cfe500,CALL 0xffffffff81cfe500,direct call
pmu_apic_update,0x45,,RET,ret
xen_pmu_irq_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pmu_irq_handler,0x32,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
xen_pmu_irq_handler,0x5d,ctx->rax + 0x8,"MOV byte ptr [RAX + 0x8],CL",write other [TODO]
xen_pmu_irq_handler,0x68,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
xen_pmu_irq_handler,0x70,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
xen_pmu_irq_handler,0x7b,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDI",write stack
xen_pmu_irq_handler,0x99,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
xen_pmu_irq_handler,0x9d,0xffffffff83115bf0,CALL qword ptr [0xffffffff83115bf0],in-direct call
xen_pmu_irq_handler,0xac,0xffffffff81cfe500,CALL 0xffffffff81cfe500,direct call
xen_pmu_irq_handler,0xc1,ctx->rdx + 0x8,"MOV byte ptr [RDX + 0x8],R12B",write other [TODO]
xen_pmu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pmu_init,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
xen_pmu_init,0x47,0xffffffff812ec140,CALL 0xffffffff812ec140,direct call
xen_pmu_init,0x8e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDI",write stack
xen_pmu_init,0x9b,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],R12D",write stack
xen_pmu_init,0x9f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_pmu_init,0xa3,0xffffffff81cfe500,CALL 0xffffffff81cfe500,direct call
xen_pmu_init,0xbd,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],R13",write other [TODO]
xen_pmu_init,0xd0,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV byte ptr [RDX + RAX*0x1 + 0x8],0x0",write other [TODO]
xen_pmu_init,0x15c,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pmu_init,0x187,0xffffffff833fdb40,"MOV byte ptr [0xffffffff833fdb40],0x1",write .data
xen_pmu_init,0x18e,0xffffffff81263be0,CALL 0xffffffff81263be0,direct call
xen_pmu_init,0x1a6,0xffffffff83117988,"MOV dword ptr [0xffffffff83117988],0x4",write .data
xen_pmu_init,0x1b0,0xffffffff83117998,"MOV dword ptr [0xffffffff83117998],0xc0010004",write .data
xen_pmu_init,0x1ba,0xffffffff83117994,"MOV dword ptr [0xffffffff83117994],0xc0010000",write .data
xen_pmu_init,0x1c4,0xffffffff83117990,"MOV dword ptr [0xffffffff83117990],0x1",write .data
xen_pmu_init,0x1ce,0xffffffff8311798c,"MOV dword ptr [0xffffffff8311798c],0x0",write .data
xen_pmu_init,0x1ef,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xa",write stack
xen_pmu_init,0x1fe,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
xen_pmu_init,0x20d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
xen_pmu_init,0x217,0xffffffff83117984,"MOV dword ptr [0xffffffff83117984],EAX",write .data
xen_pmu_init,0x223,0xffffffff83117980,"MOV dword ptr [0xffffffff83117980],EAX",write .data
xen_pmu_init,0x23b,0xffffffff83117988,"MOV dword ptr [0xffffffff83117988],0x6",write .data
xen_pmu_init,0x245,0xffffffff83117998,"MOV dword ptr [0xffffffff83117998],0xc0010201",write .data
xen_pmu_init,0x24f,0xffffffff83117994,"MOV dword ptr [0xffffffff83117994],0xc0010200",write .data
xen_pmu_init,0x259,0xffffffff83117990,"MOV dword ptr [0xffffffff83117990],0x2",write .data
xen_pmu_init,0x263,0xffffffff8311798c,"MOV dword ptr [0xffffffff8311798c],0x1",write .data
xen_pmu_init,0xc6943f,0xffffffff830c7bb5,"MOV byte ptr [0xffffffff830c7bb5],0x1",write .data
xen_pmu_init,0xc69446,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
xen_pmu_finish,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pmu_finish,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
xen_pmu_finish,0x32,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],EDI",write stack
xen_pmu_finish,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_pmu_finish,0x44,0xffffffff81cfe500,CALL 0xffffffff81cfe500,direct call
xen_pmu_finish,0x61,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
xen_pmu_finish,0x6e,ctx->rax + ctx->r12 * 0x1,"MOV qword ptr [RAX + R12*0x1],0x0",write other [TODO]
xen_pmu_finish,0x8d,,RET,ret
xen_pmu_finish,0x8e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_pv_pre_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_pre_suspend,0x10,0xffffffff8102bc90,CALL 0xffffffff8102bc90,direct call
xen_pv_pre_suspend,0x30,ctx->r14 + 0x48,"MOV qword ptr [R14 + 0x48],RBX",write other [TODO]
xen_pv_pre_suspend,0x34,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_pv_pre_suspend,0x43,0xffffffff82e365a0,"MOV qword ptr [0xffffffff82e365a0],-0x7cc031a0",write .data
xen_pv_pre_suspend,0x59,0xffffffff81cfe1c0,CALL 0xffffffff81cfe1c0,direct call
xen_pv_pre_suspend,0x6e,,RET,ret
xen_pv_pre_suspend,0x11e,ctx->r13 + 0x38,"MOV qword ptr [R13 + 0x38],RBX",write other [TODO]
xen_pv_pre_suspend,0x1f5,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_pre_suspend,0x23f,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_pre_suspend,0x24c,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_pre_suspend,0x259,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_post_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_post_suspend,0xc,0xffffffff81d04030,CALL 0xffffffff81d04030,direct call
xen_pv_post_suspend,0x39,0xffffffff82e4bad0,CALL qword ptr [0xffffffff82e4bad0],in-direct call
xen_pv_post_suspend,0x3f,0xffffffff82e365a0,"MOV qword ptr [0xffffffff82e365a0],-0xa84000",write .data
xen_pv_post_suspend,0x4a,0xffffffff81026580,CALL 0xffffffff81026580,direct call
xen_pv_post_suspend,0x6b,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RAX",write other [TODO]
xen_pv_post_suspend,0x6f,0xffffffff8102bd20,CALL 0xffffffff8102bd20,direct call
xen_pv_post_suspend,0x79,,RET,ret
xen_pv_post_suspend,0xb2,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
xen_pv_post_suspend,0xb7,0xffffffff81022f60,CALL 0xffffffff81022f60,direct call
xen_pv_post_suspend,0xbc,0xffffffff8102bd20,CALL 0xffffffff8102bd20,direct call
xen_pv_post_suspend,0xc6,,RET,ret
xen_pv_post_suspend,0xfc,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RDI",write other [TODO]
xen_pv_post_suspend,0x15d,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RAX",write other [TODO]
xen_pv_post_suspend,0x181,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],-0x1",write other [TODO]
xen_pv_post_suspend,0x192,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_post_suspend,0x1b8,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RAX",write other [TODO]
xen_pv_post_suspend,0x1d3,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
set_pte,0x4,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
set_pte,0xb,,RET,ret
pfn_pte,0x32,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
pfn_pte,0x39,,RET,ret
paravirt_alloc_pte.constprop.0,0xe,0xffffffff82e4b9f0,CALL qword ptr [0xffffffff82e4b9f0],in-direct call
paravirt_alloc_pte.constprop.0,0x15,,RET,ret
get_phys_to_machine,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_phys_to_machine,0x1b,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
get_phys_to_machine,0x3d,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
get_phys_to_machine,0x58,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
get_phys_to_machine,0xb5,,RET,ret
get_phys_to_machine,0xd9,0xffffffff81d03f40,CALL 0xffffffff81d03f40,direct call
get_phys_to_machine,0xe9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
p2m_mid_mfn_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p2m_mid_mfn_init,0x52,ctx->rbx,"MOV qword ptr [RBX],RDI",write other [TODO]
p2m_mid_mfn_init,0x9a,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
p2m_mid_mfn_init,0xb7,,RET,ret
xen_alloc_p2m_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_alloc_p2m_entry,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_alloc_p2m_entry,0x38,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
xen_alloc_p2m_entry,0xfb,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
xen_alloc_p2m_entry,0xff,0xffffffff81d03f90,CALL 0xffffffff81d03f90,direct call
xen_alloc_p2m_entry,0x11a,0xffffffff81025b50,CALL 0xffffffff81025b50,direct call
xen_alloc_p2m_entry,0x197,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
xen_alloc_p2m_entry,0x1a8,ctx->rax + ctx->rdx * 0x8,"MOV qword ptr [RAX + RDX*0x8],R13",write other [TODO]
xen_alloc_p2m_entry,0x1b4,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
xen_alloc_p2m_entry,0x25a,0xffffffff833fdba0,"MOV qword ptr [0xffffffff833fdba0],RBX",write .data
xen_alloc_p2m_entry,0x261,ctx->rdx + 0xc10,"MOV qword ptr [RDX + 0xc10],RBX",write other [TODO]
xen_alloc_p2m_entry,0x289,,RET,ret
xen_alloc_p2m_entry,0x28a,0xffffffff81d03f90,CALL 0xffffffff81d03f90,direct call
xen_alloc_p2m_entry,0x2a5,0xffffffff81c89ba0,CALL 0xffffffff81c89ba0,direct call
xen_alloc_p2m_entry,0x2b6,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
xen_alloc_p2m_entry,0x2c1,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
xen_alloc_p2m_entry,0x2ec,0xffffffff82e4b9f0,CALL qword ptr [0xffffffff82e4b9f0],in-direct call
xen_alloc_p2m_entry,0x2f5,0xffffffff810901f0,CALL 0xffffffff810901f0,direct call
xen_alloc_p2m_entry,0x30a,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
xen_alloc_p2m_entry,0x30e,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
xen_alloc_p2m_entry,0x31a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
xen_alloc_p2m_entry,0x31e,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
xen_alloc_p2m_entry,0x33b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
xen_alloc_p2m_entry,0x367,0xffffffff82e4ba10,CALL qword ptr [0xffffffff82e4ba10],in-direct call
xen_alloc_p2m_entry,0x370,0xffffffff81d03ff0,CALL 0xffffffff81d03ff0,direct call
xen_alloc_p2m_entry,0x37c,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
xen_alloc_p2m_entry,0x397,0xffffffff81d03f90,CALL 0xffffffff81d03f90,direct call
xen_alloc_p2m_entry,0x3fe,ctx->rdi + ctx->rax * 0x8,"MOV qword ptr [RDI + RAX*0x8],RDX",write other [TODO]
xen_alloc_p2m_entry,0x412,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
xen_alloc_p2m_entry,0x41a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
xen_alloc_p2m_entry,0x41e,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
xen_alloc_p2m_entry,0x450,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
xen_alloc_p2m_entry,0x458,0xffffffff81d03ff0,CALL 0xffffffff81d03ff0,direct call
xen_alloc_p2m_entry,0x4ed,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_alloc_p2m_entry,0x4f9,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
xen_alloc_p2m_entry,0x556,ctx->r12,"MOV qword ptr [R12],RDI",write other [TODO]
xen_alloc_p2m_entry,0x565,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
xen_alloc_p2m_entry,0x5ac,ctx->r12,"MOV qword ptr [R12],-0x1",write other [TODO]
xen_alloc_p2m_entry,0x5b4,ctx->r12 + 0xff8,"MOV qword ptr [R12 + 0xff8],-0x1",write other [TODO]
xen_alloc_p2m_entry,0x5e5,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
xen_alloc_p2m_entry,0x5e9,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_p2m_entry,0x651,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
xen_alloc_p2m_entry,0x65d,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
xen_alloc_p2m_entry,0x680,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
xen_alloc_p2m_entry,0x6f5,0xffffffff81d03ff0,CALL 0xffffffff81d03ff0,direct call
xen_alloc_p2m_entry,0x801,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_p2m_entry,0x835,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
xen_alloc_p2m_entry,0x839,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_p2m_entry,0x868,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
xen_alloc_p2m_entry,0x86c,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_p2m_entry,0x8a4,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
xen_alloc_p2m_entry,0x8a8,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_p2m_entry,0x8b9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
xen_alloc_p2m_entry,0x8bd,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_p2m_entry,0x8f6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xen_alloc_p2m_entry,0x94f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x1",write stack
xen_setup_mfn_list_list,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_setup_mfn_list_list,0x36,ctx->rbx + 0xc18,"MOV qword ptr [RBX + 0xc18],-0x1",write other [TODO]
xen_setup_mfn_list_list,0x48,ctx->rdx,"MOV RDX,RBX",write other [TODO]
xen_setup_mfn_list_list,0x52,ctx->rdx + 0xc30,"MOV qword ptr [RDX + 0xc30],R8",write other [TODO]
xen_setup_mfn_list_list,0x59,ctx->rdx + 0xc38,"MOV qword ptr [RDX + 0xc38],0x0",write other [TODO]
xen_setup_mfn_list_list,0x64,ctx->rdx + 0xc10,"MOV qword ptr [RDX + 0xc10],RAX",write other [TODO]
xen_setup_mfn_list_list,0xce,ctx->rdx + 0xc28,"MOV qword ptr [RDX + 0xc28],RAX",write other [TODO]
xen_setup_mfn_list_list,0xda,,RET,ret
xen_setup_mfn_list_list,0x131,ctx->rbx + 0xc18,"MOV qword ptr [RBX + 0xc18],RDI",write other [TODO]
xen_setup_mfn_list_list,0x146,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_setup_mfn_list_list,0x16b,ctx->rdx,"MOV RDX,RBX",write other [TODO]
xen_setup_mfn_list_list,0x170,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
__set_phys_to_machine,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__set_phys_to_machine,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__set_phys_to_machine,0x43,ctx->rdx + ctx->rbx * 0x8,"MOV qword ptr [RDX + RBX*0x8],RSI",write other [TODO]
__set_phys_to_machine,0x6f,,RET,ret
__set_phys_to_machine,0x7b,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
__set_phys_to_machine,0x99,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
__set_phys_to_machine,0xf8,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
__set_phys_to_machine,0x15c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_phys_to_machine,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_phys_to_machine,0x15,0xffffffff81026760,CALL 0xffffffff81026760,direct call
set_phys_to_machine,0x2b,,RET,ret
set_phys_to_machine,0x2f,0xffffffff81025c10,CALL 0xffffffff81025c10,direct call
set_phys_to_machine,0x3e,0xffffffff81026760,CALL 0xffffffff81026760,direct call
set_foreign_p2m_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_foreign_p2m_mapping,0x16,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDI",write stack
set_foreign_p2m_mapping,0x1a,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDX",write stack
set_foreign_p2m_mapping,0x1e,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],ECX",write stack
set_foreign_p2m_mapping,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
set_foreign_p2m_mapping,0x4a,0xffffffff81cfe280,CALL 0xffffffff81cfe280,direct call
set_foreign_p2m_mapping,0x72,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
set_foreign_p2m_mapping,0xa1,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RSI",write stack
set_foreign_p2m_mapping,0xa5,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
set_foreign_p2m_mapping,0xc0,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RSI",write stack
set_foreign_p2m_mapping,0xc4,0xffffffff81026760,CALL 0xffffffff81026760,direct call
set_foreign_p2m_mapping,0x16b,,RET,ret
set_foreign_p2m_mapping,0x29c,0xffffffff81025c10,CALL 0xffffffff81025c10,direct call
set_foreign_p2m_mapping,0x2b6,ctx->wordctx->ptrctx->r13 + 0x12,"MOV word ptr [R13 + 0x12],DI",write other [TODO]
set_foreign_p2m_mapping,0x2bb,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
set_foreign_p2m_mapping,0x2c3,ctx->r13 + 0x14,"MOV dword ptr [R13 + 0x14],0xffffffff",write other [TODO]
set_foreign_p2m_mapping,0x2cb,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
set_foreign_p2m_mapping,0x2db,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
set_foreign_p2m_mapping,0x2f0,ctx->wordctx->ptrctx->rcx + 0x12,"MOV word ptr [RCX + 0x12],SI",write other [TODO]
set_foreign_p2m_mapping,0x2f4,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
set_foreign_p2m_mapping,0x2fb,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
set_foreign_p2m_mapping,0x300,ctx->rcx + 0x14,"MOV dword ptr [RCX + 0x14],0xffffffff",write other [TODO]
set_foreign_p2m_mapping,0x311,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
set_foreign_p2m_mapping,0x324,ctx->wordctx->ptrctx->rbp - 0x34,"MOV word ptr [RBP + -0x34],DX",write stack
set_foreign_p2m_mapping,0x333,ctx->wordctx->ptrctx->rbp - 0x4c,"MOV word ptr [RBP + -0x4c],AX",write stack
set_foreign_p2m_mapping,0x337,0xffffffff81cfe280,CALL 0xffffffff81cfe280,direct call
set_foreign_p2m_mapping,0x388,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
set_foreign_p2m_mapping,0x39d,0xffffffff81026760,CALL 0xffffffff81026760,direct call
set_foreign_p2m_mapping,0x3bc,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R9",write stack
set_foreign_p2m_mapping,0x3c3,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RDX",write stack
set_foreign_p2m_mapping,0x3ca,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RSI",write stack
set_foreign_p2m_mapping,0x3d1,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RDI",write stack
set_foreign_p2m_mapping,0x3d5,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
set_foreign_p2m_mapping,0x3fb,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RSI",write stack
set_foreign_p2m_mapping,0x3ff,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
set_foreign_p2m_mapping,0x40d,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R9",write stack
set_foreign_p2m_mapping,0x414,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RDX",write stack
set_foreign_p2m_mapping,0x41b,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RSI",write stack
set_foreign_p2m_mapping,0x422,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RDI",write stack
set_foreign_p2m_mapping,0x426,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
set_foreign_p2m_mapping,0x44c,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RDX",write stack
set_foreign_p2m_mapping,0x453,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RSI",write stack
set_foreign_p2m_mapping,0x45a,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R9",write stack
set_foreign_p2m_mapping,0x45e,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
set_foreign_p2m_mapping,0x480,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RDX",write stack
set_foreign_p2m_mapping,0x487,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RSI",write stack
set_foreign_p2m_mapping,0x48e,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R9",write stack
set_foreign_p2m_mapping,0x492,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
set_foreign_p2m_mapping,0x4b1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
clear_foreign_p2m_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_foreign_p2m_mapping,0x20,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
clear_foreign_p2m_mapping,0xb1,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
clear_foreign_p2m_mapping,0xb5,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
clear_foreign_p2m_mapping,0xb9,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
clear_foreign_p2m_mapping,0xe3,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
clear_foreign_p2m_mapping,0xe7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
clear_foreign_p2m_mapping,0xeb,0xffffffff81026760,CALL 0xffffffff81026760,direct call
clear_foreign_p2m_mapping,0x100,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
clear_foreign_p2m_mapping,0x104,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
clear_foreign_p2m_mapping,0x108,0xffffffff81025c10,CALL 0xffffffff81025c10,direct call
clear_foreign_p2m_mapping,0x124,0xffffffff81026760,CALL 0xffffffff81026760,direct call
clear_foreign_p2m_mapping,0x146,0xffffffff81cfe280,CALL 0xffffffff81cfe280,direct call
clear_foreign_p2m_mapping,0x162,,RET,ret
native_wbinvd,0x2,,RET,ret
xen_cpuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpuid,0x4b,ctx->r8,"MOV dword ptr [R8],0x0",write other [TODO]
xen_cpuid,0x52,ctx->rsi,"MOV dword ptr [RSI],0x0",write other [TODO]
xen_cpuid,0x58,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
xen_cpuid,0x60,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
xen_cpuid,0x62,,RET,ret
xen_store_tr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_store_tr,0xc,,RET,ret
xen_invalidate_io_bitmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_invalidate_io_bitmap,0xd,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],0x0",write stack
xen_invalidate_io_bitmap,0x15,ctx->rbp - 0x8,"MOV dword ptr [RBP + -0x8],0x0",write stack
xen_invalidate_io_bitmap,0x1c,ctx->wordctx->ptrctx->gs + 0x6066,"MOV word ptr GS:[0x6066],0x4088",write other [TODO]
xen_invalidate_io_bitmap,0x2f,0xffffffff81cfe420,CALL 0xffffffff81cfe420,direct call
xen_invalidate_io_bitmap,0x35,,RET,ret
xen_io_delay,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_io_delay,0xa,,RET,ret
xen_load_gs_index,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_load_gs_index,0x10,0xffffffff81cfe320,CALL 0xffffffff81cfe320,direct call
xen_load_gs_index,0x1a,,RET,ret
xen_get_nmi_reason,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_get_nmi_reason,0x30,,RET,ret
xen_cpu_dead_pv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpu_dead_pv,0xe,0xffffffff81030190,CALL 0xffffffff81030190,direct call
xen_cpu_dead_pv,0x16,0xffffffff81030f70,CALL 0xffffffff81030f70,direct call
xen_cpu_dead_pv,0x1e,0xffffffff81023910,CALL 0xffffffff81023910,direct call
xen_cpu_dead_pv,0x2a,,RET,ret
xen_crash_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_crash_shutdown,0xe,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_crash_shutdown,0x14,,RET,ret
xen_machine_halt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_machine_halt,0xb,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_machine_halt,0x11,,RET,ret
xen_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_restart,0xe,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_restart,0x14,,RET,ret
xen_machine_power_off,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_machine_power_off,0x9,0xffffffff810d57f0,CALL 0xffffffff810d57f0,direct call
xen_machine_power_off,0x10,0xffffffff810230f0,CALL 0xffffffff810230f0,direct call
xen_machine_power_off,0x16,,RET,ret
xen_end_context_switch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_end_context_switch,0xe,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_end_context_switch,0x16,0xffffffff810807e0,CALL 0xffffffff810807e0,direct call
xen_end_context_switch,0x20,,RET,ret
xen_do_read_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_do_read_msr,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
xen_do_read_msr,0x27,0xffffffff81024e10,CALL 0xffffffff81024e10,direct call
xen_do_read_msr,0x40,ctx->rbx,"MOV dword ptr [RBX],ECX",write other [TODO]
xen_do_read_msr,0x69,,RET,ret
xen_read_msr_safe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_read_msr_safe,0x9,0xffffffff81027180,CALL 0xffffffff81027180,direct call
xen_read_msr_safe,0xf,,RET,ret
xen_read_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_read_msr,0x1e,0xffffffff81027180,CALL 0xffffffff81027180,direct call
xen_read_msr,0x24,,RET,ret
xen_update_io_bitmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_update_io_bitmap,0x1d,0xffffffff81041e80,CALL 0xffffffff81041e80,direct call
xen_update_io_bitmap,0x3a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RBX",write stack
xen_update_io_bitmap,0x44,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],EAX",write stack
xen_update_io_bitmap,0x47,0xffffffff81cfe420,CALL 0xffffffff81cfe420,direct call
xen_update_io_bitmap,0x51,,RET,ret
xen_mc_batch,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_mc_batch,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
xen_mc_batch,0x14,0xffffffff81080830,CALL 0xffffffff81080830,direct call
xen_mc_batch,0x1b,ctx->gs + 0x1ef10,"MOV qword ptr GS:[0x1ef10],RBX",write other [TODO]
xen_mc_batch,0x28,,RET,ret
xen_write_cr4,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_cr4,0x10,0xffffffff8104b720,CALL 0xffffffff8104b720,direct call
xen_write_cr4,0x16,,RET,ret
xen_acpi_suspend_lowlevel,0x9,0xffffffff817010ec,CALL 0xffffffff817010ec,direct call
xen_acpi_suspend_lowlevel,0x11,,RET,ret
xen_read_cr0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_read_cr0,0x17,,RET,ret
xen_read_cr0,0x1b,ctx->gs + 0x1e2a0,"MOV qword ptr GS:[0x1e2a0],RAX",write other [TODO]
xen_read_cr0,0x24,,RET,ret
xen_cpu_up_prepare_pv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_cpu_up_prepare_pv,0x2d,0xffffffff81023950,CALL 0xffffffff81023950,direct call
xen_cpu_up_prepare_pv,0x35,0xffffffff81030300,CALL 0xffffffff81030300,direct call
xen_cpu_up_prepare_pv,0x41,0xffffffff81031030,CALL 0xffffffff81031030,direct call
xen_cpu_up_prepare_pv,0x4f,,RET,ret
xen_cpu_up_prepare_pv,0x5c,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
xen_cpu_up_prepare_pv,0x5f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_cpu_up_prepare_pv,0x7b,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
xen_cpu_up_prepare_pv,0x7e,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
pfn_to_mfn.part.0,0x27,,RET,ret
pfn_to_mfn.part.0,0x3f,,RET,ret
pfn_to_mfn.part.0,0x44,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
pfn_to_mfn.part.0,0x5d,,RET,ret
xen_convert_trap_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_convert_trap_info,0x19,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
xen_convert_trap_info,0x1d,ctx->rbp - 0x39,"MOV byte ptr [RBP + -0x39],DL",write stack
xen_convert_trap_info,0x7e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
xen_convert_trap_info,0x8a,ctx->r15,"MOV byte ptr [R15],R12B",write other [TODO]
xen_convert_trap_info,0xa9,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_convert_trap_info,0xb0,0xffffffff81d04440,CALL 0xffffffff81d04440,direct call
xen_convert_trap_info,0xc1,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
xen_convert_trap_info,0xc9,ctx->wordctx->ptrctx->r15 + 0x2,"MOV word ptr [R15 + 0x2],AX",write other [TODO]
xen_convert_trap_info,0xd8,ctx->r15 + 0x1,"MOV byte ptr [R15 + 0x1],AL",write other [TODO]
xen_convert_trap_info,0xef,ctx->r15 + 0x1,"MOV byte ptr [R15 + 0x1],AL",write other [TODO]
xen_convert_trap_info,0x109,,RET,ret
xen_load_gdt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_load_gdt,0x41,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
xen_load_gdt,0x52,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
xen_load_gdt,0x87,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDI",write stack
xen_load_gdt,0xa2,0xffffffff8102b940,CALL 0xffffffff8102b940,direct call
xen_load_gdt,0xaa,0xffffffff8102b940,CALL 0xffffffff8102b940,direct call
xen_load_gdt,0xb6,0xffffffff81cfe040,CALL 0xffffffff81cfe040,direct call
xen_load_gdt,0xcb,,RET,ret
xen_load_gdt,0xfe,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
load_TLS_descriptor,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_TLS_descriptor,0x30,,RET,ret
load_TLS_descriptor,0x38,ctx->rax + ctx->rcx * 0x8,"MOV qword ptr [RAX + RCX*0x8],RDI",write other [TODO]
load_TLS_descriptor,0x4f,0xffffffff810232a0,CALL 0xffffffff810232a0,direct call
load_TLS_descriptor,0x59,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
load_TLS_descriptor,0x64,ctx->rsi,"MOV qword ptr [RSI],0xa",write other [TODO]
load_TLS_descriptor,0x6b,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R12",write other [TODO]
load_TLS_descriptor,0x6f,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
load_TLS_descriptor,0x79,,RET,ret
xen_mc_issue.constprop.0,0x6,0xffffffff81080830,CALL 0xffffffff81080830,direct call
xen_mc_issue.constprop.0,0x1c,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
xen_mc_issue.constprop.0,0x23,,RET,ret
xen_mc_issue.constprop.0,0x68,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_load_tls,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_load_tls,0x13,0xffffffff81080830,CALL 0xffffffff81080830,direct call
xen_load_tls,0x1d,0xffffffff810272d0,CALL 0xffffffff810272d0,direct call
xen_load_tls,0x2a,0xffffffff810276f0,CALL 0xffffffff810276f0,direct call
xen_load_tls,0x3a,0xffffffff810276f0,CALL 0xffffffff810276f0,direct call
xen_load_tls,0x4a,0xffffffff810276f0,CALL 0xffffffff810276f0,direct call
xen_load_tls,0x4f,0xffffffff810277c0,CALL 0xffffffff810277c0,direct call
xen_load_tls,0x59,,RET,ret
xen_write_ldt_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_ldt_entry,0x22,0xffffffff810232a0,CALL 0xffffffff810232a0,direct call
xen_write_ldt_entry,0x36,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_write_ldt_entry,0x41,0xffffffff81cfe140,CALL 0xffffffff81cfe140,direct call
xen_write_ldt_entry,0x5d,,RET,ret
xen_write_ldt_entry,0xa6,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_write_gdt_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_gdt_entry,0x3f,,RET,ret
xen_write_gdt_entry,0x91,0xffffffff810232a0,CALL 0xffffffff810232a0,direct call
xen_write_gdt_entry,0x99,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_write_gdt_entry,0xa4,0xffffffff81cfe140,CALL 0xffffffff81cfe140,direct call
xen_write_gdt_entry,0xaf,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_load_idt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_load_idt,0x1a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_load_idt,0x35,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
xen_load_idt,0x45,ctx->wordctx->ptrctx->rax + 0x8,"MOV word ptr [RAX + 0x8],DX",write other [TODO]
xen_load_idt,0x4b,0xffffffff810274b0,CALL 0xffffffff810274b0,direct call
xen_load_idt,0x56,ctx->rax - 0x7cc023e0,"MOV qword ptr [RAX + -0x7cc023e0],0x0",write other [TODO]
xen_load_idt,0x61,ctx->rax - 0x7cc023d8,"MOV qword ptr [RAX + -0x7cc023d8],0x0",write other [TODO]
xen_load_idt,0x6c,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_load_idt,0x78,0xffffffff81cfe000,CALL 0xffffffff81cfe000,direct call
xen_load_idt,0x88,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_load_idt,0x92,,RET,ret
xen_write_idt_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_idt_entry,0x44,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_write_idt_entry,0x51,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
xen_write_idt_entry,0x54,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
xen_write_idt_entry,0x8a,,RET,ret
xen_write_idt_entry,0xdd,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],0x0",write stack
xen_write_idt_entry,0x101,ctx->rsp + 0x10,"MOV byte ptr [RSP + 0x10],R12B",write stack
xen_write_idt_entry,0x126,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
xen_write_idt_entry,0x12b,0xffffffff81d04440,CALL 0xffffffff81d04440,direct call
xen_write_idt_entry,0x145,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
xen_write_idt_entry,0x14f,ctx->wordctx->ptrctx->rsp + 0x12,"MOV word ptr [RSP + 0x12],AX",write stack
xen_write_idt_entry,0x16a,ctx->rsp + 0x11,"MOV byte ptr [RSP + 0x11],AL",write stack
xen_write_idt_entry,0x16e,0xffffffff81cfe000,CALL 0xffffffff81cfe000,direct call
xen_write_idt_entry,0x17d,0xffffffff82000810,CALL 0xffffffff82000810,direct call
set_aliased_prot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_aliased_prot,0x1c,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
set_aliased_prot,0x2d,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
set_aliased_prot,0x6c,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
set_aliased_prot,0x88,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
set_aliased_prot,0x95,0xffffffff81cfe1c0,CALL 0xffffffff81cfe1c0,direct call
set_aliased_prot,0xb2,0xffffffff81cfe1c0,CALL 0xffffffff81cfe1c0,direct call
set_aliased_prot,0xce,,RET,ret
set_aliased_prot,0xf3,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_free_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_free_ldt,0x45,0xffffffff81027c80,CALL 0xffffffff81027c80,direct call
xen_free_ldt,0x57,,RET,ret
xen_free_ldt,0x58,,RET,ret
xen_alloc_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_alloc_ldt,0x45,0xffffffff81027c80,CALL 0xffffffff81027c80,direct call
xen_alloc_ldt,0x57,,RET,ret
xen_alloc_ldt,0x58,,RET,ret
xen_load_sp0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_load_sp0,0xd,0xffffffff810272d0,CALL 0xffffffff810272d0,direct call
xen_load_sp0,0x14,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_load_sp0,0x19,ctx->rax,"MOV qword ptr [RAX],0x3",write other [TODO]
xen_load_sp0,0x20,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],0x18",write other [TODO]
xen_load_sp0,0x28,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RBX",write other [TODO]
xen_load_sp0,0x2e,0xffffffff810277c0,CALL 0xffffffff810277c0,direct call
xen_load_sp0,0x33,ctx->gs + 0x6004,"MOV qword ptr GS:[0x6004],RBX",write other [TODO]
xen_load_sp0,0x40,,RET,ret
xen_write_cr0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_cr0,0xd,ctx->gs + 0x1e2a0,"MOV qword ptr GS:[0x1e2a0],RDI",write other [TODO]
xen_write_cr0,0x15,0xffffffff810272d0,CALL 0xffffffff810272d0,direct call
xen_write_cr0,0x20,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_write_cr0,0x28,ctx->rax,"MOV qword ptr [RAX],0x5",write other [TODO]
xen_write_cr0,0x2f,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
xen_write_cr0,0x35,0xffffffff810277c0,CALL 0xffffffff810277c0,direct call
xen_write_cr0,0x3f,,RET,ret
xen_set_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_ldt,0x16,0xffffffff810272d0,CALL 0xffffffff810272d0,direct call
xen_set_ldt,0x20,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_set_ldt,0x30,ctx->rbx,"MOV dword ptr [RBX],0xd",write other [TODO]
xen_set_ldt,0x36,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],R14",write other [TODO]
xen_set_ldt,0x3a,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],R13D",write other [TODO]
xen_set_ldt,0x3e,ctx->r12,"MOV qword ptr [R12],0x1a",write other [TODO]
xen_set_ldt,0x46,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RBX",write other [TODO]
xen_set_ldt,0x4b,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],0x1",write other [TODO]
xen_set_ldt,0x54,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],0x0",write other [TODO]
xen_set_ldt,0x5d,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],0x7ff0",write other [TODO]
xen_set_ldt,0x68,0xffffffff810277c0,CALL 0xffffffff810277c0,direct call
xen_set_ldt,0x75,,RET,ret
xen_do_write_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_do_write_msr,0x56,,RET,ret
xen_do_write_msr,0x6e,0xffffffff81cfe320,CALL 0xffffffff81cfe320,direct call
xen_do_write_msr,0x8f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_do_write_msr,0xa9,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],EDX",write stack
xen_do_write_msr,0xac,0xffffffff81024ee0,CALL 0xffffffff81024ee0,direct call
xen_do_write_msr,0xd0,ctx->rbx,"MOV dword ptr [RBX],R14D",write other [TODO]
xen_do_write_msr,0xe4,0xffffffff81cfe320,CALL 0xffffffff81cfe320,direct call
xen_do_write_msr,0x102,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_do_write_msr,0x11d,0xffffffff81cfe320,CALL 0xffffffff81cfe320,direct call
xen_do_write_msr,0x12f,ctx->rbx,"MOV dword ptr [RBX],0xfffffffb",write other [TODO]
xen_do_write_msr,0x141,,RET,ret
xen_do_write_msr,0x192,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_write_msr_safe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_msr_safe,0x11,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],0x0",write stack
xen_write_msr_safe,0x18,0xffffffff81028070,CALL 0xffffffff81028070,direct call
xen_write_msr_safe,0x21,,RET,ret
xen_write_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_msr,0x1e,0xffffffff81028070,CALL 0xffffffff81028070,direct call
xen_write_msr,0x24,,RET,ret
xen_copy_trap_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_copy_trap_info,0x20,0xffffffff810274b0,CALL 0xffffffff810274b0,direct call
xen_copy_trap_info,0x26,,RET,ret
__raw_callee_save_xen_pte_val,0x10,0xffffffff8102b9c0,CALL 0xffffffff8102b9c0,direct call
__raw_callee_save_xen_pte_val,0x22,,RET,ret
__raw_callee_save_xen_pgd_val,0x10,0xffffffff8102ba30,CALL 0xffffffff8102ba30,direct call
__raw_callee_save_xen_pgd_val,0x22,,RET,ret
__raw_callee_save_xen_make_pte,0x10,0xffffffff8102baa0,CALL 0xffffffff8102baa0,direct call
__raw_callee_save_xen_make_pte,0x22,,RET,ret
__raw_callee_save_xen_make_pgd,0x10,0xffffffff8102bac0,CALL 0xffffffff8102bac0,direct call
__raw_callee_save_xen_make_pgd,0x22,,RET,ret
__raw_callee_save_xen_pmd_val,0x10,0xffffffff8102bae0,CALL 0xffffffff8102bae0,direct call
__raw_callee_save_xen_pmd_val,0x22,,RET,ret
__raw_callee_save_xen_make_pmd,0x10,0xffffffff8102bb50,CALL 0xffffffff8102bb50,direct call
__raw_callee_save_xen_make_pmd,0x22,,RET,ret
__raw_callee_save_xen_pud_val,0x10,0xffffffff8102bb70,CALL 0xffffffff8102bb70,direct call
__raw_callee_save_xen_pud_val,0x22,,RET,ret
__raw_callee_save_xen_make_pud,0x10,0xffffffff8102bbe0,CALL 0xffffffff8102bbe0,direct call
__raw_callee_save_xen_make_pud,0x22,,RET,ret
__raw_callee_save_xen_p4d_val,0x10,0xffffffff8102bc00,CALL 0xffffffff8102bc00,direct call
__raw_callee_save_xen_p4d_val,0x22,,RET,ret
__raw_callee_save_xen_make_p4d,0x10,0xffffffff8102bc70,CALL 0xffffffff8102bc70,direct call
__raw_callee_save_xen_make_p4d,0x22,,RET,ret
__raw_callee_save_xen_make_pte_init,0x10,0xffffffff8102bdb0,CALL 0xffffffff8102bdb0,direct call
__raw_callee_save_xen_make_pte_init,0x22,,RET,ret
__pgd,0x4,0xffffffff82e4ba68,CALL qword ptr [0xffffffff82e4ba68],in-direct call
__pgd,0xb,,RET,ret
pmd_val,0x4,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmd_val,0xb,,RET,ret
pud_val,0x4,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pud_val,0xb,,RET,ret
pfn_pte,0x32,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
pfn_pte,0x39,,RET,ret
xen_get_user_pgd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_get_user_pgd,0x92,,RET,ret
xen_pte_unlock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pte_unlock,0x9,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_pte_unlock,0xf,,RET,ret
xen_read_cr3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_read_cr3,0x12,,RET,ret
set_current_cr3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_current_cr3,0x9,ctx->gs + 0x1e2d8,"MOV qword ptr GS:[0x1e2d8],RDI",write other [TODO]
set_current_cr3,0x12,,RET,ret
xen_page_pinned,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_page_pinned,0x47,,RET,ret
xen_exchange_memory,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_exchange_memory,0x21,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
xen_exchange_memory,0x32,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],ESI",write stack
xen_exchange_memory,0x35,ctx->wordctx->ptrctx->rbp - 0x30,"MOV word ptr [RBP + -0x30],AX",write stack
xen_exchange_memory,0x3c,ctx->wordctx->ptrctx->rbp - 0x10,"MOV word ptr [RBP + -0x10],CX",write stack
xen_exchange_memory,0x42,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
xen_exchange_memory,0x4e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
xen_exchange_memory,0x55,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R11",write stack
xen_exchange_memory,0x59,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R9",write stack
xen_exchange_memory,0x5d,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],R8D",write stack
xen_exchange_memory,0x6f,0xffffffff81cfe180,CALL 0xffffffff81cfe180,direct call
xen_exchange_memory,0x8d,,RET,ret
xen_leave_lazy_mmu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_leave_lazy_mmu,0x10,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_leave_lazy_mmu,0x15,0xffffffff81080700,CALL 0xffffffff81080700,direct call
xen_leave_lazy_mmu,0x24,,RET,ret
xen_leave_lazy_mmu,0x25,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_leave_lazy_mmu,0x2b,,RET,ret
xen_pgd_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pgd_free,0xc,0xffffffff810284b0,CALL 0xffffffff810284b0,direct call
xen_pgd_free,0x1b,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
xen_pgd_free,0x21,,RET,ret
drop_mm_ref_this_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
drop_mm_ref_this_cpu,0x48,,RET,ret
drop_mm_ref_this_cpu,0x49,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
drop_mm_ref_this_cpu,0x53,,RET,ret
drop_mm_ref_this_cpu,0x5b,0xffffffff8108c480,CALL 0xffffffff8108c480,direct call
pte_pfn_to_mfn.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pte_pfn_to_mfn.part.0,0x60,,RET,ret
pte_pfn_to_mfn.part.0,0x6d,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
pte_pfn_to_mfn.part.0,0x7f,,RET,ret
xen_ptep_modify_prot_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_ptep_modify_prot_start,0xe,,RET,ret
FUN_ffffffff8102881f,0x3e,0xffffffff82000418,CALL 0xffffffff82000418,direct call
FUN_ffffffff8102881f,0x54,,RET,ret
FUN_ffffffff8102881f,0x55,0xffffffff82000818,CALL 0xffffffff82000818,direct call
xen_mc_issue,0x9,0xffffffff81080830,CALL 0xffffffff81080830,direct call
xen_mc_issue,0x1f,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
xen_mc_issue,0x2a,,RET,ret
xen_mc_issue,0x6c,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_mc_batch,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_mc_batch,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
xen_mc_batch,0x14,0xffffffff81080830,CALL 0xffffffff81080830,direct call
xen_mc_batch,0x1b,ctx->gs + 0x1ef10,"MOV qword ptr GS:[0x1ef10],RBX",write other [TODO]
xen_mc_batch,0x28,,RET,ret
mfn_to_pfn,0x21,,RET,ret
mfn_to_pfn,0xae,,RET,ret
mfn_to_pfn,0xbf,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
mfn_to_pfn,0xe5,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
remap_area_pfn_pte_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
remap_area_pfn_pte_fn,0x46,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
remap_area_pfn_pte_fn,0x90,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
remap_area_pfn_pte_fn,0xa4,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
remap_area_pfn_pte_fn,0xab,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R12",write other [TODO]
remap_area_pfn_pte_fn,0xbc,,RET,ret
remap_area_pfn_pte_fn,0xc1,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
remap_area_pfn_pte_fn,0x102,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_remap_exchanged_ptes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_remap_exchanged_ptes,0x27,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RCX",write stack
xen_remap_exchanged_ptes,0x2c,ctx->rsp + 0x14,"MOV dword ptr [RSP + 0x14],ESI",write stack
xen_remap_exchanged_ptes,0x30,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_remap_exchanged_ptes,0x50,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
xen_remap_exchanged_ptes,0x60,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_remap_exchanged_ptes,0x88,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R15",write other [TODO]
xen_remap_exchanged_ptes,0xbc,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_remap_exchanged_ptes,0xc8,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],RDX",write other [TODO]
xen_remap_exchanged_ptes,0xd3,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
xen_remap_exchanged_ptes,0x107,0xffffffff810268e0,CALL 0xffffffff810268e0,direct call
xen_remap_exchanged_ptes,0x119,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_remap_exchanged_ptes,0x12c,,RET,ret
xen_zap_pfn_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_zap_pfn_range,0x22,ctx->rsp + 0x1c,"MOV dword ptr [RSP + 0x1c],ESI",write stack
xen_zap_pfn_range,0x26,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RCX",write stack
xen_zap_pfn_range,0x2b,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_zap_pfn_range,0x4e,0xffffffff81026760,CALL 0xffffffff81026760,direct call
xen_zap_pfn_range,0x76,ctx->rax + ctx->r12 * 0x8,"MOV qword ptr [RAX + R12*0x8],RCX",write other [TODO]
xen_zap_pfn_range,0xa4,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_zap_pfn_range,0x117,ctx->rdx,"MOV qword ptr [RDX],RDI",write other [TODO]
xen_zap_pfn_range,0x11a,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_zap_pfn_range,0x121,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],RBX",write other [TODO]
xen_zap_pfn_range,0x125,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],0x0",write other [TODO]
xen_zap_pfn_range,0x12d,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],0x0",write other [TODO]
xen_zap_pfn_range,0x155,0xffffffff81026760,CALL 0xffffffff81026760,direct call
xen_zap_pfn_range,0x1d4,ctx->rsp,"MOV qword ptr [RSP],RSI",write stack
xen_zap_pfn_range,0x1d8,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],R8",write stack
xen_zap_pfn_range,0x1dd,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
xen_zap_pfn_range,0x1e2,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_zap_pfn_range,0x216,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_zap_pfn_range,0x229,,RET,ret
xen_zap_pfn_range,0x22a,ctx->rsp,"MOV qword ptr [RSP],RSI",write stack
xen_zap_pfn_range,0x22e,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],R8",write stack
xen_zap_pfn_range,0x233,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
xen_zap_pfn_range,0x238,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
__xen_pgd_walk,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_pgd_walk,0x1a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
__xen_pgd_walk,0x1e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
__xen_pgd_walk,0x5d,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EBX",write stack
__xen_pgd_walk,0x71,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EBX",write stack
__xen_pgd_walk,0x95,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EBX",write stack
__xen_pgd_walk,0x9e,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ECX",write stack
__xen_pgd_walk,0xa1,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EBX",write stack
__xen_pgd_walk,0xa4,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EAX",write stack
xen_flush_tlb_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_flush_tlb_all,0x10,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_flush_tlb_all,0x1a,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_flush_tlb_all,0x1f,ctx->rdx,"MOV dword ptr [RDX],0xa",write other [TODO]
xen_flush_tlb_all,0x25,ctx->rax,"MOV qword ptr [RAX],0x1a",write other [TODO]
xen_flush_tlb_all,0x2c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
xen_flush_tlb_all,0x30,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x1",write other [TODO]
xen_flush_tlb_all,0x38,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
xen_flush_tlb_all,0x40,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],0x7ff0",write other [TODO]
xen_flush_tlb_all,0x4f,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_flush_tlb_all,0x5e,,RET,ret
xen_flush_tlb_all,0xa6,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_flush_tlb_all,0xac,,RET,ret
xen_remap_pfn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_remap_pfn,0x21,ctx->rsp + 0x28,"MOV dword ptr [RSP + 0x28],ECX",write stack
xen_remap_pfn,0x28,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],RAX",write stack
xen_remap_pfn,0x32,ctx->rsp,"MOV qword ptr [RSP],RDI",write stack
xen_remap_pfn,0x36,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RSI",write stack
xen_remap_pfn,0x4e,ctx->rsp + 0x59,"MOV byte ptr [RSP + 0x59],CL",write stack
xen_remap_pfn,0x57,ctx->rsp + 0x60,"MOV qword ptr [RSP + 0x60],R9",write stack
xen_remap_pfn,0x5f,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RDX",write stack
xen_remap_pfn,0x64,ctx->rsp + 0x2c,"MOV dword ptr [RSP + 0x2c],0x0",write stack
xen_remap_pfn,0x8e,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R9",write stack
xen_remap_pfn,0x95,ctx->rsp + 0x4c,"MOV dword ptr [RSP + 0x4c],0x0",write stack
xen_remap_pfn,0xa5,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],R13",write stack
xen_remap_pfn,0xb1,ctx->rsp + 0x14,"MOV dword ptr [RSP + 0x14],EDX",write stack
xen_remap_pfn,0xbc,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RDX",write stack
xen_remap_pfn,0xc5,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
xen_remap_pfn,0xca,0xffffffff812cac70,CALL 0xffffffff812cac70,direct call
xen_remap_pfn,0x11a,0xffffffff81cfe020,CALL 0xffffffff81cfe020,direct call
xen_remap_pfn,0x13b,ctx->rsp + 0x38,"MOV dword ptr [RSP + 0x38],EAX",write stack
xen_remap_pfn,0x150,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],R11",write stack
xen_remap_pfn,0x155,ctx->rsp + 0x3c,"MOV dword ptr [RSP + 0x3c],R8D",write stack
xen_remap_pfn,0x15a,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R9",write stack
xen_remap_pfn,0x15f,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
xen_remap_pfn,0x183,ctx->r9 + ctx->rax * 0x4,"MOV dword ptr [R9 + RAX*0x4],R12D",write other [TODO]
xen_remap_pfn,0x187,ctx->rsp + 0x4c,"MOV dword ptr [RSP + 0x4c],EBX",write stack
xen_remap_pfn,0x1c0,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R9",write stack
xen_remap_pfn,0x1c5,0xffffffff82000820,CALL 0xffffffff82000820,direct call
xen_remap_pfn,0x1da,0xffffffff810292c0,CALL 0xffffffff810292c0,direct call
xen_remap_pfn,0x1f9,,RET,ret
xen_remap_pfn,0x211,0xffffffff810292c0,CALL 0xffffffff810292c0,direct call
xen_flush_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_flush_tlb,0x10,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_flush_tlb,0x1a,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_flush_tlb,0x1f,ctx->rdx,"MOV dword ptr [RDX],0x6",write other [TODO]
xen_flush_tlb,0x25,ctx->rax,"MOV qword ptr [RAX],0x1a",write other [TODO]
xen_flush_tlb,0x2c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
xen_flush_tlb,0x30,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x1",write other [TODO]
xen_flush_tlb,0x38,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
xen_flush_tlb,0x40,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],0x7ff0",write other [TODO]
xen_flush_tlb,0x4f,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_flush_tlb,0x5e,,RET,ret
xen_flush_tlb,0xa6,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_flush_tlb,0xac,,RET,ret
xen_flush_tlb_one_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_flush_tlb_one_user,0x19,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_flush_tlb_one_user,0x2a,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_flush_tlb_one_user,0x2f,ctx->rdx,"MOV dword ptr [RDX],0x7",write other [TODO]
xen_flush_tlb_one_user,0x38,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RBX",write other [TODO]
xen_flush_tlb_one_user,0x3c,ctx->rax,"MOV qword ptr [RAX],0x1a",write other [TODO]
xen_flush_tlb_one_user,0x43,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
xen_flush_tlb_one_user,0x47,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x1",write other [TODO]
xen_flush_tlb_one_user,0x4f,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
xen_flush_tlb_one_user,0x57,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],0x7ff0",write other [TODO]
xen_flush_tlb_one_user,0x66,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_flush_tlb_one_user,0x7d,,RET,ret
xen_flush_tlb_one_user,0x10f,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_flush_tlb_one_user,0x119,,RET,ret
xen_pgd_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pgd_alloc,0x5e,0xffffffff812ebc30,CALL 0xffffffff812ebc30,direct call
xen_pgd_alloc,0x63,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
xen_pgd_alloc,0xb8,0xffffffff82e4ba68,CALL qword ptr [0xffffffff82e4ba68],in-direct call
xen_pgd_alloc,0xbe,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
xen_pgd_alloc,0xc7,0xffffffff810284b0,CALL 0xffffffff810284b0,direct call
xen_pgd_alloc,0x107,,RET,ret
xen_flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_flush_tlb_multi,0x1d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_flush_tlb_multi,0x23,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
xen_flush_tlb_multi,0x36,ctx->rsi,"MOV RSI,R14",write other [TODO]
xen_flush_tlb_multi,0x39,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
xen_flush_tlb_multi,0x4b,,RET,ret
xen_flush_tlb_multi,0x9c,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_flush_tlb_multi,0xb1,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_flush_tlb_multi,0xb6,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_flush_tlb_multi,0xc9,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RDI",write other [TODO]
xen_flush_tlb_multi,0xd4,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
xen_flush_tlb_multi,0xd9,ctx->rbx,"MOV dword ptr [RBX],0x8",write other [TODO]
xen_flush_tlb_multi,0xf7,ctx->r14,"MOV qword ptr [R14],0x1a",write other [TODO]
xen_flush_tlb_multi,0xfe,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RBX",write other [TODO]
xen_flush_tlb_multi,0x102,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],0x1",write other [TODO]
xen_flush_tlb_multi,0x10a,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],0x0",write other [TODO]
xen_flush_tlb_multi,0x112,ctx->r14 + 0x28,"MOV qword ptr [R14 + 0x28],0x7ff0",write other [TODO]
xen_flush_tlb_multi,0x121,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_flush_tlb_multi,0x12e,,RET,ret
xen_flush_tlb_multi,0x176,ctx->rbx,"MOV dword ptr [RBX],0x9",write other [TODO]
xen_flush_tlb_multi,0x181,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
xen_extend_mmu_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_extend_mmu_update,0x19,0xffffffff8102c640,CALL 0xffffffff8102c640,direct call
xen_extend_mmu_update,0x34,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
xen_extend_mmu_update,0x37,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
xen_extend_mmu_update,0x3f,,RET,ret
xen_extend_mmu_update,0x45,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_extend_mmu_update,0x4d,ctx->rax,"MOV qword ptr [RAX],0x1",write other [TODO]
xen_extend_mmu_update,0x54,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
xen_extend_mmu_update,0x58,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x1",write other [TODO]
xen_extend_mmu_update,0x60,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
xen_extend_mmu_update,0x68,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],0x7ff0",write other [TODO]
__xen_set_p4d_hyper,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_set_p4d_hyper,0x53,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
__xen_set_p4d_hyper,0x57,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RBX",write stack
__xen_set_p4d_hyper,0x5b,0xffffffff81029a30,CALL 0xffffffff81029a30,direct call
__xen_set_p4d_hyper,0x65,,RET,ret
__xen_set_p4d_hyper,0xa2,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
__xen_set_p4d_hyper,0xa6,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_set_p4d,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_p4d,0x15,0xffffffff810284b0,CALL 0xffffffff810284b0,direct call
xen_set_p4d,0x22,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_set_p4d,0x2b,ctx->r12,"MOV qword ptr [R12],R14",write other [TODO]
xen_set_p4d,0x37,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_set_p4d,0x44,ctx->r13,"MOV qword ptr [R13],R14",write other [TODO]
xen_set_p4d,0x4f,,RET,ret
xen_set_p4d,0x98,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_set_p4d,0xa3,0xffffffff81029b00,CALL 0xffffffff81029b00,direct call
xen_set_p4d,0xb3,0xffffffff81029b00,CALL 0xffffffff81029b00,direct call
xen_set_p4d,0xbd,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_set_p4d,0xc9,,RET,ret
xen_ptep_modify_prot_commit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_ptep_modify_prot_commit,0x1e,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_ptep_modify_prot_commit,0x6e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],R12",write stack
xen_ptep_modify_prot_commit,0x76,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R13",write stack
xen_ptep_modify_prot_commit,0x7a,0xffffffff81029a30,CALL 0xffffffff81029a30,direct call
xen_ptep_modify_prot_commit,0x84,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_ptep_modify_prot_commit,0x93,,RET,ret
xen_ptep_modify_prot_commit,0x126,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
__xen_set_pte,0x16,0xffffffff81080830,CALL 0xffffffff81080830,direct call
__xen_set_pte,0x9e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],R12",write stack
__xen_set_pte,0xab,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RBX",write stack
__xen_set_pte,0xb7,0xffffffff81cfe020,CALL 0xffffffff81cfe020,direct call
__xen_set_pte,0xc6,,RET,ret
__xen_set_pte,0xda,0xffffffff81028900,CALL 0xffffffff81028900,direct call
__xen_set_pte,0x121,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],R12",write stack
__xen_set_pte,0x125,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RBX",write stack
__xen_set_pte,0x129,0xffffffff81029a30,CALL 0xffffffff81029a30,direct call
__xen_set_pte,0x133,0xffffffff81028880,CALL 0xffffffff81028880,direct call
__xen_set_pte,0x142,,RET,ret
__xen_set_pte,0x191,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
__xen_set_pte,0x1a8,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_set_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_pte,0x1b,0xffffffff81029e20,CALL 0xffffffff81029e20,direct call
xen_set_pte,0x25,,RET,ret
xen_set_pud_hyper,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_pud_hyper,0x1d,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_set_pud_hyper,0x25,0xffffffff810232a0,CALL 0xffffffff810232a0,direct call
xen_set_pud_hyper,0x2e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RBX",write stack
xen_set_pud_hyper,0x32,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
xen_set_pud_hyper,0x36,0xffffffff81029a30,CALL 0xffffffff81029a30,direct call
xen_set_pud_hyper,0x40,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_set_pud_hyper,0x56,,RET,ret
xen_set_pud_hyper,0x57,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_set_pud_hyper,0x64,,RET,ret
xen_set_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_pud,0x18,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_set_pud,0x21,ctx->r12,"MOV qword ptr [R12],R13",write other [TODO]
xen_set_pud,0x2a,,RET,ret
xen_set_pud,0x76,0xffffffff8102a080,CALL 0xffffffff8102a080,direct call
xen_set_pud,0x80,,RET,ret
xen_set_pmd_hyper,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_pmd_hyper,0x1d,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_set_pmd_hyper,0x25,0xffffffff810232a0,CALL 0xffffffff810232a0,direct call
xen_set_pmd_hyper,0x2e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RBX",write stack
xen_set_pmd_hyper,0x32,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
xen_set_pmd_hyper,0x36,0xffffffff81029a30,CALL 0xffffffff81029a30,direct call
xen_set_pmd_hyper,0x40,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_set_pmd_hyper,0x56,,RET,ret
xen_set_pmd_hyper,0x57,0xffffffff82000810,CALL 0xffffffff82000810,direct call
xen_set_pmd_hyper,0x64,,RET,ret
xen_set_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_pmd,0x18,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_set_pmd,0x21,ctx->r12,"MOV qword ptr [R12],R13",write other [TODO]
xen_set_pmd,0x2a,,RET,ret
xen_set_pmd,0x76,0xffffffff8102a180,CALL 0xffffffff8102a180,direct call
xen_set_pmd,0x80,,RET,ret
xen_extend_mmuext_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_extend_mmuext_op,0x19,0xffffffff8102c640,CALL 0xffffffff8102c640,direct call
xen_extend_mmuext_op,0x2f,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
xen_extend_mmuext_op,0x37,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
xen_extend_mmuext_op,0x40,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
xen_extend_mmuext_op,0x48,,RET,ret
xen_extend_mmuext_op,0x4e,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_extend_mmuext_op,0x56,ctx->rax,"MOV qword ptr [RAX],0x1a",write other [TODO]
xen_extend_mmuext_op,0x5d,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
xen_extend_mmuext_op,0x61,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x1",write other [TODO]
xen_extend_mmuext_op,0x69,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
xen_extend_mmuext_op,0x71,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],0x7ff0",write other [TODO]
xen_do_pin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_do_pin,0x14,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],EDI",write stack
xen_do_pin,0x1d,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
xen_do_pin,0x21,0xffffffff8102a280,CALL 0xffffffff8102a280,direct call
xen_do_pin,0x27,,RET,ret
xen_do_pin,0x53,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
xen_do_pin,0x57,0xffffffff8102a280,CALL 0xffffffff8102a280,direct call
xen_do_pin,0x5d,,RET,ret
xen_do_pin,0x80,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
xen_do_pin,0x84,0xffffffff8102a280,CALL 0xffffffff8102a280,direct call
xen_do_pin,0x8a,,RET,ret
xen_do_pin,0x8e,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_unpin_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_unpin_page,0x49,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_unpin_page,0xa9,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_unpin_page,0xaf,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_unpin_page,0xb6,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],RBX",write other [TODO]
xen_unpin_page,0xba,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
xen_unpin_page,0xbe,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],RDX",write other [TODO]
xen_unpin_page,0xd3,0xffffffff8102c7e0,CALL 0xffffffff8102c7e0,direct call
xen_unpin_page,0xe0,,RET,ret
xen_unpin_page,0xe1,,RET,ret
xen_unpin_page,0x12d,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_unpin_page,0x13f,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
xen_unpin_page,0x146,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
__xen_pgd_unpin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_pgd_unpin,0x19,0xffffffff810284b0,CALL 0xffffffff810284b0,direct call
__xen_pgd_unpin,0x26,0xffffffff81028900,CALL 0xffffffff81028900,direct call
__xen_pgd_unpin,0x53,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
__xen_pgd_unpin,0x88,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
__xen_pgd_unpin,0xac,0xffffffff8102a3f0,CALL 0xffffffff8102a3f0,direct call
__xen_pgd_unpin,0xe1,0xffffffff81028f80,CALL 0xffffffff81028f80,direct call
__xen_pgd_unpin,0xe8,0xffffffff81028880,CALL 0xffffffff81028880,direct call
__xen_pgd_unpin,0xf5,,RET,ret
__xen_pgd_unpin,0x165,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
xen_exit_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_exit_mmap,0x20,0xffffffff81028700,CALL 0xffffffff81028700,direct call
xen_exit_mmap,0x33,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
xen_exit_mmap,0x97,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
xen_exit_mmap,0x9f,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_exit_mmap,0xac,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_exit_mmap,0xd1,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_exit_mmap,0xde,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_exit_mmap,0xee,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_exit_mmap,0x101,,RET,ret
xen_exit_mmap,0x108,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x30]",write other [TODO]
xen_exit_mmap,0x12d,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
xen_exit_mmap,0x139,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_exit_mmap,0x148,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_exit_mmap,0x19d,0xffffffff8116e520,CALL 0xffffffff8116e520,direct call
xen_exit_mmap,0x1a6,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
xen_exit_mmap,0x1b6,0xffffffff8102a550,CALL 0xffffffff8102a550,direct call
xen_exit_mmap,0x1c0,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__xen_write_cr3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_write_cr3,0x3f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDI",write stack
__xen_write_cr3,0x47,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x5",write stack
__xen_write_cr3,0x4e,0xffffffff8102a280,CALL 0xffffffff8102a280,direct call
__xen_write_cr3,0x53,ctx->gs + 0x1e2e0,"MOV qword ptr GS:[0x1e2e0],R12",write other [TODO]
__xen_write_cr3,0x65,0xffffffff8102c7e0,CALL 0xffffffff8102c7e0,direct call
__xen_write_cr3,0x72,,RET,ret
__xen_write_cr3,0x7f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDI",write stack
__xen_write_cr3,0x87,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0xf",write stack
__xen_write_cr3,0x8e,0xffffffff8102a280,CALL 0xffffffff8102a280,direct call
__xen_write_cr3,0x9b,,RET,ret
__xen_write_cr3,0x12e,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_write_cr3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_write_cr3,0x16,0xffffffff810284b0,CALL 0xffffffff810284b0,direct call
xen_write_cr3,0x2c,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_write_cr3,0x31,ctx->gs + 0x1e2e0,"MOV qword ptr GS:[0x1e2e0],R12",write other [TODO]
xen_write_cr3,0x41,0xffffffff8102a8b0,CALL 0xffffffff8102a8b0,direct call
xen_write_cr3,0x69,0xffffffff8102a8b0,CALL 0xffffffff8102a8b0,direct call
xen_write_cr3,0x73,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_write_cr3,0x7c,,RET,ret
xen_write_cr3,0x81,0xffffffff8102a8b0,CALL 0xffffffff8102a8b0,direct call
xen_write_cr3,0x8b,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_write_cr3,0x94,,RET,ret
xen_write_cr3,0x95,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_pin_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pin_page,0xd,,RET,ret
xen_pin_page,0x46,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
xen_pin_page,0x4a,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_pin_page,0xb4,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_pin_page,0xbe,ctx->r15,"MOV qword ptr [R15],0xe",write other [TODO]
xen_pin_page,0xc5,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],RAX",write other [TODO]
xen_pin_page,0xc9,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],RCX",write other [TODO]
xen_pin_page,0xcd,ctx->r15 + 0x20,"MOV qword ptr [R15 + 0x20],RDX",write other [TODO]
xen_pin_page,0xdd,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
xen_pin_page,0xec,0xffffffff8102c7e0,CALL 0xffffffff8102c7e0,direct call
xen_pin_page,0xff,,RET,ret
xen_pin_page,0x14e,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__xen_pgd_pin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_pgd_pin,0x17,0xffffffff810284b0,CALL 0xffffffff810284b0,direct call
__xen_pgd_pin,0x24,0xffffffff81028900,CALL 0xffffffff81028900,direct call
__xen_pgd_pin,0x59,0xffffffff81028f80,CALL 0xffffffff81028f80,direct call
__xen_pgd_pin,0x87,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
__xen_pgd_pin,0xbc,0xffffffff8102aac0,CALL 0xffffffff8102aac0,direct call
__xen_pgd_pin,0xd4,0xffffffff8102a350,CALL 0xffffffff8102a350,direct call
__xen_pgd_pin,0xdb,0xffffffff81028880,CALL 0xffffffff81028880,direct call
__xen_pgd_pin,0xe6,,RET,ret
__xen_pgd_pin,0x10b,0xffffffff8102aac0,CALL 0xffffffff8102aac0,direct call
xen_activate_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_activate_mm,0x17,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_activate_mm,0x24,0xffffffff8102ac20,CALL 0xffffffff8102ac20,direct call
xen_activate_mm,0x2c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_activate_mm,0x36,,RET,ret
xen_dup_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_dup_mmap,0x17,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_dup_mmap,0x24,0xffffffff8102ac20,CALL 0xffffffff8102ac20,direct call
xen_dup_mmap,0x2c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_dup_mmap,0x36,,RET,ret
xen_release_ptpage,0x3a,,RET,ret
xen_release_ptpage,0x83,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_release_ptpage,0xb7,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_release_ptpage,0xed,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_release_ptpage,0xf3,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_release_ptpage,0xfa,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R14",write other [TODO]
xen_release_ptpage,0xfe,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
xen_release_ptpage,0x102,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],0x0",write other [TODO]
xen_release_ptpage,0x111,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_release_ptpage,0x124,,RET,ret
xen_release_ptpage,0x18a,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_release_ptpage,0x18f,ctx->rdx,"MOV dword ptr [RDX],0x4",write other [TODO]
xen_release_ptpage,0x1ab,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
xen_release_ptpage,0x1af,ctx->r12,"MOV qword ptr [R12],0x1a",write other [TODO]
xen_release_ptpage,0x1b7,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],R14",write other [TODO]
xen_release_ptpage,0x1bc,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],0x1",write other [TODO]
xen_release_ptpage,0x1c5,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],0x0",write other [TODO]
xen_release_ptpage,0x1ce,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],0x7ff0",write other [TODO]
xen_release_ptpage,0x278,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_release_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_release_pud,0xe,0xffffffff8102ae20,CALL 0xffffffff8102ae20,direct call
xen_release_pud,0x14,,RET,ret
xen_release_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_release_pmd,0xe,0xffffffff8102ae20,CALL 0xffffffff8102ae20,direct call
xen_release_pmd,0x14,,RET,ret
xen_release_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_release_pte,0xe,0xffffffff8102ae20,CALL 0xffffffff8102ae20,direct call
xen_release_pte,0x14,,RET,ret
xen_set_fixmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_fixmap,0xfe,0xffffffff81cfe1c0,CALL 0xffffffff81cfe1c0,direct call
xen_set_fixmap,0x114,,RET,ret
xen_set_fixmap,0x160,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_set_fixmap,0x17b,0xffffffff81087710,CALL 0xffffffff81087710,direct call
xen_set_fixmap,0x181,,RET,ret
xen_set_fixmap,0x1f2,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_alloc_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_alloc_pte,0x20,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_alloc_pte,0x57,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_alloc_pte,0x84,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_alloc_pte,0xa5,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_alloc_pte,0xab,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_alloc_pte,0xb2,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R15",write other [TODO]
xen_alloc_pte,0xb6,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
xen_alloc_pte,0xba,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],0x0",write other [TODO]
xen_alloc_pte,0xd5,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_alloc_pte,0xe8,,RET,ret
xen_alloc_pte,0x1cc,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_alloc_pte,0x1d1,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
xen_alloc_pte,0x21f,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],R12",write other [TODO]
xen_alloc_pte,0x223,ctx->r13,"MOV qword ptr [R13],0x1a",write other [TODO]
xen_alloc_pte,0x22b,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RDX",write other [TODO]
xen_alloc_pte,0x22f,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],0x1",write other [TODO]
xen_alloc_pte,0x237,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],0x0",write other [TODO]
xen_alloc_pte,0x23f,ctx->r13 + 0x28,"MOV qword ptr [R13 + 0x28],0x7ff0",write other [TODO]
xen_alloc_pte,0x2b8,ctx->rsp,"MOV qword ptr [RSP],RDX",write stack
xen_alloc_pte,0x2bc,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_alloc_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_alloc_pud,0x18,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_alloc_pud,0x46,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_alloc_pud,0x70,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_alloc_pud,0x8d,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_alloc_pud,0x93,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_alloc_pud,0x9a,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R13",write other [TODO]
xen_alloc_pud,0x9e,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
xen_alloc_pud,0xa2,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],0x0",write other [TODO]
xen_alloc_pud,0xb4,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_alloc_pud,0xbf,,RET,ret
xen_alloc_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_alloc_pmd,0x18,0xffffffff810285a0,CALL 0xffffffff810285a0,direct call
xen_alloc_pmd,0x46,0xffffffff81028900,CALL 0xffffffff81028900,direct call
xen_alloc_pmd,0x70,0xffffffff8102c4d0,CALL 0xffffffff8102c4d0,direct call
xen_alloc_pmd,0x8d,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
xen_alloc_pmd,0x93,ctx->rsi,"MOV qword ptr [RSI],0xe",write other [TODO]
xen_alloc_pmd,0x9a,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R13",write other [TODO]
xen_alloc_pmd,0x9e,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
xen_alloc_pmd,0xa2,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],0x0",write other [TODO]
xen_alloc_pmd,0xb4,0xffffffff81028880,CALL 0xffffffff81028880,direct call
xen_alloc_pmd,0xbf,,RET,ret
make_lowmem_page_readonly,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
make_lowmem_page_readonly,0x16,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
make_lowmem_page_readonly,0x2c,0xffffffff81cfe1c0,CALL 0xffffffff81cfe1c0,direct call
make_lowmem_page_readonly,0x3a,,RET,ret
make_lowmem_page_readwrite,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
make_lowmem_page_readwrite,0x16,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
make_lowmem_page_readwrite,0x2c,0xffffffff81cfe1c0,CALL 0xffffffff81cfe1c0,direct call
make_lowmem_page_readwrite,0x3a,,RET,ret
xen_pte_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pte_val,0x1b,,RET,ret
xen_pte_val,0x31,0xffffffff81028970,CALL 0xffffffff81028970,direct call
xen_pte_val,0x6b,,RET,ret
xen_pgd_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pgd_val,0x1b,,RET,ret
xen_pgd_val,0x31,0xffffffff81028970,CALL 0xffffffff81028970,direct call
xen_pgd_val,0x6b,,RET,ret
xen_make_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_make_pte,0xc,,RET,ret
xen_make_pte,0x11,0xffffffff81028770,CALL 0xffffffff81028770,direct call
xen_make_pte,0x17,,RET,ret
xen_make_pgd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_make_pgd,0xc,,RET,ret
xen_make_pgd,0x11,0xffffffff81028770,CALL 0xffffffff81028770,direct call
xen_make_pgd,0x17,,RET,ret
xen_pmd_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pmd_val,0x1b,,RET,ret
xen_pmd_val,0x31,0xffffffff81028970,CALL 0xffffffff81028970,direct call
xen_pmd_val,0x6b,,RET,ret
xen_make_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_make_pmd,0xc,,RET,ret
xen_make_pmd,0x11,0xffffffff81028770,CALL 0xffffffff81028770,direct call
xen_make_pmd,0x17,,RET,ret
xen_pud_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pud_val,0x1b,,RET,ret
xen_pud_val,0x31,0xffffffff81028970,CALL 0xffffffff81028970,direct call
xen_pud_val,0x6b,,RET,ret
xen_make_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_make_pud,0xc,,RET,ret
xen_make_pud,0x11,0xffffffff81028770,CALL 0xffffffff81028770,direct call
xen_make_pud,0x17,,RET,ret
xen_p4d_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_p4d_val,0x1b,,RET,ret
xen_p4d_val,0x31,0xffffffff81028970,CALL 0xffffffff81028970,direct call
xen_p4d_val,0x6b,,RET,ret
xen_make_p4d,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_make_p4d,0xc,,RET,ret
xen_make_p4d,0x11,0xffffffff81028770,CALL 0xffffffff81028770,direct call
xen_make_p4d,0x17,,RET,ret
xen_mm_pin_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_mm_pin_all,0x11,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_mm_pin_all,0x63,0xffffffff8102ac20,CALL 0xffffffff8102ac20,direct call
xen_mm_pin_all,0x83,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_mm_pin_all,0x8d,,RET,ret
xen_mm_unpin_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_mm_unpin_all,0x11,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
xen_mm_unpin_all,0x58,0xffffffff8102a550,CALL 0xffffffff8102a550,direct call
xen_mm_unpin_all,0x78,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
xen_mm_unpin_all,0x82,,RET,ret
xen_make_pte_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_make_pte_init,0x3d,,RET,ret
xen_make_pte_init,0x5e,0xffffffff81028770,CALL 0xffffffff81028770,direct call
xen_make_pte_init,0x64,,RET,ret
xen_create_contiguous_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_create_contiguous_region,0x16,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
xen_create_contiguous_region,0x44,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
xen_create_contiguous_region,0x50,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
xen_create_contiguous_region,0x67,0xffffffff81028d30,CALL 0xffffffff81028d30,direct call
xen_create_contiguous_region,0x6c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
xen_create_contiguous_region,0xb4,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_create_contiguous_region,0xb8,0xffffffff81028600,CALL 0xffffffff81028600,direct call
xen_create_contiguous_region,0xd9,0xffffffff81028ba0,CALL 0xffffffff81028ba0,direct call
xen_create_contiguous_region,0xe8,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
xen_create_contiguous_region,0x162,ctx->rax,"MOV qword ptr [RAX],R14",write other [TODO]
xen_create_contiguous_region,0x17a,,RET,ret
xen_create_contiguous_region,0x187,0xffffffff81028ba0,CALL 0xffffffff81028ba0,direct call
xen_create_contiguous_region,0x19a,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_create_contiguous_region,0x1c1,,RET,ret
xen_create_contiguous_region,0x1c2,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x1",write stack
xen_destroy_contiguous_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_destroy_contiguous_region,0x35,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
xen_destroy_contiguous_region,0x41,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
xen_destroy_contiguous_region,0x79,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDI",write stack
xen_destroy_contiguous_region,0x8c,0xffffffff81028d30,CALL 0xffffffff81028d30,direct call
xen_destroy_contiguous_region,0xb7,0xffffffff81028600,CALL 0xffffffff81028600,direct call
xen_destroy_contiguous_region,0xcd,0xffffffff81028ba0,CALL 0xffffffff81028ba0,direct call
xen_destroy_contiguous_region,0xdc,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
xen_destroy_contiguous_region,0xec,,RET,ret
xen_destroy_contiguous_region,0xfc,0xffffffff81028ba0,CALL 0xffffffff81028ba0,direct call
xen_destroy_contiguous_region,0x13c,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_destroy_contiguous_region,0x160,,RET,ret
paddr_vmcoreinfo_note,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paddr_vmcoreinfo_note,0x40,,RET,ret
paddr_vmcoreinfo_note,0x8e,,RET,ret
paddr_vmcoreinfo_note,0xc4,,RET,ret
paddr_vmcoreinfo_note,0xce,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_safe_halt,0xb,0xffffffff81cfe3a0,CALL 0xffffffff81cfe3a0,direct call
xen_safe_halt,0x15,,RET,ret
xen_halt,0x4,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_halt,0x33,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_halt,0x39,,RET,ret
xen_halt,0x41,0xffffffff81cfe3a0,CALL 0xffffffff81cfe3a0,direct call
xen_mc_flush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_mc_flush,0x2f,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_mc_flush,0x38,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
xen_mc_flush,0x5e,0xffffffff81cfe1a0,CALL 0xffffffff81cfe1a0,direct call
xen_mc_flush,0x135,ctx->rax,CALL RAX,in-direct call
xen_mc_flush,0x137,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
xen_mc_flush,0x190,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_mc_flush,0x1d3,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],-0x16",write other [TODO]
__xen_mc_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_mc_entry,0x78,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
__xen_mc_entry,0x83,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EAX",write other [TODO]
__xen_mc_entry,0x9e,,RET,ret
__xen_mc_entry,0xec,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__xen_mc_entry,0x108,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
xen_mc_extend_args,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_mc_extend_args,0x81,ctx->rdx + 0x4,"MOV dword ptr [RDX + 0x4],EAX",write other [TODO]
xen_mc_extend_args,0x9c,,RET,ret
xen_mc_extend_args,0xf7,,RET,ret
xen_mc_extend_args,0xf8,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
xen_mc_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_mc_callback,0x35,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EDX",write other [TODO]
xen_mc_callback,0x3b,ctx->rbx + 0xa10,"MOV qword ptr [RBX + 0xa10],R13",write other [TODO]
xen_mc_callback,0x42,ctx->rbx + 0xa18,"MOV qword ptr [RBX + 0xa18],R12",write other [TODO]
xen_mc_callback,0x4f,,RET,ret
xen_mc_callback,0x97,0xffffffff8102c2f0,CALL 0xffffffff8102c2f0,direct call
__traceiter_xen_mc_batch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_batch,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_batch,0x37,,RET,ret
__traceiter_xen_mc_issue,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_issue,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_issue,0x37,,RET,ret
__traceiter_xen_mc_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_entry,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_entry,0x41,,RET,ret
__traceiter_xen_mc_entry_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_entry_alloc,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_entry_alloc,0x37,,RET,ret
__traceiter_xen_mc_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_callback,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_callback,0x41,,RET,ret
__traceiter_xen_mc_flush_reason,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_flush_reason,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_flush_reason,0x37,,RET,ret
__traceiter_xen_mc_flush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_flush,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_flush,0x4b,,RET,ret
__traceiter_xen_mc_extend_args,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mc_extend_args,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mc_extend_args,0x4b,,RET,ret
__traceiter_xen_mmu_set_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_set_pte,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_set_pte,0x41,,RET,ret
__traceiter_xen_mmu_set_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_set_pmd,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_set_pmd,0x41,,RET,ret
__traceiter_xen_mmu_set_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_set_pud,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_set_pud,0x41,,RET,ret
__traceiter_xen_mmu_set_p4d,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_set_p4d,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_set_p4d,0x4b,,RET,ret
__traceiter_xen_mmu_ptep_modify_prot_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_ptep_modify_prot_start,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_ptep_modify_prot_start,0x55,,RET,ret
__traceiter_xen_mmu_ptep_modify_prot_commit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_ptep_modify_prot_commit,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_ptep_modify_prot_commit,0x55,,RET,ret
__traceiter_xen_mmu_alloc_ptpage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_alloc_ptpage,0x42,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_alloc_ptpage,0x56,,RET,ret
__traceiter_xen_mmu_release_ptpage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_release_ptpage,0x3a,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_release_ptpage,0x4c,,RET,ret
__traceiter_xen_mmu_pgd_pin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_pgd_pin,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_pgd_pin,0x41,,RET,ret
__traceiter_xen_mmu_pgd_unpin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_pgd_unpin,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_pgd_unpin,0x41,,RET,ret
__traceiter_xen_mmu_flush_tlb_one_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_flush_tlb_one_user,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_flush_tlb_one_user,0x37,,RET,ret
__traceiter_xen_mmu_flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_flush_tlb_multi,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_flush_tlb_multi,0x55,,RET,ret
__traceiter_xen_mmu_write_cr3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_mmu_write_cr3,0x32,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_mmu_write_cr3,0x42,,RET,ret
__traceiter_xen_cpu_write_ldt_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_cpu_write_ldt_entry,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_cpu_write_ldt_entry,0x4b,,RET,ret
__traceiter_xen_cpu_write_idt_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_cpu_write_idt_entry,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_cpu_write_idt_entry,0x4b,,RET,ret
__traceiter_xen_cpu_load_idt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_cpu_load_idt,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_cpu_load_idt,0x37,,RET,ret
__traceiter_xen_cpu_write_gdt_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_cpu_write_gdt_entry,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_cpu_write_gdt_entry,0x55,,RET,ret
__traceiter_xen_cpu_set_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_xen_cpu_set_ldt,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_xen_cpu_set_ldt,0x41,,RET,ret
perf_trace_xen_mc__batch,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_xen_mc__batch,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc__batch,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mc__batch,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mc__batch,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mc__batch,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mc__batch,0x91,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_xen_mc__batch,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc__batch,0xb8,,RET,ret
perf_trace_xen_mc__batch,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mc_entry_alloc,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_xen_mc_entry_alloc,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc_entry_alloc,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mc_entry_alloc,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mc_entry_alloc,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mc_entry_alloc,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mc_entry_alloc,0x91,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_xen_mc_entry_alloc,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc_entry_alloc,0xb8,,RET,ret
perf_trace_xen_mc_entry_alloc,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mc_callback,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_mc_callback,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc_callback,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mc_callback,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mc_callback,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mc_callback,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mc_callback,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mc_callback,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mc_callback,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc_callback,0xc7,,RET,ret
perf_trace_xen_mc_callback,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mc_flush_reason,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_xen_mc_flush_reason,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc_flush_reason,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mc_flush_reason,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mc_flush_reason,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mc_flush_reason,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mc_flush_reason,0x91,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_xen_mc_flush_reason,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc_flush_reason,0xb8,,RET,ret
perf_trace_xen_mc_flush_reason,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mc_flush,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mc_flush,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc_flush,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mc_flush,0x81,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mc_flush,0x88,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mc_flush,0x93,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mc_flush,0x9e,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_xen_mc_flush,0xa2,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R12D",write other [TODO]
perf_trace_xen_mc_flush,0xa6,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EBX",write other [TODO]
perf_trace_xen_mc_flush,0xad,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc_flush,0xd1,,RET,ret
perf_trace_xen_mc_flush,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mc_extend_args,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mc_extend_args,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc_extend_args,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mc_extend_args,0x81,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mc_extend_args,0x88,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mc_extend_args,0x93,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mc_extend_args,0x9e,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_xen_mc_extend_args,0xa2,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R12",write other [TODO]
perf_trace_xen_mc_extend_args,0xa6,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],EBX",write other [TODO]
perf_trace_xen_mc_extend_args,0xad,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc_extend_args,0xd1,,RET,ret
perf_trace_xen_mc_extend_args,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu__set_pte,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_mmu__set_pte,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu__set_pte,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu__set_pte,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu__set_pte,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu__set_pte,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu__set_pte,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mmu__set_pte,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu__set_pte,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu__set_pte,0xc7,,RET,ret
perf_trace_xen_mmu__set_pte,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_set_pmd,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_mmu_set_pmd,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_set_pmd,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_set_pmd,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_set_pmd,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_set_pmd,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_set_pmd,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mmu_set_pmd,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_set_pmd,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_set_pmd,0xc7,,RET,ret
perf_trace_xen_mmu_set_pmd,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_set_pud,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_mmu_set_pud,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_set_pud,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_set_pud,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_set_pud,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_set_pud,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_set_pud,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mmu_set_pud,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_set_pud,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_set_pud,0xc7,,RET,ret
perf_trace_xen_mmu_set_pud,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_set_p4d,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mmu_set_p4d,0x55,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_set_p4d,0x6d,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_xen_mmu_set_p4d,0x74,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_set_p4d,0x7b,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_set_p4d,0x86,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_set_p4d,0x91,ctx->r10 + 0x8,"MOV qword ptr [R10 + 0x8],R14",write other [TODO]
perf_trace_xen_mmu_set_p4d,0x95,ctx->r10 + 0x10,"MOV qword ptr [R10 + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_set_p4d,0x99,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
perf_trace_xen_mmu_set_p4d,0x9f,ctx->r10 + 0x18,"MOV qword ptr [R10 + 0x18],RAX",write other [TODO]
perf_trace_xen_mmu_set_p4d,0xbe,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_set_p4d,0xe2,,RET,ret
perf_trace_xen_mmu_set_p4d,0xf1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_ptep_modify_prot,0x1d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
perf_trace_xen_mmu_ptep_modify_prot,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mmu_ptep_modify_prot,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_ptep_modify_prot,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0x8a,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0x91,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0x9c,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0xa7,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0xab,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0xaf,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0xb3,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],R12",write other [TODO]
perf_trace_xen_mmu_ptep_modify_prot,0xba,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_ptep_modify_prot,0xde,,RET,ret
perf_trace_xen_mmu_ptep_modify_prot,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_alloc_ptpage,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_xen_mmu_alloc_ptpage,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mmu_alloc_ptpage,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_alloc_ptpage,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0x8a,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0x91,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0x9c,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0xa7,ctx->rdi + 0x1c,"MOV byte ptr [RDI + 0x1c],AL",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0xaa,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0xae,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0xb2,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],R12D",write other [TODO]
perf_trace_xen_mmu_alloc_ptpage,0xb9,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_alloc_ptpage,0xdd,,RET,ret
perf_trace_xen_mmu_alloc_ptpage,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_release_ptpage,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mmu_release_ptpage,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_release_ptpage,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0x81,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0x88,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0x93,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0x9e,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0xa2,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0xa6,ctx->rdi + 0x14,"MOV byte ptr [RDI + 0x14],BL",write other [TODO]
perf_trace_xen_mmu_release_ptpage,0xad,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_release_ptpage,0xd1,,RET,ret
perf_trace_xen_mmu_release_ptpage,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_pgd,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_mmu_pgd,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_pgd,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_pgd,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_pgd,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_pgd,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_pgd,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_mmu_pgd,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_pgd,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_pgd,0xc7,,RET,ret
perf_trace_xen_mmu_pgd,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_flush_tlb_one_user,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_xen_mmu_flush_tlb_one_user,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_flush_tlb_one_user,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_flush_tlb_one_user,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_flush_tlb_one_user,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_flush_tlb_one_user,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_flush_tlb_one_user,0x91,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_xen_mmu_flush_tlb_one_user,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_flush_tlb_one_user,0xb8,,RET,ret
perf_trace_xen_mmu_flush_tlb_one_user,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_mmu_write_cr3,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_mmu_write_cr3,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_write_cr3,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_mmu_write_cr3,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_write_cr3,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_write_cr3,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_write_cr3,0x9a,ctx->rdi + 0x8,"MOV byte ptr [RDI + 0x8],R14B",write other [TODO]
perf_trace_xen_mmu_write_cr3,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_xen_mmu_write_cr3,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_write_cr3,0xc7,,RET,ret
perf_trace_xen_mmu_write_cr3,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_cpu_write_ldt_entry,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_cpu_write_ldt_entry,0x55,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_cpu_write_ldt_entry,0x7b,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0x82,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0x89,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0x94,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0x9f,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0xa3,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0xa7,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RBX",write other [TODO]
perf_trace_xen_cpu_write_ldt_entry,0xaf,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_cpu_write_ldt_entry,0xd3,,RET,ret
perf_trace_xen_cpu_write_ldt_entry,0xe2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_cpu_write_idt_entry,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_cpu_write_idt_entry,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_cpu_write_idt_entry,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_cpu_write_idt_entry,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_cpu_write_idt_entry,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_cpu_write_idt_entry,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_cpu_write_idt_entry,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_cpu_write_idt_entry,0x9e,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R13D",write other [TODO]
perf_trace_xen_cpu_write_idt_entry,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_cpu_write_idt_entry,0xc7,,RET,ret
perf_trace_xen_cpu_write_idt_entry,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_cpu_load_idt,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_xen_cpu_load_idt,0x4b,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_cpu_load_idt,0x71,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_cpu_load_idt,0x78,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_cpu_load_idt,0x7f,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_cpu_load_idt,0x8a,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_cpu_load_idt,0x99,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
perf_trace_xen_cpu_load_idt,0xa0,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_cpu_load_idt,0xc0,,RET,ret
perf_trace_xen_cpu_load_idt,0xcf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_cpu_write_gdt_entry,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_xen_cpu_write_gdt_entry,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_cpu_write_gdt_entry,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_cpu_write_gdt_entry,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0x86,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0x8d,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0x98,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0xa3,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R14",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0xa7,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],R13D",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0xae,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0xb5,ctx->rdi + 0x1c,"MOV dword ptr [RDI + 0x1c],EAX",write other [TODO]
perf_trace_xen_cpu_write_gdt_entry,0xbb,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_cpu_write_gdt_entry,0xdf,,RET,ret
perf_trace_xen_cpu_write_gdt_entry,0xee,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_xen_cpu_set_ldt,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_xen_cpu_set_ldt,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_cpu_set_ldt,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_xen_cpu_set_ldt,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_xen_cpu_set_ldt,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_xen_cpu_set_ldt,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_xen_cpu_set_ldt,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_xen_cpu_set_ldt,0x9e,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R13D",write other [TODO]
perf_trace_xen_cpu_set_ldt,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_cpu_set_ldt,0xc7,,RET,ret
perf_trace_xen_cpu_set_ldt,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc__batch,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_xen_mc__batch,0x34,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc__batch,0x3e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_xen_mc__batch,0x45,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc__batch,0x61,,RET,ret
trace_event_raw_event_xen_mc__batch,0x67,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc__batch,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc_entry_alloc,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_xen_mc_entry_alloc,0x35,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc_entry_alloc,0x3f,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
trace_event_raw_event_xen_mc_entry_alloc,0x47,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc_entry_alloc,0x63,,RET,ret
trace_event_raw_event_xen_mc_entry_alloc,0x69,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc_entry_alloc,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc_callback,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_mc_callback,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc_callback,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mc_callback,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_xen_mc_callback,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc_callback,0x6e,,RET,ret
trace_event_raw_event_xen_mc_callback,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc_callback,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc_flush_reason,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_xen_mc_flush_reason,0x34,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc_flush_reason,0x3e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_xen_mc_flush_reason,0x45,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc_flush_reason,0x61,,RET,ret
trace_event_raw_event_xen_mc_flush_reason,0x67,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc_flush_reason,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc_flush,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_xen_mc_flush,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc_flush,0x48,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_xen_mc_flush,0x50,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R12D",write other [TODO]
trace_event_raw_event_xen_mc_flush,0x54,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_xen_mc_flush,0x57,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc_flush,0x77,,RET,ret
trace_event_raw_event_xen_mc_flush,0x7d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc_flush,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc_extend_args,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_xen_mc_extend_args,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc_extend_args,0x48,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_xen_mc_extend_args,0x50,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R12",write other [TODO]
trace_event_raw_event_xen_mc_extend_args,0x54,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],EBX",write other [TODO]
trace_event_raw_event_xen_mc_extend_args,0x57,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc_extend_args,0x77,,RET,ret
trace_event_raw_event_xen_mc_extend_args,0x7d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc_extend_args,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu__set_pte,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_mmu__set_pte,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu__set_pte,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mmu__set_pte,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_xen_mmu__set_pte,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu__set_pte,0x6e,,RET,ret
trace_event_raw_event_xen_mmu__set_pte,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu__set_pte,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_set_pmd,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_mmu_set_pmd,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_set_pmd,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mmu_set_pmd,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_xen_mmu_set_pmd,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_set_pmd,0x6e,,RET,ret
trace_event_raw_event_xen_mmu_set_pmd,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_set_pmd,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_set_pud,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_mmu_set_pud,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_set_pud,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mmu_set_pud,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_xen_mmu_set_pud,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_set_pud,0x6e,,RET,ret
trace_event_raw_event_xen_mmu_set_pud,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_set_pud,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x4e,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R14",write other [TODO]
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x56,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R13",write other [TODO]
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x5a,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],R12",write other [TODO]
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x5e,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RBX",write other [TODO]
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x62,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x84,,RET,ret
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x8a,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_ptep_modify_prot,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_alloc_ptpage,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_xen_mmu_alloc_ptpage,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_alloc_ptpage,0x4e,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R14",write other [TODO]
trace_event_raw_event_xen_mmu_alloc_ptpage,0x56,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R13",write other [TODO]
trace_event_raw_event_xen_mmu_alloc_ptpage,0x5a,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],R12D",write other [TODO]
trace_event_raw_event_xen_mmu_alloc_ptpage,0x5e,ctx->rax + 0x1c,"MOV byte ptr [RAX + 0x1c],BL",write other [TODO]
trace_event_raw_event_xen_mmu_alloc_ptpage,0x61,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_alloc_ptpage,0x83,,RET,ret
trace_event_raw_event_xen_mmu_alloc_ptpage,0x89,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_alloc_ptpage,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_release_ptpage,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_xen_mmu_release_ptpage,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_release_ptpage,0x48,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mmu_release_ptpage,0x50,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_xen_mmu_release_ptpage,0x54,ctx->rax + 0x14,"MOV byte ptr [RAX + 0x14],BL",write other [TODO]
trace_event_raw_event_xen_mmu_release_ptpage,0x57,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_release_ptpage,0x77,,RET,ret
trace_event_raw_event_xen_mmu_release_ptpage,0x7d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_release_ptpage,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_pgd,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_mmu_pgd,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_pgd,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mmu_pgd,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_xen_mmu_pgd,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_pgd,0x6e,,RET,ret
trace_event_raw_event_xen_mmu_pgd,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_pgd,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x35,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x3f,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x47,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x63,,RET,ret
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x69,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_flush_tlb_one_user,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_write_cr3,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_mmu_write_cr3,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_write_cr3,0x44,ctx->rax + 0x8,"MOV byte ptr [RAX + 0x8],R13B",write other [TODO]
trace_event_raw_event_xen_mmu_write_cr3,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_xen_mmu_write_cr3,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_write_cr3,0x6e,,RET,ret
trace_event_raw_event_xen_mmu_write_cr3,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_write_cr3,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_cpu_write_ldt_entry,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_xen_cpu_write_ldt_entry,0x3f,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_cpu_write_ldt_entry,0x49,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_cpu_write_ldt_entry,0x51,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_xen_cpu_write_ldt_entry,0x55,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RBX",write other [TODO]
trace_event_raw_event_xen_cpu_write_ldt_entry,0x59,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_cpu_write_ldt_entry,0x79,,RET,ret
trace_event_raw_event_xen_cpu_write_ldt_entry,0x7f,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_cpu_write_ldt_entry,0x8a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_cpu_write_idt_entry,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_cpu_write_idt_entry,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_cpu_write_idt_entry,0x43,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_cpu_write_idt_entry,0x4b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_xen_cpu_write_idt_entry,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_cpu_write_idt_entry,0x6c,,RET,ret
trace_event_raw_event_xen_cpu_write_idt_entry,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_cpu_write_idt_entry,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_cpu_load_idt,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_xen_cpu_load_idt,0x35,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_cpu_load_idt,0x47,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
trace_event_raw_event_xen_cpu_load_idt,0x4b,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_cpu_load_idt,0x67,,RET,ret
trace_event_raw_event_xen_cpu_load_idt,0x6d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_cpu_load_idt,0x78,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_cpu_write_gdt_entry,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_xen_cpu_write_gdt_entry,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_cpu_write_gdt_entry,0x4e,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R13",write other [TODO]
trace_event_raw_event_xen_cpu_write_gdt_entry,0x56,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],R12D",write other [TODO]
trace_event_raw_event_xen_cpu_write_gdt_entry,0x5d,ctx->rax + 0x1c,"MOV dword ptr [RAX + 0x1c],EBX",write other [TODO]
trace_event_raw_event_xen_cpu_write_gdt_entry,0x60,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
trace_event_raw_event_xen_cpu_write_gdt_entry,0x64,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_cpu_write_gdt_entry,0x86,,RET,ret
trace_event_raw_event_xen_cpu_write_gdt_entry,0x8c,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_cpu_write_gdt_entry,0x97,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_cpu_set_ldt,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_xen_cpu_set_ldt,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_cpu_set_ldt,0x43,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_cpu_set_ldt,0x4b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_xen_cpu_set_ldt,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_cpu_set_ldt,0x6c,,RET,ret
trace_event_raw_event_xen_cpu_set_ldt,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_cpu_set_ldt,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_xen_mc__batch,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc__batch,0x4e,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc__batch,0x5a,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc__batch,0x63,,RET,ret
trace_raw_output_xen_mc_entry,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc_entry,0x5c,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc_entry,0x6c,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc_entry,0x79,,RET,ret
trace_raw_output_xen_mc_entry_alloc,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc_entry_alloc,0x22,,RET,ret
trace_raw_output_xen_mc_entry_alloc,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc_entry_alloc,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc_entry_alloc,0x47,,RET,ret
trace_raw_output_xen_mc_callback,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc_callback,0x22,,RET,ret
trace_raw_output_xen_mc_callback,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc_callback,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc_callback,0x4c,,RET,ret
trace_raw_output_xen_mc_flush_reason,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc_flush_reason,0x38,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc_flush_reason,0x44,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc_flush_reason,0x4d,,RET,ret
trace_raw_output_xen_mc_flush,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc_flush,0x22,,RET,ret
trace_raw_output_xen_mc_flush,0x3c,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc_flush,0x48,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc_flush,0x51,,RET,ret
trace_raw_output_xen_mc_extend_args,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mc_extend_args,0x6f,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mc_extend_args,0x7b,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mc_extend_args,0x84,,RET,ret
trace_raw_output_xen_mmu_set_pmd,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_set_pmd,0x26,,RET,ret
trace_raw_output_xen_mmu_set_pmd,0x2c,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
trace_raw_output_xen_mmu_set_pmd,0x50,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_set_pmd,0x5c,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_set_pmd,0x6a,,RET,ret
trace_raw_output_xen_mmu_set_pud,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_set_pud,0x26,,RET,ret
trace_raw_output_xen_mmu_set_pud,0x2c,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
trace_raw_output_xen_mmu_set_pud,0x50,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_set_pud,0x5c,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_set_pud,0x6a,,RET,ret
trace_raw_output_xen_mmu_set_p4d,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_set_p4d,0x26,,RET,ret
trace_raw_output_xen_mmu_set_p4d,0x2c,0xffffffff82e4ba60,CALL qword ptr [0xffffffff82e4ba60],in-direct call
trace_raw_output_xen_mmu_set_p4d,0x52,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_set_p4d,0x5e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_set_p4d,0x6d,,RET,ret
trace_raw_output_xen_mmu_ptep_modify_prot,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_ptep_modify_prot,0x26,,RET,ret
trace_raw_output_xen_mmu_ptep_modify_prot,0x2c,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
trace_raw_output_xen_mmu_ptep_modify_prot,0x55,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_ptep_modify_prot,0x61,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_ptep_modify_prot,0x72,,RET,ret
trace_raw_output_xen_mmu_alloc_ptpage,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_alloc_ptpage,0x4f,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_alloc_ptpage,0x5b,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_alloc_ptpage,0x64,,RET,ret
trace_raw_output_xen_mmu_release_ptpage,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_release_ptpage,0x4a,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_release_ptpage,0x56,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_release_ptpage,0x5f,,RET,ret
trace_raw_output_xen_mmu_pgd,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_pgd,0x22,,RET,ret
trace_raw_output_xen_mmu_pgd,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_pgd,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_pgd,0x4c,,RET,ret
trace_raw_output_xen_mmu_flush_tlb_one_user,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_flush_tlb_one_user,0x22,,RET,ret
trace_raw_output_xen_mmu_flush_tlb_one_user,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_flush_tlb_one_user,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_flush_tlb_one_user,0x47,,RET,ret
trace_raw_output_xen_mmu_flush_tlb_multi,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_flush_tlb_multi,0x22,,RET,ret
trace_raw_output_xen_mmu_flush_tlb_multi,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_flush_tlb_multi,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_flush_tlb_multi,0x56,,RET,ret
trace_raw_output_xen_mmu_write_cr3,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu_write_cr3,0x45,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu_write_cr3,0x51,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu_write_cr3,0x5a,,RET,ret
trace_raw_output_xen_cpu_write_ldt_entry,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_cpu_write_ldt_entry,0x22,,RET,ret
trace_raw_output_xen_cpu_write_ldt_entry,0x3c,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_cpu_write_ldt_entry,0x48,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_cpu_write_ldt_entry,0x51,,RET,ret
trace_raw_output_xen_cpu_write_idt_entry,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_cpu_write_idt_entry,0x22,,RET,ret
trace_raw_output_xen_cpu_write_idt_entry,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_cpu_write_idt_entry,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_cpu_write_idt_entry,0x4c,,RET,ret
trace_raw_output_xen_cpu_load_idt,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_cpu_load_idt,0x22,,RET,ret
trace_raw_output_xen_cpu_load_idt,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_cpu_load_idt,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_cpu_load_idt,0x47,,RET,ret
trace_raw_output_xen_cpu_write_gdt_entry,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_cpu_write_gdt_entry,0x22,,RET,ret
trace_raw_output_xen_cpu_write_gdt_entry,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_cpu_write_gdt_entry,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_cpu_write_gdt_entry,0x56,,RET,ret
trace_raw_output_xen_cpu_set_ldt,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_cpu_set_ldt,0x22,,RET,ret
trace_raw_output_xen_cpu_set_ldt,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_cpu_set_ldt,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_cpu_set_ldt,0x4c,,RET,ret
perf_trace_xen_mc_entry,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mc_entry,0x52,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mc_entry,0x74,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_xen_mc_entry,0x7b,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_xen_mc_entry,0x82,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_xen_mc_entry,0x8d,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_xen_mc_entry,0x9c,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],R15D",write other [TODO]
perf_trace_xen_mc_entry,0xa1,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EAX",write other [TODO]
perf_trace_xen_mc_entry,0xc0,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
perf_trace_xen_mc_entry,0xc4,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
perf_trace_xen_mc_entry,0xdf,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
perf_trace_xen_mc_entry,0xff,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mc_entry,0x123,,RET,ret
perf_trace_xen_mc_entry,0x147,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
perf_trace_xen_mc_entry,0x159,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
perf_trace_xen_mc_entry,0x15d,0xffffffff830c7bbd,"MOV byte ptr [0xffffffff830c7bbd],0x1",write .data
perf_trace_xen_mc_entry,0x164,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
perf_trace_xen_mc_entry,0x178,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mc_entry,0x21,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_xen_mc_entry,0x40,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mc_entry,0x52,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
trace_event_raw_event_xen_mc_entry,0x5a,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EDX",write other [TODO]
trace_event_raw_event_xen_mc_entry,0x77,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
trace_event_raw_event_xen_mc_entry,0x8e,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
trace_event_raw_event_xen_mc_entry,0x97,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mc_entry,0xb7,,RET,ret
trace_event_raw_event_xen_mc_entry,0xd7,0xffffffff830c7bbe,"MOV byte ptr [0xffffffff830c7bbe],0x1",write .data
trace_event_raw_event_xen_mc_entry,0xde,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
trace_event_raw_event_xen_mc_entry,0xf0,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mc_entry,0xff,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpumask_weight,0x1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpumask_weight,0xa,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
cpumask_weight,0x10,,RET,ret
perf_trace_xen_mmu_flush_tlb_multi,0x1a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
perf_trace_xen_mmu_flush_tlb_multi,0x22,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
perf_trace_xen_mmu_flush_tlb_multi,0x37,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_xen_mmu_flush_tlb_multi,0x5a,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_xen_mmu_flush_tlb_multi,0x72,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0x79,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0x80,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0x8b,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0x96,0xffffffff8102fc40,CALL 0xffffffff8102fc40,direct call
perf_trace_xen_mmu_flush_tlb_multi,0x9b,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],R15",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0xa6,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EAX",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0xc1,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0xca,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
perf_trace_xen_mmu_flush_tlb_multi,0xd2,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_xen_mmu_flush_tlb_multi,0xf6,,RET,ret
perf_trace_xen_mmu_flush_tlb_multi,0x105,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x1d,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x45,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x55,0xffffffff8102fc40,CALL 0xffffffff8102fc40,direct call
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x5a,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],R14",write other [TODO]
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x62,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x69,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],R13",write other [TODO]
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x6d,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x71,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x93,,RET,ret
trace_event_raw_event_xen_mmu_flush_tlb_multi,0x99,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_flush_tlb_multi,0xa4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__bpf_trace_xen_mc__batch,0x6,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_xen_mc__batch,0xc,,RET,ret
__bpf_trace_xen_mc_entry_alloc,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_xen_mc_entry_alloc,0xa,,RET,ret
__bpf_trace_xen_cpu_load_idt,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_xen_cpu_load_idt,0xa,,RET,ret
__bpf_trace_xen_mc_entry,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mc_entry,0xc,,RET,ret
__bpf_trace_xen_mc_callback,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mc_callback,0xa,,RET,ret
__bpf_trace_xen_mmu__set_pte,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mmu__set_pte,0xa,,RET,ret
__bpf_trace_xen_mmu_set_pmd,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mmu_set_pmd,0xa,,RET,ret
__bpf_trace_xen_mmu_set_pud,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mmu_set_pud,0xa,,RET,ret
__bpf_trace_xen_mmu_pgd,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mmu_pgd,0xa,,RET,ret
__bpf_trace_xen_mmu_write_cr3,0x8,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_mmu_write_cr3,0xe,,RET,ret
__bpf_trace_xen_mc_flush,0xa,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_xen_mc_flush,0x10,,RET,ret
__bpf_trace_xen_mc_extend_args,0x6,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_xen_mc_extend_args,0xc,,RET,ret
__bpf_trace_xen_mmu_set_p4d,0x4,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_xen_mmu_set_p4d,0xa,,RET,ret
__bpf_trace_xen_mmu_release_ptpage,0x9,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_xen_mmu_release_ptpage,0xf,,RET,ret
__bpf_trace_xen_cpu_write_ldt_entry,0x6,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_xen_cpu_write_ldt_entry,0xc,,RET,ret
__bpf_trace_xen_cpu_write_idt_entry,0x6,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_xen_cpu_write_idt_entry,0xc,,RET,ret
__bpf_trace_xen_mmu_ptep_modify_prot,0x4,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_xen_mmu_ptep_modify_prot,0xa,,RET,ret
__bpf_trace_xen_mmu_alloc_ptpage,0xa,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_xen_mmu_alloc_ptpage,0x10,,RET,ret
__bpf_trace_xen_mmu_flush_tlb_multi,0x4,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_xen_mmu_flush_tlb_multi,0xa,,RET,ret
__bpf_trace_xen_cpu_write_gdt_entry,0x9,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_xen_cpu_write_gdt_entry,0xf,,RET,ret
__bpf_trace_xen_cpu_set_ldt,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_xen_cpu_set_ldt,0xc,,RET,ret
__bpf_trace_xen_mc_flush_reason,0x6,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_xen_mc_flush_reason,0xc,,RET,ret
__bpf_trace_xen_mmu_flush_tlb_one_user,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_xen_mmu_flush_tlb_one_user,0xa,,RET,ret
trace_event_raw_event_xen_mmu_set_p4d,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_xen_mmu_set_p4d,0x3f,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_xen_mmu_set_p4d,0x4c,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_xen_mmu_set_p4d,0x53,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R12",write other [TODO]
trace_event_raw_event_xen_mmu_set_p4d,0x57,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
trace_event_raw_event_xen_mmu_set_p4d,0x5d,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],RAX",write other [TODO]
trace_event_raw_event_xen_mmu_set_p4d,0x65,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_xen_mmu_set_p4d,0x85,,RET,ret
trace_event_raw_event_xen_mmu_set_p4d,0x8b,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_xen_mmu_set_p4d,0x96,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_xen_mmu__set_pte,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_xen_mmu__set_pte,0x26,,RET,ret
trace_raw_output_xen_mmu__set_pte,0x2c,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
trace_raw_output_xen_mmu__set_pte,0x50,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_xen_mmu__set_pte,0x5c,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_xen_mmu__set_pte,0x6a,,RET,ret
xen_call_function_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_call_function_interrupt,0x9,0xffffffff8116ea90,CALL 0xffffffff8116ea90,direct call
xen_call_function_interrupt,0x1b,,RET,ret
xen_reschedule_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_reschedule_interrupt,0x31,,RET,ret
xen_call_function_single_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_call_function_single_interrupt,0x9,0xffffffff8116ea90,CALL 0xffffffff8116ea90,direct call
xen_call_function_single_interrupt,0x1b,,RET,ret
__xen_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xen_send_IPI_mask,0x1b,0xffffffff8175fa00,CALL 0xffffffff8175fa00,direct call
__xen_send_IPI_mask,0x23,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
__xen_send_IPI_mask,0x33,0xffffffff81601f50,CALL 0xffffffff81601f50,direct call
__xen_send_IPI_mask,0x4b,,RET,ret
xen_smp_intr_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_intr_free,0x2b,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_smp_intr_free,0x38,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_smp_intr_free,0x4d,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_smp_intr_free,0x5a,ctx->rax + ctx->r12 * 0x1 + 0x8,"MOV qword ptr [RAX + R12*0x1 + 0x8],0x0",write other [TODO]
xen_smp_intr_free,0x80,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_smp_intr_free,0x8d,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_smp_intr_free,0xa2,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_smp_intr_free,0xaf,ctx->rax + ctx->r12 * 0x1 + 0x8,"MOV qword ptr [RAX + R12*0x1 + 0x8],0x0",write other [TODO]
xen_smp_intr_free,0xd5,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_smp_intr_free,0xe2,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_smp_intr_free,0xf7,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_smp_intr_free,0x104,ctx->rax + ctx->r12 * 0x1 + 0x8,"MOV qword ptr [RAX + R12*0x1 + 0x8],0x0",write other [TODO]
xen_smp_intr_free,0x12a,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_smp_intr_free,0x137,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_smp_intr_free,0x14c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_smp_intr_free,0x159,ctx->rax + ctx->r12 * 0x1 + 0x8,"MOV qword ptr [RAX + R12*0x1 + 0x8],0x0",write other [TODO]
xen_smp_intr_free,0x166,,RET,ret
xen_smp_intr_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_intr_init,0x21,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_smp_intr_init,0x40,0xffffffff8175f790,CALL 0xffffffff8175f790,direct call
xen_smp_intr_init,0x6e,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_smp_intr_init,0x7a,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RBX",write other [TODO]
xen_smp_intr_init,0x82,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_smp_intr_init,0xa4,0xffffffff8175f790,CALL 0xffffffff8175f790,direct call
xen_smp_intr_init,0xc3,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_smp_intr_init,0xd6,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RBX",write other [TODO]
xen_smp_intr_init,0xec,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_smp_intr_init,0x10e,0xffffffff8175f700,CALL 0xffffffff8175f700,direct call
xen_smp_intr_init,0x12d,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_smp_intr_init,0x139,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RBX",write other [TODO]
xen_smp_intr_init,0x14d,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_smp_intr_init,0x16f,0xffffffff8175f790,CALL 0xffffffff8175f790,direct call
xen_smp_intr_init,0x18a,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_smp_intr_init,0x199,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RBX",write other [TODO]
xen_smp_intr_init,0x1a9,,RET,ret
xen_smp_intr_init,0x1ad,0xffffffff81030190,CALL 0xffffffff81030190,direct call
xen_smp_intr_init,0x1bd,,RET,ret
xen_smp_send_reschedule,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_send_reschedule,0xb,0xffffffff8175fa00,CALL 0xffffffff8175fa00,direct call
xen_smp_send_reschedule,0x11,,RET,ret
xen_smp_send_call_function_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_send_call_function_ipi,0x14,0xffffffff81030140,CALL 0xffffffff81030140,direct call
xen_smp_send_call_function_ipi,0x1d,0xffffffff8175c4a0,CALL 0xffffffff8175c4a0,direct call
xen_smp_send_call_function_ipi,0x29,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_smp_send_call_function_ipi,0x35,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
xen_smp_send_call_function_ipi,0x4b,,RET,ret
xen_smp_send_call_function_ipi,0x50,0xffffffff81cfe3a0,CALL 0xffffffff81cfe3a0,direct call
xen_smp_send_call_function_ipi,0x59,,RET,ret
xen_smp_send_call_function_single_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_send_call_function_single_ipi,0x31,0xffffffff81030140,CALL 0xffffffff81030140,direct call
xen_smp_send_call_function_single_ipi,0x37,,RET,ret
xen_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_send_IPI_mask,0x28,0xffffffff81030140,CALL 0xffffffff81030140,direct call
xen_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_send_IPI_all,0x2f,0xffffffff81030140,CALL 0xffffffff81030140,direct call
xen_send_IPI_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_send_IPI_self,0x2f,0xffffffff8175fa00,CALL 0xffffffff8175fa00,direct call
xen_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_send_IPI_mask_allbutself,0x52,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_send_IPI_mask_allbutself,0x64,0xffffffff8175fa00,CALL 0xffffffff8175fa00,direct call
xen_send_IPI_mask_allbutself,0x69,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
xen_send_IPI_mask_allbutself,0x7c,0xffffffff81601f50,CALL 0xffffffff81601f50,direct call
xen_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_send_IPI_allbutself,0x12,0xffffffff810306d0,CALL 0xffffffff810306d0,direct call
xen_send_IPI_allbutself,0x18,,RET,ret
cpu_bringup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_bringup,0xb,0xffffffff8104b780,CALL 0xffffffff8104b780,direct call
cpu_bringup,0x10,0xffffffff8104c980,CALL 0xffffffff8104c980,direct call
cpu_bringup,0x15,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
cpu_bringup,0x2e,0xffffffff8106d260,CALL 0xffffffff8106d260,direct call
cpu_bringup,0x4d,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 + 0xf8,"MOV word ptr [RDX + RAX*0x1 + 0xf8],CX",write other [TODO]
cpu_bringup,0x55,0xffffffff8106d2c0,CALL 0xffffffff8106d2c0,direct call
cpu_bringup,0x5a,0xffffffff81042060,CALL 0xffffffff81042060,direct call
cpu_bringup,0x5f,0xffffffff810239d0,CALL 0xffffffff810239d0,direct call
cpu_bringup,0x67,0xffffffff810a7d70,CALL 0xffffffff810a7d70,direct call
cpu_bringup,0x74,0xffffffff810a85a0,CALL 0xffffffff810a85a0,direct call
cpu_bringup,0x7c,0xffffffff810d6850,CALL 0xffffffff810d6850,direct call
cpu_bringup,0x81,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cpu_bringup,0x8c,,RET,ret
cpu_bringup,0x8d,0xffffffff81024590,CALL 0xffffffff81024590,direct call
cpu_bringup,0x92,0xffffffff81024600,CALL 0xffffffff81024600,direct call
xen_irq_work_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_irq_work_interrupt,0x9,0xffffffff8120a550,CALL 0xffffffff8120a550,direct call
xen_irq_work_interrupt,0x1b,,RET,ret
xen_pv_play_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_play_dead,0x9,0xffffffff8106e7e0,CALL 0xffffffff8106e7e0,direct call
xen_pv_play_dead,0x32,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_pv_play_dead,0x37,0xffffffff81030800,CALL 0xffffffff81030800,direct call
xen_pv_play_dead,0x3c,0xffffffff81167790,CALL 0xffffffff81167790,direct call
xen_pv_play_dead,0x41,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
xen_pv_play_dead,0x47,0xffffffff811674d0,CALL 0xffffffff811674d0,direct call
xen_pv_play_dead,0x4c,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
xen_pv_play_dead,0x57,0xffffffff810a7e30,CALL 0xffffffff810a7e30,direct call
xen_pv_play_dead,0x5d,,RET,ret
xen_pv_cpu_die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_cpu_die,0x30,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_pv_cpu_die,0x42,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],0x2",write other [TODO]
xen_pv_cpu_die,0x50,0xffffffff81d135c0,CALL 0xffffffff81d135c0,direct call
xen_pv_cpu_die,0x68,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_pv_cpu_die,0x74,0xffffffff8106e760,CALL 0xffffffff8106e760,direct call
xen_pv_cpu_die,0x85,,RET,ret
xen_pv_cpu_die,0x89,0xffffffff81030190,CALL 0xffffffff81030190,direct call
xen_pv_cpu_die,0x91,0xffffffff81031350,CALL 0xffffffff81031350,direct call
xen_pv_cpu_die,0x99,0xffffffff81023910,CALL 0xffffffff81023910,direct call
xen_pv_cpu_die,0xa1,0xffffffff810254f0,CALL 0xffffffff810254f0,direct call
xen_pv_cpu_die,0xae,,RET,ret
xen_pv_stop_other_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_stop_other_cpus,0x14,0xffffffff8116e540,CALL 0xffffffff8116e540,direct call
xen_pv_stop_other_cpus,0x1a,,RET,ret
xen_pv_cpu_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_cpu_disable,0x14,0xffffffff8106e360,CALL 0xffffffff8106e360,direct call
xen_pv_cpu_disable,0x3f,0xffffffff82e4b9c8,CALL qword ptr [0xffffffff82e4b9c8],in-direct call
xen_pv_cpu_disable,0x48,,RET,ret
xen_pv_cpu_disable,0x4e,,RET,ret
stop_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
stop_self,0x37,0xffffffff82e4b9c8,CALL qword ptr [0xffffffff82e4b9c8],in-direct call
stop_self,0x44,0xffffffff810a85a0,CALL 0xffffffff810a85a0,direct call
stop_self,0x63,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_pv_cpu_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_pv_cpu_up,0x1b,0xffffffff8106da80,CALL 0xffffffff8106da80,direct call
xen_pv_cpu_up,0x38,,RET,ret
xen_pv_cpu_up,0x3b,0xffffffff8175c4d0,CALL 0xffffffff8175c4d0,direct call
xen_pv_cpu_up,0x42,0xffffffff810d67f0,CALL 0xffffffff810d67f0,direct call
xen_pv_cpu_up,0x60,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
xen_pv_cpu_up,0x64,ctx->rax + 0x1,"MOV byte ptr [RAX + 0x1],0x1",write other [TODO]
xen_pv_cpu_up,0x8e,0xffffffff81025260,CALL 0xffffffff81025260,direct call
xen_pv_cpu_up,0xa9,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_pv_cpu_up,0xbe,0xffffffff81cfe3a0,CALL 0xffffffff81cfe3a0,direct call
xen_pv_cpu_up,0xc5,0xffffffff810d67d0,CALL 0xffffffff810d67d0,direct call
xen_pv_cpu_up,0xe5,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
xen_pv_cpu_up,0x11b,ctx->r14 + 0x288,"MOV qword ptr [R14 + 0x288],-0x7efff760",write other [TODO]
xen_pv_cpu_up,0x126,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_pv_cpu_up,0x12f,ctx->wordctx->ptrctx->r14 + 0x2b8,"MOV word ptr [R14 + 0x2b8],AX",write other [TODO]
xen_pv_cpu_up,0x13b,ctx->r14 + 0x200,"MOV qword ptr [R14 + 0x200],0x4",write other [TODO]
xen_pv_cpu_up,0x14c,ctx->wordctx->ptrctx->r14 + 0x2b0,"MOV word ptr [R14 + 0x2b0],DX",write other [TODO]
xen_pv_cpu_up,0x154,ctx->r14 + 0x298,"MOV qword ptr [R14 + 0x298],0x1000",write other [TODO]
xen_pv_cpu_up,0x15f,ctx->wordctx->ptrctx->r14 + 0x2a8,"MOV word ptr [R14 + 0x2a8],CX",write other [TODO]
xen_pv_cpu_up,0x167,ctx->wordctx->ptrctx->r14 + 0x290,"MOV word ptr [R14 + 0x290],SI",write other [TODO]
xen_pv_cpu_up,0x16f,ctx->r14 + 0x2a0,"MOV qword ptr [R14 + 0x2a0],RAX",write other [TODO]
xen_pv_cpu_up,0x176,0xffffffff81028270,CALL 0xffffffff81028270,direct call
xen_pv_cpu_up,0x18f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
xen_pv_cpu_up,0x193,0xffffffff81023420,CALL 0xffffffff81023420,direct call
xen_pv_cpu_up,0x19c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
xen_pv_cpu_up,0x1a0,0xffffffff8102b940,CALL 0xffffffff8102b940,direct call
xen_pv_cpu_up,0x1c4,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
xen_pv_cpu_up,0x1c8,0xffffffff8102b940,CALL 0xffffffff8102b940,direct call
xen_pv_cpu_up,0x1d5,ctx->r14 + 0x1360,"MOV qword ptr [R14 + 0x1360],0x10",write other [TODO]
xen_pv_cpu_up,0x1e0,ctx->r14 + 0x1368,"MOV qword ptr [R14 + 0x1368],0x18",write other [TODO]
xen_pv_cpu_up,0x1f1,ctx->r14 + 0x12e0,"MOV qword ptr [R14 + 0x12e0],RDX",write other [TODO]
xen_pv_cpu_up,0x1ff,ctx->r14 + 0x1370,"MOV qword ptr [R14 + 0x1370],RAX",write other [TODO]
xen_pv_cpu_up,0x20e,ctx->r14 + 0x1420,"MOV qword ptr [R14 + 0x1420],RAX",write other [TODO]
xen_pv_cpu_up,0x223,ctx->r14 + 0x13f8,"MOV qword ptr [R14 + 0x13f8],-0x7efd35d0",write other [TODO]
xen_pv_cpu_up,0x22e,ctx->r14 + 0x1400,"MOV qword ptr [R14 + 0x1400],-0x7e1fee90",write other [TODO]
xen_pv_cpu_up,0x250,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
xen_pv_cpu_up,0x288,ctx->r14 + 0x1390,"MOV qword ptr [R14 + 0x1390],RAX",write other [TODO]
xen_pv_cpu_up,0x2a3,0xffffffff81cfe300,CALL 0xffffffff81cfe300,direct call
xen_pv_cpu_up,0x2b3,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_pv_cpu_up,0x39d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
xen_pv_cpu_up,0x3a1,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_cpu_up,0x3d8,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_cpu_up,0x3f2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
xen_pv_cpu_up,0x3f6,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
xen_pv_cpu_up,0x3fa,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_cpu_up,0x418,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
xen_pv_cpu_up,0x41c,0xffffffff81025a60,CALL 0xffffffff81025a60,direct call
xen_pv_cpu_up,0x431,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
cpu_bringup_and_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_bringup_and_idle,0x9,0xffffffff81030800,CALL 0xffffffff81030800,direct call
cpu_bringup_and_idle,0x13,0xffffffff810fd850,CALL 0xffffffff810fd850,direct call
xen_smp_intr_free_pv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_intr_free_pv,0x2b,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_smp_intr_free_pv,0x38,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_smp_intr_free_pv,0x4d,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_smp_intr_free_pv,0x5a,ctx->rax + ctx->r12 * 0x1 + 0x8,"MOV qword ptr [RAX + R12*0x1 + 0x8],0x0",write other [TODO]
xen_smp_intr_free_pv,0x80,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_smp_intr_free_pv,0x8d,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_smp_intr_free_pv,0xa2,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_smp_intr_free_pv,0xaf,ctx->rax + ctx->r12 * 0x1 + 0x8,"MOV qword ptr [RAX + R12*0x1 + 0x8],0x0",write other [TODO]
xen_smp_intr_free_pv,0xbc,,RET,ret
xen_smp_intr_init_pv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_smp_intr_init_pv,0x21,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_smp_intr_init_pv,0x43,0xffffffff8175f790,CALL 0xffffffff8175f790,direct call
xen_smp_intr_init_pv,0x65,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_smp_intr_init_pv,0x7b,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RBX",write other [TODO]
xen_smp_intr_init_pv,0x8d,,RET,ret
xen_smp_intr_init_pv,0x9d,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_smp_intr_init_pv,0xbf,0xffffffff8175f700,CALL 0xffffffff8175f700,direct call
xen_smp_intr_init_pv,0xda,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],R12D",write other [TODO]
xen_smp_intr_init_pv,0xe9,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RBX",write other [TODO]
xen_smp_intr_init_pv,0xf9,,RET,ret
xen_smp_intr_init_pv,0xfd,0xffffffff81030f70,CALL 0xffffffff81030f70,direct call
xen_smp_intr_init_pv,0x10d,,RET,ret
xen_hvm_cpu_die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_hvm_cpu_die,0xe,0xffffffff8106e760,CALL 0xffffffff8106e760,direct call
xen_hvm_cpu_die,0x25,,RET,ret
xen_hvm_cpu_die,0x29,0xffffffff81030190,CALL 0xffffffff81030190,direct call
xen_hvm_cpu_die,0x31,0xffffffff81031350,CALL 0xffffffff81031350,direct call
xen_hvm_cpu_die,0x39,0xffffffff81023910,CALL 0xffffffff81023910,direct call
xen_hvm_cpu_die,0x43,,RET,ret
__raw_callee_save_xen_vcpu_stolen,0x10,0xffffffff8175c4a0,CALL 0xffffffff8175c4a0,direct call
__raw_callee_save_xen_vcpu_stolen,0x22,,RET,ret
xen_qlock_kick,0x21,0xffffffff8175fa00,CALL 0xffffffff8175fa00,direct call
xen_qlock_kick,0x27,,RET,ret
xen_qlock_kick,0x28,,RET,ret
xen_qlock_wait,0x5c,,RET,ret
xen_qlock_wait,0x60,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],ESI",write stack
xen_qlock_wait,0x63,0xffffffff8175fda0,CALL 0xffffffff8175fda0,direct call
xen_qlock_wait,0x72,0xffffffff8175d040,CALL 0xffffffff8175d040,direct call
xen_qlock_wait,0x7c,0xffffffff8175fe00,CALL 0xffffffff8175fe00,direct call
xen_init_lock_cpu,0x9,,RET,ret
xen_init_lock_cpu,0x44,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
xen_init_lock_cpu,0x66,0xffffffff8175f790,CALL 0xffffffff8175f790,direct call
xen_init_lock_cpu,0x78,0xffffffff81126230,CALL 0xffffffff81126230,direct call
xen_init_lock_cpu,0x85,ctx->rax + ctx->rbx * 0x1,"MOV dword ptr [RAX + RBX*0x1],R15D",write other [TODO]
xen_init_lock_cpu,0x98,ctx->rcx + ctx->rax * 0x1,"MOV qword ptr [RCX + RAX*0x1],R14",write other [TODO]
xen_init_lock_cpu,0xad,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
xen_uninit_lock_cpu,0x2d,0xffffffff8175e190,CALL 0xffffffff8175e190,direct call
xen_uninit_lock_cpu,0x3a,ctx->rax + ctx->r12 * 0x1,"MOV dword ptr [RAX + R12*0x1],0xffffffff",write other [TODO]
xen_uninit_lock_cpu,0x55,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
xen_uninit_lock_cpu,0x62,ctx->rax + ctx->r12 * 0x1,"MOV qword ptr [RAX + R12*0x1],0x0",write other [TODO]
xen_uninit_lock_cpu,0x6e,,RET,ret
xen_uninit_lock_cpu,0x6f,,RET,ret
__sysvec_hyperv_reenlightenment,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_hyperv_reenlightenment,0x17,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_hyperv_reenlightenment,0x38,0xffffffff810c65a0,CALL 0xffffffff810c65a0,direct call
__sysvec_hyperv_reenlightenment,0x3e,,RET,ret
hv_reenlightenment_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_reenlightenment_notify,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_reenlightenment_notify,0x24,ctx->rdx,CALL RDX,in-direct call
hv_reenlightenment_notify,0x27,,RET,ret
hv_is_hyperv_initialized,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_is_hyperv_initialized,0x10,,RET,ret
hv_is_hyperv_initialized,0x1a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_is_hyperv_initialized,0x24,,RET,ret
hyperv_stop_tsc_emulation,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_stop_tsc_emulation,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hyperv_stop_tsc_emulation,0x28,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_stop_tsc_emulation,0x33,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hyperv_stop_tsc_emulation,0x52,0xffffffff83117b18,"MOV dword ptr [0xffffffff83117b18],EDX",write .data
hyperv_stop_tsc_emulation,0x59,,RET,ret
clear_hv_tscchange_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_hv_tscchange_cb,0x2b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
clear_hv_tscchange_cb,0x43,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
clear_hv_tscchange_cb,0x49,0xffffffff833ffc88,"MOV qword ptr [0xffffffff833ffc88],0x0",write .data
clear_hv_tscchange_cb,0x59,,RET,ret
clear_hv_tscchange_cb,0x5a,,RET,ret
set_hv_tscchange_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_hv_tscchange_cb,0x38,0xffffffff833ffc88,"MOV qword ptr [0xffffffff833ffc88],RDI",write .data
set_hv_tscchange_cb,0x72,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
set_hv_tscchange_cb,0x84,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
set_hv_tscchange_cb,0x95,0xffffffff82000810,CALL 0xffffffff82000810,direct call
set_hv_tscchange_cb,0x9b,,RET,ret
hyperv_report_panic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_report_panic,0x31,,RET,ret
hyperv_report_panic,0x32,0xffffffff833ffc84,"MOV byte ptr [0xffffffff833ffc84],0x1",write .data
hyperv_report_panic,0x3e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hyperv_report_panic,0x55,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_report_panic,0x6a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_report_panic,0x83,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_report_panic,0x99,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_report_panic,0xb2,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_report_panic,0xc4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_report_panic,0xd0,,RET,ret
hv_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_cpu_init,0x19,0xffffffff81a35390,CALL 0xffffffff81a35390,direct call
hv_cpu_init,0x56,0xffffffff812e5d50,CALL 0xffffffff812e5d50,direct call
hv_cpu_init,0x81,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_cpu_init,0x87,0xffffffff81033dc0,CALL 0xffffffff81033dc0,direct call
hv_cpu_init,0xa3,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_cpu_init,0xb6,0xffffffff81280200,CALL 0xffffffff81280200,direct call
hv_cpu_init,0xcf,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
hv_cpu_init,0xdb,,RET,ret
hv_cpu_init,0xe1,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_cpu_init,0x101,0xffffffff81280200,CALL 0xffffffff81280200,direct call
hv_cpu_init,0x106,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
hv_cpu_init,0x119,0xffffffff812ea770,CALL 0xffffffff812ea770,direct call
hv_cpu_init,0x11e,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
hv_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_resume,0xe,0xffffffff810316a0,CALL 0xffffffff810316a0,direct call
hv_resume,0x1f,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_resume,0x36,0xffffffff812e5d50,CALL 0xffffffff812e5d50,direct call
hv_resume,0x52,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_resume,0x66,0xffffffff833ffc90,"MOV qword ptr [0xffffffff833ffc90],0x0",write .data
hv_resume,0x71,0xffffffff833ffc78,"MOV qword ptr [0xffffffff833ffc78],RAX",write .data
hv_resume,0x7d,0xffffffff81031520,CALL 0xffffffff81031520,direct call
hv_resume,0x86,,RET,ret
hv_cpu_die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_cpu_die,0x2d,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
hv_cpu_die,0x32,ctx->r12,"MOV qword ptr [R12],0x0",write other [TODO]
hv_cpu_die,0x3c,0xffffffff81a35450,CALL 0xffffffff81a35450,direct call
hv_cpu_die,0x6b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_cpu_die,0x80,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_cpu_die,0xa6,,RET,ret
hv_cpu_die,0xa7,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
hv_cpu_die,0xb8,ctx->rax + ctx->r12 * 0x8,"MOV qword ptr [RAX + R12*0x8],0x0",write other [TODO]
hv_cpu_die,0xc0,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_cpu_die,0xd5,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hv_cpu_die,0xf1,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
hv_cpu_die,0x115,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_cpu_die,0x123,,RET,ret
hv_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_suspend,0x22,0xffffffff833ffc78,"MOV qword ptr [0xffffffff833ffc78],0x0",write .data
hv_suspend,0x2d,0xffffffff833ffc90,"MOV qword ptr [0xffffffff833ffc90],RAX",write .data
hv_suspend,0x34,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_suspend,0x4a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_suspend,0x52,0xffffffff81031880,CALL 0xffffffff81031880,direct call
hv_suspend,0x5c,,RET,ret
hv_suspend,0x62,,RET,ret
hyperv_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_cleanup,0x11,0xffffffff817f9f10,CALL 0xffffffff817f9f10,direct call
hyperv_cleanup,0x20,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_cleanup,0x32,0xffffffff81033a90,CALL 0xffffffff81033a90,direct call
hyperv_cleanup,0x3a,0xffffffff833ffc78,"MOV qword ptr [0xffffffff833ffc78],0x0",write .data
hyperv_cleanup,0x45,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hyperv_cleanup,0x5b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_cleanup,0x69,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hyperv_cleanup,0x7f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hyperv_cleanup,0x8a,,RET,ret
__traceiter_hyperv_mmu_flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_hyperv_mmu_flush_tlb_multi,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_hyperv_mmu_flush_tlb_multi,0x41,,RET,ret
__traceiter_hyperv_nested_flush_guest_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_hyperv_nested_flush_guest_mapping,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_hyperv_nested_flush_guest_mapping,0x41,,RET,ret
__traceiter_hyperv_nested_flush_guest_mapping_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_hyperv_nested_flush_guest_mapping_range,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_hyperv_nested_flush_guest_mapping_range,0x41,,RET,ret
__traceiter_hyperv_send_ipi_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_hyperv_send_ipi_mask,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_hyperv_send_ipi_mask,0x41,,RET,ret
__traceiter_hyperv_send_ipi_one,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_hyperv_send_ipi_one,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_hyperv_send_ipi_one,0x41,,RET,ret
perf_trace_hyperv_nested_flush_guest_mapping,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_hyperv_nested_flush_guest_mapping,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_hyperv_nested_flush_guest_mapping,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping,0x9e,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R13D",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_hyperv_nested_flush_guest_mapping,0xc7,,RET,ret
perf_trace_hyperv_nested_flush_guest_mapping,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_hyperv_nested_flush_guest_mapping_range,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_hyperv_nested_flush_guest_mapping_range,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_hyperv_nested_flush_guest_mapping_range,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping_range,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping_range,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping_range,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping_range,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping_range,0x9e,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R13D",write other [TODO]
perf_trace_hyperv_nested_flush_guest_mapping_range,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_hyperv_nested_flush_guest_mapping_range,0xc7,,RET,ret
perf_trace_hyperv_nested_flush_guest_mapping_range,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_hyperv_send_ipi_one,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_hyperv_send_ipi_one,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_hyperv_send_ipi_one,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_hyperv_send_ipi_one,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_hyperv_send_ipi_one,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_hyperv_send_ipi_one,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_hyperv_send_ipi_one,0x9a,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_hyperv_send_ipi_one,0x9e,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_hyperv_send_ipi_one,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_hyperv_send_ipi_one,0xc7,,RET,ret
perf_trace_hyperv_send_ipi_one,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpumask_weight,0x1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpumask_weight,0xa,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
cpumask_weight,0x10,,RET,ret
perf_trace_hyperv_mmu_flush_tlb_multi,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_hyperv_mmu_flush_tlb_multi,0x52,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_hyperv_mmu_flush_tlb_multi,0x6a,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0x71,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0x78,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0x83,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0x8e,0xffffffff81031ef0,CALL 0xffffffff81031ef0,direct call
perf_trace_hyperv_mmu_flush_tlb_multi,0x9d,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EAX",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0xb3,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0xbc,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0xc5,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
perf_trace_hyperv_mmu_flush_tlb_multi,0xcd,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_hyperv_mmu_flush_tlb_multi,0xf1,,RET,ret
perf_trace_hyperv_mmu_flush_tlb_multi,0x100,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_hyperv_send_ipi_mask,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_hyperv_send_ipi_mask,0x52,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_hyperv_send_ipi_mask,0x6a,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_hyperv_send_ipi_mask,0x71,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_hyperv_send_ipi_mask,0x78,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_hyperv_send_ipi_mask,0x83,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_hyperv_send_ipi_mask,0x8e,0xffffffff81031ef0,CALL 0xffffffff81031ef0,direct call
perf_trace_hyperv_send_ipi_mask,0x93,ctx->r13 + 0xc,"MOV dword ptr [R13 + 0xc],R14D",write other [TODO]
perf_trace_hyperv_send_ipi_mask,0x9d,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EAX",write other [TODO]
perf_trace_hyperv_send_ipi_mask,0xb6,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_hyperv_send_ipi_mask,0xda,,RET,ret
perf_trace_hyperv_send_ipi_mask,0xe9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x21,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x3c,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x4c,0xffffffff81031ef0,CALL 0xffffffff81031ef0,direct call
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x55,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x5c,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x65,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x6e,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x72,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x92,,RET,ret
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0x98,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_hyperv_mmu_flush_tlb_multi,0xa3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x43,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x4b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x6c,,RET,ret
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x43,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x4b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x6c,,RET,ret
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_hyperv_nested_flush_guest_mapping_range,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_hyperv_send_ipi_mask,0x21,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_hyperv_send_ipi_mask,0x3c,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_hyperv_send_ipi_mask,0x4c,0xffffffff81031ef0,CALL 0xffffffff81031ef0,direct call
trace_event_raw_event_hyperv_send_ipi_mask,0x51,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],R13D",write other [TODO]
trace_event_raw_event_hyperv_send_ipi_mask,0x59,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
trace_event_raw_event_hyperv_send_ipi_mask,0x5c,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_hyperv_send_ipi_mask,0x7c,,RET,ret
trace_event_raw_event_hyperv_send_ipi_mask,0x82,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_hyperv_send_ipi_mask,0x8d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_hyperv_send_ipi_one,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_hyperv_send_ipi_one,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_hyperv_send_ipi_one,0x43,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_hyperv_send_ipi_one,0x4b,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EBX",write other [TODO]
trace_event_raw_event_hyperv_send_ipi_one,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_hyperv_send_ipi_one,0x6c,,RET,ret
trace_event_raw_event_hyperv_send_ipi_one,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_hyperv_send_ipi_one,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_hyperv_mmu_flush_tlb_multi,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_hyperv_mmu_flush_tlb_multi,0x22,,RET,ret
trace_raw_output_hyperv_mmu_flush_tlb_multi,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_hyperv_mmu_flush_tlb_multi,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_hyperv_mmu_flush_tlb_multi,0x56,,RET,ret
trace_raw_output_hyperv_nested_flush_guest_mapping,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_hyperv_nested_flush_guest_mapping,0x22,,RET,ret
trace_raw_output_hyperv_nested_flush_guest_mapping,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_hyperv_nested_flush_guest_mapping,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_hyperv_nested_flush_guest_mapping,0x4c,,RET,ret
trace_raw_output_hyperv_nested_flush_guest_mapping_range,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_hyperv_nested_flush_guest_mapping_range,0x22,,RET,ret
trace_raw_output_hyperv_nested_flush_guest_mapping_range,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_hyperv_nested_flush_guest_mapping_range,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_hyperv_nested_flush_guest_mapping_range,0x4c,,RET,ret
trace_raw_output_hyperv_send_ipi_mask,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_hyperv_send_ipi_mask,0x22,,RET,ret
trace_raw_output_hyperv_send_ipi_mask,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_hyperv_send_ipi_mask,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_hyperv_send_ipi_mask,0x4c,,RET,ret
trace_raw_output_hyperv_send_ipi_one,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_hyperv_send_ipi_one,0x22,,RET,ret
trace_raw_output_hyperv_send_ipi_one,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_hyperv_send_ipi_one,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_hyperv_send_ipi_one,0x4c,,RET,ret
__bpf_trace_hyperv_mmu_flush_tlb_multi,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_hyperv_mmu_flush_tlb_multi,0xa,,RET,ret
__bpf_trace_hyperv_nested_flush_guest_mapping,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_hyperv_nested_flush_guest_mapping,0xc,,RET,ret
__bpf_trace_hyperv_send_ipi_mask,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_hyperv_send_ipi_mask,0xc,,RET,ret
__bpf_trace_hyperv_send_ipi_one,0x8,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_hyperv_send_ipi_one,0xe,,RET,ret
__bpf_trace_hyperv_nested_flush_guest_mapping_range,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_hyperv_nested_flush_guest_mapping_range,0xc,,RET,ret
hyperv_flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_flush_tlb_multi,0x2f,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hyperv_flush_tlb_multi,0x35,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
hyperv_flush_tlb_multi,0x39,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hyperv_flush_tlb_multi,0x87,ctx->r15,"MOV qword ptr [R15],RDX",write other [TODO]
hyperv_flush_tlb_multi,0xa6,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
hyperv_flush_tlb_multi,0xb3,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RDX",write other [TODO]
hyperv_flush_tlb_multi,0xb7,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
hyperv_flush_tlb_multi,0xbd,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],0x0",write other [TODO]
hyperv_flush_tlb_multi,0xc5,0xffffffff815f9ae0,CALL 0xffffffff815f9ae0,direct call
hyperv_flush_tlb_multi,0x137,ctx->r8,"MOV qword ptr [R8],RDX",write other [TODO]
hyperv_flush_tlb_multi,0x14d,ctx->r8,"MOV qword ptr [R8],RDI",write other [TODO]
hyperv_flush_tlb_multi,0x150,ctx->wordctx->ptrctx->rbp - 0x30,"MOV word ptr [RBP + -0x30],SI",write stack
hyperv_flush_tlb_multi,0x15b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R12",write stack
hyperv_flush_tlb_multi,0x166,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R13",write stack
hyperv_flush_tlb_multi,0x177,ctx->r15,CALL R15,in-direct call
hyperv_flush_tlb_multi,0x1ab,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hyperv_flush_tlb_multi,0x1b0,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hyperv_flush_tlb_multi,0x20c,0xffffffff8108c890,CALL 0xffffffff8108c890,direct call
hyperv_flush_tlb_multi,0x21f,,RET,ret
hyperv_flush_tlb_multi,0x270,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hyperv_flush_tlb_multi,0x279,0xffffffff816020e0,CALL 0xffffffff816020e0,direct call
hyperv_flush_tlb_multi,0x27e,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
hyperv_flush_tlb_multi,0x2eb,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
hyperv_flush_tlb_multi,0x30a,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
hyperv_flush_tlb_multi,0x313,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
hyperv_flush_tlb_multi,0x317,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],0x0",write other [TODO]
hyperv_flush_tlb_multi,0x31f,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],0x0",write other [TODO]
hyperv_flush_tlb_multi,0x33d,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],0x0",write other [TODO]
hyperv_flush_tlb_multi,0x35d,ctx->rbx + ctx->rax * 0x1 + 0x18,"MOV qword ptr [RBX + RAX*0x1 + 0x18],0x0",write other [TODO]
hyperv_flush_tlb_multi,0x377,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hyperv_flush_tlb_multi,0x383,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
hyperv_flush_tlb_multi,0x411,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hyperv_flush_tlb_multi,0x420,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
hyperv_flush_tlb_multi,0x446,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hyperv_flush_tlb_multi,0x474,ctx->r8,"MOV qword ptr [R8],RDX",write other [TODO]
hyperv_flush_tlb_multi,0x49b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hyperv_flush_tlb_multi,0x4b9,,RET,ret
hyperv_flush_tlb_multi,0x4f2,ctx->rsi,CALL RSI,in-direct call
hyperv_flush_tlb_multi,0x532,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hyperv_flush_tlb_multi,0x56a,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
hyperv_flush_tlb_multi,0x5bc,ctx->r9,"MOV qword ptr [R9],RCX",write other [TODO]
hyperv_flush_tlb_multi,0x5c5,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R12",write stack
hyperv_flush_tlb_multi,0x5cc,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R13",write stack
hyperv_flush_tlb_multi,0x5eb,ctx->rax,CALL RAX,in-direct call
hyperv_flush_tlb_multi,0x621,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hyperv_flush_tlb_multi,0x626,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hyperv_flush_tlb_multi,0x697,ctx->r9,"MOV qword ptr [R9],RCX",write other [TODO]
hyperv_flush_tlb_multi,0x6b6,ctx->r9,"MOV qword ptr [R9],R8",write other [TODO]
hyperv_flush_tlb_multi,0x729,ctx->rcx,"MOV RCX,R10",write other [TODO]
hyperv_flush_tlb_multi,0x731,ctx->rsi,CALL RSI,in-direct call
hyperv_flush_tlb_multi,0x73f,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hyperv_flush_tlb_multi,0x744,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hyperv_setup_mmu_ops,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_setup_mmu_ops,0x12,,RET,ret
hyperv_fill_flush_guest_mapping_list,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_fill_flush_guest_mapping_list,0x44,ctx->r9 + ctx->rdi * 0x8 + 0x10,"MOV qword ptr [R9 + RDI*0x8 + 0x10],RCX",write other [TODO]
hyperv_fill_flush_guest_mapping_list,0x52,,RET,ret
hyperv_fill_flush_guest_mapping_list,0x5d,,RET,ret
hyperv_flush_guest_mapping_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_flush_guest_mapping_range,0x1e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
hyperv_flush_guest_mapping_range,0x34,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hyperv_flush_guest_mapping_range,0x3d,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hyperv_flush_guest_mapping_range,0x6e,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
hyperv_flush_guest_mapping_range,0x77,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
hyperv_flush_guest_mapping_range,0x7b,ctx->rcx,CALL RCX,in-direct call
hyperv_flush_guest_mapping_range,0x7d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RBX",write stack
hyperv_flush_guest_mapping_range,0x92,ctx->wordctx->ptrctx->rbp - 0x2a,"MOV word ptr [RBP + -0x2a],AX",write stack
hyperv_flush_guest_mapping_range,0xb3,ctx->rsi,CALL RSI,in-direct call
hyperv_flush_guest_mapping_range,0xe6,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hyperv_flush_guest_mapping_range,0xeb,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hyperv_flush_guest_mapping_range,0x140,,RET,ret
hyperv_flush_guest_mapping_range,0x187,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hyperv_flush_guest_mapping_range,0x194,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hyperv_flush_guest_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hyperv_flush_guest_mapping,0x1e,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hyperv_flush_guest_mapping,0x27,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hyperv_flush_guest_mapping,0x4d,ctx->rdx,"MOV qword ptr [RDX],R13",write other [TODO]
hyperv_flush_guest_mapping,0x50,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],0x0",write other [TODO]
hyperv_flush_guest_mapping,0x8e,ctx->rax,CALL RAX,in-direct call
hyperv_flush_guest_mapping,0xa8,,RET,ret
hyperv_flush_guest_mapping,0xf9,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hyperv_flush_guest_mapping,0x109,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
get_rid_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_rid_cb,0x1e,ctx->rdx,"MOV qword ptr [RDX],RDI",write other [TODO]
get_rid_cb,0x22,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],EAX",write other [TODO]
get_rid_cb,0x27,,RET,ret
get_rid_cb,0x31,,RET,ret
hv_build_pci_dev_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_build_pci_dev_id,0x25,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
hv_build_pci_dev_id,0x2f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
hv_build_pci_dev_id,0x44,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],EAX",write stack
hv_build_pci_dev_id,0x47,0xffffffff816791c0,CALL 0xffffffff816791c0,direct call
hv_build_pci_dev_id,0x8a,0xffffffff816705b0,CALL 0xffffffff816705b0,direct call
hv_build_pci_dev_id,0xad,,RET,ret
hv_build_pci_dev_id,0xb9,0xffffffff81668f70,CALL 0xffffffff81668f70,direct call
hv_build_pci_dev_id,0xd8,0xffffffff81668f30,CALL 0xffffffff81668f30,direct call
hv_build_pci_dev_id,0x102,0xffffffff81668f30,CALL 0xffffffff81668f30,direct call
hv_build_pci_dev_id,0x124,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hv_unmap_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_unmap_interrupt,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_unmap_interrupt,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_unmap_interrupt,0x2b,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
hv_unmap_interrupt,0x39,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],0x0",write other [TODO]
hv_unmap_interrupt,0x41,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x0",write other [TODO]
hv_unmap_interrupt,0x49,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
hv_unmap_interrupt,0x4e,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDI",write other [TODO]
hv_unmap_interrupt,0x59,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDI",write other [TODO]
hv_unmap_interrupt,0x5d,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RSI",write other [TODO]
hv_unmap_interrupt,0x97,ctx->rsi,CALL RSI,in-direct call
hv_unmap_interrupt,0xa2,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_unmap_interrupt,0xb0,,RET,ret
hv_unmap_ioapic_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_unmap_ioapic_interrupt,0x19,0xffffffff81033280,CALL 0xffffffff81033280,direct call
hv_unmap_ioapic_interrupt,0x1f,,RET,ret
hv_map_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_map_interrupt,0x1f,ctx->rsp,"MOV qword ptr [RSP],R8",write stack
hv_map_interrupt,0x23,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_map_interrupt,0x29,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
hv_map_interrupt,0x2e,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_map_interrupt,0x69,ctx->r15,"MOV qword ptr [R15],0x0",write other [TODO]
hv_map_interrupt,0x73,ctx->rsi - 0x10,"MOV qword ptr [RSI + -0x10],0x0",write other [TODO]
hv_map_interrupt,0x84,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R9",write other [TODO]
hv_map_interrupt,0x88,ctx->r15 + 0x30,"MOV dword ptr [R15 + 0x30],0x1",write other [TODO]
hv_map_interrupt,0x97,ctx->r15 + 0x38,"MOV dword ptr [R15 + 0x38],R11D",write other [TODO]
hv_map_interrupt,0x9b,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
hv_map_interrupt,0xa3,ctx->r15 + 0x2c,"MOV dword ptr [R15 + 0x2c],0x1",write other [TODO]
hv_map_interrupt,0xd6,ctx->r15 + 0x50,"MOV qword ptr [R15 + 0x50],0x0",write other [TODO]
hv_map_interrupt,0xe5,ctx->r15 + ctx->rcx * 0x1 + 0x48,"MOV qword ptr [R15 + RCX*0x1 + 0x48],0x0",write other [TODO]
hv_map_interrupt,0x118,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hv_map_interrupt,0x124,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
hv_map_interrupt,0x198,ctx->r15 + 0x48,"MOV qword ptr [R15 + 0x48],RAX",write other [TODO]
hv_map_interrupt,0x1a4,ctx->r15 + 0x3c,"MOV dword ptr [R15 + 0x3c],0x2",write other [TODO]
hv_map_interrupt,0x215,ctx->rsi,CALL RSI,in-direct call
hv_map_interrupt,0x226,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hv_map_interrupt,0x22b,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hv_map_interrupt,0x23c,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
hv_map_interrupt,0x23f,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDX",write other [TODO]
hv_map_interrupt,0x276,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
hv_map_interrupt,0x279,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDX",write other [TODO]
hv_map_interrupt,0x282,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_map_interrupt,0x2a7,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_irq_compose_msi_msg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_irq_compose_msi_msg,0x25,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
hv_irq_compose_msi_msg,0x2c,0xffffffff81071320,CALL 0xffffffff81071320,direct call
hv_irq_compose_msi_msg,0x3c,0xffffffff81681bb0,CALL 0xffffffff81681bb0,direct call
hv_irq_compose_msi_msg,0x51,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
hv_irq_compose_msi_msg,0x62,0xffffffff81601d50,CALL 0xffffffff81601d50,direct call
hv_irq_compose_msi_msg,0x6b,ctx->rsp + 0xc,"MOV dword ptr [RSP + 0xc],EAX",write stack
hv_irq_compose_msi_msg,0x74,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],0x0",write other [TODO]
hv_irq_compose_msi_msg,0x7f,0xffffffff81033150,CALL 0xffffffff81033150,direct call
hv_irq_compose_msi_msg,0x8a,0xffffffff81033280,CALL 0xffffffff81033280,direct call
hv_irq_compose_msi_msg,0x95,ctx->rsp,"MOV qword ptr [RSP],RCX",write stack
hv_irq_compose_msi_msg,0x99,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
hv_irq_compose_msi_msg,0xbc,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
hv_irq_compose_msi_msg,0xd2,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
hv_irq_compose_msi_msg,0xd6,0xffffffff81033150,CALL 0xffffffff81033150,direct call
hv_irq_compose_msi_msg,0xec,0xffffffff81033370,CALL 0xffffffff81033370,direct call
hv_irq_compose_msi_msg,0x103,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],R9",write other [TODO]
hv_irq_compose_msi_msg,0x107,ctx->r13 + 0x4,"MOV dword ptr [R13 + 0x4],0x0",write other [TODO]
hv_irq_compose_msi_msg,0x10f,ctx->r9,"MOV qword ptr [R9],RAX",write other [TODO]
hv_irq_compose_msi_msg,0x116,ctx->r9 + 0x8,"MOV qword ptr [R9 + 0x8],RDX",write other [TODO]
hv_irq_compose_msi_msg,0x11a,ctx->r13,"MOV dword ptr [R13],EAX",write other [TODO]
hv_irq_compose_msi_msg,0x122,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EAX",write other [TODO]
hv_irq_compose_msi_msg,0x144,,RET,ret
hv_irq_compose_msi_msg,0x16c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
hv_irq_compose_msi_msg,0x18f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hv_map_ioapic_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_map_ioapic_interrupt,0x1d,0xffffffff81033370,CALL 0xffffffff81033370,direct call
hv_map_ioapic_interrupt,0x23,,RET,ret
hv_msi_free_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_msi_free_irq,0x1b,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
hv_msi_free_irq,0x22,0xffffffff81127280,CALL 0xffffffff81127280,direct call
hv_msi_free_irq,0x65,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
hv_msi_free_irq,0x6a,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
hv_msi_free_irq,0x6e,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
hv_msi_free_irq,0x73,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],0x0",write other [TODO]
hv_msi_free_irq,0x83,0xffffffff81033150,CALL 0xffffffff81033150,direct call
hv_msi_free_irq,0x8e,0xffffffff81033280,CALL 0xffffffff81033280,direct call
hv_get_isolation_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_get_isolation_type,0x20,,RET,ret
hv_ghcb_hv_call.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_ghcb_hv_call.constprop.0,0x12,ctx->rdi + 0xffc,"MOV dword ptr [RDI + 0xffc],0x0",write other [TODO]
hv_ghcb_hv_call.constprop.0,0x1c,ctx->wordctx->ptrctx->rdi + 0xffa,"MOV word ptr [RDI + 0xffa],AX",write other [TODO]
hv_ghcb_hv_call.constprop.0,0x31,ctx->rdi + 0x390,"MOV qword ptr [RDI + 0x390],0x7c",write other [TODO]
hv_ghcb_hv_call.constprop.0,0x4a,ctx->rdi + 0x398,"MOV qword ptr [RDI + 0x398],RSI",write other [TODO]
hv_ghcb_hv_call.constprop.0,0x55,ctx->rdi + 0x3a0,"MOV qword ptr [RDI + 0x3a0],0x0",write other [TODO]
hv_ghcb_hv_call.constprop.0,0x74,,RET,ret
hv_ghcb_msr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_ghcb_msr_read,0x32,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_ghcb_msr_read,0x3b,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_ghcb_msr_read,0x65,ctx->rbx + 0x308,"MOV qword ptr [RBX + 0x308],R12",write other [TODO]
hv_ghcb_msr_read,0x71,0xffffffff81033950,CALL 0xffffffff81033950,direct call
hv_ghcb_msr_read,0x92,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
hv_ghcb_msr_read,0xad,,RET,ret
hv_ghcb_msr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_ghcb_msr_write,0x2f,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_ghcb_msr_write,0x38,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_ghcb_msr_write,0x6a,ctx->rdi + 0x308,"MOV qword ptr [RDI + 0x308],R12",write other [TODO]
hv_ghcb_msr_write,0x77,ctx->rdi + 0x1f8,"MOV qword ptr [RDI + 0x1f8],RDX",write other [TODO]
hv_ghcb_msr_write,0x8b,ctx->rdi + 0x310,"MOV qword ptr [RDI + 0x310],RSI",write other [TODO]
hv_ghcb_msr_write,0x97,0xffffffff81033950,CALL 0xffffffff81033950,direct call
hv_ghcb_msr_write,0xb4,,RET,ret
hv_ghcb_hypercall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_ghcb_hypercall,0x33,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_ghcb_hypercall,0x3c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_ghcb_hypercall,0x62,ctx->rbx + 0xfe8,"MOV qword ptr [RBX + 0xfe8],RDX",write other [TODO]
hv_ghcb_hypercall,0x69,ctx->rbx + 0xff0,"MOV qword ptr [RBX + 0xff0],0x0",write other [TODO]
hv_ghcb_hypercall,0x74,ctx->wordctx->ptrctx->rbx + 0xffa,"MOV word ptr [RBX + 0xffa],AX",write other [TODO]
hv_ghcb_hypercall,0x7b,ctx->rbx + 0xffc,"MOV dword ptr [RBX + 0xffc],0x1",write other [TODO]
hv_ghcb_hypercall,0x85,ctx->wordctx->ptrctx->rbx + 0xff0,"MOV word ptr [RBX + 0xff0],DI",write other [TODO]
hv_ghcb_hypercall,0xa4,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
hv_ghcb_hypercall,0xad,ctx->rbx + 0xffc,"MOV dword ptr [RBX + 0xffc],0xffffffff",write other [TODO]
hv_ghcb_hypercall,0xbf,ctx->rbx + 0x3f0,"MOV qword ptr [RBX + 0x3f0],0x0",write other [TODO]
hv_ghcb_hypercall,0xca,ctx->rbx + 0x3f8,"MOV qword ptr [RBX + 0x3f8],0x0",write other [TODO]
hv_ghcb_hypercall,0xde,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_ghcb_hypercall,0xef,,RET,ret
hv_ghcb_hypercall,0xf9,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_ghcb_hypercall,0x111,,RET,ret
hv_ghcb_hypercall,0x13c,0xffffffff830c7bbf,"MOV byte ptr [0xffffffff830c7bbf],0x1",write .data
hv_ghcb_hypercall,0x143,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
hv_ghcb_hypercall,0x156,,RET,ret
hv_ghcb_terminate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_ghcb_negotiate_protocol,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_ghcb_negotiate_protocol,0x51,,RET,ret
hv_ghcb_negotiate_protocol,0x6f,ctx->wordctx->ptr0xffffffff826ba402,"MOV word ptr [0xffffffff826ba402],R9W",write .data
hv_ghcb_negotiate_protocol,0x87,,RET,ret
hv_is_isolation_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81033d9b,0x3,,RET,ret
hv_isolation_type_snp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_isolation_type_snp,0xe,,RET,ret
hv_set_mem_host_visibility,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_set_mem_host_visibility,0x1b,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],ESI",write stack
hv_set_mem_host_visibility,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
hv_set_mem_host_visibility,0x37,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EAX",write stack
hv_set_mem_host_visibility,0x3a,0xffffffff81033d80,CALL 0xffffffff81033d80,direct call
hv_set_mem_host_visibility,0x66,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
hv_set_mem_host_visibility,0x6b,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
hv_set_mem_host_visibility,0x78,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
hv_set_mem_host_visibility,0xb2,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
hv_set_mem_host_visibility,0xf2,0xffffffff812e44e0,CALL 0xffffffff812e44e0,direct call
hv_set_mem_host_visibility,0xfe,0xffffffff812e59e0,CALL 0xffffffff812e59e0,direct call
hv_set_mem_host_visibility,0x151,0xffffffff81033d80,CALL 0xffffffff81033d80,direct call
hv_set_mem_host_visibility,0x15b,ctx->wordctx->ptrctx->rbp - 0x3e,"MOV word ptr [RBP + -0x3e],DX",write stack
hv_set_mem_host_visibility,0x167,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_set_mem_host_visibility,0x16d,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
hv_set_mem_host_visibility,0x171,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_set_mem_host_visibility,0x19a,ctx->rax,"MOV qword ptr [RAX],-0x1",write other [TODO]
hv_set_mem_host_visibility,0x1ad,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDI",write other [TODO]
hv_set_mem_host_visibility,0x1c5,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],DL",write other [TODO]
hv_set_mem_host_visibility,0x1d6,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R15",write stack
hv_set_mem_host_visibility,0x1eb,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
hv_set_mem_host_visibility,0x1f6,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
hv_set_mem_host_visibility,0x209,ctx->rsi,CALL RSI,in-direct call
hv_set_mem_host_visibility,0x213,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EDI",write stack
hv_set_mem_host_visibility,0x23f,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hv_set_mem_host_visibility,0x244,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hv_set_mem_host_visibility,0x295,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0xffff",write stack
hv_set_mem_host_visibility,0x2ae,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_set_mem_host_visibility,0x2c7,0xffffffff81033d80,CALL 0xffffffff81033d80,direct call
hv_set_mem_host_visibility,0x2d0,ctx->wordctx->ptrctx->rbp - 0x3e,"MOV word ptr [RBP + -0x3e],R12W",write stack
hv_set_mem_host_visibility,0x2f5,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RSI",write other [TODO]
hv_set_mem_host_visibility,0x2fe,ctx->rcx + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RCX + RDX*0x1 + -0x8],RSI",write other [TODO]
hv_set_mem_host_visibility,0x311,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
hv_set_mem_host_visibility,0x33d,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_map_memory,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_map_memory,0x29,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
hv_map_memory,0x4f,0xffffffff812e5d50,CALL 0xffffffff812e5d50,direct call
hv_map_memory,0x65,ctx->r12 + ctx->r14 * 0x8,"MOV qword ptr [R12 + R14*0x8],RAX",write other [TODO]
hv_map_memory,0x87,0xffffffff812e9ce0,CALL 0xffffffff812e9ce0,direct call
hv_map_memory,0x92,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
hv_map_memory,0xa4,,RET,ret
hv_unmap_memory,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_unmap_memory,0x9,0xffffffff812e9ba0,CALL 0xffffffff812e9ba0,direct call
hv_unmap_memory,0xf,,RET,ret
hv_apic_icr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_apic_icr_read,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_apic_icr_read,0x15,,RET,ret
hv_apic_icr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_apic_icr_write,0x20,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_apic_icr_write,0x27,,RET,ret
hv_apic_eoi_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_apic_eoi_write,0x34,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_apic_eoi_write,0x3b,,RET,ret
hv_apic_eoi_write,0x3c,,RET,ret
hv_apic_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_apic_read,0x1e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_apic_read,0x25,,RET,ret
hv_apic_read,0x2b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_apic_read,0x32,,RET,ret
hv_apic_read,0x3c,,RET,ret
hv_apic_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_apic_write,0x22,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_apic_write,0x29,,RET,ret
hv_apic_write,0x33,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
hv_apic_write,0x3a,,RET,ret
hv_apic_write,0x3d,ctx->rdi - 0xa03000,"MOV dword ptr [RDI + -0xa03000],ESI",write other [TODO]
hv_apic_write,0x44,,RET,ret
__send_ipi_mask_ex.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__send_ipi_mask_ex.part.0,0x16,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__send_ipi_mask_ex.part.0,0x1c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__send_ipi_mask_ex.part.0,0x20,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__send_ipi_mask_ex.part.0,0x41,ctx->r12,"MOV dword ptr [R12],ESI",write other [TODO]
__send_ipi_mask_ex.part.0,0x47,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
__send_ipi_mask_ex.part.0,0x50,ctx->r12 + 0x4,"MOV dword ptr [R12 + 0x4],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0x60,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0x69,0xffffffff815f9ae0,CALL 0xffffffff815f9ae0,direct call
__send_ipi_mask_ex.part.0,0x76,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0xb3,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0xc8,ctx->r12 + ctx->rcx * 0x1 + 0x10,"MOV qword ptr [R12 + RCX*0x1 + 0x10],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0xdb,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__send_ipi_mask_ex.part.0,0xe7,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__send_ipi_mask_ex.part.0,0x151,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__send_ipi_mask_ex.part.0,0x168,,RET,ret
__send_ipi_mask_ex.part.0,0x171,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0x1bc,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0x1d1,ctx->r12 + ctx->rcx * 0x1 + 0x10,"MOV qword ptr [R12 + RCX*0x1 + 0x10],0x0",write other [TODO]
__send_ipi_mask_ex.part.0,0x236,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__send_ipi_mask_ex.part.0,0x242,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__send_ipi_mask_ex.part.0,0x266,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
__send_ipi_mask_ex.part.0,0x2a3,ctx->rsi,CALL RSI,in-direct call
__send_ipi_mask_ex.part.0,0x2ae,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
__send_ipi_mask_ex.part.0,0x2b3,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
__send_ipi_mask_ex.part.0,0x2c3,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x1",write other [TODO]
__send_ipi_mask_ex.part.0,0x2d3,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__send_ipi_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__send_ipi_mask,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__send_ipi_mask,0x3d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__send_ipi_mask,0x46,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
__send_ipi_mask,0x87,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__send_ipi_mask,0x90,0xffffffff816020e0,CALL 0xffffffff816020e0,direct call
__send_ipi_mask,0xa8,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R12D",write stack
__send_ipi_mask,0xae,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
__send_ipi_mask,0xe6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__send_ipi_mask,0xf2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__send_ipi_mask,0x10e,0xffffffff833ffc78,CALL qword ptr [0xffffffff833ffc78],in-direct call
__send_ipi_mask,0x13e,,RET,ret
__send_ipi_mask,0x1a4,0xffffffff81034340,CALL 0xffffffff81034340,direct call
__send_ipi_mask,0x1ae,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hv_send_ipi_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_send_ipi_all,0x19,0xffffffff81034640,CALL 0xffffffff81034640,direct call
hv_send_ipi_all,0x25,0xffffffff833ffd10,CALL qword ptr [0xffffffff833ffd10],in-direct call
hv_send_ipi_all,0x30,,RET,ret
hv_send_ipi_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_send_ipi_mask_allbutself,0x18,0xffffffff81034640,CALL 0xffffffff81034640,direct call
hv_send_ipi_mask_allbutself,0x27,0xffffffff833ffd00,CALL qword ptr [0xffffffff833ffd00],in-direct call
hv_send_ipi_mask_allbutself,0x32,,RET,ret
hv_send_ipi_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_send_ipi_mask,0x15,0xffffffff81034640,CALL 0xffffffff81034640,direct call
hv_send_ipi_mask,0x24,0xffffffff833ffcf8,CALL qword ptr [0xffffffff833ffcf8],in-direct call
hv_send_ipi_mask,0x2f,,RET,ret
hv_send_ipi_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_send_ipi_allbutself,0x1c,0xffffffff81034640,CALL 0xffffffff81034640,direct call
hv_send_ipi_allbutself,0x2f,0xffffffff833ffd00,CALL qword ptr [0xffffffff833ffd00],in-direct call
hv_send_ipi_allbutself,0x3a,,RET,ret
__send_ipi_one,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__send_ipi_one,0x69,ctx->rsi,CALL RSI,in-direct call
__send_ipi_one,0x77,,RET,ret
__send_ipi_one,0xca,,RET,ret
__send_ipi_one,0xf9,0xffffffff81034340,CALL 0xffffffff81034340,direct call
hv_send_ipi_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_send_ipi_self,0x18,0xffffffff810348f0,CALL 0xffffffff810348f0,direct call
hv_send_ipi_self,0x24,0xffffffff833ffd18,CALL qword ptr [0xffffffff833ffd18],in-direct call
hv_send_ipi_self,0x2f,,RET,ret
hv_send_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_send_ipi,0x13,0xffffffff810348f0,CALL 0xffffffff810348f0,direct call
hv_send_ipi,0x22,0xffffffff833ffcf0,CALL qword ptr [0xffffffff833ffcf0],in-direct call
hv_send_ipi,0x2d,,RET,ret
hv_call_deposit_pages.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_call_deposit_pages.part.0,0x20,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
hv_call_deposit_pages.part.0,0x26,0xffffffff81316150,CALL 0xffffffff81316150,direct call
hv_call_deposit_pages.part.0,0x5b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
hv_call_deposit_pages.part.0,0x5f,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
hv_call_deposit_pages.part.0,0x64,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
hv_call_deposit_pages.part.0,0x71,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
hv_call_deposit_pages.part.0,0xc3,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
hv_call_deposit_pages.part.0,0xc8,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
hv_call_deposit_pages.part.0,0xd7,0xffffffff812eb730,CALL 0xffffffff812eb730,direct call
hv_call_deposit_pages.part.0,0xee,ctx->rcx + ctx->r14 * 0x4,"MOV dword ptr [RCX + R14*0x4],EAX",write other [TODO]
hv_call_deposit_pages.part.0,0xf7,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_call_deposit_pages.part.0,0xfd,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
hv_call_deposit_pages.part.0,0x101,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_call_deposit_pages.part.0,0x11d,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
hv_call_deposit_pages.part.0,0x16a,ctx->r12 + ctx->rsi * 0x8 + 0x8,"MOV qword ptr [R12 + RSI*0x8 + 0x8],RDX",write other [TODO]
hv_call_deposit_pages.part.0,0x184,ctx->wordctx->ptrctx->rbp - 0x36,"MOV word ptr [RBP + -0x36],CX",write stack
hv_call_deposit_pages.part.0,0x1a4,ctx->rax,CALL RAX,in-direct call
hv_call_deposit_pages.part.0,0x1ae,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
hv_call_deposit_pages.part.0,0x1d7,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
hv_call_deposit_pages.part.0,0x1dc,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
hv_call_deposit_pages.part.0,0x222,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xffff",write stack
hv_call_deposit_pages.part.0,0x23e,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_call_deposit_pages.part.0,0x24f,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
hv_call_deposit_pages.part.0,0x27c,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xfffffff4",write stack
hv_call_deposit_pages.part.0,0x30d,ctx->wordctx->ptrctx->rbp - 0x36,"MOV word ptr [RBP + -0x36],SI",write stack
hv_call_deposit_pages.part.0,0x316,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xfffffff4",write stack
hv_call_deposit_pages.part.0,0x328,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
hv_call_deposit_pages.part.0,0x32d,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xfffffff4",write stack
hv_call_deposit_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_call_deposit_pages,0x13,,RET,ret
hv_call_deposit_pages,0x18,0xffffffff81034a60,CALL 0xffffffff81034a60,direct call
hv_call_deposit_pages,0x1e,,RET,ret
hv_call_deposit_pages,0x24,,RET,ret
hv_call_add_logical_proc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_call_add_logical_proc,0x28,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ESI",write stack
hv_call_add_logical_proc,0x2b,0xffffffff81729fc0,CALL 0xffffffff81729fc0,direct call
hv_call_add_logical_proc,0x30,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
hv_call_add_logical_proc,0x3d,ctx->rdi,CALL RDI,in-direct call
hv_call_add_logical_proc,0x4b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_call_add_logical_proc,0x6a,0xffffffff81034a60,CALL 0xffffffff81034a60,direct call
hv_call_add_logical_proc,0x7a,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_call_add_logical_proc,0x83,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_call_add_logical_proc,0xb0,ctx->rax,"MOV dword ptr [RAX],EDI",write other [TODO]
hv_call_add_logical_proc,0xb7,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],R15D",write other [TODO]
hv_call_add_logical_proc,0xbb,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],0x0",write other [TODO]
hv_call_add_logical_proc,0xc2,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EDI",write other [TODO]
hv_call_add_logical_proc,0xca,ctx->rax + 0xc,"MOV qword ptr [RAX + 0xc],RDI",write other [TODO]
hv_call_add_logical_proc,0x143,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
hv_call_add_logical_proc,0x159,,RET,ret
hv_call_create_vp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_call_create_vp,0x1e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ECX",write stack
hv_call_create_vp,0x21,0xffffffff81729fc0,CALL 0xffffffff81729fc0,direct call
hv_call_create_vp,0x2d,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
hv_call_create_vp,0x42,ctx->rax + 0x1c,"MOV dword ptr [RAX + 0x1c],0x80000001",write other [TODO]
hv_call_create_vp,0x49,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],ECX",write other [TODO]
hv_call_create_vp,0x93,ctx->rdi,CALL RDI,in-direct call
hv_call_create_vp,0xa1,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_call_create_vp,0xb7,0xffffffff81034a60,CALL 0xffffffff81034a60,direct call
hv_call_create_vp,0xc3,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_call_create_vp,0xcc,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_call_create_vp,0xe4,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
hv_call_create_vp,0xe7,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R12D",write other [TODO]
hv_call_create_vp,0xeb,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],R15",write other [TODO]
hv_call_create_vp,0xef,ctx->rax + 0xf,"MOV byte ptr [RAX + 0xf],0x0",write other [TODO]
hv_call_create_vp,0xfc,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x0",write other [TODO]
hv_call_create_vp,0x122,,RET,ret
hv_call_create_vp,0x149,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
hv_call_create_vp,0x16c,0xffffffff81034a60,CALL 0xffffffff81034a60,direct call
__raw_callee_save_hv_vcpu_is_preempted,0x10,0xffffffff810351a0,CALL 0xffffffff810351a0,direct call
__raw_callee_save_hv_vcpu_is_preempted,0x22,,RET,ret
hv_qlock_kick,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_qlock_kick,0x15,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
hv_qlock_kick,0x19,,RET,ret
hv_qlock_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_qlock_wait,0x18,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hv_qlock_wait,0x21,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hv_qlock_wait,0x34,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hv_qlock_wait,0x3f,,RET,ret
hv_qlock_wait,0x40,,RET,ret
hv_qlock_wait,0x46,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_vcpu_is_preempted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_vcpu_is_preempted,0xc,,RET,ret
load_trampoline_pgtable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_trampoline_pgtable,0x22,0xffffffff82e4b9c8,CALL qword ptr [0xffffffff82e4b9c8],in-direct call
load_trampoline_pgtable,0x28,0xffffffff8108be60,CALL 0xffffffff8108be60,direct call
load_trampoline_pgtable,0x32,,RET,ret
load_trampoline_pgtable,0x33,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
load_trampoline_pgtable,0x3c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
load_trampoline_pgtable,0x49,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
load_trampoline_pgtable,0x53,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
paravirt_read_msr,0x6,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr,0xd,,RET,ret
set_personality_ia32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_personality_ia32,0x1d,,RET,ret
set_personality_ia32,0x34,ctx->wordctx->ptrctx->rax + 0x338,"MOV word ptr [RAX + 0x338],DX",write other [TODO]
set_personality_ia32,0x54,ctx->rdx + 0x3fd0,"MOV qword ptr [RDX + 0x3fd0],0xb",write other [TODO]
set_personality_ia32,0x64,,RET,ret
__ia32_compat_sys_arch_prctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_arch_prctl,0xf,0xffffffff81042bd0,CALL 0xffffffff81042bd0,direct call
__ia32_compat_sys_arch_prctl,0x15,,RET,ret
current_save_fsgs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
current_save_fsgs,0xc,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
current_save_fsgs,0x15,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
current_save_fsgs,0x27,ctx->wordctx->ptrctx->rbx + 0x14e4,"MOV word ptr [RBX + 0x14e4],AX",write other [TODO]
current_save_fsgs,0x31,ctx->wordctx->ptrctx->rbx + 0x14e6,"MOV word ptr [RBX + 0x14e6],AX",write other [TODO]
FUN_ffffffff81035319,-0xb,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
FUN_ffffffff81035319,-0x1,,RET,ret
FUN_ffffffff81035319,0x14,ctx->rbx + 0x14f0,"MOV qword ptr [RBX + 0x14f0],0x0",write other [TODO]
FUN_ffffffff81035319,0x21,ctx->rbx + 0x14e8,"MOV qword ptr [RBX + 0x14e8],0x0",write other [TODO]
x86_gsbase_read_cpu_inactive.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_gsbase_read_cpu_inactive.part.0,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
x86_gsbase_read_cpu_inactive.part.0,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
x86_gsbase_read_cpu_inactive.part.0,0x19,0xffffffff81cff5f0,CALL 0xffffffff81cff5f0,direct call
x86_gsbase_read_cpu_inactive.part.0,0x26,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
x86_gsbase_read_cpu_inactive.part.0,0x34,,RET,ret
start_thread_common.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
start_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
start_thread,0x11,0xffffffff81035390,CALL 0xffffffff81035390,direct call
start_thread,0x17,,RET,ret
__show_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__show_regs,0x22,0xffffffff81c8eef6,CALL 0xffffffff81c8eef6,direct call
release_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_thread,0x14,,RET,ret
x86_fsgsbase_read_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_fsgsbase_read_task,0x5a,,RET,ret
x86_fsgsbase_read_task,0x69,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
x86_fsgsbase_read_task,0xb1,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
x86_fsgsbase_read_task,0xb5,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
x86_fsgsbase_read_task,0xc6,,RET,ret
x86_gsbase_read_cpu_inactive,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_gsbase_read_cpu_inactive,0x17,0xffffffff81035350,CALL 0xffffffff81035350,direct call
x86_gsbase_read_cpu_inactive,0x1d,,RET,ret
x86_gsbase_read_cpu_inactive,0x23,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x86_gsbase_read_cpu_inactive,0x2a,,RET,ret
x86_gsbase_write_cpu_inactive,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_gsbase_write_cpu_inactive,0x18,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
x86_gsbase_write_cpu_inactive,0x21,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
x86_gsbase_write_cpu_inactive,0x27,0xffffffff81cff5c0,CALL 0xffffffff81cff5c0,direct call
x86_gsbase_write_cpu_inactive,0x31,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
x86_gsbase_write_cpu_inactive,0x3c,,RET,ret
x86_gsbase_write_cpu_inactive,0x4b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_gsbase_write_cpu_inactive,0x56,,RET,ret
x86_fsbase_read_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_fsbase_read_task,0x2d,,RET,ret
x86_fsbase_read_task,0x3a,0xffffffff810354c0,CALL 0xffffffff810354c0,direct call
x86_fsbase_read_task,0x40,,RET,ret
x86_fsbase_read_task,0x4e,,RET,ret
x86_fsbase_read_task,0x54,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x86_fsbase_read_task,0x5b,,RET,ret
x86_gsbase_read_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_gsbase_read_task,0x2d,,RET,ret
x86_gsbase_read_task,0x3a,0xffffffff810354c0,CALL 0xffffffff810354c0,direct call
x86_gsbase_read_task,0x40,,RET,ret
x86_gsbase_read_task,0x48,0xffffffff81035350,CALL 0xffffffff81035350,direct call
x86_gsbase_read_task,0x4e,,RET,ret
x86_gsbase_read_task,0x54,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x86_gsbase_read_task,0x5b,,RET,ret
x86_fsbase_write_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_fsbase_write_task,0x17,ctx->rdi + 0x14e8,"MOV qword ptr [RDI + 0x14e8],RSI",write other [TODO]
x86_fsbase_write_task,0x1f,,RET,ret
x86_gsbase_write_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_gsbase_write_task,0x17,ctx->rdi + 0x14f0,"MOV qword ptr [RDI + 0x14f0],RSI",write other [TODO]
x86_gsbase_write_task,0x1f,,RET,ret
compat_start_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
compat_start_thread,0x1e,0xffffffff81035390,CALL 0xffffffff81035390,direct call
compat_start_thread,0x24,,RET,ret
__switch_to,0x44,ctx->wordctx->ptrctx->r13 + 0x14e4,"MOV word ptr [R13 + 0x14e4],AX",write other [TODO]
__switch_to,0x4f,ctx->wordctx->ptrctx->r13 + 0x14e6,"MOV word ptr [R13 + 0x14e6],AX",write other [TODO]
__switch_to,0x2b2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
__switch_to,0x2b6,0xffffffff81043660,CALL 0xffffffff81043660,direct call
__switch_to,0x2bb,ctx->r13 + 0x1580,"MOV dword ptr [R13 + 0x1580],EBX",write other [TODO]
FUN_ffffffff810358f9,0x273,0xffffffff81042380,CALL 0xffffffff81042380,direct call
FUN_ffffffff81035992,0xc0,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff810359d4,-0x1eb,0xffffffff82e4b8b8,CALL qword ptr [0xffffffff82e4b8b8],in-direct call
FUN_ffffffff810359d4,-0x1e2,0xffffffff82e4b948,CALL qword ptr [0xffffffff82e4b948],in-direct call
FUN_ffffffff810359d4,-0x1d9,ctx->wordctx->ptrctx->r14 + 0x20,"MOV word ptr [R14 + 0x20],AX",write other [TODO]
FUN_ffffffff810359d4,-0x1b8,ctx->wordctx->ptrctx->r14 + 0x22,"MOV word ptr [R14 + 0x22],AX",write other [TODO]
FUN_ffffffff810359d4,0x1e,ctx->r13 + 0x14f0,"MOV qword ptr [R13 + 0x14f0],0x0",write other [TODO]
FUN_ffffffff810359d4,0x182,ctx->r13 + 0x14e8,"MOV qword ptr [R13 + 0x14e8],0x0",write other [TODO]
FUN_ffffffff81035ac9,0x11,0xffffffff82e4b8c0,CALL qword ptr [0xffffffff82e4b8c0],in-direct call
FUN_ffffffff81035ae5,-0x3c,0xffffffff82e4b8c0,CALL qword ptr [0xffffffff82e4b8c0],in-direct call
FUN_ffffffff81035ae5,-0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
set_personality_64bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_personality_64bit,0x1b,ctx->rdx + 0x3fd0,"MOV qword ptr [RDX + 0x3fd0],0x3b",write other [TODO]
set_personality_64bit,0x40,ctx->wordctx->ptrctx->rax + 0x338,"MOV word ptr [RAX + 0x338],DX",write other [TODO]
set_personality_64bit,0x5b,,RET,ret
do_arch_prctl_64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_arch_prctl_64,0x3a,0xffffffff81035620,CALL 0xffffffff81035620,direct call
do_arch_prctl_64,0x42,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
do_arch_prctl_64,0x50,,RET,ret
do_arch_prctl_64,0x8b,ctx->wordctx->ptrctx->rdi + 0x14e6,"MOV word ptr [RDI + 0x14e6],DX",write other [TODO]
do_arch_prctl_64,0x92,ctx->r13 + 0x14f0,"MOV qword ptr [R13 + 0x14f0],R12",write other [TODO]
do_arch_prctl_64,0xae,,RET,ret
do_arch_prctl_64,0xcd,0xffffffff81003740,CALL 0xffffffff81003740,direct call
do_arch_prctl_64,0xe6,,RET,ret
do_arch_prctl_64,0xf4,,RET,ret
do_arch_prctl_64,0x11f,ctx->wordctx->ptrctx->rdi + 0x14e4,"MOV word ptr [RDI + 0x14e4],AX",write other [TODO]
do_arch_prctl_64,0x126,ctx->r13 + 0x14e8,"MOV qword ptr [R13 + 0x14e8],R12",write other [TODO]
do_arch_prctl_64,0x13a,0xffffffff82000810,CALL 0xffffffff82000810,direct call
do_arch_prctl_64,0x150,0xffffffff81003740,CALL 0xffffffff81003740,direct call
do_arch_prctl_64,0x169,,RET,ret
do_arch_prctl_64,0x16a,0xffffffff81035680,CALL 0xffffffff81035680,direct call
do_arch_prctl_64,0x172,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
do_arch_prctl_64,0x180,,RET,ret
do_arch_prctl_64,0x18f,0xffffffff82e4b8c0,CALL qword ptr [0xffffffff82e4b8c0],in-direct call
do_arch_prctl_64,0x198,0xffffffff810355c0,CALL 0xffffffff810355c0,direct call
do_arch_prctl_64,0x1c9,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__ia32_sys_arch_prctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_arch_prctl,0x24,0xffffffff81035bf0,CALL 0xffffffff81035bf0,direct call
__ia32_sys_arch_prctl,0x34,,RET,ret
__ia32_sys_arch_prctl,0x3b,0xffffffff81042bd0,CALL 0xffffffff81042bd0,direct call
__ia32_sys_arch_prctl,0x45,,RET,ret
__x64_sys_arch_prctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_arch_prctl,0x24,0xffffffff81035bf0,CALL 0xffffffff81035bf0,direct call
__x64_sys_arch_prctl,0x34,,RET,ret
__x64_sys_arch_prctl,0x3b,0xffffffff81042bd0,CALL 0xffffffff81042bd0,direct call
__x64_sys_arch_prctl,0x45,,RET,ret
KSTK_ESP,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
KSTK_ESP,0x15,,RET,ret
restore_sigcontext,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restore_sigcontext,0x2e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
restore_sigcontext,0x3d,ctx->rax + 0x980,"MOV qword ptr [RAX + 0x980],-0x7ef48780",write other [TODO]
restore_sigcontext,0x48,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
restore_sigcontext,0x62,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
restore_sigcontext,0x6d,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
restore_sigcontext,0x78,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
restore_sigcontext,0x83,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
restore_sigcontext,0x8e,ctx->rbx + 0x70,"MOV qword ptr [RBX + 0x70],RAX",write other [TODO]
restore_sigcontext,0x99,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
restore_sigcontext,0xa4,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
restore_sigcontext,0xaf,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],RAX",write other [TODO]
restore_sigcontext,0xbd,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
restore_sigcontext,0xcb,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RAX",write other [TODO]
restore_sigcontext,0xd6,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],RAX",write other [TODO]
restore_sigcontext,0xe1,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RAX",write other [TODO]
restore_sigcontext,0xec,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
restore_sigcontext,0xf7,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
restore_sigcontext,0x102,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
restore_sigcontext,0x10d,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
restore_sigcontext,0x126,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],-0x1",write other [TODO]
restore_sigcontext,0x12e,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
restore_sigcontext,0x14a,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],RAX",write other [TODO]
restore_sigcontext,0x158,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RDI",write other [TODO]
restore_sigcontext,0x16c,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],RAX",write other [TODO]
restore_sigcontext,0x17b,0xffffffff81045730,CALL 0xffffffff81045730,direct call
restore_sigcontext,0x19a,,RET,ret
restore_sigcontext,0x1c2,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],0x2b",write other [TODO]
restore_sigcontext,0x1cf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_sigframe_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_sigframe_size,0x11,,RET,ret
arch_do_signal_or_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_do_signal_or_restart,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_do_signal_or_restart,0x32,0xffffffff810ba270,CALL 0xffffffff810ba270,direct call
arch_do_signal_or_restart,0x86,ctx->rdi - 0x2a0,"MOV byte ptr [RDI + -0x2a0],AL",write other [TODO]
arch_do_signal_or_restart,0x8c,0xffffffff810b7900,CALL 0xffffffff810b7900,direct call
arch_do_signal_or_restart,0xdc,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
arch_do_signal_or_restart,0xfc,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RDX",write other [TODO]
arch_do_signal_or_restart,0x1b4,0xffffffff81280c10,CALL 0xffffffff81280c10,direct call
arch_do_signal_or_restart,0x1dc,0xffffffff81097360,CALL 0xffffffff81097360,direct call
arch_do_signal_or_restart,0x22b,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],-0x4",write other [TODO]
arch_do_signal_or_restart,0x244,ctx->rbp - 0xac,"MOV dword ptr [RBP + -0xac],ECX",write stack
arch_do_signal_or_restart,0x295,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x0",write stack
arch_do_signal_or_restart,0x2a4,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x0",write stack
arch_do_signal_or_restart,0x322,0xffffffff810457d0,CALL 0xffffffff810457d0,direct call
arch_do_signal_or_restart,0x5c2,0xffffffff81097130,CALL 0xffffffff81097130,direct call
arch_do_signal_or_restart,0x5d5,0xffffffff81048f60,CALL 0xffffffff81048f60,direct call
arch_do_signal_or_restart,0x5f6,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x0",write stack
arch_do_signal_or_restart,0x605,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x0",write stack
arch_do_signal_or_restart,0x641,0xffffffff810457d0,CALL 0xffffffff810457d0,direct call
arch_do_signal_or_restart,0x668,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RCX",write stack
arch_do_signal_or_restart,0x66f,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R9",write stack
arch_do_signal_or_restart,0x676,0xffffffff810453e0,CALL 0xffffffff810453e0,direct call
arch_do_signal_or_restart,0x6ae,0xffffffff810457d0,CALL 0xffffffff810457d0,direct call
arch_do_signal_or_restart,0x6cf,0xffffffff82000810,CALL 0xffffffff82000810,direct call
arch_do_signal_or_restart,0x6f1,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RDX",write other [TODO]
arch_do_signal_or_restart,0x781,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R9",write stack
arch_do_signal_or_restart,0x78c,0xffffffff8111d2e0,CALL 0xffffffff8111d2e0,direct call
signal_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
signal_fault,0x4a,0xffffffff8111d2e0,CALL 0xffffffff8111d2e0,direct call
__x64_sys_rt_sigreturn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigreturn,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_rt_sigreturn,0x67,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
__x64_sys_rt_sigreturn,0x6c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
__x64_sys_rt_sigreturn,0x77,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
__x64_sys_rt_sigreturn,0x87,0xffffffff810b78a0,CALL 0xffffffff810b78a0,direct call
__x64_sys_rt_sigreturn,0x96,0xffffffff81035e90,CALL 0xffffffff81035e90,direct call
__x64_sys_rt_sigreturn,0xac,0xffffffff81036840,CALL 0xffffffff81036840,direct call
__x64_sys_rt_sigreturn,0xce,,RET,ret
__x64_sys_rt_sigreturn,0xd3,0xffffffff810bbf90,CALL 0xffffffff810bbf90,direct call
__x64_sys_rt_sigreturn,0xe3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sigaltstack_size_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sigaltstack_size_valid,0x4d,,RET,ret
sigaltstack_size_valid,0x6c,,RET,ret
sigaction_compat_abi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sigaction_compat_abi,0x26,,RET,ret
get_kernel_gp_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_kernel_gp_address,0x32,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
get_kernel_gp_address,0x38,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
get_kernel_gp_address,0x78,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
get_kernel_gp_address,0x8b,0xffffffff81c8b600,CALL 0xffffffff81c8b600,direct call
get_kernel_gp_address,0x90,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
FUN_ffffffff81036b1a,-0x88,,RET,ret
FUN_ffffffff81036b1a,0xc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_trap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_trap,0x37,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
do_trap,0x3e,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
do_trap,0x49,0xffffffff8108a5b0,CALL 0xffffffff8108a5b0,direct call
do_trap,0x61,0xffffffff810039e0,CALL 0xffffffff810039e0,direct call
do_trap,0x73,ctx->rbx + 0x1538,"MOV qword ptr [RBX + 0x1538],R15",write other [TODO]
do_trap,0x7a,ctx->rbx + 0x1530,"MOV qword ptr [RBX + 0x1530],R10",write other [TODO]
do_trap,0x99,ctx->rbx + 0x1538,"MOV qword ptr [RBX + 0x1538],R15",write other [TODO]
do_trap,0xa6,ctx->rbx + 0x1530,"MOV qword ptr [RBX + 0x1530],R10",write other [TODO]
do_trap,0xb1,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
do_trap,0xb5,0xffffffff8103a5b0,CALL 0xffffffff8103a5b0,direct call
do_trap,0xd7,0xffffffff810b70e0,CALL 0xffffffff810b70e0,direct call
do_trap,0xe7,0xffffffff8111d2e0,CALL 0xffffffff8111d2e0,direct call
gp_try_fixup_and_notify.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gp_try_fixup_and_notify.part.0,0x28,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],RDX",write other [TODO]
gp_try_fixup_and_notify.part.0,0x32,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],RDX",write other [TODO]
gp_try_fixup_and_notify.part.0,0x47,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
gp_try_fixup_and_notify.part.0,0x66,0xffffffff810d2fa0,CALL 0xffffffff810d2fa0,direct call
gp_try_fixup_and_notify.part.0,0x7e,,RET,ret
gp_try_fixup_and_notify.part.0,0x92,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],R8D",write stack
gp_try_fixup_and_notify.part.0,0x96,0xffffffff8107aa60,CALL 0xffffffff8107aa60,direct call
do_int3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_int3,0x2b,0xffffffff8107d1a0,CALL 0xffffffff8107d1a0,direct call
do_int3,0x3a,0xffffffff8107ae60,CALL 0xffffffff8107ae60,direct call
do_int3,0x4d,,RET,ret
do_int3,0x6b,0xffffffff810d2fa0,CALL 0xffffffff810d2fa0,direct call
do_int3,0x7d,,RET,ret
math_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
math_error,0x40,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
math_error,0x59,0xffffffff8108a5b0,CALL 0xffffffff8108a5b0,direct call
math_error,0x6b,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
math_error,0x79,,RET,ret
math_error,0x84,0xffffffff81043950,CALL 0xffffffff81043950,direct call
math_error,0x92,ctx->r14 + 0x1530,"MOV qword ptr [R14 + 0x1530],RAX",write other [TODO]
math_error,0x99,ctx->r14 + 0x1538,"MOV qword ptr [R14 + 0x1538],0x0",write other [TODO]
math_error,0xa4,0xffffffff810443a0,CALL 0xffffffff810443a0,direct call
math_error,0xba,0xffffffff810039e0,CALL 0xffffffff810039e0,direct call
math_error,0xc6,0xffffffff8127cdd0,CALL 0xffffffff8127cdd0,direct call
math_error,0xd6,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
math_error,0xeb,ctx->r14 + 0x1530,"MOV qword ptr [R14 + 0x1530],RAX",write other [TODO]
math_error,0xfd,ctx->r14 + 0x1538,"MOV qword ptr [R14 + 0x1538],0x0",write other [TODO]
math_error,0x108,0xffffffff810d2fa0,CALL 0xffffffff810d2fa0,direct call
math_error,0x120,0xffffffff8103a5b0,CALL 0xffffffff8103a5b0,direct call
do_error_trap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_error_trap,0x33,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ECX",write stack
do_error_trap,0x3c,0xffffffff810d2fa0,CALL 0xffffffff810d2fa0,direct call
do_error_trap,0x55,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
do_error_trap,0x70,0xffffffff81036b30,CALL 0xffffffff81036b30,direct call
do_error_trap,0x7f,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
do_error_trap,0x93,,RET,ret
is_valid_bugaddr,0x1b,,RET,ret
load_idt,0x4,0xffffffff82e4b8a0,CALL qword ptr [0xffffffff82e4b8a0],in-direct call
load_idt,0xb,,RET,ret
load_current_idt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_current_idt,0x10,0xffffffff82e4b8a0,CALL qword ptr [0xffffffff82e4b8a0],in-direct call
load_current_idt,0x17,,RET,ret
idt_invalidate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
idt_invalidate,0x10,0xffffffff82e4b8a0,CALL qword ptr [0xffffffff82e4b8a0],in-direct call
idt_invalidate,0x17,,RET,ret
__traceiter_local_timer_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_local_timer_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_local_timer_entry,0x37,,RET,ret
__traceiter_local_timer_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_local_timer_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_local_timer_exit,0x37,,RET,ret
__traceiter_spurious_apic_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_spurious_apic_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_spurious_apic_entry,0x37,,RET,ret
__traceiter_spurious_apic_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_spurious_apic_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_spurious_apic_exit,0x37,,RET,ret
__traceiter_error_apic_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_error_apic_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_error_apic_entry,0x37,,RET,ret
__traceiter_error_apic_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_error_apic_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_error_apic_exit,0x37,,RET,ret
__traceiter_x86_platform_ipi_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_platform_ipi_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_platform_ipi_entry,0x37,,RET,ret
__traceiter_x86_platform_ipi_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_platform_ipi_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_platform_ipi_exit,0x37,,RET,ret
__traceiter_irq_work_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_irq_work_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_irq_work_entry,0x37,,RET,ret
__traceiter_irq_work_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_irq_work_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_irq_work_exit,0x37,,RET,ret
__traceiter_reschedule_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_reschedule_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_reschedule_entry,0x37,,RET,ret
__traceiter_reschedule_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_reschedule_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_reschedule_exit,0x37,,RET,ret
__traceiter_call_function_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_call_function_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_call_function_entry,0x37,,RET,ret
__traceiter_call_function_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_call_function_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_call_function_exit,0x37,,RET,ret
__traceiter_call_function_single_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_call_function_single_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_call_function_single_entry,0x37,,RET,ret
__traceiter_call_function_single_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_call_function_single_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_call_function_single_exit,0x37,,RET,ret
__traceiter_threshold_apic_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_threshold_apic_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_threshold_apic_entry,0x37,,RET,ret
__traceiter_threshold_apic_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_threshold_apic_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_threshold_apic_exit,0x37,,RET,ret
__traceiter_deferred_error_apic_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_deferred_error_apic_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_deferred_error_apic_entry,0x37,,RET,ret
__traceiter_deferred_error_apic_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_deferred_error_apic_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_deferred_error_apic_exit,0x37,,RET,ret
__traceiter_thermal_apic_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_thermal_apic_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_thermal_apic_entry,0x37,,RET,ret
__traceiter_thermal_apic_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_thermal_apic_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_thermal_apic_exit,0x37,,RET,ret
__traceiter_vector_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_config,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_config,0x55,,RET,ret
__traceiter_vector_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_update,0x39,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
__traceiter_vector_update,0x49,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_update,0x65,,RET,ret
__traceiter_vector_clear,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_clear,0x39,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
__traceiter_vector_clear,0x49,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_clear,0x65,,RET,ret
__traceiter_vector_reserve_managed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_reserve_managed,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_reserve_managed,0x41,,RET,ret
__traceiter_vector_reserve,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_reserve,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_reserve,0x41,,RET,ret
__traceiter_vector_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_alloc,0x42,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_alloc,0x56,,RET,ret
__traceiter_vector_alloc_managed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_alloc_managed,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_alloc_managed,0x4b,,RET,ret
__traceiter_vector_activate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_activate,0x44,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_activate,0x58,,RET,ret
__traceiter_vector_deactivate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_deactivate,0x44,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_deactivate,0x58,,RET,ret
__traceiter_vector_teardown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_teardown,0x3b,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_teardown,0x4d,,RET,ret
__traceiter_vector_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_setup,0x3a,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_setup,0x4c,,RET,ret
__traceiter_vector_free_moved,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_vector_free_moved,0x42,ctx->rax,CALL RAX,in-direct call
__traceiter_vector_free_moved,0x56,,RET,ret
perf_perm_irq_work_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_perm_irq_work_exit,0x16,,RET,ret
dummy_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dummy_handler,0xa,,RET,ret
__sysvec_kvm_posted_intr_wakeup_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_kvm_posted_intr_wakeup_ipi,0x17,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_kvm_posted_intr_wakeup_ipi,0x20,0xffffffff82e3a088,CALL qword ptr [0xffffffff82e3a088],in-direct call
__sysvec_kvm_posted_intr_wakeup_ipi,0x27,,RET,ret
perf_trace_x86_irq_vector,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_x86_irq_vector,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_x86_irq_vector,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_x86_irq_vector,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_x86_irq_vector,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_x86_irq_vector,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_x86_irq_vector,0x91,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_x86_irq_vector,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_x86_irq_vector,0xb8,,RET,ret
perf_trace_x86_irq_vector,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_config,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_vector_config,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_config,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_config,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_config,0x89,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_config,0x90,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_config,0x9b,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_config,0xa6,ctx->rdi + 0x14,"MOV dword ptr [RDI + 0x14],EAX",write other [TODO]
perf_trace_vector_config,0xa9,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_vector_config,0xad,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_vector_config,0xb1,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_vector_config,0xb8,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_config,0xdc,,RET,ret
perf_trace_vector_config,0xeb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_mod,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_vector_mod,0x25,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R9D",write stack
perf_trace_vector_mod,0x3a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_mod,0x5d,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_mod,0x83,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_mod,0x8d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_mod,0x94,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_mod,0x9f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_mod,0xaa,ctx->rdi + 0x14,"MOV dword ptr [RDI + 0x14],EAX",write other [TODO]
perf_trace_vector_mod,0xb0,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R15D",write other [TODO]
perf_trace_vector_mod,0xb4,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],EAX",write other [TODO]
perf_trace_vector_mod,0xb7,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R14D",write other [TODO]
perf_trace_vector_mod,0xbb,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R13D",write other [TODO]
perf_trace_vector_mod,0xc2,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_mod,0xe6,,RET,ret
perf_trace_vector_mod,0xf5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_reserve,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_vector_reserve,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_reserve,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_reserve,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_reserve,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_reserve,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_reserve,0x9a,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_vector_reserve,0x9e,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_vector_reserve,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_reserve,0xc7,,RET,ret
perf_trace_vector_reserve,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_alloc,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_alloc,0x54,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_vector_alloc,0x58,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_alloc,0x7c,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_alloc,0x88,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_alloc,0x97,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_alloc,0xa2,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_alloc,0xad,ctx->rdi + 0x14,"MOV dword ptr [RDI + 0x14],R8D",write other [TODO]
perf_trace_vector_alloc,0xb7,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_vector_alloc,0xbb,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R14D",write other [TODO]
perf_trace_vector_alloc,0xbf,ctx->rdi + 0x10,"MOV byte ptr [RDI + 0x10],BL",write other [TODO]
perf_trace_vector_alloc,0xc6,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_alloc,0xea,,RET,ret
perf_trace_vector_alloc,0xf9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_alloc_managed,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_alloc_managed,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_alloc_managed,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_alloc_managed,0x8c,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_alloc_managed,0x93,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_alloc_managed,0x9e,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_alloc_managed,0xa9,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_vector_alloc_managed,0xad,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R14D",write other [TODO]
perf_trace_vector_alloc_managed,0xb1,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EBX",write other [TODO]
perf_trace_vector_alloc_managed,0xb8,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_alloc_managed,0xdc,,RET,ret
perf_trace_vector_alloc_managed,0xeb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_activate,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_vector_activate,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_activate,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_activate,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_activate,0x8a,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_activate,0x91,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_activate,0x9c,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_activate,0xa7,ctx->rdi + 0xe,"MOV byte ptr [RDI + 0xe],AL",write other [TODO]
perf_trace_vector_activate,0xaa,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_vector_activate,0xae,ctx->rdi + 0xc,"MOV byte ptr [RDI + 0xc],R13B",write other [TODO]
perf_trace_vector_activate,0xb2,ctx->rdi + 0xd,"MOV byte ptr [RDI + 0xd],R12B",write other [TODO]
perf_trace_vector_activate,0xb9,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_activate,0xdd,,RET,ret
perf_trace_vector_activate,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_teardown,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_teardown,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_teardown,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_teardown,0x81,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_teardown,0x88,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_teardown,0x93,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_teardown,0x9e,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_vector_teardown,0xa2,ctx->rdi + 0xc,"MOV byte ptr [RDI + 0xc],R12B",write other [TODO]
perf_trace_vector_teardown,0xa6,ctx->rdi + 0xd,"MOV byte ptr [RDI + 0xd],BL",write other [TODO]
perf_trace_vector_teardown,0xad,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_teardown,0xd1,,RET,ret
perf_trace_vector_teardown,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_setup,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_setup,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_setup,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_setup,0x81,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_setup,0x88,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_setup,0x93,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_setup,0x9e,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_vector_setup,0xa2,ctx->rdi + 0xc,"MOV byte ptr [RDI + 0xc],R12B",write other [TODO]
perf_trace_vector_setup,0xa6,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EBX",write other [TODO]
perf_trace_vector_setup,0xad,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_setup,0xd1,,RET,ret
perf_trace_vector_setup,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_vector_free_moved,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_vector_free_moved,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_vector_free_moved,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_vector_free_moved,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_vector_free_moved,0x8a,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_vector_free_moved,0x91,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_vector_free_moved,0x9c,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_vector_free_moved,0xa7,ctx->rdi + 0x14,"MOV byte ptr [RDI + 0x14],AL",write other [TODO]
perf_trace_vector_free_moved,0xaa,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_vector_free_moved,0xae,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_vector_free_moved,0xb2,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_vector_free_moved,0xb9,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_vector_free_moved,0xdd,,RET,ret
perf_trace_vector_free_moved,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_x86_irq_vector,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_x86_irq_vector,0x34,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_x86_irq_vector,0x3e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_x86_irq_vector,0x45,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_x86_irq_vector,0x61,,RET,ret
trace_event_raw_event_x86_irq_vector,0x67,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_x86_irq_vector,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_config,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_vector_config,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_config,0x4e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
trace_event_raw_event_vector_config,0x56,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
trace_event_raw_event_vector_config,0x5a,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_vector_config,0x5e,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],EBX",write other [TODO]
trace_event_raw_event_vector_config,0x61,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_config,0x83,,RET,ret
trace_event_raw_event_vector_config,0x89,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_config,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_mod,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_vector_mod,0x47,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_mod,0x51,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R15D",write other [TODO]
trace_event_raw_event_vector_mod,0x59,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R14D",write other [TODO]
trace_event_raw_event_vector_mod,0x5d,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R13D",write other [TODO]
trace_event_raw_event_vector_mod,0x61,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],R12D",write other [TODO]
trace_event_raw_event_vector_mod,0x65,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],EBX",write other [TODO]
trace_event_raw_event_vector_mod,0x68,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_mod,0x8a,,RET,ret
trace_event_raw_event_vector_mod,0x90,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
trace_event_raw_event_vector_mod,0x94,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_mod,0xa3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_reserve,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_vector_reserve,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_reserve,0x43,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_vector_reserve,0x4b,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EBX",write other [TODO]
trace_event_raw_event_vector_reserve,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_reserve,0x6c,,RET,ret
trace_event_raw_event_vector_reserve,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_reserve,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_alloc,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_vector_alloc,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_alloc,0x52,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_vector_alloc,0x61,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],R12B",write other [TODO]
trace_event_raw_event_vector_alloc,0x65,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R14D",write other [TODO]
trace_event_raw_event_vector_alloc,0x69,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],EBX",write other [TODO]
trace_event_raw_event_vector_alloc,0x6c,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_alloc,0x8e,,RET,ret
trace_event_raw_event_vector_alloc,0x94,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_alloc,0x9f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_alloc_managed,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_vector_alloc_managed,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_alloc_managed,0x4c,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_vector_alloc_managed,0x5b,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R14D",write other [TODO]
trace_event_raw_event_vector_alloc_managed,0x5f,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_vector_alloc_managed,0x62,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_alloc_managed,0x82,,RET,ret
trace_event_raw_event_vector_alloc_managed,0x88,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_alloc_managed,0x93,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_activate,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_vector_activate,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_activate,0x4e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
trace_event_raw_event_vector_activate,0x56,ctx->rax + 0xc,"MOV byte ptr [RAX + 0xc],R13B",write other [TODO]
trace_event_raw_event_vector_activate,0x5a,ctx->rax + 0xd,"MOV byte ptr [RAX + 0xd],R12B",write other [TODO]
trace_event_raw_event_vector_activate,0x5e,ctx->rax + 0xe,"MOV byte ptr [RAX + 0xe],BL",write other [TODO]
trace_event_raw_event_vector_activate,0x61,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_activate,0x83,,RET,ret
trace_event_raw_event_vector_activate,0x89,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_activate,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_teardown,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_vector_teardown,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_teardown,0x48,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_vector_teardown,0x50,ctx->rax + 0xc,"MOV byte ptr [RAX + 0xc],R12B",write other [TODO]
trace_event_raw_event_vector_teardown,0x54,ctx->rax + 0xd,"MOV byte ptr [RAX + 0xd],BL",write other [TODO]
trace_event_raw_event_vector_teardown,0x57,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_teardown,0x77,,RET,ret
trace_event_raw_event_vector_teardown,0x7d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_teardown,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_setup,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_vector_setup,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_setup,0x48,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_vector_setup,0x50,ctx->rax + 0xc,"MOV byte ptr [RAX + 0xc],R12B",write other [TODO]
trace_event_raw_event_vector_setup,0x54,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
trace_event_raw_event_vector_setup,0x57,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_setup,0x77,,RET,ret
trace_event_raw_event_vector_setup,0x7d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_setup,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_vector_free_moved,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_vector_free_moved,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_vector_free_moved,0x4e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
trace_event_raw_event_vector_free_moved,0x56,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
trace_event_raw_event_vector_free_moved,0x5a,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_vector_free_moved,0x5e,ctx->rax + 0x14,"MOV byte ptr [RAX + 0x14],BL",write other [TODO]
trace_event_raw_event_vector_free_moved,0x61,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_vector_free_moved,0x83,,RET,ret
trace_event_raw_event_vector_free_moved,0x89,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_vector_free_moved,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_x86_irq_vector,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_x86_irq_vector,0x22,,RET,ret
trace_raw_output_x86_irq_vector,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_x86_irq_vector,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_x86_irq_vector,0x47,,RET,ret
trace_raw_output_vector_config,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_config,0x22,,RET,ret
trace_raw_output_vector_config,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_config,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_config,0x56,,RET,ret
trace_raw_output_vector_mod,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_mod,0x26,,RET,ret
trace_raw_output_vector_mod,0x4b,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_mod,0x57,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_mod,0x65,,RET,ret
trace_raw_output_vector_reserve,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_reserve,0x22,,RET,ret
trace_raw_output_vector_reserve,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_reserve,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_reserve,0x4c,,RET,ret
trace_raw_output_vector_alloc,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_alloc,0x22,,RET,ret
trace_raw_output_vector_alloc,0x42,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_alloc,0x4e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_alloc,0x57,,RET,ret
trace_raw_output_vector_alloc_managed,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_alloc_managed,0x22,,RET,ret
trace_raw_output_vector_alloc_managed,0x3c,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_alloc_managed,0x48,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_alloc_managed,0x51,,RET,ret
trace_raw_output_vector_activate,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_activate,0x22,,RET,ret
trace_raw_output_vector_activate,0x44,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_activate,0x50,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_activate,0x59,,RET,ret
trace_raw_output_vector_teardown,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_teardown,0x22,,RET,ret
trace_raw_output_vector_teardown,0x3e,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_teardown,0x4a,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_teardown,0x53,,RET,ret
trace_raw_output_vector_setup,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_setup,0x22,,RET,ret
trace_raw_output_vector_setup,0x3d,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_setup,0x49,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_setup,0x52,,RET,ret
trace_raw_output_vector_free_moved,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_vector_free_moved,0x22,,RET,ret
trace_raw_output_vector_free_moved,0x42,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_vector_free_moved,0x4e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_vector_free_moved,0x57,,RET,ret
__bpf_trace_x86_irq_vector,0x6,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_x86_irq_vector,0xc,,RET,ret
__bpf_trace_vector_config,0xd,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_vector_config,0x13,,RET,ret
__bpf_trace_vector_alloc,0xe,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_vector_alloc,0x14,,RET,ret
__bpf_trace_vector_activate,0x10,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_vector_activate,0x16,,RET,ret
__bpf_trace_vector_free_moved,0xe,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_vector_free_moved,0x14,,RET,ret
__bpf_trace_vector_mod,0x10,0xffffffff811f97c0,CALL 0xffffffff811f97c0,direct call
__bpf_trace_vector_mod,0x16,,RET,ret
__bpf_trace_vector_reserve,0x8,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_vector_reserve,0xe,,RET,ret
__bpf_trace_vector_alloc_managed,0xa,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_vector_alloc_managed,0x10,,RET,ret
__bpf_trace_vector_teardown,0xc,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_vector_teardown,0x12,,RET,ret
__bpf_trace_vector_setup,0xb,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_vector_setup,0x11,,RET,ret
__common_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__common_interrupt,0x28,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__common_interrupt,0x3b,ctx->rbx + 0x68,CALL qword ptr [RBX + 0x68],in-direct call
__common_interrupt,0x5d,ctx->rax,CALL qword ptr [RAX],in-direct call
__common_interrupt,0x64,ctx->gs + 0x1efe0 + ctx->r13 * 0x8,"MOV qword ptr GS:[0x1efe0 + R13*0x8],0x0",write other [TODO]
__common_interrupt,0x81,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
kvm_set_posted_intr_wakeup_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_set_posted_intr_wakeup_handler,0xa,0xffffffff82e3a088,"MOV qword ptr [0xffffffff82e3a088],RDI",write .data
kvm_set_posted_intr_wakeup_handler,0x11,,RET,ret
kvm_set_posted_intr_wakeup_handler,0x13,0xffffffff82e3a088,"MOV qword ptr [0xffffffff82e3a088],-0x7efc8670",write .data
kvm_set_posted_intr_wakeup_handler,0x21,0xffffffff8113c240,CALL 0xffffffff8113c240,direct call
kvm_set_posted_intr_wakeup_handler,0x27,,RET,ret
__sysvec_x86_platform_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_x86_platform_ipi,0x1b,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_x86_platform_ipi,0x28,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_x86_platform_ipi,0x3f,ctx->rax,CALL RAX,in-direct call
__sysvec_x86_platform_ipi,0x43,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__sysvec_x86_platform_ipi,0x50,,RET,ret
__sysvec_thermal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_thermal,0x12,0xffffffff819c63b0,CALL 0xffffffff819c63b0,direct call
__sysvec_thermal,0x1f,0xffffffff819c6070,CALL 0xffffffff819c6070,direct call
ack_bad_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ack_bad_irq,0x15,0xffffffff8111d2e0,CALL 0xffffffff8111d2e0,direct call
arch_show_interrupts,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_show_interrupts,0x2d,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x50,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x58,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x68,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x89,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0xa2,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0xc5,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0xcd,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0xdd,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0xfe,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x117,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x13a,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x142,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x152,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x173,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x18c,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x1af,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x1b7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x1c7,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x1e8,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x201,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x224,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x22c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x23c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x25d,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x276,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x299,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x2a1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x2b1,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x2cb,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x2ee,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x318,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x320,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x330,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x34a,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x363,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x38d,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x395,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x3a5,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x3c6,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x3df,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x402,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x40a,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x41a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x43b,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x454,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x477,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x47f,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x48f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x4b0,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x4c9,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x4ec,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x4f4,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x504,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x525,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x53e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x561,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x569,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x579,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x59a,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x5b3,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x5d6,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x5de,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x5ee,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x60f,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x628,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x64a,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x652,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x662,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x683,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x69c,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x6be,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x6c6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x6d6,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x6f0,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x74d,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x76d,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x786,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x7a9,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x7b1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x7c1,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x7e2,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x7fb,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x81e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x826,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x836,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x850,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x870,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x893,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x89b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x8ab,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x8c5,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x8d4,,RET,ret
arch_show_interrupts,0x8e9,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x913,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x91b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x92b,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x945,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x970,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x99a,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0x9a2,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0x9b2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0x9cc,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_show_interrupts,0x9f7,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0xa21,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_show_interrupts,0xa29,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_show_interrupts,0xa39,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_show_interrupts,0xa53,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
arch_irq_stat_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_irq_stat_cpu,0x76,ctx->edx,"MOV EDX,dword ptr [RAX + RDX*0x1]",write other [TODO]
arch_irq_stat_cpu,0x8c,,RET,ret
arch_irq_stat,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_irq_stat,0x11,,RET,ret
fixup_irqs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fixup_irqs,0x1e,0xffffffff8112d500,CALL 0xffffffff8112d500,direct call
fixup_irqs,0x28,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
fixup_irqs,0x3e,ctx->gs + ctx->r13,"MOV qword ptr GS:[R13],0x0",write other [TODO]
fixup_irqs,0x80,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
fixup_irqs,0xa3,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
fixup_irqs,0xb9,ctx->rax,CALL RAX,in-direct call
fixup_irqs,0xbb,ctx->gs + ctx->r13,"MOV qword ptr GS:[R13],-0x2",write other [TODO]
fixup_irqs,0xc7,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
fixup_irqs,0xdb,,RET,ret
irq_init_percpu_irqstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_init_percpu_irqstack,0x30,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],RCX",write other [TODO]
irq_init_percpu_irqstack,0x37,,RET,ret
stack_type_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
stack_type_name,0x4c,,RET,ret
get_stack_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_stack_info,0x30,0xffffffff81d00b50,CALL 0xffffffff81d00b50,direct call
get_stack_info,0x53,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
timer_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
timer_interrupt,0x13,ctx->rax,CALL qword ptr [RAX],in-direct call
timer_interrupt,0x1b,,RET,ret
profile_pc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
profile_pc,0x23,,RET,ret
profile_pc,0x2a,0xffffffff81113570,CALL 0xffffffff81113570,direct call
profile_pc,0x42,,RET,ret
clocksource_arch_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clocksource_arch_init,0x28,,RET,ret
task_update_io_bitmap.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_update_io_bitmap.part.0,0x15,0xffffffff82e4b900,CALL qword ptr [0xffffffff82e4b900],in-direct call
task_update_io_bitmap.part.0,0x25,,RET,ret
task_update_io_bitmap.part.0,0x26,0xffffffff82000810,CALL 0xffffffff82000810,direct call
task_update_io_bitmap.part.0,0x2c,,RET,ret
__x64_sys_iopl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_iopl,0x2f,ctx->r12 + 0x1548,"MOV qword ptr [R12 + 0x1548],RBX",write other [TODO]
__x64_sys_iopl,0x5f,,RET,ret
__x64_sys_iopl,0x65,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
__x64_sys_iopl,0x73,0xffffffff815021b0,CALL 0xffffffff815021b0,direct call
__x64_sys_iopl,0x85,0xffffffff81039e80,CALL 0xffffffff81039e80,direct call
__x64_sys_iopl,0x90,,RET,ret
__ia32_sys_iopl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_iopl,0x2f,ctx->r12 + 0x1548,"MOV qword ptr [R12 + 0x1548],RBX",write other [TODO]
__ia32_sys_iopl,0x5f,,RET,ret
__ia32_sys_iopl,0x65,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
__ia32_sys_iopl,0x73,0xffffffff815021b0,CALL 0xffffffff815021b0,direct call
__ia32_sys_iopl,0x85,0xffffffff81039e80,CALL 0xffffffff81039e80,direct call
__ia32_sys_iopl,0x90,,RET,ret
io_bitmap_share,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
io_bitmap_share,0x50,ctx->rbx + 0x1540,"MOV qword ptr [RBX + 0x1540],RAX",write other [TODO]
io_bitmap_share,0x61,,RET,ret
io_bitmap_share,0x67,0xffffffff81605660,CALL 0xffffffff81605660,direct call
io_bitmap_share,0x73,0xffffffff81605660,CALL 0xffffffff81605660,direct call
io_bitmap_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
io_bitmap_exit,0x1a,ctx->rdi + 0x1540,"MOV qword ptr [RDI + 0x1540],0x0",write other [TODO]
io_bitmap_exit,0x27,0xffffffff81039e80,CALL 0xffffffff81039e80,direct call
io_bitmap_exit,0x50,,RET,ret
io_bitmap_exit,0x5b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
io_bitmap_exit,0x65,,RET,ret
io_bitmap_exit,0x6b,0xffffffff81605660,CALL 0xffffffff81605660,direct call
ksys_ioperm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ksys_ioperm,0x6e,0xffffffff812a7590,CALL 0xffffffff812a7590,direct call
ksys_ioperm,0x7f,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],0x1",write other [TODO]
ksys_ioperm,0x8f,0xffffffff8103a070,CALL 0xffffffff8103a070,direct call
ksys_ioperm,0x94,ctx->r15 + 0x1540,"MOV qword ptr [R15 + 0x1540],R12",write other [TODO]
ksys_ioperm,0xb8,0xffffffff815f9db0,CALL 0xffffffff815f9db0,direct call
ksys_ioperm,0xe9,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],EAX",write other [TODO]
ksys_ioperm,0x100,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
ksys_ioperm,0x110,,RET,ret
ksys_ioperm,0x111,0xffffffff815f9e30,CALL 0xffffffff815f9e30,direct call
ksys_ioperm,0x11d,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
ksys_ioperm,0x12f,0xffffffff815021b0,CALL 0xffffffff815021b0,direct call
ksys_ioperm,0x152,0xffffffff812b4340,CALL 0xffffffff812b4340,direct call
ksys_ioperm,0x175,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],0x1",write other [TODO]
ksys_ioperm,0x18c,0xffffffff8103a070,CALL 0xffffffff8103a070,direct call
__x64_sys_ioperm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ioperm,0x17,0xffffffff8103a0f0,CALL 0xffffffff8103a0f0,direct call
__x64_sys_ioperm,0x1d,,RET,ret
__ia32_sys_ioperm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ioperm,0x16,0xffffffff8103a0f0,CALL 0xffffffff8103a0f0,direct call
__ia32_sys_ioperm,0x1c,,RET,ret
oops_end,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
oops_end,0x25,0xffffffff81172070,CALL 0xffffffff81172070,direct call
oops_end,0x30,0xffffffff815f98d0,CALL 0xffffffff815f98d0,direct call
oops_end,0x3f,0xffffffff82e3c578,"MOV dword ptr [0xffffffff82e3c578],0xffffffff",write .data
oops_end,0x49,0xffffffff810a5010,CALL 0xffffffff810a5010,direct call
oops_end,0x5c,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
oops_end,0x62,0xffffffff810a5180,CALL 0xffffffff810a5180,direct call
oops_end,0x7a,0xffffffff81035460,CALL 0xffffffff81035460,direct call
oops_end,0x8a,,RET,ret
oops_end,0x92,0xffffffff82e4bae0,CALL qword ptr [0xffffffff82e4bae0],in-direct call
oops_end,0x9d,0xffffffff81172e70,CALL 0xffffffff81172e70,direct call
oops_end,0xc6,0xffffffff810030c0,CALL 0xffffffff810030c0,direct call
oops_end,0xc54ba5,0xffffffff81c954cb,CALL 0xffffffff81c954cb,direct call
oops_begin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
oops_begin,0xc,0xffffffff810a5140,CALL 0xffffffff810a5140,direct call
oops_begin,0x11,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
oops_begin,0x1a,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
oops_begin,0x40,0xffffffff82e3c578,"MOV dword ptr [0xffffffff82e3c578],EBX",write .data
oops_begin,0x4d,0xffffffff8111dd50,CALL 0xffffffff8111dd50,direct call
oops_begin,0x57,0xffffffff815f98d0,CALL 0xffffffff815f98d0,direct call
oops_begin,0x63,,RET,ret
oops_begin,0x86,0xffffffff82e4bad8,CALL qword ptr [0xffffffff82e4bad8],in-direct call
show_opcodes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_opcodes,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
show_opcodes,0x5e,0xffffffff81c8cdf0,CALL 0xffffffff81c8cdf0,direct call
show_opcodes,0x98,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
show_opcodes,0xae,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
__die_body,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__die_body,0x1f,0xffffffff81c68670,CALL 0xffffffff81c68670,direct call
__die_body,0x40,0xffffffff81035460,CALL 0xffffffff81035460,direct call
die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
die,0x1a,0xffffffff8103a3c0,CALL 0xffffffff8103a3c0,direct call
die,0x2b,0xffffffff81c8f289,CALL 0xffffffff81c8f289,direct call
die,0x3e,0xffffffff8103a2f0,CALL 0xffffffff8103a2f0,direct call
die,0x4c,,RET,ret
die_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
die_addr,0x1a,0xffffffff8103a3c0,CALL 0xffffffff8103a3c0,direct call
die_addr,0x2b,0xffffffff81c8ee20,CALL 0xffffffff81c8ee20,direct call
die_addr,0x39,0xffffffff8103a510,CALL 0xffffffff8103a510,direct call
die_addr,0x4c,0xffffffff8103a2f0,CALL 0xffffffff8103a2f0,direct call
die_addr,0x5a,,RET,ret
show_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_regs,0x15,0xffffffff81c68670,CALL 0xffffffff81c68670,direct call
show_regs,0x36,0xffffffff81035460,CALL 0xffffffff81035460,direct call
__traceiter_nmi_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_nmi_handler,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_nmi_handler,0x4b,,RET,ret
local_touch_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
local_touch_nmi,0x6,ctx->gs + 0x1efb8,"MOV qword ptr GS:[0x1efb8],0x0",write other [TODO]
local_touch_nmi,0x16,,RET,ret
perf_trace_nmi_handler,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_nmi_handler,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_nmi_handler,0x7a,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_nmi_handler,0x81,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_nmi_handler,0x88,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_nmi_handler,0x93,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_nmi_handler,0x9e,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_nmi_handler,0xa2,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R12",write other [TODO]
perf_trace_nmi_handler,0xa6,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],EBX",write other [TODO]
perf_trace_nmi_handler,0xad,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_nmi_handler,0xd1,,RET,ret
perf_trace_nmi_handler,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__register_nmi_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__register_nmi_handler,0x53,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
__register_nmi_handler,0x57,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
__register_nmi_handler,0x90,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
__register_nmi_handler,0x93,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RCX",write other [TODO]
__register_nmi_handler,0x97,ctx->rcx,"MOV qword ptr [RCX],R15",write other [TODO]
__register_nmi_handler,0x9a,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],R15",write other [TODO]
__register_nmi_handler,0x9e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
__register_nmi_handler,0xb3,,RET,ret
__register_nmi_handler,0xbc,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
__register_nmi_handler,0xc0,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
__register_nmi_handler,0xc3,ctx->rcx - 0x7d1c3a40,"MOV qword ptr [RCX + -0x7d1c3a40],R15",write other [TODO]
__register_nmi_handler,0xca,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],R15",write other [TODO]
trace_event_raw_event_nmi_handler,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_nmi_handler,0x3e,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_nmi_handler,0x48,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_nmi_handler,0x50,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R12",write other [TODO]
trace_event_raw_event_nmi_handler,0x54,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],EBX",write other [TODO]
trace_event_raw_event_nmi_handler,0x57,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_nmi_handler,0x77,,RET,ret
trace_event_raw_event_nmi_handler,0x7d,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_nmi_handler,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_nmi_handler,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_nmi_handler,0x22,,RET,ret
trace_raw_output_nmi_handler,0x3c,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_nmi_handler,0x48,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_nmi_handler,0x51,,RET,ret
__bpf_trace_nmi_handler,0x6,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_nmi_handler,0xc,,RET,ret
nmi_handle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_handle,0x1c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
nmi_handle,0x20,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
nmi_handle,0x3e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
unregister_nmi_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unregister_nmi_handler,0x35,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
unregister_nmi_handler,0x3e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
unregister_nmi_handler,0x5b,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
unregister_nmi_handler,0x80,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
unregister_nmi_handler,0x84,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
unregister_nmi_handler,0x91,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
unregister_nmi_handler,0x95,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unregister_nmi_handler,0x9f,0xffffffff8113c240,CALL 0xffffffff8113c240,direct call
unregister_nmi_handler,0xa4,ctx->rbx,"MOV qword ptr [RBX],RBX",write other [TODO]
unregister_nmi_handler,0xa7,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RBX",write other [TODO]
unregister_nmi_handler,0xb9,,RET,ret
unregister_nmi_handler,0xc1,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unregister_nmi_handler,0xd4,,RET,ret
unregister_nmi_handler,0xdf,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
unknown_nmi_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unknown_nmi_error,0x16,0xffffffff8103aa10,CALL 0xffffffff8103aa10,direct call
pci_serr_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pci_serr_error,0x16,0xffffffff8103aa10,CALL 0xffffffff8103aa10,direct call
io_check_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
io_check_error,0x16,0xffffffff8103aa10,CALL 0xffffffff8103aa10,direct call
stop_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
stop_nmi,0x11,,RET,ret
restart_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restart_nmi,0x11,,RET,ret
read_default_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
read_default_ldt,0x48,,RET,ret
read_default_ldt,0x54,,RET,ret
alloc_ldt_struct,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_ldt_struct,0x27,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
alloc_ldt_struct,0x48,0xffffffff812ec140,CALL 0xffffffff812ec140,direct call
alloc_ldt_struct,0x4d,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
alloc_ldt_struct,0x56,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],0xffffffff",write other [TODO]
alloc_ldt_struct,0x62,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EBX",write other [TODO]
alloc_ldt_struct,0x6b,,RET,ret
alloc_ldt_struct,0x71,0xffffffff812ea770,CALL 0xffffffff812ea770,direct call
alloc_ldt_struct,0x7b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
alloc_ldt_struct,0x8a,,RET,ret
read_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
read_ldt,0x37,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
read_ldt,0x67,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
read_ldt,0x80,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
read_ldt,0x8f,0xffffffff81605960,CALL 0xffffffff81605960,direct call
read_ldt,0xdb,0xffffffff81113020,CALL 0xffffffff81113020,direct call
read_ldt,0xf1,,RET,ret
free_ldt_struct.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_ldt_struct.part.0,0x16,0xffffffff82e4b8e8,CALL qword ptr [0xffffffff82e4b8e8],in-direct call
free_ldt_struct.part.0,0x2f,0xffffffff812e9da0,CALL 0xffffffff812e9da0,direct call
free_ldt_struct.part.0,0x37,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
free_ldt_struct.part.0,0x41,,RET,ret
free_ldt_struct.part.0,0x48,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
free_ldt_struct.part.0,0x50,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
free_ldt_struct.part.0,0x5a,,RET,ret
write_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
write_ldt,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
write_ldt,0x4d,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
write_ldt,0xba,ctx->wordctx->ptrctx->rbp - 0x46,"MOV word ptr [RBP + -0x46],R9W",write stack
write_ldt,0xbf,ctx->rbp - 0x44,"MOV byte ptr [RBP + -0x44],CL",write stack
write_ldt,0xd3,ctx->wordctx->ptrctx->rbp - 0x48,"MOV word ptr [RBP + -0x48],AX",write stack
write_ldt,0x10f,ctx->rbp - 0x41,"MOV byte ptr [RBP + -0x41],R9B",write stack
write_ldt,0x125,ctx->wordctx->ptrctx->rbp - 0x43,"MOV word ptr [RBP + -0x43],AX",write stack
write_ldt,0x13c,0xffffffff81d112d0,CALL 0xffffffff81d112d0,direct call
write_ldt,0x169,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EDX",write stack
write_ldt,0x16f,0xffffffff8103ad50,CALL 0xffffffff8103ad50,direct call
write_ldt,0x18d,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
write_ldt,0x19c,ctx->rax + ctx->rdx * 0x8,"MOV qword ptr [RAX + RDX*0x8],RCX",write other [TODO]
write_ldt,0x1a6,0xffffffff82e4b8e0,CALL qword ptr [0xffffffff82e4b8e0],in-direct call
write_ldt,0x1b7,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
write_ldt,0x1bb,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
write_ldt,0x1c0,ctx->r12 + 0x330,"MOV qword ptr [R12 + 0x330],RBX",write other [TODO]
write_ldt,0x1e1,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
write_ldt,0x1ea,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
write_ldt,0x1fb,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
write_ldt,0x253,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
write_ldt,0x260,0xffffffff8103ad50,CALL 0xffffffff8103ad50,direct call
write_ldt,0x297,0xffffffff8103aee0,CALL 0xffffffff8103aee0,direct call
__ia32_sys_modify_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_modify_ldt,0x2c,0xffffffff8103af40,CALL 0xffffffff8103af40,direct call
__ia32_sys_modify_ldt,0x34,,RET,ret
__ia32_sys_modify_ldt,0x3f,0xffffffff8103af40,CALL 0xffffffff8103af40,direct call
__ia32_sys_modify_ldt,0x47,,RET,ret
__ia32_sys_modify_ldt,0x4e,,RET,ret
__ia32_sys_modify_ldt,0x52,0xffffffff8103ade0,CALL 0xffffffff8103ade0,direct call
__ia32_sys_modify_ldt,0x5a,,RET,ret
__ia32_sys_modify_ldt,0x5e,0xffffffff8103acf0,CALL 0xffffffff8103acf0,direct call
__ia32_sys_modify_ldt,0x66,,RET,ret
__x64_sys_modify_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_modify_ldt,0x2d,0xffffffff8103af40,CALL 0xffffffff8103af40,direct call
__x64_sys_modify_ldt,0x35,,RET,ret
__x64_sys_modify_ldt,0x40,0xffffffff8103af40,CALL 0xffffffff8103af40,direct call
__x64_sys_modify_ldt,0x48,,RET,ret
__x64_sys_modify_ldt,0x4f,,RET,ret
__x64_sys_modify_ldt,0x53,0xffffffff8103ade0,CALL 0xffffffff8103ade0,direct call
__x64_sys_modify_ldt,0x5b,,RET,ret
__x64_sys_modify_ldt,0x5f,0xffffffff8103acf0,CALL 0xffffffff8103acf0,direct call
__x64_sys_modify_ldt,0x67,,RET,ret
load_mm_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_mm_ldt,0x18,0xffffffff82e4b8a8,CALL qword ptr [0xffffffff82e4b8a8],in-direct call
load_mm_ldt,0x1f,,RET,ret
FUN_ffffffff8103b330,0x6,0xffffffff82e4b8a8,CALL qword ptr [0xffffffff82e4b8a8],in-direct call
FUN_ffffffff8103b330,0xd,,RET,ret
flush_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_ldt,0x12,,RET,ret
flush_ldt,0x17,0xffffffff8103b2e0,CALL 0xffffffff8103b2e0,direct call
flush_ldt,0x2f,,RET,ret
switch_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
switch_ldt,0x32,,RET,ret
switch_ldt,0x33,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
switch_ldt,0x3e,0xffffffff815f9610,CALL 0xffffffff815f9610,direct call
switch_ldt,0x5f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
switch_ldt,0x6b,0xffffffff8103b2e0,CALL 0xffffffff8103b2e0,direct call
ldt_dup_context,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ldt_dup_context,0x2a,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
ldt_dup_context,0x3e,0xffffffff8103ad50,CALL 0xffffffff8103ad50,direct call
ldt_dup_context,0x62,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
ldt_dup_context,0x70,0xffffffff82e4b8e0,CALL qword ptr [0xffffffff82e4b8e0],in-direct call
ldt_dup_context,0x76,ctx->r13 + 0x330,"MOV qword ptr [R13 + 0x330],R12",write other [TODO]
ldt_dup_context,0x80,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
ldt_dup_context,0x92,,RET,ret
destroy_context_ldt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
destroy_context_ldt,0x19,ctx->rbx + 0x330,"MOV qword ptr [RBX + 0x330],0x0",write other [TODO]
destroy_context_ldt,0x29,,RET,ret
destroy_context_ldt,0x2a,0xffffffff8103aee0,CALL 0xffffffff8103aee0,direct call
ldt_arch_exit_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ldt_arch_exit_mmap,0xa,,RET,ret
x86_configure_nx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_configure_nx,0x2e,0xffffffff83117f90,"MOV qword ptr [0xffffffff83117f90],RAX",write .data
x86_configure_nx,0x36,,RET,ret
is_ISA_range,0x16,,RET,ret
default_get_nmi_reason,0x2,,RET,ret
x86_init_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_init_noop,0xa,,RET,ret
x86_op_int_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_op_int_noop,0xa,,RET,ret
enc_status_change_prepare_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enc_status_change_prepare_noop,0xa,,RET,ret
enc_status_change_finish_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enc_status_change_finish_noop,0xc,,RET,ret
enc_tlb_flush_required_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enc_tlb_flush_required_noop,0xc,,RET,ret
enc_cache_flush_required_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enc_cache_flush_required_noop,0xc,,RET,ret
default_nmi_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_nmi_init,0xa,,RET,ret
iommu_shutdown_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iommu_shutdown_noop,0xa,,RET,ret
mask_8259A_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mask_8259A_irq,0x13,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mask_8259A_irq,0x2d,0xffffffff82e3cf68,"MOV dword ptr [0xffffffff82e3cf68],EAX",write .data
mask_8259A_irq,0x41,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mask_8259A_irq,0x4b,,RET,ret
unmask_8259A_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unmask_8259A_irq,0x13,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
unmask_8259A_irq,0x2d,0xffffffff82e3cf68,"MOV dword ptr [0xffffffff82e3cf68],EAX",write .data
unmask_8259A_irq,0x41,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unmask_8259A_irq,0x4b,,RET,ret
i8259A_irq_pending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
i8259A_irq_pending,0x1f,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
i8259A_irq_pending,0x3e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
i8259A_irq_pending,0x4a,,RET,ret
i8259A_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
i8259A_suspend,0x17,0xffffffff83401290,"MOV byte ptr [0xffffffff83401290],AL",write .data
i8259A_suspend,0x22,0xffffffff83401291,"MOV byte ptr [0xffffffff83401291],AL",write .data
i8259A_suspend,0x2a,,RET,ret
i8259A_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
i8259A_shutdown,0x13,,RET,ret
mask_8259A,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mask_8259A,0x10,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mask_8259A,0x28,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mask_8259A,0x2e,,RET,ret
unmask_8259A,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unmask_8259A,0x10,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
unmask_8259A,0x31,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unmask_8259A,0x37,,RET,ret
legacy_pic_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
legacy_pic_noop,0xa,,RET,ret
legacy_pic_uint_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
legacy_pic_uint_noop,0xa,,RET,ret
legacy_pic_int_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
legacy_pic_int_noop,0xa,,RET,ret
legacy_pic_irq_pending_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
legacy_pic_irq_pending_noop,0xc,,RET,ret
legacy_pic_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
legacy_pic_probe,0xc,,RET,ret
mask_and_ack_8259A,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mask_and_ack_8259A,0x23,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mask_and_ack_8259A,0x37,0xffffffff82e3cf68,"MOV dword ptr [0xffffffff82e3cf68],EAX",write .data
make_8259A_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
make_8259A_irq,0xe,0xffffffff811239a0,CALL 0xffffffff811239a0,direct call
make_8259A_irq,0x39,0xffffffff81128830,CALL 0xffffffff81128830,direct call
make_8259A_irq,0x41,0xffffffff81124c30,CALL 0xffffffff81124c30,direct call
make_8259A_irq,0x4e,0xffffffff81072a40,CALL 0xffffffff81072a40,direct call
make_8259A_irq,0x58,,RET,ret
probe_8259A,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
probe_8259A,0x14,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
init_8259A,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_8259A,0x6,0xffffffff83401294,"MOV dword ptr [0xffffffff83401294],EDI",write .data
init_8259A,0x1b,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
init_8259A,0x36,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0x47,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0x58,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0x71,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0x82,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0x93,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0xa4,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0xb5,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0xd3,0xffffffff82e3ce98,"MOV qword ptr [0xffffffff82e3ce98],RAX",write .data
init_8259A,0xda,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
init_8259A,0xfb,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
init_8259A,0x104,,RET,ret
init_8259A,0x111,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
i8259A_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
i8259A_resume,0xf,0xffffffff8103b980,CALL 0xffffffff8103b980,direct call
i8259A_resume,0x2f,,RET,ret
disable_8259A_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disable_8259A_irq,0x14,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
disable_8259A_irq,0x2e,0xffffffff82e3cf68,"MOV dword ptr [0xffffffff82e3cf68],EAX",write .data
disable_8259A_irq,0x42,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
disable_8259A_irq,0x4c,,RET,ret
enable_8259A_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enable_8259A_irq,0x14,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
enable_8259A_irq,0x2e,0xffffffff82e3cf68,"MOV dword ptr [0xffffffff82e3cf68],EAX",write .data
enable_8259A_irq,0x42,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
enable_8259A_irq,0x4c,,RET,ret
arch_jump_entry_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_jump_entry_size,0x23,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
arch_jump_entry_size,0x40,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
arch_jump_entry_size,0x61,,RET,ret
arch_jump_entry_size,0x64,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__jump_label_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__jump_label_patch,0x26,0xffffffff8103bb90,CALL 0xffffffff8103bb90,direct call
__jump_label_patch,0x57,ctx->rax,"MOV byte ptr [RAX],0xe9",write other [TODO]
__jump_label_patch,0x5a,ctx->rax + 0x1,"MOV dword ptr [RAX + 0x1],EBX",write other [TODO]
__jump_label_patch,0x6d,0xffffffff81c7fb40,CALL 0xffffffff81c7fb40,direct call
__jump_label_patch,0x8b,ctx->rax,"MOV RAX,R15",write other [TODO]
__jump_label_patch,0x9a,,RET,ret
__jump_label_patch,0xac,ctx->rax + 0x1,"MOV dword ptr [RAX + 0x1],EBX",write other [TODO]
__jump_label_patch,0xaf,ctx->rax,"MOV byte ptr [RAX],0xeb",write other [TODO]
__jump_label_patch,0xce,ctx->rsi,"MOV RSI,R15",write other [TODO]
__jump_label_patch,0xd4,0xffffffff81c7fb40,CALL 0xffffffff81c7fb40,direct call
arch_jump_label_transform,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_jump_label_transform,0x9,0xffffffff81d044d0,CALL 0xffffffff81d044d0,direct call
arch_jump_label_transform,0xf,,RET,ret
arch_jump_label_transform_queue,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_jump_label_transform_queue,0x24,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
arch_jump_label_transform_queue,0x2f,0xffffffff8103bc00,CALL 0xffffffff8103bc00,direct call
arch_jump_label_transform_queue,0x44,0xffffffff81d04530,CALL 0xffffffff81d04530,direct call
arch_jump_label_transform_queue,0x50,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
arch_jump_label_transform_queue,0x5f,,RET,ret
arch_jump_label_transform_queue,0x60,0xffffffff81d044d0,CALL 0xffffffff81d044d0,direct call
arch_jump_label_transform_queue,0x6f,,RET,ret
arch_jump_label_transform_apply,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_jump_label_transform_apply,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
arch_jump_label_transform_apply,0x15,0xffffffff8103f9d0,CALL 0xffffffff8103f9d0,direct call
arch_jump_label_transform_apply,0x21,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
arch_jump_label_transform_apply,0x27,,RET,ret
__sysvec_irq_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_irq_work,0x17,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_irq_work,0x22,0xffffffff8120a550,CALL 0xffffffff8120a550,direct call
__sysvec_irq_work,0x2a,,RET,ret
arch_irq_work_raise,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_irq_work_raise,0x21,ctx->rax + 0x58,CALL qword ptr [RAX + 0x58],in-direct call
arch_irq_work_raise,0x2b,ctx->rax + 0x20,CALL qword ptr [RAX + 0x20],in-direct call
arch_irq_work_raise,0x2f,,RET,ret
arch_irq_work_raise,0x30,,RET,ret
pci_unmap_biosrom,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pci_unmap_biosrom,0x9,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
pci_unmap_biosrom,0xf,,RET,ret
match_id.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
match_id.isra.0,0x5a,,RET,ret
find_oprom,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_oprom,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
find_oprom,0x55,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
find_oprom,0x71,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
find_oprom,0x8d,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
find_oprom,0xb1,0xffffffff8103bec0,CALL 0xffffffff8103bec0,direct call
find_oprom,0xcc,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
find_oprom,0x10e,,RET,ret
find_oprom,0x121,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
find_oprom,0x156,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
find_oprom,0x187,0xffffffff8103bec0,CALL 0xffffffff8103bec0,direct call
find_oprom,0x19a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pci_map_biosrom,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pci_map_biosrom,0x9,0xffffffff8103bf20,CALL 0xffffffff8103bf20,direct call
pci_map_biosrom,0x21,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
pci_map_biosrom,0x27,,RET,ret
pci_biosrom_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pci_biosrom_size,0x9,0xffffffff8103bf20,CALL 0xffffffff8103bf20,direct call
pci_biosrom_size,0x24,,RET,ret
__x64_sys_ia32_truncate64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_truncate64,0x19,0xffffffff81360950,CALL 0xffffffff81360950,direct call
__x64_sys_ia32_truncate64,0x1f,,RET,ret
__ia32_sys_ia32_truncate64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_truncate64,0x1a,0xffffffff81360950,CALL 0xffffffff81360950,direct call
__ia32_sys_ia32_truncate64,0x20,,RET,ret
__x64_sys_ia32_ftruncate64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_ftruncate64,0x1d,0xffffffff81360970,CALL 0xffffffff81360970,direct call
__x64_sys_ia32_ftruncate64,0x23,,RET,ret
__ia32_sys_ia32_ftruncate64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_ftruncate64,0x1f,0xffffffff81360970,CALL 0xffffffff81360970,direct call
__ia32_sys_ia32_ftruncate64,0x25,,RET,ret
__ia32_sys_ia32_pread64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_pread64,0x20,0xffffffff813658e0,CALL 0xffffffff813658e0,direct call
__ia32_sys_ia32_pread64,0x26,,RET,ret
__ia32_sys_ia32_pwrite64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_pwrite64,0x20,0xffffffff81365980,CALL 0xffffffff81365980,direct call
__ia32_sys_ia32_pwrite64,0x26,,RET,ret
__ia32_sys_ia32_fadvise64_64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_fadvise64_64,0x2b,0xffffffff8128ce30,CALL 0xffffffff8128ce30,direct call
__ia32_sys_ia32_fadvise64_64,0x33,,RET,ret
__x64_sys_ia32_fadvise64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_fadvise64,0x21,0xffffffff8128ce30,CALL 0xffffffff8128ce30,direct call
__x64_sys_ia32_fadvise64,0x29,,RET,ret
__ia32_sys_ia32_fadvise64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_fadvise64,0x20,0xffffffff8128ce30,CALL 0xffffffff8128ce30,direct call
__ia32_sys_ia32_fadvise64,0x28,,RET,ret
__x64_sys_ia32_readahead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_readahead,0x1e,0xffffffff81292a70,CALL 0xffffffff81292a70,direct call
__x64_sys_ia32_readahead,0x24,,RET,ret
__ia32_sys_ia32_readahead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_readahead,0x1d,0xffffffff81292a70,CALL 0xffffffff81292a70,direct call
__ia32_sys_ia32_readahead,0x23,,RET,ret
__ia32_sys_ia32_sync_file_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_sync_file_range,0x2b,0xffffffff813a7080,CALL 0xffffffff813a7080,direct call
__ia32_sys_ia32_sync_file_range,0x33,,RET,ret
__ia32_sys_ia32_fallocate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ia32_fallocate,0x2b,0xffffffff81360bb0,CALL 0xffffffff81360bb0,direct call
__ia32_sys_ia32_fallocate,0x33,,RET,ret
cp_stat64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cp_stat64,0x30,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
cp_stat64,0x4b,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
cp_stat64,0x9e,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
cp_stat64,0xa6,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
cp_stat64,0xa9,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
cp_stat64,0xb3,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
cp_stat64,0xbb,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
cp_stat64,0xbe,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],R13D",write other [TODO]
cp_stat64,0xc2,ctx->rbx + 0x1c,"MOV dword ptr [RBX + 0x1c],ECX",write other [TODO]
cp_stat64,0xe4,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
cp_stat64,0xed,ctx->rbx + 0x2c,"MOV qword ptr [RBX + 0x2c],RAX",write other [TODO]
cp_stat64,0xf6,ctx->rbx + 0x40,"MOV dword ptr [RBX + 0x40],EAX",write other [TODO]
cp_stat64,0xfe,ctx->rbx + 0x44,"MOV dword ptr [RBX + 0x44],EAX",write other [TODO]
cp_stat64,0x106,ctx->rbx + 0x48,"MOV dword ptr [RBX + 0x48],EAX",write other [TODO]
cp_stat64,0x10e,ctx->rbx + 0x4c,"MOV dword ptr [RBX + 0x4c],EAX",write other [TODO]
cp_stat64,0x116,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],EAX",write other [TODO]
cp_stat64,0x11e,ctx->rbx + 0x54,"MOV dword ptr [RBX + 0x54],EAX",write other [TODO]
cp_stat64,0x126,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],EAX",write other [TODO]
cp_stat64,0x131,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RAX",write other [TODO]
cp_stat64,0x146,,RET,ret
__do_compat_sys_ia32_stat64,0x2a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__do_compat_sys_ia32_stat64,0x30,0xffffffff8136ba00,CALL 0xffffffff8136ba00,direct call
__do_compat_sys_ia32_stat64,0x4f,,RET,ret
__do_compat_sys_ia32_stat64,0x5a,0xffffffff8103c3b0,CALL 0xffffffff8103c3b0,direct call
__do_compat_sys_ia32_stat64,0x61,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_ia32_stat64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ia32_stat64,0xf,0xffffffff8103c510,CALL 0xffffffff8103c510,direct call
__ia32_compat_sys_ia32_stat64,0x15,,RET,ret
__do_compat_sys_ia32_lstat64,0x2d,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__do_compat_sys_ia32_lstat64,0x33,0xffffffff8136ba00,CALL 0xffffffff8136ba00,direct call
__do_compat_sys_ia32_lstat64,0x52,,RET,ret
__do_compat_sys_ia32_lstat64,0x5d,0xffffffff8103c3b0,CALL 0xffffffff8103c3b0,direct call
__do_compat_sys_ia32_lstat64,0x64,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_ia32_lstat64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ia32_lstat64,0xf,0xffffffff8103c5a0,CALL 0xffffffff8103c5a0,direct call
__ia32_compat_sys_ia32_lstat64,0x15,,RET,ret
__do_compat_sys_ia32_fstatat64,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__do_compat_sys_ia32_fstatat64,0x26,0xffffffff8136ba00,CALL 0xffffffff8136ba00,direct call
__do_compat_sys_ia32_fstatat64,0x39,0xffffffff8103c3b0,CALL 0xffffffff8103c3b0,direct call
__do_compat_sys_ia32_fstatat64,0x54,,RET,ret
__do_compat_sys_ia32_fstatat64,0x55,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_ia32_fstatat64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ia32_fstatat64,0x15,0xffffffff8103c630,CALL 0xffffffff8103c630,direct call
__ia32_compat_sys_ia32_fstatat64,0x1b,,RET,ret
__do_compat_sys_ia32_fstat64,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__do_compat_sys_ia32_fstat64,0x26,0xffffffff8136b780,CALL 0xffffffff8136b780,direct call
__do_compat_sys_ia32_fstat64,0x45,,RET,ret
__do_compat_sys_ia32_fstat64,0x50,0xffffffff8103c3b0,CALL 0xffffffff8103c3b0,direct call
__do_compat_sys_ia32_fstat64,0x57,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_ia32_fstat64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ia32_fstat64,0xf,0xffffffff8103c6b0,CALL 0xffffffff8103c6b0,direct call
__ia32_compat_sys_ia32_fstat64,0x15,,RET,ret
__ia32_compat_sys_ia32_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ia32_mmap,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__ia32_compat_sys_ia32_mmap,0x28,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_compat_sys_ia32_mmap,0x4c,ctx->edi,"MOV EDI,dword ptr [RBP + -0x20]",write other [TODO]
__ia32_compat_sys_ia32_mmap,0x5a,0xffffffff812d3ea0,CALL 0xffffffff812d3ea0,direct call
__ia32_compat_sys_ia32_mmap,0x6f,,RET,ret
__ia32_compat_sys_ia32_mmap,0x82,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_compat_sys_ia32_clone,0x1f,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__do_compat_sys_ia32_clone,0x29,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDX",write stack
__do_compat_sys_ia32_clone,0x2d,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
__do_compat_sys_ia32_clone,0x31,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R8",write stack
__do_compat_sys_ia32_clone,0x42,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RSI",write stack
__do_compat_sys_ia32_clone,0x4f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R10",write stack
__do_compat_sys_ia32_clone,0x53,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
__do_compat_sys_ia32_clone,0x5a,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],R9D",write stack
__do_compat_sys_ia32_clone,0x5e,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
__do_compat_sys_ia32_clone,0x75,,RET,ret
__do_compat_sys_ia32_clone,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_ia32_clone,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ia32_clone,0x1d,0xffffffff8103c7c0,CALL 0xffffffff8103c7c0,direct call
__ia32_compat_sys_ia32_clone,0x23,,RET,ret
__x64_sys_ia32_pwrite64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_pwrite64,0x21,0xffffffff81365980,CALL 0xffffffff81365980,direct call
__x64_sys_ia32_pwrite64,0x27,,RET,ret
__x64_sys_ia32_pread64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_pread64,0x21,0xffffffff813658e0,CALL 0xffffffff813658e0,direct call
__x64_sys_ia32_pread64,0x27,,RET,ret
__x64_sys_ia32_fadvise64_64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_fadvise64_64,0x2b,0xffffffff8128ce30,CALL 0xffffffff8128ce30,direct call
__x64_sys_ia32_fadvise64_64,0x33,,RET,ret
__x64_sys_ia32_sync_file_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_sync_file_range,0x2b,0xffffffff813a7080,CALL 0xffffffff813a7080,direct call
__x64_sys_ia32_sync_file_range,0x33,,RET,ret
__x64_sys_ia32_fallocate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ia32_fallocate,0x2b,0xffffffff81360bb0,CALL 0xffffffff81360bb0,direct call
__x64_sys_ia32_fallocate,0x33,,RET,ret
__ia32_sys_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_mmap,0x31,0xffffffff812d3ea0,CALL 0xffffffff812d3ea0,direct call
__ia32_sys_mmap,0x37,,RET,ret
__ia32_sys_mmap,0x3f,,RET,ret
__x64_sys_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_mmap,0x2e,0xffffffff812d3ea0,CALL 0xffffffff812d3ea0,direct call
__x64_sys_mmap,0x34,,RET,ret
__x64_sys_mmap,0x3c,,RET,ret
get_align_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_align_mask,0x44,,RET,ret
align_vdso_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
align_vdso_addr,0x86,,RET,ret
arch_get_unmapped_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_get_unmapped_area,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_get_unmapped_area,0x5b,,RET,ret
arch_get_unmapped_area,0x6c,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
arch_get_unmapped_area,0x85,0xffffffff8108ab20,CALL 0xffffffff8108ab20,direct call
arch_get_unmapped_area,0xaf,0xffffffff8108a910,CALL 0xffffffff8108a910,direct call
arch_get_unmapped_area,0xc5,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
arch_get_unmapped_area,0xcd,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R14",write stack
arch_get_unmapped_area,0xd1,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R15",write stack
arch_get_unmapped_area,0xd5,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
arch_get_unmapped_area,0xd9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
arch_get_unmapped_area,0xe1,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
arch_get_unmapped_area,0xea,0xffffffff8103ca10,CALL 0xffffffff8103ca10,direct call
arch_get_unmapped_area,0xf6,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_get_unmapped_area,0xfa,0xffffffff8103ca10,CALL 0xffffffff8103ca10,direct call
arch_get_unmapped_area,0x105,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R12",write stack
arch_get_unmapped_area,0x10d,0xffffffff812d4290,CALL 0xffffffff812d4290,direct call
arch_get_unmapped_area,0x11a,0xffffffff8108a8e0,CALL 0xffffffff8108a8e0,direct call
arch_get_unmapped_area,0x13e,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RCX",write stack
arch_get_unmapped_area,0x14c,0xffffffff812d2300,CALL 0xffffffff812d2300,direct call
arch_get_unmapped_area,0x1b7,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RCX",write stack
arch_get_unmapped_area,0x1bb,0xffffffff812a8270,CALL 0xffffffff812a8270,direct call
arch_get_unmapped_area,0x1cc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_get_unmapped_area_topdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_get_unmapped_area_topdown,0x2b,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RCX",write stack
arch_get_unmapped_area_topdown,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_get_unmapped_area_topdown,0xa2,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x1",write stack
arch_get_unmapped_area_topdown,0xaa,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R13",write stack
arch_get_unmapped_area_topdown,0xae,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x1000",write stack
arch_get_unmapped_area_topdown,0xb6,0xffffffff8108ab20,CALL 0xffffffff8108ab20,direct call
arch_get_unmapped_area_topdown,0xbb,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
arch_get_unmapped_area_topdown,0xc3,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
arch_get_unmapped_area_topdown,0xcf,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
arch_get_unmapped_area_topdown,0xd3,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
arch_get_unmapped_area_topdown,0xdc,0xffffffff8103ca10,CALL 0xffffffff8103ca10,direct call
arch_get_unmapped_area_topdown,0xe8,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_get_unmapped_area_topdown,0xec,0xffffffff8103ca10,CALL 0xffffffff8103ca10,direct call
arch_get_unmapped_area_topdown,0xfb,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R12",write stack
arch_get_unmapped_area_topdown,0x103,0xffffffff812d4290,CALL 0xffffffff812d4290,direct call
arch_get_unmapped_area_topdown,0x122,0xffffffff8103caf0,CALL 0xffffffff8103caf0,direct call
arch_get_unmapped_area_topdown,0x14e,,RET,ret
arch_get_unmapped_area_topdown,0x163,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R8",write stack
arch_get_unmapped_area_topdown,0x171,0xffffffff8108ab70,CALL 0xffffffff8108ab70,direct call
arch_get_unmapped_area_topdown,0x180,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x1",write stack
arch_get_unmapped_area_topdown,0x188,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R13",write stack
arch_get_unmapped_area_topdown,0x18c,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x1000",write stack
arch_get_unmapped_area_topdown,0x194,0xffffffff8108ab20,CALL 0xffffffff8108ab20,direct call
arch_get_unmapped_area_topdown,0x1a3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
arch_get_unmapped_area_topdown,0x1d3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
arch_get_unmapped_area_topdown,0x1f1,0xffffffff812d2300,CALL 0xffffffff812d2300,direct call
arch_get_unmapped_area_topdown,0x22b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_espfix_ap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_espfix_ap,0x1c,ctx->rax,"MOV RAX,RBX",write other [TODO]
init_espfix_ap,0x40,,RET,ret
init_espfix_ap,0x84,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_espfix_ap,0x99,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
init_espfix_ap,0xa6,ctx->rbx + ctx->rdx * 0x1,"MOV qword ptr [RBX + RDX*0x1],RAX",write other [TODO]
init_espfix_ap,0xc1,ctx->rcx + ctx->rdx * 0x1,"MOV qword ptr [RCX + RDX*0x1],RAX",write other [TODO]
init_espfix_ap,0xd3,,RET,ret
init_espfix_ap,0xdb,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
init_espfix_ap,0xf8,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
init_espfix_ap,0x120,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
init_espfix_ap,0x128,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],ESI",write stack
init_espfix_ap,0x188,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
init_espfix_ap,0x1eb,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
init_espfix_ap,0x21f,0xffffffff82e4b9f8,CALL qword ptr [0xffffffff82e4b9f8],in-direct call
init_espfix_ap,0x22d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R12",write stack
init_espfix_ap,0x23e,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
init_espfix_ap,0x25d,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
init_espfix_ap,0x29e,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RCX",write stack
init_espfix_ap,0x2d8,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
init_espfix_ap,0x33b,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
init_espfix_ap,0x341,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
init_espfix_ap,0x370,0xffffffff82e4b9f0,CALL qword ptr [0xffffffff82e4b9f0],in-direct call
init_espfix_ap,0x383,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
init_espfix_ap,0x3ac,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
init_espfix_ap,0x3e3,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
init_espfix_ap,0x3f2,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
init_espfix_ap,0x446,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
init_espfix_ap,0x44c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R15",write stack
init_espfix_ap,0x463,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
init_espfix_ap,0x47d, - 0x7cbfed40 + ctx->rax * 0x8,"MOV qword ptr [-0x7cbfed40 + RAX*0x8],R15",write other [TODO]
boot_params_data_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
boot_params_data_read,0x1b,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
boot_params_data_read,0x28,,RET,ret
version_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
version_show,0x1a,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
version_show,0x25,,RET,ret
setup_data_data_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_data_data_read,0x28,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
setup_data_data_read,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
setup_data_data_read,0x3e,0xffffffff81608040,CALL 0xffffffff81608040,direct call
setup_data_data_read,0x6c,,RET,ret
setup_data_data_read,0x8e,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
setup_data_data_read,0xae,0xffffffff81280200,CALL 0xffffffff81280200,direct call
setup_data_data_read,0xd1,0xffffffff81280200,CALL 0xffffffff81280200,direct call
setup_data_data_read,0x11d,0xffffffff81280200,CALL 0xffffffff81280200,direct call
setup_data_data_read,0x139,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
setup_data_data_read,0x141,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
setup_data_data_read,0x14c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
setup_data_data_read,0x150,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
setup_data_data_read,0x16d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
setup_data_data_read,0x171,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
setup_data_data_read,0x175,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
setup_data_data_read,0x18a,0xffffffff81280200,CALL 0xffffffff81280200,direct call
setup_data_data_read,0x1c6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
type_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
type_show,0x2c,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
type_show,0x32,0xffffffff81608040,CALL 0xffffffff81608040,direct call
type_show,0x5f,,RET,ret
type_show,0x81,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
type_show,0xa1,0xffffffff81280200,CALL 0xffffffff81280200,direct call
type_show,0xc4,0xffffffff81280200,CALL 0xffffffff81280200,direct call
type_show,0xe6,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
type_show,0xf0,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
type_show,0x103,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
type_show,0x112,0xffffffff81280200,CALL 0xffffffff81280200,direct call
type_show,0x12c,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
type_show,0x141,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
e820__mapped_raw_any,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
e820__mapped_raw_any,0x3a,,RET,ret
e820__mapped_raw_any,0x5b,,RET,ret
e820__mapped_any,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
e820__mapped_any,0x3a,,RET,ret
e820__mapped_any,0x5b,,RET,ret
e820__get_entry_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
e820__get_entry_type,0x58,,RET,ret
e820__get_entry_type,0x68,,RET,ret
via_no_dac_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
via_no_dac_cb,0xb,ctx->rdi + 0x320,"MOV qword ptr [RDI + 0x320],RAX",write other [TODO]
via_no_dac_cb,0x18,,RET,ret
pci_xen_swiotlb_init_late,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pci_xen_swiotlb_init_late,0x20,0xffffffff81144aa0,CALL 0xffffffff81144aa0,direct call
pci_xen_swiotlb_init_late,0x34,0xffffffff81144ac0,CALL 0xffffffff81144ac0,direct call
pci_xen_swiotlb_init_late,0x3d,0xffffffff834016c8,"MOV qword ptr [0xffffffff834016c8],-0x7dd1e340",write .data
pci_xen_swiotlb_init_late,0x48,0xffffffff81672930,CALL 0xffffffff81672930,direct call
pci_xen_swiotlb_init_late,0x50,,RET,ret
pci_xen_swiotlb_init_late,0x53,,RET,ret
via_no_dac,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
via_no_dac,0x12,,RET,ret
force_disable_hpet_msi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_disable_hpet_msi,0x6,0xffffffff83443342,"MOV byte ptr [0xffffffff83443342],0x1",write .data
force_disable_hpet_msi,0x11,,RET,ret
ich_force_enable_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ich_force_enable_hpet,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
ich_force_enable_hpet,0x4f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDI",write stack
ich_force_enable_hpet,0x53,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ich_force_enable_hpet,0x6b,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
ich_force_enable_hpet,0x7b,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
ich_force_enable_hpet,0x80,0xffffffff834016f0,"MOV qword ptr [0xffffffff834016f0],RAX",write .data
ich_force_enable_hpet,0xa7,ctx->rsi + 0x3404,"MOV dword ptr [RSI + 0x3404],EAX",write other [TODO]
ich_force_enable_hpet,0xcb,0xffffffff834016e0,"MOV qword ptr [0xffffffff834016e0],0x0",write .data
ich_force_enable_hpet,0xd6,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
ich_force_enable_hpet,0xec,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
ich_force_enable_hpet,0xc51caa,0xffffffff834016f8,"MOV dword ptr [0xffffffff834016f8],0x2",write .data
ich_force_enable_hpet,0xc51cc2,0xffffffff834016e0,"MOV qword ptr [0xffffffff834016e0],RCX",write .data
ich_force_enable_hpet,0xc51cc9,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
ich_force_enable_hpet,0xc51cf5,0xffffffff834016e0,"MOV qword ptr [0xffffffff834016e0],RCX",write .data
ich_force_enable_hpet,0xc51cfc,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
ich_force_enable_hpet,0xc51d08,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
ich_force_enable_hpet,0xc51d23,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
old_ich_force_enable_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
old_ich_force_enable_hpet,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
old_ich_force_enable_hpet,0x51,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
old_ich_force_enable_hpet,0x85,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EDX",write stack
old_ich_force_enable_hpet,0x88,0xffffffff81669050,CALL 0xffffffff81669050,direct call
old_ich_force_enable_hpet,0x99,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
old_ich_force_enable_hpet,0xc51c71,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
old_ich_force_enable_hpet_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
old_ich_force_enable_hpet_user,0xe,,RET,ret
old_ich_force_enable_hpet_user,0x13,0xffffffff8103da40,CALL 0xffffffff8103da40,direct call
old_ich_force_enable_hpet_user,0x19,,RET,ret
amd_disable_seq_and_redirect_scrub,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_disable_seq_and_redirect_scrub,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
amd_disable_seq_and_redirect_scrub,0x2a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_disable_seq_and_redirect_scrub,0x43,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_disable_seq_and_redirect_scrub,0x64,,RET,ret
amd_disable_seq_and_redirect_scrub,0x70,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EDX",write stack
amd_disable_seq_and_redirect_scrub,0x73,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_disable_seq_and_redirect_scrub,0x85,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EDX",write stack
amd_disable_seq_and_redirect_scrub,0x88,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_disable_seq_and_redirect_scrub,0x8f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ati_force_enable_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ati_force_enable_hpet,0x1b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
ati_force_enable_hpet,0x4c,ctx->rbp - 0x28,"MOV byte ptr [RBP + -0x28],0x0",write stack
ati_force_enable_hpet,0x50,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],0x0",write stack
ati_force_enable_hpet,0x5e,0xffffffff81668f30,CALL 0xffffffff81668f30,direct call
ati_force_enable_hpet,0x75,ctx->rbp - 0x28,"MOV byte ptr [RBP + -0x28],DL",write stack
ati_force_enable_hpet,0x7b,0xffffffff81668ff0,CALL 0xffffffff81668ff0,direct call
ati_force_enable_hpet,0x8f,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ati_force_enable_hpet,0xa5,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],EDX",write stack
ati_force_enable_hpet,0xa8,0xffffffff81669050,CALL 0xffffffff81669050,direct call
ati_force_enable_hpet,0xbc,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ati_force_enable_hpet,0xd9,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],ECX",write stack
ati_force_enable_hpet,0xdc,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
ati_force_enable_hpet,0xed,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],EAX",write stack
ati_force_enable_hpet,0x104,0xffffffff81669050,CALL 0xffffffff81669050,direct call
ati_force_enable_hpet,0x115,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ati_force_enable_hpet,0x174,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ati_force_enable_hpet,0x187,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],EDX",write stack
ati_force_enable_hpet,0x18a,0xffffffff81669050,CALL 0xffffffff81669050,direct call
ati_force_enable_hpet,0x19b,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
ati_force_enable_hpet,0xc51b7c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
quirk_intel_brickland_xeon_ras_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
quirk_intel_brickland_xeon_ras_cap,0x1b,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
quirk_intel_brickland_xeon_ras_cap,0x25,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
quirk_intel_brickland_xeon_ras_cap,0x40,,RET,ret
quirk_intel_brickland_xeon_ras_cap,0x41,0xffffffff81c89a70,CALL 0xffffffff81c89a70,direct call
quirk_intel_brickland_xeon_ras_cap,0x48,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
quirk_intel_purley_xeon_ras_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
quirk_intel_purley_xeon_ras_cap,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
quirk_intel_purley_xeon_ras_cap,0x2a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
quirk_intel_purley_xeon_ras_cap,0x3b,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
quirk_intel_purley_xeon_ras_cap,0x6c,,RET,ret
quirk_intel_purley_xeon_ras_cap,0x6d,0xffffffff81c89a70,CALL 0xffffffff81c89a70,direct call
quirk_intel_purley_xeon_ras_cap,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
quirk_intel_irqbalance,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
quirk_intel_irqbalance,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
quirk_intel_irqbalance,0x45,0xffffffff81668f30,CALL 0xffffffff81668f30,direct call
quirk_intel_irqbalance,0x5c,0xffffffff81668ff0,CALL 0xffffffff81668ff0,direct call
quirk_intel_irqbalance,0x74,0xffffffff81668be0,CALL 0xffffffff81668be0,direct call
e6xx_force_enable_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
e6xx_force_enable_hpet,0x19,,RET,ret
quirk_amd_nb_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
quirk_amd_nb_node,0x23,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
quirk_amd_nb_node,0x2f,0xffffffff816789f0,CALL 0xffffffff816789f0,direct call
quirk_amd_nb_node,0x48,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
quirk_amd_nb_node,0x71,0xffffffff81676870,CALL 0xffffffff81676870,direct call
quirk_amd_nb_node,0x8d,,RET,ret
quirk_amd_nb_node,0x8e,ctx->rbx + 0x360,"MOV dword ptr [RBX + 0x360],EAX",write other [TODO]
quirk_amd_nb_node,0x96,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
nvidia_force_enable_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nvidia_force_enable_hpet,0x17,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
nvidia_force_enable_hpet,0x5f,0xffffffff81669050,CALL 0xffffffff81669050,direct call
nvidia_force_enable_hpet,0x70,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
nvidia_force_enable_hpet,0x8d,0xffffffff834016f8,"MOV dword ptr [0xffffffff834016f8],0x4",write .data
nvidia_force_enable_hpet,0x9a,0xffffffff834016e0,"MOV qword ptr [0xffffffff834016e0],RCX",write .data
nvidia_force_enable_hpet,0xa1,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
nvidia_force_enable_hpet,0xa6,0xffffffff834016e8,"MOV qword ptr [0xffffffff834016e8],RBX",write .data
vt8237_force_enable_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vt8237_force_enable_hpet,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
vt8237_force_enable_hpet,0x46,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
vt8237_force_enable_hpet,0x6a,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0xfed00080",write stack
vt8237_force_enable_hpet,0x71,0xffffffff81669050,CALL 0xffffffff81669050,direct call
vt8237_force_enable_hpet,0x82,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
vt8237_force_enable_hpet,0xc51779,0xffffffff834016e0,"MOV qword ptr [0xffffffff834016e0],RCX",write .data
vt8237_force_enable_hpet,0xc51780,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
vt8237_force_enable_hpet,0xc5179b,0xffffffff81cd0860,CALL 0xffffffff81cd0860,direct call
FUN_ffffffff8103e107,0x17,,RET,ret
FUN_ffffffff8103e107,0x18,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_hpet_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_hpet_resume,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_hpet_resume,0x43,0xffffffff81669050,CALL 0xffffffff81669050,direct call
force_hpet_resume,0x4f,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
force_hpet_resume,0x88,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
force_hpet_resume,0xa8,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EDX",write stack
force_hpet_resume,0xab,0xffffffff81669050,CALL 0xffffffff81669050,direct call
force_hpet_resume,0xc0,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
force_hpet_resume,0x146,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],0xfed00080",write stack
force_hpet_resume,0x14d,0xffffffff81669050,CALL 0xffffffff81669050,direct call
force_hpet_resume,0x162,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
force_hpet_resume,0x184,0xffffffff81669050,CALL 0xffffffff81669050,direct call
force_hpet_resume,0x190,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
force_hpet_resume,0x1a3,ctx->rcx + 0x3404,"MOV dword ptr [RCX + 0x3404],EAX",write other [TODO]
caseD_0,0x14,,RET,ret
caseD_0,0x15c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_register_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_register_cpu,0x3b,0xffffffff834016fc,"MOV dword ptr [0xffffffff834016fc],0x0",write .data
arch_register_cpu,0x58,ctx->rdx,"MOV RDX,RDI",write other [TODO]
arch_register_cpu,0x5b,ctx->rdx + ctx->rax * 0x1 + 0x4,"MOV dword ptr [RDX + RAX*0x1 + 0x4],0x1",write other [TODO]
arch_register_cpu,0x71,0xffffffff817fd4a0,CALL 0xffffffff817fd4a0,direct call
arch_register_cpu,0x7e,,RET,ret
arch_register_cpu,0x93,0xffffffff81122c50,CALL 0xffffffff81122c50,direct call
arch_register_cpu,0xb0,0xffffffff81122c50,CALL 0xffffffff81122c50,direct call
arch_register_cpu,0xdc,0xffffffff81123730,CALL 0xffffffff81123730,direct call
arch_register_cpu,0xf3,0xffffffff834016fc,"MOV dword ptr [0xffffffff834016fc],0x0",write .data
arch_unregister_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_unregister_cpu,0x1b,0xffffffff817fd440,CALL 0xffffffff817fd440,direct call
arch_unregister_cpu,0x21,,RET,ret
text_poke_memcpy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_memcpy,0x9,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
text_poke_memcpy,0xf,,RET,ret
cpumask_weight,0x1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpumask_weight,0xa,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
cpumask_weight,0x10,,RET,ret
text_poke_loc_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_loc_init,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
text_poke_loc_init,0x3e,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
text_poke_loc_init,0x5e,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
text_poke_loc_init,0x7d,ctx->rbx + 0x8,"MOV byte ptr [RBX + 0x8],R12B",write other [TODO]
text_poke_loc_init,0x81,ctx->rbx,"MOV dword ptr [RBX],R14D",write other [TODO]
text_poke_loc_init,0x87,ctx->rbx + 0x9,"MOV byte ptr [RBX + 0x9],CL",write other [TODO]
text_poke_loc_init,0xe0,,RET,ret
text_poke_loc_init,0xf5,ctx->rbx + 0x9,"MOV byte ptr [RBX + 0x9],0xeb",write other [TODO]
text_poke_loc_init,0xf9,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],0x0",write other [TODO]
text_poke_loc_init,0x123,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EAX",write other [TODO]
text_poke_loc_init,0x145,ctx->rbx + 0x9,"MOV byte ptr [RBX + 0x9],0xe9",write other [TODO]
text_poke_loc_init,0x149,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],0x0",write other [TODO]
text_poke_loc_init,0x157,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
text_poke_memset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_memset,0xb,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
text_poke_memset,0x11,,RET,ret
do_sync_core,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
optimize_nops,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
optimize_nops,0x2b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
optimize_nops,0x31,ctx->rbp - 0xa4,"MOV dword ptr [RBP + -0xa4],ESI",write stack
__text_poke,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__text_poke,0x16,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
__text_poke,0x1a,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
__text_poke,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__text_poke,0x33,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
__text_poke,0x3a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__text_poke,0x55,0xffffffff810cacb0,CALL 0xffffffff810cacb0,direct call
__text_poke,0xb9,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],0x0",write stack
__text_poke,0xf1,0xffffffff812cc7c0,CALL 0xffffffff812cc7c0,direct call
__text_poke,0xfd,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__text_poke,0x101,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__text_poke,0x107,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__text_poke,0x10b,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__text_poke,0x151,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__text_poke,0x15e,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__text_poke,0x19e,0xffffffff8108bf60,CALL 0xffffffff8108bf60,direct call
__text_poke,0x1c9,ctx->rax,CALL RAX,in-direct call
__text_poke,0x1d4,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__text_poke,0x1f6,0xffffffff8108bf60,CALL 0xffffffff8108bf60,direct call
__text_poke,0x229,0xffffffff8108c9c0,CALL 0xffffffff8108c9c0,direct call
__text_poke,0x246,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__text_poke,0x250,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__text_poke,0x279,,RET,ret
__text_poke,0x2ab,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__text_poke,0x2e5,0xffffffff812e59e0,CALL 0xffffffff812e59e0,direct call
__text_poke,0x33e,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__text_poke,0x34f,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__text_poke,0x365,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__text_poke,0x379,0xffffffff8108bf60,CALL 0xffffffff8108bf60,direct call
__text_poke,0x3a2,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
__text_poke,0x3ae,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
__text_poke,0x3bc,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
__text_poke,0x3ca,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
__text_poke,0x3d8,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
__text_poke,0x3ea,0xffffffff8108c480,CALL 0xffffffff8108c480,direct call
__text_poke,0x3fe,0xffffffff81c7fb40,CALL 0xffffffff81c7fb40,direct call
__text_poke,0x43c,0xffffffff812e59e0,CALL 0xffffffff812e59e0,direct call
__text_poke,0x441,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__text_poke,0x44a,0xffffffff8103fa00,CALL 0xffffffff8103fa00,direct call
__text_poke,0x46a,0xffffffff8103fa00,CALL 0xffffffff8103fa00,direct call
__text_poke,0x480,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
text_poke_bp_batch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_bp_batch,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
text_poke_bp_batch,0x25,ctx->rbp - 0x36,"MOV byte ptr [RBP + -0x36],0xcc",write stack
text_poke_bp_batch,0x29,0xffffffff83402740,"MOV qword ptr [0xffffffff83402740],RDI",write .data
text_poke_bp_batch,0x30,0xffffffff83402748,"MOV dword ptr [0xffffffff83402748],ESI",write .data
text_poke_bp_batch,0x36,0xffffffff8340274c,"MOV dword ptr [0xffffffff8340274c],0x1",write .data
text_poke_bp_batch,0x80,ctx->rbx - 0x1,"MOV byte ptr [RBX + -0x1],AL",write other [TODO]
text_poke_bp_batch,0x83,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke_bp_batch,0xb8,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
text_poke_bp_batch,0xdc,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
text_poke_bp_batch,0xee,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
text_poke_bp_batch,0xf5,ctx->rbp - 0x35,"MOV byte ptr [RBP + -0x35],AL",write stack
text_poke_bp_batch,0x130,ctx->r14,"MOV byte ptr [R14],DL",write other [TODO]
text_poke_bp_batch,0x145,ctx->rbp - 0x39,"MOV byte ptr [RBP + -0x39],R8B",write stack
text_poke_bp_batch,0x154,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke_bp_batch,0x171,ctx->r14,"MOV qword ptr [R14],RDX",write other [TODO]
text_poke_bp_batch,0x17b,ctx->r14 + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [R14 + RDX*0x1 + -0x8],RCX",write other [TODO]
text_poke_bp_batch,0x193,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
text_poke_bp_batch,0x1c6,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke_bp_batch,0x214,,RET,ret
text_poke_bp_batch,0x22c,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
text_poke_bp_batch,0x24a,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
text_poke_bp_batch,0x25c,ctx->r14,"MOV dword ptr [R14],EDX",write other [TODO]
text_poke_bp_batch,0x264,ctx->r14 + ctx->rax * 0x1 - 0x4,"MOV dword ptr [R14 + RAX*0x1 + -0x4],EDX",write other [TODO]
text_poke_bp_batch,0x276,ctx->wordctx->ptrctx->r14 + ctx->rax * 0x1 - 0x2,"MOV word ptr [R14 + RAX*0x1 + -0x2],DX",write other [TODO]
text_poke_bp_batch,0x281,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apply_retpolines,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_retpolines,0xa,,RET,ret
apply_returns,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_returns,0xa,,RET,ret
apply_ibt_endbr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_ibt_endbr,0xa,,RET,ret
alternatives_smp_module_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alternatives_smp_module_add,0x25,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
alternatives_smp_module_add,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
alternatives_smp_module_add,0x3f,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
alternatives_smp_module_add,0x82,0xffffffff8103e460,CALL 0xffffffff8103e460,direct call
alternatives_smp_module_add,0x9d,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
alternatives_smp_module_add,0xae,ctx->r11 + 0x8,"MOV qword ptr [R11 + 0x8],R14",write other [TODO]
alternatives_smp_module_add,0xb2,ctx->r11 + 0x10,"MOV qword ptr [R11 + 0x10],RBX",write other [TODO]
alternatives_smp_module_add,0xb6,ctx->r11,"MOV qword ptr [R11],RAX",write other [TODO]
alternatives_smp_module_add,0xbf,ctx->r11 + 0x18,"MOV qword ptr [R11 + 0x18],R15",write other [TODO]
alternatives_smp_module_add,0xc3,ctx->r11 + 0x20,"MOV qword ptr [R11 + 0x20],R12",write other [TODO]
alternatives_smp_module_add,0xc7,ctx->r11 + 0x28,"MOV qword ptr [R11 + 0x28],R13",write other [TODO]
alternatives_smp_module_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alternatives_smp_module_del,0x14,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
alternatives_smp_module_del,0x48,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
alternatives_smp_module_del,0x52,,RET,ret
alternatives_smp_module_del,0x53,ctx->rdx,"MOV RDX,qword ptr [RDI + 0x38]",write other [TODO]
alternatives_smp_module_del,0x57,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
alternatives_smp_module_del,0x5b,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
alternatives_smp_module_del,0x68,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],RAX",write other [TODO]
alternatives_smp_module_del,0x70,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RAX",write other [TODO]
alternatives_smp_module_del,0x74,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
alternatives_enable_smp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alternatives_enable_smp,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
alternatives_enable_smp,0x2c,0xffffffff8103e460,CALL 0xffffffff8103e460,direct call
alternatives_enable_smp,0x3d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
alternatives_text_reserved,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alternatives_text_reserved,0x68,,RET,ret
alternatives_text_reserved,0x6c,,RET,ret
text_poke_early,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_early,0x27,0xffffffff8114bc10,CALL 0xffffffff8114bc10,direct call
text_poke_early,0x30,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
text_poke_early,0x39,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
text_poke_early,0x48,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
text_poke_early,0x52,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
text_poke_early,0x8f,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
text_poke_early,0x9c,,RET,ret
apply_alternatives,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_alternatives,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
apply_alternatives,0xc50899,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
apply_paravirt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_paravirt,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
apply_paravirt,0x6d,ctx->r13,"MOV byte ptr [R13],CL",write other [TODO]
apply_paravirt,0x88,0xffffffff81080630,CALL 0xffffffff81080630,direct call
apply_paravirt,0xd1,ctx->r9,"MOV byte ptr [R9],CL",write other [TODO]
apply_paravirt,0xf1,0xffffffff8103f240,CALL 0xffffffff8103f240,direct call
apply_paravirt,0x123,,RET,ret
apply_paravirt,0x12f,ctx->r9,"MOV qword ptr [R9],RCX",write other [TODO]
apply_paravirt,0x137,ctx->r9 + ctx->r10 * 0x1 - 0x8,"MOV qword ptr [R9 + R10*0x1 + -0x8],RCX",write other [TODO]
apply_paravirt,0x15e,ctx->r11 + ctx->r14 * 0x1,"MOV qword ptr [R11 + R14*0x1],R15",write other [TODO]
apply_paravirt,0x178,ctx->r13,"MOV qword ptr [R13],RCX",write other [TODO]
apply_paravirt,0x181,ctx->r13 + ctx->rax * 0x1 - 0x8,"MOV qword ptr [R13 + RAX*0x1 + -0x8],RCX",write other [TODO]
apply_paravirt,0x198,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
apply_paravirt,0x1a3,ctx->r9,"MOV dword ptr [R9],ECX",write other [TODO]
apply_paravirt,0x1ab,ctx->r9 + ctx->r10 * 0x1 - 0x4,"MOV dword ptr [R9 + R10*0x1 + -0x4],ECX",write other [TODO]
apply_paravirt,0x1bb,ctx->wordctx->ptrctx->r9 + ctx->r10 * 0x1 - 0x2,"MOV word ptr [R9 + R10*0x1 + -0x2],CX",write other [TODO]
apply_paravirt,0x1cd,ctx->r13,"MOV dword ptr [R13],ECX",write other [TODO]
apply_paravirt,0x1d6,ctx->r13 + ctx->rax * 0x1 - 0x4,"MOV dword ptr [R13 + RAX*0x1 + -0x4],ECX",write other [TODO]
apply_paravirt,0x1e6,ctx->wordctx->ptrctx->r13 + ctx->rax * 0x1 - 0x2,"MOV word ptr [R13 + RAX*0x1 + -0x2],CX",write other [TODO]
apply_paravirt,0x1f1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
text_poke,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke,0x19,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke,0x1f,,RET,ret
text_poke_kgdb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_kgdb,0x19,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke_kgdb,0x1f,,RET,ret
text_poke_copy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_copy,0x1b,0xffffffff810cacb0,CALL 0xffffffff810cacb0,direct call
text_poke_copy,0x2b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
text_poke_copy,0x6a,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke_copy,0x7e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
text_poke_copy,0x90,,RET,ret
text_poke_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_set,0x1c,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ESI",write stack
text_poke_set,0x1f,0xffffffff810cacb0,CALL 0xffffffff810cacb0,direct call
text_poke_set,0x2f,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
text_poke_set,0x73,0xffffffff8103e820,CALL 0xffffffff8103e820,direct call
text_poke_set,0x84,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
text_poke_set,0x9a,,RET,ret
text_poke_sync,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_sync,0x20,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
text_poke_sync,0x26,,RET,ret
text_poke_finish,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
text_poke_finish,0x1a,0xffffffff8103ecc0,CALL 0xffffffff8103ecc0,direct call
text_poke_finish,0x20,0xffffffff83401720,"MOV dword ptr [0xffffffff83401720],0x0",write .data
text_poke_finish,0x2a,,RET,ret
text_poke_finish,0x2b,,RET,ret
hw_breakpoint_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_breakpoint_restore,0x13,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
hw_breakpoint_restore,0x26,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
hw_breakpoint_restore,0x39,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
hw_breakpoint_restore,0x4c,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
hw_breakpoint_restore,0x5c,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
hw_breakpoint_restore,0x6f,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
hw_breakpoint_restore,0x76,,RET,ret
encode_dr7,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
encode_dr7,0x2c,,RET,ret
decode_dr7,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
decode_dr7,0x2e,ctx->r9,"MOV dword ptr [R9],ECX",write other [TODO]
decode_dr7,0x37,ctx->r8,"MOV dword ptr [R8],EDX",write other [TODO]
decode_dr7,0x3d,,RET,ret
arch_install_hw_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_install_hw_breakpoint,0x61,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EAX",write stack
arch_install_hw_breakpoint,0x64,0xffffffff830c7bc3,"MOV byte ptr [0xffffffff830c7bc3],0x1",write .data
arch_install_hw_breakpoint,0x6b,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
arch_install_hw_breakpoint,0x80,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
arch_install_hw_breakpoint,0x8a,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
arch_install_hw_breakpoint,0xa6,ctx->gs + ctx->r13 + 0x1fb00,"MOV qword ptr GS:[R13 + 0x1fb00],RAX",write other [TODO]
arch_install_hw_breakpoint,0xdf,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
arch_install_hw_breakpoint,0xea,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
arch_install_hw_breakpoint,0x108,,RET,ret
arch_install_hw_breakpoint,0x10c,0xffffffff81051650,CALL 0xffffffff81051650,direct call
arch_uninstall_hw_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uninstall_hw_breakpoint,0x49,0xffffffff830c7bc2,"MOV byte ptr [0xffffffff830c7bc2],0x1",write .data
arch_uninstall_hw_breakpoint,0x50,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
arch_uninstall_hw_breakpoint,0x5e,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
arch_uninstall_hw_breakpoint,0xa9,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
arch_uninstall_hw_breakpoint,0xb9,ctx->gs + 0x1fb20,"MOV qword ptr GS:[0x1fb20],RBX",write other [TODO]
arch_uninstall_hw_breakpoint,0xc7,,RET,ret
arch_uninstall_hw_breakpoint,0xcd,0xffffffff81051650,CALL 0xffffffff81051650,direct call
arch_bp_generic_fields,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_bp_generic_fields,0x27,,RET,ret
arch_bp_generic_fields,0x2d,ctx->rcx,"MOV dword ptr [RCX],0x4",write other [TODO]
arch_bp_generic_fields,0x36,ctx->rdx,"MOV dword ptr [RDX],0x8",write other [TODO]
arch_bp_generic_fields,0x3c,,RET,ret
arch_bp_generic_fields,0x45,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
arch_bp_generic_fields,0x57,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
arch_bp_generic_fields,0x5c,,RET,ret
arch_bp_generic_fields,0x63,,RET,ret
arch_check_bp_in_kernelspace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_check_bp_in_kernelspace,0x56,,RET,ret
hw_breakpoint_arch_parse,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_breakpoint_arch_parse,0x1e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
hw_breakpoint_arch_parse,0x53,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hw_breakpoint_arch_parse,0xd4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
hw_breakpoint_arch_parse,0x11f,,RET,ret
hw_breakpoint_arch_parse,0x13a,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
hw_breakpoint_arch_parse,0x142,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
hw_breakpoint_arch_parse,0x164,ctx->rcx + 0x11,"MOV byte ptr [RCX + 0x11],AL",write other [TODO]
hw_breakpoint_arch_parse,0x18f,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x44",write other [TODO]
hw_breakpoint_arch_parse,0x1b1,,RET,ret
hw_breakpoint_arch_parse,0x1c0,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x48",write other [TODO]
hw_breakpoint_arch_parse,0x1e2,ctx->rax + 0x11,"MOV byte ptr [RAX + 0x11],0x80",write other [TODO]
hw_breakpoint_arch_parse,0x1f5,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x40",write other [TODO]
hw_breakpoint_arch_parse,0x217,0xffffffff811a0ed0,CALL 0xffffffff811a0ed0,direct call
hw_breakpoint_arch_parse,0x229,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x4c",write other [TODO]
hw_breakpoint_arch_parse,0x23b,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x40",write other [TODO]
hw_breakpoint_arch_parse,0x27b,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
hw_breakpoint_arch_parse,0x27f,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x40",write other [TODO]
flush_ptrace_hw_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_ptrace_hw_breakpoint,0x26,0xffffffff81278ab0,CALL 0xffffffff81278ab0,direct call
flush_ptrace_hw_breakpoint,0x2b,ctx->rbx - 0x8,"MOV qword ptr [RBX + -0x8],0x0",write other [TODO]
flush_ptrace_hw_breakpoint,0x38,ctx->r12 + 0x1518,"MOV qword ptr [R12 + 0x1518],0x0",write other [TODO]
flush_ptrace_hw_breakpoint,0x45,ctx->r12 + 0x1520,"MOV qword ptr [R12 + 0x1520],0x0",write other [TODO]
flush_ptrace_hw_breakpoint,0x56,,RET,ret
hw_breakpoint_exceptions_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_breakpoint_exceptions_notify,0xd,,RET,ret
hw_breakpoint_exceptions_notify,0x72,,RET,ret
hw_breakpoint_exceptions_notify,0x94,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],ECX",write stack
hw_breakpoint_exceptions_notify,0xa0,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
hw_breakpoint_exceptions_notify,0xa4,0xffffffff81276310,CALL 0xffffffff81276310,direct call
hw_breakpoint_exceptions_notify,0xc5,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],ECX",write stack
hw_breakpoint_exceptions_notify,0xd1,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
hw_breakpoint_exceptions_notify,0xd5,0xffffffff81276310,CALL 0xffffffff81276310,direct call
hw_breakpoint_pmu_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_breakpoint_pmu_read,0xa,,RET,ret
check_tsc_unstable,0x6,,RET,ret
recalibrate_cpu_khz,0x0,,RET,ret
read_tsc,0xc,,RET,ret
tsc_cs_enable,0x9,0xffffffff83115910,"MOV dword ptr [0xffffffff83115910],EAX",write .data
tsc_cs_enable,0x11,,RET,ret
convert_art_to_tsc,0x38,,RET,ret
convert_art_ns_to_tsc,0x44,,RET,ret
FUN_ffffffff81040317,0x18,,RET,ret
FUN_ffffffff81040330,0x4,0xffffffff82000818,CALL 0xffffffff82000818,direct call
FUN_ffffffff81040330,0xa,,RET,ret
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
__set_cyc2ns_scale,0x22,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
__set_cyc2ns_scale,0x99,0xffffffff81159c80,CALL 0xffffffff81159c80,direct call
__set_cyc2ns_scale,0xcb,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],R12",write stack
__set_cyc2ns_scale,0xe6,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
__set_cyc2ns_scale,0xe9,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
__set_cyc2ns_scale,0xfb,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RBX",write other [TODO]
__set_cyc2ns_scale,0xff,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
__set_cyc2ns_scale,0x11f,,RET,ret
__set_cyc2ns_scale,0x124,ctx->rsp + 0xc,"MOV dword ptr [RSP + 0xc],0x1f",write stack
__set_cyc2ns_scale,0x133,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],EDX",write stack
__set_cyc2ns_scale,0x13c,0xffffffff82000818,CALL 0xffffffff82000818,direct call
__set_cyc2ns_scale,0x146,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_cyc2ns_scale,0x14,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
set_cyc2ns_scale,0x1d,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
set_cyc2ns_scale,0x23,0xffffffff81108890,CALL 0xffffffff81108890,direct call
set_cyc2ns_scale,0x2d,0xffffffff8110a200,CALL 0xffffffff8110a200,direct call
set_cyc2ns_scale,0x37,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
set_cyc2ns_scale,0x45,,RET,ret
set_cyc2ns_scale,0x4f,0xffffffff81040350,CALL 0xffffffff81040350,direct call
tsc_resume,0x9,0xffffffff8106eb30,CALL 0xffffffff8106eb30,direct call
tsc_resume,0xf,,RET,ret
tsc_read_refs,0x45,0xffffffff8107e6c0,CALL 0xffffffff8107e6c0,direct call
tsc_read_refs,0x4c,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
tsc_read_refs,0x7b,,RET,ret
tsc_read_refs,0x88,0xffffffff81a27a60,CALL 0xffffffff81a27a60,direct call
mark_tsc_unstable,0xa,,RET,ret
mark_tsc_unstable,0x17,0xffffffff83117b14,"MOV dword ptr [0xffffffff83117b14],0x1",write .data
mark_tsc_unstable,0x2d,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
mark_tsc_unstable,0x31,0xffffffff8110a170,CALL 0xffffffff8110a170,direct call
tsc_cs_tick_stable,0xa,ctx->rax,"MOV RAX,qword ptr [0xffffffff82e4bb60]",write other [TODO]
tsc_cs_tick_stable,0x19,,RET,ret
tsc_cs_tick_stable,0x1e,0xffffffff8110a240,CALL 0xffffffff8110a240,direct call
tsc_cs_tick_stable,0x24,,RET,ret
tsc_cs_mark_unstable,0xa,,RET,ret
tsc_cs_mark_unstable,0x13,0xffffffff83117b14,"MOV dword ptr [0xffffffff83117b14],0x1",write .data
tsc_cs_mark_unstable,0x2c,0xffffffff8110a170,CALL 0xffffffff8110a170,direct call
pit_hpet_ptimer_calibrate_cpu,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pit_hpet_ptimer_calibrate_cpu,0x2d,0xffffffff8107d7e0,CALL 0xffffffff8107d7e0,direct call
pit_hpet_ptimer_calibrate_cpu,0x32,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0x3e8",write stack
pit_hpet_ptimer_calibrate_cpu,0x39,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0xa",write stack
pit_hpet_ptimer_calibrate_cpu,0x44,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x2e9b",write stack
pit_hpet_ptimer_calibrate_cpu,0x4c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x1",write stack
pit_hpet_ptimer_calibrate_cpu,0x54,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
pit_hpet_ptimer_calibrate_cpu,0x5d,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
pit_hpet_ptimer_calibrate_cpu,0x6a,0xffffffff81040510,CALL 0xffffffff81040510,direct call
pit_hpet_ptimer_calibrate_cpu,0x11f,0xffffffff81040510,CALL 0xffffffff81040510,direct call
pit_hpet_ptimer_calibrate_cpu,0x12c,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
pit_hpet_ptimer_calibrate_cpu,0x1b0,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
pit_hpet_ptimer_calibrate_cpu,0x1e2,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0x1388",write stack
pit_hpet_ptimer_calibrate_cpu,0x1e9,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x32",write stack
pit_hpet_ptimer_calibrate_cpu,0x1f1,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0xe90b",write stack
pit_hpet_ptimer_calibrate_cpu,0x21c,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RCX",write stack
pit_hpet_ptimer_calibrate_cpu,0x22d,0xffffffff8107e6c0,CALL 0xffffffff8107e6c0,direct call
pit_hpet_ptimer_calibrate_cpu,0x25a,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
pit_hpet_ptimer_calibrate_cpu,0x264,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
pit_hpet_ptimer_calibrate_cpu,0x26e,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
pit_hpet_ptimer_calibrate_cpu,0x278,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
pit_hpet_ptimer_calibrate_cpu,0x282,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
tsc_refine_calibration_work,0x1f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
tsc_refine_calibration_work,0x46,0xffffffff81040510,CALL 0xffffffff81040510,direct call
tsc_refine_calibration_work,0x10f,0xffffffff83402770,"MOV qword ptr [0xffffffff83402770],-0x7d1c1980",write .data
tsc_refine_calibration_work,0x12c,0xffffffff8115a840,CALL 0xffffffff8115a840,direct call
tsc_refine_calibration_work,0x138,0xffffffff8115a520,CALL 0xffffffff8115a520,direct call
tsc_refine_calibration_work,0x15c,,RET,ret
tsc_refine_calibration_work,0x15d,0xffffffff8107d7e0,CALL 0xffffffff8107d7e0,direct call
tsc_refine_calibration_work,0x16b,0xffffffff83402788,"MOV dword ptr [0xffffffff83402788],EAX",write .data
tsc_refine_calibration_work,0x171,0xffffffff81040510,CALL 0xffffffff81040510,direct call
tsc_refine_calibration_work,0x18e,0xffffffff82e3e600,"MOV qword ptr [0xffffffff82e3e600],RAX",write .data
tsc_refine_calibration_work,0x195,0xffffffff810c65a0,CALL 0xffffffff810c65a0,direct call
tsc_refine_calibration_work,0x1b9,0xffffffff8107e6c0,CALL 0xffffffff8107e6c0,direct call
tsc_refine_calibration_work,0x1e8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
native_calibrate_cpu_early.part.0,0x9,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_calibrate_cpu_early.part.0,0x12,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_calibrate_cpu_early,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
native_calibrate_cpu_early,0x29,0xffffffff81041300,CALL 0xffffffff81041300,direct call
native_calibrate_cpu_early,0x33,0xffffffff81040ae0,CALL 0xffffffff81040ae0,direct call
native_calibrate_cpu_early,0x48,,RET,ret
native_calibrate_cpu_early,0x49,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],0x0",write stack
native_calibrate_cpu_early,0x58,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
native_calibrate_cpu_early,0x67,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x0",write stack
native_calibrate_cpu_early,0x6e,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x16",write stack
native_calibrate_cpu_early,0x75,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
native_calibrate_cpu_early,0x89,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
native_calibrate_cpu,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
native_calibrate_cpu,0x29,0xffffffff81041300,CALL 0xffffffff81041300,direct call
native_calibrate_cpu,0x43,,RET,ret
native_calibrate_cpu,0x44,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],0x0",write stack
native_calibrate_cpu,0x53,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
native_calibrate_cpu,0x62,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x0",write stack
native_calibrate_cpu,0x69,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x16",write stack
native_calibrate_cpu,0x70,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
native_calibrate_cpu,0x84,0xffffffff81040ae0,CALL 0xffffffff81040ae0,direct call
native_calibrate_cpu,0x8e,0xffffffff81040660,CALL 0xffffffff81040660,direct call
native_calibrate_cpu,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
time_cpufreq_notifier,0x24,0xffffffff834027a0,"MOV dword ptr [0xffffffff834027a0],EAX",write .data
time_cpufreq_notifier,0x31,0xffffffff83402798,"MOV qword ptr [0xffffffff83402798],RAX",write .data
time_cpufreq_notifier,0x3e,0xffffffff83402790,"MOV qword ptr [0xffffffff83402790],RAX",write .data
time_cpufreq_notifier,0x67,0xffffffff83117ac8,"MOV qword ptr [0xffffffff83117ac8],RAX",write .data
time_cpufreq_notifier,0x7c,0xffffffff83117b18,"MOV dword ptr [0xffffffff83117b18],EAX",write .data
time_cpufreq_notifier,0xc7,0xffffffff83117b14,"MOV dword ptr [0xffffffff83117b14],0x1",write .data
time_cpufreq_notifier,0xdd,0xffffffff8110a170,CALL 0xffffffff8110a170,direct call
time_cpufreq_notifier,0xf8,0xffffffff83117b14,"MOV dword ptr [0xffffffff83117b14],0x1",write .data
time_cpufreq_notifier,0x10e,0xffffffff8110a170,CALL 0xffffffff8110a170,direct call
cyc2ns_read_begin,0x23,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RSI",write other [TODO]
cyc2ns_read_begin,0x2e,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
cyc2ns_read_begin,0x34,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],EAX",write other [TODO]
cyc2ns_read_begin,0x42,,RET,ret
cyc2ns_read_end,0x9,,RET,ret
cyc2ns_read_end,0xe,0xffffffff82000818,CALL 0xffffffff82000818,direct call
cyc2ns_read_end,0x14,,RET,ret
native_sched_clock_from_tsc,0x5a,,RET,ret
native_sched_clock_from_tsc,0x5f,0xffffffff82000818,CALL 0xffffffff82000818,direct call
native_sched_clock_from_tsc,0x65,,RET,ret
sched_clock,0x4,0xffffffff82000648,CALL 0xffffffff82000648,direct call
sched_clock,0xa,,RET,ret
using_native_sched_clock,0x10,,RET,ret
native_calibrate_tsc,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
native_calibrate_tsc,0x3f,,RET,ret
native_calibrate_tsc,0x40,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0x0",write stack
native_calibrate_tsc,0x4f,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
native_calibrate_tsc,0x5e,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],0x0",write stack
native_calibrate_tsc,0x65,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x15",write stack
native_calibrate_tsc,0x6c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
native_calibrate_tsc,0xd3,0xffffffff8343d3a4,"MOV dword ptr [0xffffffff8343d3a4],EDX",write .data
native_calibrate_tsc,0xf9,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x16",write stack
native_calibrate_tsc,0x108,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
native_calibrate_tsc,0x117,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
native_calibrate_tsc,0x148,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tsc_save_sched_clock_state,0x4,0xffffffff81109d60,CALL 0xffffffff81109d60,direct call
tsc_save_sched_clock_state,0xe,,RET,ret
tsc_save_sched_clock_state,0xf,0xffffffff82000648,CALL 0xffffffff82000648,direct call
tsc_save_sched_clock_state,0x15,0xffffffff834027a8,"MOV qword ptr [0xffffffff834027a8],RAX",write .data
tsc_save_sched_clock_state,0x1c,,RET,ret
tsc_restore_sched_clock_state,0xb,0xffffffff81109d60,CALL 0xffffffff81109d60,direct call
tsc_restore_sched_clock_state,0x1c,,RET,ret
tsc_restore_sched_clock_state,0x1d,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
tsc_restore_sched_clock_state,0x26,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
tsc_restore_sched_clock_state,0x2c,ctx->gs + 0x30c08,"MOV qword ptr GS:[0x30c08],0x0",write other [TODO]
tsc_restore_sched_clock_state,0x38,ctx->gs + 0x30c18,"MOV qword ptr GS:[0x30c18],0x0",write other [TODO]
tsc_restore_sched_clock_state,0x59,0xffffffff82000648,CALL 0xffffffff82000648,direct call
tsc_restore_sched_clock_state,0x73,ctx->rcx + ctx->r13 * 0x1,"MOV qword ptr [RCX + R13*0x1],RBX",write other [TODO]
tsc_restore_sched_clock_state,0x7f,ctx->rdx + ctx->r12 * 0x1,"MOV qword ptr [RDX + R12*0x1],RBX",write other [TODO]
tsc_restore_sched_clock_state,0x83,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
tsc_restore_sched_clock_state,0x93,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
tsc_restore_sched_clock_state,0xad,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
tsc_restore_sched_clock_state,0xbb,,RET,ret
unsynchronized_tsc,0x1a,,RET,ret
unsynchronized_tsc,0x1f,0xffffffff81070a30,CALL 0xffffffff81070a30,direct call
unsynchronized_tsc,0x4a,,RET,ret
unsynchronized_tsc,0x51,,RET,ret
unsynchronized_tsc,0x52,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
unsynchronized_tsc,0x5f,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
unsynchronized_tsc,0x6e,,RET,ret
calibrate_delay_is_known,0x40,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
calibrate_delay_is_known,0x5b,,RET,ret
calibrate_delay_is_known,0x66,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
calibrate_delay_is_known,0x91,,RET,ret
cpu_khz_from_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_khz_from_msr,0x13,0xffffffff8104cca0,CALL 0xffffffff8104cca0,direct call
cpu_khz_from_msr,0x33,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cpu_khz_from_msr,0x48,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cpu_khz_from_msr,0xa7,0xffffffff8343d3a4,"MOV dword ptr [0xffffffff8343d3a4],EBX",write .data
cpu_khz_from_msr,0xd4,,RET,ret
cpu_khz_from_msr,0xda,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cpu_khz_from_msr,0x102,,RET,ret
native_io_delay,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_io_delay,0x1c,,RET,ret
native_io_delay,0x1d,,RET,ret
native_io_delay,0x27,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_io_delay,0x2d,,RET,ret
native_io_delay,0x30,,RET,ret
rtc_cmos_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rtc_cmos_read,0x10,,RET,ret
rtc_cmos_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rtc_cmos_write,0x12,,RET,ret
mach_set_cmos_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mach_set_cmos_time,0x1f,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mach_set_cmos_time,0x28,0xffffffff8199f130,CALL 0xffffffff8199f130,direct call
mach_set_cmos_time,0x31,0xffffffff8199f3b0,CALL 0xffffffff8199f3b0,direct call
mach_set_cmos_time,0x42,0xffffffff819a4380,CALL 0xffffffff819a4380,direct call
mach_set_cmos_time,0x69,,RET,ret
mach_set_cmos_time,0x6a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mach_set_cmos_time,0xc4ea86,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mach_get_cmos_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mach_get_cmos_time,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mach_get_cmos_time,0x29,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
mach_get_cmos_time,0x31,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
mach_get_cmos_time,0x4c,,RET,ret
mach_get_cmos_time,0x51,0xffffffff819a4260,CALL 0xffffffff819a4260,direct call
mach_get_cmos_time,0x62,0xffffffff8199f2a0,CALL 0xffffffff8199f2a0,direct call
mach_get_cmos_time,0x67,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
mach_get_cmos_time,0x6f,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
mach_get_cmos_time,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
update_persistent_clock64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_persistent_clock64,0xd,ctx->rsp,"MOV qword ptr [RSP],RDI",write stack
update_persistent_clock64,0x14,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RSI",write stack
update_persistent_clock64,0x19,0xffffffff826ba478,CALL qword ptr [0xffffffff826ba478],in-direct call
update_persistent_clock64,0x20,,RET,ret
read_persistent_clock64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
read_persistent_clock64,0x9,0xffffffff826ba470,CALL qword ptr [0xffffffff826ba470],in-direct call
read_persistent_clock64,0x10,,RET,ret
arch_remove_reservations,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_remove_reservations,0x1b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
arch_remove_reservations,0x44,,RET,ret
arch_remove_reservations,0x89,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
arch_remove_reservations,0x99,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
arch_remove_reservations,0xa2,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
arch_remove_reservations,0xab,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
arch_remove_reservations,0xb4,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
arch_remove_reservations,0xbd,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_remove_reservations,0xc6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
arch_remove_reservations,0xcf,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_remove_reservations,0xd8,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
arch_remove_reservations,0x134,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RDX",write other [TODO]
arch_remove_reservations,0x173,ctx->r12,"MOV qword ptr [R12],RSI",write other [TODO]
arch_remove_reservations,0x186,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
arch_remove_reservations,0x18f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__static_call_validate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__static_call_validate,0x1f,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__static_call_validate,0x59,,RET,ret
arch_static_call_transform,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_static_call_transform,0x22,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
arch_static_call_transform,0x39,0xffffffff81041770,CALL 0xffffffff81041770,direct call
arch_static_call_transform,0x50,0xffffffff81d04670,CALL 0xffffffff81d04670,direct call
arch_static_call_transform,0x64,0xffffffff81041770,CALL 0xffffffff81041770,direct call
arch_static_call_transform,0x7a,0xffffffff81d04670,CALL 0xffffffff81d04670,direct call
arch_static_call_transform,0x86,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
arch_static_call_transform,0x93,,RET,ret
speculation_ctrl_update_tif,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
speculation_ctrl_update_tif,0x34,,RET,ret
speculation_ctrl_update_tif,0x4d,,RET,ret
amd_e400_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_e400_idle,0x19,0xffffffff81164f90,CALL 0xffffffff81164f90,direct call
amd_e400_idle,0x1e,0xffffffff82e4b968,CALL qword ptr [0xffffffff82e4b968],in-direct call
amd_e400_idle,0x24,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
amd_e400_idle,0x2c,0xffffffff81164f90,CALL 0xffffffff81164f90,direct call
amd_e400_idle,0x31,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
amd_e400_idle,0x38,,RET,ret
amd_e400_idle,0x39,0xffffffff82e4b968,CALL qword ptr [0xffffffff82e4b968],in-direct call
amd_e400_idle,0x40,,RET,ret
set_cpuid_faulting,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_cpuid_faulting,0x1c,ctx->gs + 0x1fb50,"MOV qword ptr GS:[0x1fb50],RDX",write other [TODO]
set_cpuid_faulting,0x2f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
set_cpuid_faulting,0x36,,RET,ret
enable_cpuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enable_cpuid,0x2b,,RET,ret
enable_cpuid,0x3b,ctx->gs + 0x1fb50,"MOV qword ptr GS:[0x1fb50],RDX",write other [TODO]
enable_cpuid,0x4f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
enable_cpuid,0x57,0xffffffff82000810,CALL 0xffffffff82000810,direct call
enable_cpuid,0x5d,,RET,ret
arch_dup_task_struct,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_dup_task_struct,0x10,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
arch_dup_task_struct,0x15,ctx->rax + 0x1590,"MOV qword ptr [RAX + 0x1590],0x0",write other [TODO]
arch_dup_task_struct,0x23,,RET,ret
arch_release_task_struct,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_release_task_struct,0x7,,RET,ret
exit_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exit_thread,0x28,0xffffffff81043ed0,CALL 0xffffffff81043ed0,direct call
exit_thread,0x32,,RET,ret
exit_thread,0x33,0xffffffff8103a070,CALL 0xffffffff8103a070,direct call
exit_thread,0x3b,0xffffffff81043ed0,CALL 0xffffffff81043ed0,direct call
exit_thread,0x45,,RET,ret
copy_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_thread,0x2b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
copy_thread,0x3d,ctx->r13 - 0x10,"MOV qword ptr [R13 + -0x10],RAX",write other [TODO]
copy_thread,0x48,ctx->r13 - 0x8,"MOV qword ptr [R13 + -0x8],-0x7effcf70",write other [TODO]
copy_thread,0x57,ctx->rdi + 0x14d8,"MOV qword ptr [RDI + 0x14d8],RAX",write other [TODO]
copy_thread,0x5e,ctx->rdi + 0x1540,"MOV qword ptr [RDI + 0x1540],0x0",write other [TODO]
copy_thread,0x69,ctx->rdi + 0x14f8,"MOV qword ptr [RDI + 0x14f8],0x0",write other [TODO]
copy_thread,0x74,ctx->rdi + 0x1500,"MOV qword ptr [RDI + 0x1500],0x0",write other [TODO]
copy_thread,0x7f,ctx->rdi + 0x1508,"MOV qword ptr [RDI + 0x1508],0x0",write other [TODO]
copy_thread,0x8a,ctx->rdi + 0x1510,"MOV qword ptr [RDI + 0x1510],0x0",write other [TODO]
copy_thread,0x95,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
copy_thread,0x99,0xffffffff810352b0,CALL 0xffffffff810352b0,direct call
copy_thread,0xb4,ctx->wordctx->ptrctx->r12 + 0x14e4,"MOV word ptr [R12 + 0x14e4],DX",write other [TODO]
copy_thread,0xc4,ctx->r12 + 0x14e8,"MOV qword ptr [R12 + 0x14e8],RDX",write other [TODO]
copy_thread,0xd3,ctx->wordctx->ptrctx->r12 + 0x14e6,"MOV word ptr [R12 + 0x14e6],DX",write other [TODO]
copy_thread,0xe5,ctx->r12 + 0x14f0,"MOV qword ptr [R12 + 0x14f0],RAX",write other [TODO]
copy_thread,0xf0,ctx->wordctx->ptrctx->r12 + 0x14e0,"MOV word ptr [R12 + 0x14e0],AX",write other [TODO]
copy_thread,0xfc,ctx->wordctx->ptrctx->r12 + 0x14e2,"MOV word ptr [R12 + 0x14e2],AX",write other [TODO]
copy_thread,0x10d,0xffffffff81043b00,CALL 0xffffffff81043b00,direct call
copy_thread,0x1fb,ctx->r12 + 0x1554,"MOV dword ptr [R12 + 0x1554],EAX",write other [TODO]
copy_thread,0x205,ctx->rcx + 0x3f58,"MOV qword ptr [RCX + 0x3f58],0x0",write other [TODO]
copy_thread,0x210,ctx->rcx + 0x3ff8,"MOV qword ptr [RCX + 0x3ff8],0x0",write other [TODO]
flush_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_thread,0x16,0xffffffff81040070,CALL 0xffffffff81040070,direct call
flush_thread,0x1b,ctx->rbx + 0x14c0,"MOV qword ptr [RBX + 0x14c0],0x0",write other [TODO]
flush_thread,0x26,ctx->rbx + 0x14c8,"MOV qword ptr [RBX + 0x14c8],0x0",write other [TODO]
flush_thread,0x31,ctx->rbx + 0x14d0,"MOV qword ptr [RBX + 0x14d0],0x0",write other [TODO]
flush_thread,0x3c,0xffffffff81043fb0,CALL 0xffffffff81043fb0,direct call
disable_TSC,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disable_TSC,0x30,,RET,ret
disable_TSC,0x31,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
disable_TSC,0x3a,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
disable_TSC,0x47,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
disable_TSC,0x51,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
disable_TSC,0x59,0xffffffff82000810,CALL 0xffffffff82000810,direct call
disable_TSC,0x63,,RET,ret
get_tsc_mode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_tsc_mode,0x23,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
get_tsc_mode,0x2f,,RET,ret
set_tsc_mode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_tsc_mode,0x3f,,RET,ret
set_tsc_mode,0x40,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
set_tsc_mode,0x49,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
set_tsc_mode,0x56,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
set_tsc_mode,0x60,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
set_tsc_mode,0x68,0xffffffff81041d50,CALL 0xffffffff81041d50,direct call
set_tsc_mode,0x74,,RET,ret
set_tsc_mode,0x75,0xffffffff82000810,CALL 0xffffffff82000810,direct call
native_tss_update_io_bitmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_tss_update_io_bitmap,0x2a,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
native_tss_update_io_bitmap,0x9e,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
native_tss_update_io_bitmap,0xa8,ctx->rbx + 0x70,"MOV dword ptr [RBX + 0x70],EAX",write other [TODO]
native_tss_update_io_bitmap,0xaf,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
native_tss_update_io_bitmap,0xb8,ctx->wordctx->ptrctx->rbx + 0x66,"MOV word ptr [RBX + 0x66],DX",write other [TODO]
native_tss_update_io_bitmap,0xf3,,RET,ret
native_tss_update_io_bitmap,0x102,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_tss_update_io_bitmap,0x10d,0xffffffff815f9610,CALL 0xffffffff815f9610,direct call
native_tss_update_io_bitmap,0x12e,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
native_tss_update_io_bitmap,0x137,ctx->wordctx->ptrctx->gs + 0x6066,"MOV word ptr GS:[0x6066],0x4088",write other [TODO]
native_tss_update_io_bitmap,0x164,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
native_tss_update_io_bitmap,0x16e,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
native_tss_update_io_bitmap,0x17e,ctx->rsp + 0xd,"MOV byte ptr [RSP + 0xd],AL",write stack
native_tss_update_io_bitmap,0x182,0xffffffff82e4b8d0,CALL qword ptr [0xffffffff82e4b8d0],in-direct call
native_tss_update_io_bitmap,0x188,0xffffffff82e4b890,CALL qword ptr [0xffffffff82e4b890],in-direct call
native_tss_update_io_bitmap,0x18e,ctx->gs + 0x1fb48,"MOV byte ptr GS:[0x1fb48],0x0",write other [TODO]
native_tss_update_io_bitmap,0x1be,0xffffffff830c7bc5,"MOV byte ptr [0xffffffff830c7bc5],0x1",write .data
native_tss_update_io_bitmap,0x1c5,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
native_tss_update_io_bitmap,0x1d1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
speculative_store_bypass_ht_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
speculative_store_bypass_ht_init,0x30,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],0x0",write other [TODO]
speculative_store_bypass_ht_init,0x44,,RET,ret
speculative_store_bypass_ht_init,0x45,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],0x0",write other [TODO]
speculative_store_bypass_ht_init,0x4c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
speculative_store_bypass_ht_init,0x6a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
speculative_store_bypass_ht_init,0x93,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
speculative_store_bypass_ht_init,0xa0,,RET,ret
speculative_store_bypass_ht_init,0xa6,ctx->rbx,"MOV qword ptr [RBX],RBX",write other [TODO]
speculation_ctrl_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
speculation_ctrl_update,0x19,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
speculation_ctrl_update,0x22,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
FUN_ffffffff810421f2,-0x84,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
FUN_ffffffff810421f2,-0x70,,RET,ret
FUN_ffffffff810421f2,-0x62,0xffffffff8104d130,CALL 0xffffffff8104d130,direct call
FUN_ffffffff810421f2,0x1c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
arch_setup_new_exec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_setup_new_exec,0x2c,,RET,ret
arch_setup_new_exec,0x4f,0xffffffff81042110,CALL 0xffffffff81042110,direct call
arch_setup_new_exec,0x55,,RET,ret
arch_setup_new_exec,0x56,0xffffffff81041970,CALL 0xffffffff81041970,direct call
speculation_ctrl_update_current,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
speculation_ctrl_update_current,0x19,0xffffffff81041890,CALL 0xffffffff81041890,direct call
speculation_ctrl_update_current,0x21,0xffffffff81042110,CALL 0xffffffff81042110,direct call
speculation_ctrl_update_current,0x30,,RET,ret
speculation_ctrl_update_current,0x31,0xffffffff82000810,CALL 0xffffffff82000810,direct call
speculation_ctrl_update_current,0x37,,RET,ret
__switch_to_xtra,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__switch_to_xtra,0x57,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__switch_to_xtra,0x79,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__switch_to_xtra,0x19a,0xffffffff81041930,CALL 0xffffffff81041930,direct call
__switch_to_xtra,0x1af,0xffffffff81041890,CALL 0xffffffff81041890,direct call
__switch_to_xtra,0x1b7,0xffffffff81041890,CALL 0xffffffff81041890,direct call
__switch_to_xtra,0x204,ctx->gs + 0x30c98,"MOV qword ptr GS:[0x30c98],RDI",write other [TODO]
__switch_to_xtra,0x20c,0xffffffff82e4b888,CALL qword ptr [0xffffffff82e4b888],in-direct call
__switch_to_xtra,0x217,0xffffffff82e4b8f8,CALL qword ptr [0xffffffff82e4b8f8],in-direct call
FUN_ffffffff810425ea,-0x192,,RET,ret
FUN_ffffffff810425ea,-0xee,0xffffffff8104d130,CALL 0xffffffff8104d130,direct call
FUN_ffffffff810425ea,-0xdb,,RET,ret
FUN_ffffffff810425ea,0x1d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81042622,0x3,0xffffffff8104d130,CALL 0xffffffff8104d130,direct call
FUN_ffffffff8104271a,0x20,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
arch_cpu_idle_enter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_cpu_idle_enter,0xb,0xffffffff8106eb30,CALL 0xffffffff8106eb30,direct call
arch_cpu_idle_enter,0x10,0xffffffff8103a700,CALL 0xffffffff8103a700,direct call
arch_cpu_idle_enter,0x16,,RET,ret
arch_cpu_idle_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_cpu_idle_dead,0x9,0xffffffff82e425e8,CALL qword ptr [0xffffffff82e425e8],in-direct call
arch_cpu_idle_dead,0x10,,RET,ret
arch_cpu_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_cpu_idle,0x9,0xffffffff834027f8,CALL qword ptr [0xffffffff834027f8],in-direct call
arch_cpu_idle,0x10,,RET,ret
xen_set_default_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xen_set_default_idle,0xe,0xffffffff834027f8,"MOV qword ptr [0xffffffff834027f8],-0x7e2ebf20",write .data
xen_set_default_idle,0x20,,RET,ret
stop_this_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
stop_this_cpu,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
stop_this_cpu,0x1c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
stop_this_cpu,0x2b,0xffffffff810a85a0,CALL 0xffffffff810a85a0,direct call
stop_this_cpu,0x30,0xffffffff810704b0,CALL 0xffffffff810704b0,direct call
stop_this_cpu,0x44,0xffffffff81054420,CALL 0xffffffff81054420,direct call
stop_this_cpu,0x49,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x8000001f",write stack
stop_this_cpu,0x58,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
stop_this_cpu,0x67,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
select_idle_routine,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
select_idle_routine,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
FUN_ffffffff810429ec,-0x1,,RET,ret
FUN_ffffffff810429ec,0x0,0xffffffff834027f8,"MOV qword ptr [0xffffffff834027f8],-0x7e2ebf20",write .data
FUN_ffffffff810429ec,0x24,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_e400_c1e_apic_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_e400_c1e_apic_setup,0x14,,RET,ret
arch_align_stack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_align_stack,0x28,,RET,ret
arch_align_stack,0x31,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
arch_align_stack,0x35,0xffffffff817b7020,CALL 0xffffffff817b7020,direct call
arch_align_stack,0x51,,RET,ret
arch_randomize_brk,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_randomize_brk,0x15,0xffffffff812a8270,CALL 0xffffffff812a8270,direct call
arch_randomize_brk,0x1b,,RET,ret
__get_wchan,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__get_wchan,0x24,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__get_wchan,0x82,0xffffffff810829b0,CALL 0xffffffff810829b0,direct call
__get_wchan,0x98,0xffffffff81082600,CALL 0xffffffff81082600,direct call
__get_wchan,0xa8,0xffffffff810e7f10,CALL 0xffffffff810e7f10,direct call
__get_wchan,0xb4,0xffffffff810a1750,CALL 0xffffffff810a1750,direct call
__get_wchan,0xd4,,RET,ret
__get_wchan,0xd7,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__get_wchan,0xe8,0xffffffff81082990,CALL 0xffffffff81082990,direct call
__get_wchan,0x10a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_arch_prctl_common,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_arch_prctl_common,0x39,,RET,ret
do_arch_prctl_common,0x4c,0xffffffff810468a0,CALL 0xffffffff810468a0,direct call
do_arch_prctl_common,0x52,,RET,ret
do_arch_prctl_common,0x8c,0xffffffff82000810,CALL 0xffffffff82000810,direct call
do_arch_prctl_common,0x92,,RET,ret
do_arch_prctl_common,0x93,0xffffffff81041970,CALL 0xffffffff81041970,direct call
do_arch_prctl_common,0x9b,,RET,ret
do_arch_prctl_common,0xa1,0xffffffff81041930,CALL 0xffffffff81041930,direct call
do_arch_prctl_common,0xb0,,RET,ret
cr4_set_bits.constprop.0,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cr4_set_bits.constprop.0,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cr4_set_bits.constprop.0,0x1b,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_set_bits.constprop.0,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cr4_set_bits.constprop.0,0x30,,RET,ret
fpu__init_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__init_cpu,0x9,0xffffffff81042c90,CALL 0xffffffff81042c90,direct call
fpu__init_cpu,0xe,0xffffffff82e4b878,CALL qword ptr [0xffffffff82e4b878],in-direct call
fpu__init_cpu,0x1b,0xffffffff82e4b880,CALL qword ptr [0xffffffff82e4b880],in-direct call
fpu__init_cpu,0x23,0xffffffff81045d00,CALL 0xffffffff81045d00,direct call
fpu__init_cpu,0x29,,RET,ret
__traceiter_x86_fpu_before_save,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_before_save,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_before_save,0x37,,RET,ret
__traceiter_x86_fpu_after_save,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_after_save,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_after_save,0x37,,RET,ret
__traceiter_x86_fpu_before_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_before_restore,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_before_restore,0x37,,RET,ret
__traceiter_x86_fpu_after_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_after_restore,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_after_restore,0x37,,RET,ret
__traceiter_x86_fpu_regs_activated,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_regs_activated,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_regs_activated,0x37,,RET,ret
__traceiter_x86_fpu_regs_deactivated,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_regs_deactivated,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_regs_deactivated,0x37,,RET,ret
__traceiter_x86_fpu_init_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_init_state,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_init_state,0x37,,RET,ret
__traceiter_x86_fpu_dropped,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_dropped,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_dropped,0x37,,RET,ret
__traceiter_x86_fpu_copy_src,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_copy_src,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_copy_src,0x37,,RET,ret
__traceiter_x86_fpu_copy_dst,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_copy_dst,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_copy_dst,0x37,,RET,ret
__traceiter_x86_fpu_xstate_check_failed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_x86_fpu_xstate_check_failed,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_x86_fpu_xstate_check_failed,0x37,,RET,ret
kernel_fpu_end,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_fpu_end,0x10,ctx->gs + 0x1fb58,"MOV byte ptr GS:[0x1fb58],0x0",write other [TODO]
kernel_fpu_end,0x21,,RET,ret
kernel_fpu_end,0x2a,0xffffffff82000810,CALL 0xffffffff82000810,direct call
kernel_fpu_end,0x30,,RET,ret
trace_raw_output_x86_fpu,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_x86_fpu,0x22,,RET,ret
trace_raw_output_x86_fpu,0x42,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_x86_fpu,0x4e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_x86_fpu,0x57,,RET,ret
__bpf_trace_x86_fpu,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_x86_fpu,0xa,,RET,ret
fpu_alloc_guest_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_alloc_guest_fpstate,0x1a,0xffffffff812ea7c0,CALL 0xffffffff812ea7c0,direct call
fpu_alloc_guest_fpstate,0x35,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],0x0",write other [TODO]
fpu_alloc_guest_fpstate,0x3d,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
fpu_alloc_guest_fpstate,0x45,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
fpu_alloc_guest_fpstate,0x49,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],EDX",write other [TODO]
fpu_alloc_guest_fpstate,0x53,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
fpu_free_guest_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_free_guest_fpstate,0x1b,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x0",write other [TODO]
fpu_free_guest_fpstate,0x29,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
fpu_free_guest_fpstate,0x2f,,RET,ret
fpu_free_guest_fpstate,0x30,,RET,ret
fpu_enable_guest_xfd_features,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_enable_guest_xfd_features,0x18,,RET,ret
fpu_enable_guest_xfd_features,0x20,0xffffffff81046500,CALL 0xffffffff81046500,direct call
fpu_enable_guest_xfd_features,0x26,,RET,ret
fpu_copy_guest_fpstate_to_uabi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104320a,0x16,ctx->r9,"MOV qword ptr [R9],RAX",write other [TODO]
FUN_ffffffff8104320a,0x29,ctx->r9 + 0x1f8,"MOV qword ptr [R9 + 0x1f8],RAX",write other [TODO]
FUN_ffffffff8104320a,0x33,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
FUN_ffffffff8104320a,0x36,ctx->r9 + 0x200,"MOV qword ptr [R9 + 0x200],0x3",write other [TODO]
FUN_ffffffff8104320a,0x41,,RET,ret
fpu_copy_uabi_to_guest_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104329c,-0x1,,RET,ret
FUN_ffffffff8104329c,0x2c,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],RAX",write other [TODO]
FUN_ffffffff8104329c,0x43,ctx->rbx + 0x238,"MOV qword ptr [RBX + 0x238],RAX",write other [TODO]
FUN_ffffffff8104329c,0x50,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
FUN_ffffffff8104329c,0x59,,RET,ret
irq_fpu_usable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_fpu_usable,0x39,,RET,ret
fpu_sync_guest_vmexit_xfd_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_sync_guest_vmexit_xfd_state,0x10,,RET,ret
fpu_update_guest_xfd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_update_guest_xfd,0x19,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RSI",write other [TODO]
fpu_update_guest_xfd,0x33,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
fpu_update_guest_xfd,0x3d,,RET,ret
fpregs_assert_state_consistent,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpregs_assert_state_consistent,0x38,,RET,ret
trace_event_raw_event_x86_fpu,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_x86_fpu,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_x86_fpu,0x5a,,RET,ret
trace_event_raw_event_x86_fpu,0x5b,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
trace_event_raw_event_x86_fpu,0x6f,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],DL",write other [TODO]
trace_event_raw_event_x86_fpu,0x90,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
trace_event_raw_event_x86_fpu,0x9f,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RDX",write other [TODO]
trace_event_raw_event_x86_fpu,0xa7,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_x86_fpu,0xb7,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_x86_fpu,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_x86_fpu,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_x86_fpu,0x4b,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_x86_fpu,0x60,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_x86_fpu,0x67,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_x86_fpu,0x6e,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_x86_fpu,0x79,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_x86_fpu,0x8d,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_x86_fpu,0x98,ctx->rdi + 0x10,"MOV byte ptr [RDI + 0x10],AL",write other [TODO]
perf_trace_x86_fpu,0xc1,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_x86_fpu,0xe1,,RET,ret
perf_trace_x86_fpu,0xed,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
perf_trace_x86_fpu,0xfc,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
perf_trace_x86_fpu,0x110,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
save_fpregs_to_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810436d5,0x11,,RET,ret
kernel_fpu_begin_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_fpu_begin_mask,0x19,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
kernel_fpu_begin_mask,0x26,0xffffffff81043320,CALL 0xffffffff81043320,direct call
kernel_fpu_begin_mask,0x3a,ctx->gs + 0x1fb58,"MOV byte ptr GS:[0x1fb58],0x1",write other [TODO]
kernel_fpu_begin_mask,0x51,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],0x0",write other [TODO]
kernel_fpu_begin_mask,0x62,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x1f80",write stack
kernel_fpu_begin_mask,0x86,,RET,ret
kernel_fpu_begin_mask,0x9b,0xffffffff81043660,CALL 0xffffffff81043660,direct call
kernel_fpu_begin_mask,0xae,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
restore_fpregs_from_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restore_fpregs_from_fpstate,0x15,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDI",write stack
FUN_ffffffff81043814,0x13,,RET,ret
switch_fpu_return,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
switch_fpu_return,0x49,0xffffffff810437b0,CALL 0xffffffff810437b0,direct call
switch_fpu_return,0x4e,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],R12",write other [TODO]
switch_fpu_return,0x58,ctx->rbx + 0x1580,"MOV dword ptr [RBX + 0x1580],R13D",write other [TODO]
switch_fpu_return,0x73,,RET,ret
fpu_reset_from_exception_fixup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_reset_from_exception_fixup,0x15,0xffffffff810437b0,CALL 0xffffffff810437b0,direct call
fpu_reset_from_exception_fixup,0x1b,,RET,ret
fpu_sync_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_sync_fpstate,0x56,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
fpu_sync_fpstate,0x60,,RET,ret
fpu_sync_fpstate,0xf3,0xffffffff81043660,CALL 0xffffffff81043660,direct call
fpstate_init_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpstate_reset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpstate_reset,0x10,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
fpstate_reset,0x28,ctx->rdi + 0x40,"MOV dword ptr [RDI + 0x40],EDX",write other [TODO]
fpstate_reset,0x2b,ctx->rdi + 0x2c,"MOV dword ptr [RDI + 0x2c],EAX",write other [TODO]
fpstate_reset,0x32,ctx->rdi + 0x44,"MOV dword ptr [RDI + 0x44],EAX",write other [TODO]
fpstate_reset,0x35,ctx->rdi + 0x50,"MOV qword ptr [RDI + 0x50],RSI",write other [TODO]
fpstate_reset,0x40,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RCX",write other [TODO]
fpstate_reset,0x48,ctx->rdi + 0x28,"MOV dword ptr [RDI + 0x28],EDX",write other [TODO]
fpstate_reset,0x4f,ctx->rdi + 0x48,"MOV qword ptr [RDI + 0x48],RCX",write other [TODO]
fpstate_reset,0x53,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],RSI",write other [TODO]
fpstate_reset,0x57,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],RAX",write other [TODO]
fpstate_reset,0x5b,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RDX",write other [TODO]
fpstate_reset,0x5f,,RET,ret
fpu_clone,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_clone,0x26,ctx->rdi + 0x1590,"MOV qword ptr [RDI + 0x1590],RAX",write other [TODO]
fpu_clone,0x39,ctx->rdi + 0x15c8,"MOV qword ptr [RDI + 0x15c8],RSI",write other [TODO]
fpu_clone,0x40,ctx->rdi + 0x1580,"MOV dword ptr [RDI + 0x1580],0xffffffff",write other [TODO]
fpu_clone,0x4a,ctx->rdi + 0x15c0,"MOV dword ptr [RDI + 0x15c0],ECX",write other [TODO]
fpu_clone,0x50,ctx->rdi + 0x15c4,"MOV dword ptr [RDI + 0x15c4],EAX",write other [TODO]
fpu_clone,0x5d,ctx->rbx + 0x15a0,"MOV qword ptr [RBX + 0x15a0],RSI",write other [TODO]
fpu_clone,0x6b,ctx->rbx + 0x15d0,"MOV qword ptr [RBX + 0x15d0],RDI",write other [TODO]
fpu_clone,0x79,ctx->rbx + 0x15a8,"MOV dword ptr [RBX + 0x15a8],ECX",write other [TODO]
fpu_clone,0x7f,ctx->rbx + 0x15d8,"MOV qword ptr [RBX + 0x15d8],RDI",write other [TODO]
fpu_clone,0x86,ctx->rbx + 0x15ac,"MOV dword ptr [RBX + 0x15ac],EAX",write other [TODO]
fpu_clone,0x93,ctx->rbx + 0x15b0,"MOV qword ptr [RBX + 0x15b0],RSI",write other [TODO]
fpu_clone,0x9a,ctx->rbx + 0x15b8,"MOV qword ptr [RBX + 0x15b8],RDI",write other [TODO]
fpu_clone,0xd9,0xffffffff81043660,CALL 0xffffffff81043660,direct call
fpu_clone,0xea,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
fpu_clone,0x1ea,0xffffffff810437b0,CALL 0xffffffff810437b0,direct call
fpu_clone,0x1ef,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],R14",write other [TODO]
fpu_clone,0x1fc,ctx->r13 + 0x1580,"MOV dword ptr [R13 + 0x1580],R15D",write other [TODO]
FUN_ffffffff81043d71,-0x1d,ctx->rdi + 0x40,"MOV byte ptr [RDI + 0x40],AL",write other [TODO]
FUN_ffffffff81043d71,-0xa,ctx->wordctx->ptrctx->rdx + ctx->rcx * 0x1 - 0x2,"MOV word ptr [RDX + RCX*0x1 + -0x2],AX",write other [TODO]
FUN_ffffffff81043d71,0x8d,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],RCX",write other [TODO]
FUN_ffffffff81043d71,0x9c,ctx->rdx + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RDX + RAX*0x1 + -0x8],RCX",write other [TODO]
FUN_ffffffff81043d71,0xaf,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
FUN_ffffffff81043d71,0xbc,,RET,ret
FUN_ffffffff81043d71,0x129,ctx->rdi + 0x40,"MOV dword ptr [RDI + 0x40],EAX",write other [TODO]
FUN_ffffffff81043d71,0x132,ctx->rdx + ctx->rcx * 0x1 - 0x4,"MOV dword ptr [RDX + RCX*0x1 + -0x4],EAX",write other [TODO]
fpu_thread_struct_whitelist,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_thread_struct_whitelist,0x6,ctx->rdi,"MOV qword ptr [RDI],0x140",write other [TODO]
fpu_thread_struct_whitelist,0x16,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
fpu_thread_struct_whitelist,0x1a,,RET,ret
fpu__drop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__drop,0x37,,RET,ret
fpu__drop,0x77,0xffffffff82000810,CALL 0xffffffff82000810,direct call
fpu__drop,0x7d,,RET,ret
fpu__drop,0x7f,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],0x0",write other [TODO]
fpu_flush_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_flush_thread,0x39,ctx->rbx + 0x15c0,"MOV dword ptr [RBX + 0x15c0],EDX",write other [TODO]
fpu_flush_thread,0x46,ctx->rbx + 0x1590,"MOV qword ptr [RBX + 0x1590],RAX",write other [TODO]
fpu_flush_thread,0x53,ctx->rbx + 0x15d0,"MOV qword ptr [RBX + 0x15d0],RSI",write other [TODO]
fpu_flush_thread,0x61,ctx->rbx + 0x15ac,"MOV dword ptr [RBX + 0x15ac],EAX",write other [TODO]
fpu_flush_thread,0x67,ctx->rbx + 0x15c4,"MOV dword ptr [RBX + 0x15c4],EAX",write other [TODO]
fpu_flush_thread,0x6d,ctx->rbx + 0x15a0,"MOV qword ptr [RBX + 0x15a0],RCX",write other [TODO]
fpu_flush_thread,0x7b,ctx->rbx + 0x15a8,"MOV dword ptr [RBX + 0x15a8],EDX",write other [TODO]
fpu_flush_thread,0x88,ctx->rbx + 0x15c8,"MOV qword ptr [RBX + 0x15c8],RCX",write other [TODO]
fpu_flush_thread,0x8f,ctx->rbx + 0x15d8,"MOV qword ptr [RBX + 0x15d8],RSI",write other [TODO]
fpu_flush_thread,0x96,ctx->rbx + 0x15b0,"MOV qword ptr [RBX + 0x15b0],RAX",write other [TODO]
fpu_flush_thread,0x9d,ctx->rbx + 0x15b8,"MOV qword ptr [RBX + 0x15b8],RDX",write other [TODO]
fpu_flush_thread,0xa4,0xffffffff81043ed0,CALL 0xffffffff81043ed0,direct call
FUN_ffffffff810440f8,-0x70,ctx->rdi + 0x40,"MOV byte ptr [RDI + 0x40],AL",write other [TODO]
FUN_ffffffff810440f8,-0x61,ctx->wordctx->ptrctx->rdx + ctx->rcx * 0x1 - 0x2,"MOV word ptr [RDX + RCX*0x1 + -0x2],AX",write other [TODO]
FUN_ffffffff810440f8,-0x48,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],RCX",write other [TODO]
FUN_ffffffff810440f8,-0x39,ctx->rdx + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RDX + RAX*0x1 + -0x8],RCX",write other [TODO]
FUN_ffffffff810440f8,-0x28,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
FUN_ffffffff810440f8,-0xb,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
FUN_ffffffff810440f8,-0x1,,RET,ret
FUN_ffffffff810440f8,0x1d,ctx->rdi + 0x40,"MOV dword ptr [RDI + 0x40],EAX",write other [TODO]
FUN_ffffffff810440f8,0x26,ctx->rdx + ctx->rcx * 0x1 - 0x4,"MOV dword ptr [RDX + RCX*0x1 + -0x4],EAX",write other [TODO]
fpregs_mark_activate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpregs_mark_activate,0x1a,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],RSI",write other [TODO]
fpregs_mark_activate,0x2b,ctx->rbx + 0x1580,"MOV dword ptr [RBX + 0x1580],EAX",write other [TODO]
fpregs_mark_activate,0x44,,RET,ret
fpu_swap_kvm_fpstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_swap_kvm_fpstate,0x41,ctx->rbx + 0x1590,"MOV qword ptr [RBX + 0x1590],R13",write other [TODO]
fpu_swap_kvm_fpstate,0x48,ctx->rbx + 0x1598,"MOV qword ptr [RBX + 0x1598],R14",write other [TODO]
fpu_swap_kvm_fpstate,0x66,0xffffffff810437b0,CALL 0xffffffff810437b0,direct call
fpu_swap_kvm_fpstate,0x6b,0xffffffff81044130,CALL 0xffffffff81044130,direct call
fpu_swap_kvm_fpstate,0x7c,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
fpu_swap_kvm_fpstate,0x8d,,RET,ret
fpu_swap_kvm_fpstate,0x9a,ctx->rbx + 0x1598,"MOV qword ptr [RBX + 0x1598],0x0",write other [TODO]
fpu_swap_kvm_fpstate,0xa5,ctx->rbx + 0x1590,"MOV qword ptr [RBX + 0x1590],RDI",write other [TODO]
fpu_swap_kvm_fpstate,0xf8,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],ESI",write stack
fpu_swap_kvm_fpstate,0xfb,0xffffffff81043660,CALL 0xffffffff81043660,direct call
fpu__clear_user_states,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__exception_code,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__exception_code,0x60,,RET,ret
fpu_idle_fpregs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
membuf_write,0x21,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
membuf_write,0x2b,ctx->rax + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RAX + RCX*0x1 + -0x8],RDI",write other [TODO]
membuf_write,0x45,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
membuf_write,0x55,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],RAX",write other [TODO]
membuf_write,0x59,,RET,ret
membuf_write,0x66,ctx->rax,"MOV byte ptr [RAX],CL",write other [TODO]
membuf_write,0x74,ctx->wordctx->ptrctx->rax + ctx->rcx * 0x1 - 0x2,"MOV word ptr [RAX + RCX*0x1 + -0x2],SI",write other [TODO]
membuf_write,0x81,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
membuf_write,0x89,ctx->rax + ctx->rcx * 0x1 - 0x4,"MOV dword ptr [RAX + RCX*0x1 + -0x4],ESI",write other [TODO]
__convert_from_fxsr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__convert_from_fxsr,0x32,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
__convert_from_fxsr,0x3e,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],EAX",write other [TODO]
__convert_from_fxsr,0xd2,ctx->r9 + 0x8,"MOV dword ptr [R9 + 0x8],R10D",write other [TODO]
__convert_from_fxsr,0xda,ctx->r9 + 0xc,"MOV dword ptr [R9 + 0xc],EAX",write other [TODO]
__convert_from_fxsr,0xe2,ctx->r9 + 0x14,"MOV dword ptr [R9 + 0x14],EAX",write other [TODO]
__convert_from_fxsr,0xf1,ctx->r9 + 0x10,"MOV dword ptr [R9 + 0x10],EAX",write other [TODO]
__convert_from_fxsr,0x10f,ctx->r9 + 0x18,"MOV dword ptr [R9 + 0x18],EAX",write other [TODO]
__convert_from_fxsr,0x126,ctx->rax - 0xa,"MOV qword ptr [RAX + -0xa],RCX",write other [TODO]
__convert_from_fxsr,0x12e,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],CX",write other [TODO]
__convert_from_fxsr,0x13d,,RET,ret
__convert_from_fxsr,0x140,ctx->r9 + 0x18,"MOV dword ptr [R9 + 0x18],EAX",write other [TODO]
regset_fpregs_active,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regset_fpregs_active,0xd,,RET,ret
regset_xregset_fpregs_active,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regset_xregset_fpregs_active,0xd,,RET,ret
xfpregs_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xfpregs_get,0x28,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RDX",write stack
xfpregs_get,0x2c,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RCX",write stack
xfpregs_get,0x77,0xffffffff81043950,CALL 0xffffffff81043950,direct call
FUN_ffffffff81044707,0x15,0xffffffff810444a0,CALL 0xffffffff810444a0,direct call
FUN_ffffffff81044707,0x1f,,RET,ret
xfpregs_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xfpregs_set,0x20,ctx->rsp + 0x208,"MOV qword ptr [RSP + 0x208],RAX",write stack
xfpregs_set,0x58,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
xfpregs_set,0x7f,ctx->rbx + 0x1580,"MOV dword ptr [RBX + 0x1580],0xffffffff",write other [TODO]
xfpregs_set,0x9f,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],RDX",write other [TODO]
xfpregs_set,0xab,ctx->rdi + 0x1f0,"MOV qword ptr [RDI + 0x1f0],RDX",write other [TODO]
xfpregs_set,0xc7,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
xfpregs_set,0xea,ctx->rdx + 0x160,"MOV qword ptr [RDX + 0x160],0x0",write other [TODO]
xfpregs_set,0xf5,ctx->rdx + 0x1d8,"MOV qword ptr [RDX + 0x1d8],0x0",write other [TODO]
xfpregs_set,0x153,0xffffffff81c89c90,CALL 0xffffffff81c89c90,direct call
FUN_ffffffff81044874,-0x1,,RET,ret
FUN_ffffffff81044874,0x31,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
xstateregs_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81044903,0x5,,RET,ret
xstateregs_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104498a,0x13,,RET,ret
convert_from_fxsr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
convert_from_fxsr,0x14,0xffffffff81044540,CALL 0xffffffff81044540,direct call
convert_from_fxsr,0x1a,,RET,ret
convert_to_fxsr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
convert_to_fxsr,0x12,ctx->wordctx->ptrctx->rdi,"MOV word ptr [RDI],AX",write other [TODO]
convert_to_fxsr,0x1b,ctx->wordctx->ptrctx->rdi + 0x2,"MOV word ptr [RDI + 0x2],AX",write other [TODO]
convert_to_fxsr,0x52,ctx->wordctx->ptrctx->rdi + 0x4,"MOV word ptr [RDI + 0x4],AX",write other [TODO]
convert_to_fxsr,0x5a,ctx->wordctx->ptrctx->rdi + 0x6,"MOV word ptr [RDI + 0x6],AX",write other [TODO]
convert_to_fxsr,0x61,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
convert_to_fxsr,0x68,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
convert_to_fxsr,0x7f,ctx->rdx - 0x10,"MOV qword ptr [RDX + -0x10],RSI",write other [TODO]
convert_to_fxsr,0x87,ctx->wordctx->ptrctx->rdx - 0x8,"MOV word ptr [RDX + -0x8],SI",write other [TODO]
convert_to_fxsr,0x91,,RET,ret
fpregs_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpregs_get,0x20,ctx->rsp,"MOV qword ptr [RSP],RDX",write stack
fpregs_get,0x24,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RCX",write stack
fpregs_get,0x32,ctx->rsp + 0x288,"MOV qword ptr [RSP + 0x288],RAX",write stack
fpregs_get,0xba,0xffffffff81043950,CALL 0xffffffff81043950,direct call
FUN_ffffffff81044bbc,-0x30,0xffffffff81044540,CALL 0xffffffff81044540,direct call
FUN_ffffffff81044bbc,-0x1e,0xffffffff810444a0,CALL 0xffffffff810444a0,direct call
FUN_ffffffff81044bbc,-0x1,,RET,ret
FUN_ffffffff81044bbc,0x15,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fpregs_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpregs_set,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
fpregs_set,0x46,ctx->rbp - 0x84,"MOV qword ptr [RBP + -0x84],RAX",write stack
fpregs_set,0x51,ctx->rbp - 0x7c,"MOV qword ptr [RBP + -0x7c],RAX",write stack
fpregs_set,0x59,ctx->rbp - 0x74,"MOV qword ptr [RBP + -0x74],RAX",write stack
fpregs_set,0x61,ctx->rbp - 0x6c,"MOV qword ptr [RBP + -0x6c],RAX",write stack
fpregs_set,0x69,ctx->rbp - 0x64,"MOV qword ptr [RBP + -0x64],RAX",write stack
fpregs_set,0x71,ctx->rbp - 0x5c,"MOV qword ptr [RBP + -0x5c],RAX",write stack
fpregs_set,0x79,ctx->rbp - 0x54,"MOV qword ptr [RBP + -0x54],RAX",write stack
fpregs_set,0x81,ctx->rbp - 0x4c,"MOV qword ptr [RBP + -0x4c],RAX",write stack
fpregs_set,0x89,ctx->rbp - 0x44,"MOV qword ptr [RBP + -0x44],RAX",write stack
fpregs_set,0x91,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],RAX",write stack
fpregs_set,0x99,ctx->rbp - 0x34,"MOV qword ptr [RBP + -0x34],RAX",write stack
fpregs_set,0xa1,ctx->rbp - 0x2c,"MOV qword ptr [RBP + -0x2c],RAX",write stack
fpregs_set,0xa9,ctx->rbp - 0x24,"MOV qword ptr [RBP + -0x24],RAX",write stack
fpregs_set,0xb1,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EAX",write stack
fpregs_set,0xcc,ctx->rbx + 0x1580,"MOV dword ptr [RBX + 0x1580],0xffffffff",write other [TODO]
fpregs_set,0xda,0xffffffff81044a70,CALL 0xffffffff81044a70,direct call
fpregs_set,0x123,0xffffffff81c89c90,CALL 0xffffffff81c89c90,direct call
FUN_ffffffff81044ced,-0x1,,RET,ret
FUN_ffffffff81044ced,0x31,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
save_fsave_header,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
save_fsave_header,0x5d,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
save_fsave_header,0x6c,0xffffffff81044a50,CALL 0xffffffff81044a50,direct call
save_fsave_header,0x80,0xffffffff81c89c90,CALL 0xffffffff81c89c90,direct call
save_fsave_header,0x92,0xffffffff81c8cd8f,CALL 0xffffffff81c8cd8f,direct call
save_fsave_header,0xa2,0xffffffff81c8cd8f,CALL 0xffffffff81c8cd8f,direct call
save_fsave_header,0xc9,,RET,ret
save_fsave_header,0xce,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__fpu_restore_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__fpu_restore_sig,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
FUN_ffffffff8104501b,-0x100,,RET,ret
FUN_ffffffff8104501b,-0x20,0xffffffff81044130,CALL 0xffffffff81044130,direct call
FUN_ffffffff8104501b,-0xf,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
FUN_ffffffff8104501b,0x30,ctx->rbp - 0xb8,"MOV dword ptr [RBP + -0xb8],EAX",write stack
FUN_ffffffff8104501b,0x36,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
FUN_ffffffff8104501b,0x53,0xffffffff812bd5d0,CALL 0xffffffff812bd5d0,direct call
FUN_ffffffff8104501b,0x12e,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],0x0",write other [TODO]
FUN_ffffffff8104501b,0x3bd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
FUN_ffffffff81045081,-0x199,0xffffffff81c89c90,CALL 0xffffffff81c89c90,direct call
FUN_ffffffff81045081,0x8,ctx->rbp - 0xa8,"MOV byte ptr [RBP + -0xa8],0x0",write stack
FUN_ffffffff81045081,0x18,ctx->rbp - 0xb0,"MOV dword ptr [RBP + -0xb0],EAX",write stack
FUN_ffffffff81045081,0x11c,ctx->r12 + 0x1580,"MOV dword ptr [R12 + 0x1580],0xffffffff",write other [TODO]
FUN_ffffffff81045081,0x128,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],0x0",write other [TODO]
FUN_ffffffff81045081,0x134,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
FUN_ffffffff81045081,0x299,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RCX",write stack
FUN_ffffffff81045081,0x2b0,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
FUN_ffffffff81045081,0x2b7,0xffffffff81046470,CALL 0xffffffff81046470,direct call
FUN_ffffffff810453bd,-0x13b,0xffffffff81044130,CALL 0xffffffff81044130,direct call
FUN_ffffffff810453bd,-0x128,ctx->rbp - 0xa8,"MOV byte ptr [RBP + -0xa8],AL",write stack
FUN_ffffffff810453bd,-0x122,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
copy_fpstate_to_sigframe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_fpstate_to_sigframe,0x19,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
copy_fpstate_to_sigframe,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
copy_fpstate_to_sigframe,0x35,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
FUN_ffffffff81045588,-0x99,0xffffffff810ac3c0,CALL 0xffffffff810ac3c0,direct call
FUN_ffffffff81045588,-0x21,0xffffffff810437b0,CALL 0xffffffff810437b0,direct call
FUN_ffffffff81045588,-0x1c,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],R12",write other [TODO]
FUN_ffffffff81045588,-0x12,ctx->r14 + 0x1580,"MOV dword ptr [R14 + 0x1580],R15D",write other [TODO]
FUN_ffffffff81045588,0xa1,0xffffffff81044d30,CALL 0xffffffff81044d30,direct call
FUN_ffffffff81045588,0xae,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
FUN_ffffffff81045588,0xb6,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
FUN_ffffffff81045588,0xbe,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
FUN_ffffffff81045588,0xc6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
FUN_ffffffff81045588,0xd5,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],0x46505853",write stack
FUN_ffffffff81045588,0xdc,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
FUN_ffffffff81045588,0xe2,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
FUN_ffffffff81045588,0xe6,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EAX",write stack
FUN_ffffffff81045588,0xf9,0xffffffff81c89c90,CALL 0xffffffff81c89c90,direct call
FUN_ffffffff81045588,0x154,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
FUN_ffffffff81045588,0x15c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
FUN_ffffffff81045588,0x164,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
FUN_ffffffff81045588,0x16c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
FUN_ffffffff81045588,0x177,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],0x46505853",write stack
FUN_ffffffff81045588,0x181,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EDX",write stack
FUN_ffffffff81045588,0x188,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
FUN_ffffffff81045588,0x18b,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
FUN_ffffffff810456d2,-0x277,,RET,ret
FUN_ffffffff810456d2,0x4a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fpu__restore_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__restore_sig,0x83,0xffffffff810442d0,CALL 0xffffffff810442d0,direct call
fpu__restore_sig,0x92,,RET,ret
fpu__alloc_mathframe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuid,0x4,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
__cpuid,0xb,,RET,ret
paravirt_write_msr,0xa,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
paravirt_write_msr,0x11,,RET,ret
xstate_get_guest_group_perm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xstate_get_guest_group_perm,0x21,,RET,ret
cpu_has_xfeatures,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_has_xfeatures,0x25,,RET,ret
cpu_has_xfeatures,0x57,ctx->rsi,"MOV qword ptr [RSI],RDX",write other [TODO]
cpu_has_xfeatures,0x5a,,RET,ret
copy_from_buffer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_from_buffer,0x21,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
copy_from_buffer,0x31,,RET,ret
copy_from_buffer,0x44,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RDI",write stack
copy_from_buffer,0x48,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
copy_from_buffer,0x57,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
copy_from_buffer,0x6d,,RET,ret
find_next_bit.constprop.0,0x21,,RET,ret
find_next_bit.constprop.0,0x27,,RET,ret
membuf_write.isra.0,0x20,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
membuf_write.isra.0,0x30,,RET,ret
membuf_write.isra.0,0x31,,RET,ret
xfeature_get_offset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81045a56,0xc,,RET,ret
xstate_calculate_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xstate_calculate_size,0x33,,RET,ret
xstate_calculate_size,0x34,0xffffffff810459d0,CALL 0xffffffff810459d0,direct call
xstate_calculate_size,0x45,,RET,ret
__raw_xsave_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_uabi_to_xstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_uabi_to_xstate,0x30,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDI",write stack
copy_uabi_to_xstate,0x41,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
copy_uabi_to_xstate,0x47,0xffffffff810458e0,CALL 0xffffffff810458e0,direct call
copy_uabi_to_xstate,0x4c,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EAX",write stack
copy_uabi_to_xstate,0x65,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
copy_uabi_to_xstate,0x8b,0xffffffff81c7fcd0,CALL 0xffffffff81c7fcd0,direct call
copy_uabi_to_xstate,0xcc,0xffffffff81045ac0,CALL 0xffffffff81045ac0,direct call
copy_uabi_to_xstate,0xea,0xffffffff810458e0,CALL 0xffffffff810458e0,direct call
copy_uabi_to_xstate,0x10c,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
copy_uabi_to_xstate,0x118,ctx->rbx + 0x240,"MOV qword ptr [RBX + 0x240],RAX",write other [TODO]
copy_uabi_to_xstate,0x142,,RET,ret
copy_uabi_to_xstate,0x143,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],0xfffffff2",write stack
copy_uabi_to_xstate,0x163,0xffffffff810458e0,CALL 0xffffffff810458e0,direct call
copy_uabi_to_xstate,0x18e,ctx->rcx + 0x58,"MOV qword ptr [RCX + 0x58],RAX",write other [TODO]
copy_uabi_to_xstate,0x197,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],0xffffffea",write stack
copy_uabi_to_xstate,0x1a6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
validate_independent_components,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__init_cpu_xstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu__init_cpu_xstate,0x1d,,RET,ret
fpu__init_cpu_xstate,0x23,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
fpu__init_cpu_xstate,0x2c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
fpu__init_cpu_xstate,0x39,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
fpu__init_cpu_xstate,0x43,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
xfeature_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xfeature_size,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
xfeature_size,0x26,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],EDI",write stack
xfeature_size,0x31,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0xd",write stack
xfeature_size,0x40,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
xfeature_size,0x59,,RET,ret
xfeature_size,0x5e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fpu__resume_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_xsave_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_xsave_addr,0x39,0xffffffff81045ac0,CALL 0xffffffff81045ac0,direct call
get_xsave_addr,0x3f,,RET,ret
get_xsave_addr,0x40,,RET,ret
get_xsave_addr,0x43,,RET,ret
fpstate_clear_xstate_component,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpstate_clear_xstate_component,0x12,0xffffffff81045eb0,CALL 0xffffffff81045eb0,direct call
fpstate_clear_xstate_component,0x28,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
fpstate_clear_xstate_component,0x32,,RET,ret
arch_set_user_pkey_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81045fb0,0x7,,RET,ret
__copy_xstate_to_uabi_buf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__copy_xstate_to_uabi_buf,0x20,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDI",write stack
__copy_xstate_to_uabi_buf,0x2a,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],ECX",write stack
__copy_xstate_to_uabi_buf,0x36,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RSI",write stack
__copy_xstate_to_uabi_buf,0x44,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],RAX",write stack
__copy_xstate_to_uabi_buf,0x55,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
__copy_xstate_to_uabi_buf,0x92,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0xb5,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0xd8,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0xfe,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0x139,,RET,ret
__copy_xstate_to_uabi_buf,0x16e,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
__copy_xstate_to_uabi_buf,0x17a,ctx->wordctx->ptrctx->rax + ctx->rcx * 0x1 - 0x2,"MOV word ptr [RAX + RCX*0x1 + -0x2],SI",write other [TODO]
__copy_xstate_to_uabi_buf,0x19a,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0x1ae,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0x1f6,ctx->rsp + 0xc,"MOV dword ptr [RSP + 0xc],EAX",write stack
__copy_xstate_to_uabi_buf,0x1fa,0xffffffff81045ac0,CALL 0xffffffff81045ac0,direct call
__copy_xstate_to_uabi_buf,0x205,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
__copy_xstate_to_uabi_buf,0x209,0xffffffff81045ac0,CALL 0xffffffff81045ac0,direct call
__copy_xstate_to_uabi_buf,0x230,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0x2aa,ctx->rsp + 0x24,"MOV dword ptr [RSP + 0x24],0x0",write stack
__copy_xstate_to_uabi_buf,0x2b2,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],EAX",write stack
__copy_xstate_to_uabi_buf,0x2b6,0xffffffff81045990,CALL 0xffffffff81045990,direct call
__copy_xstate_to_uabi_buf,0x2e9,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
__copy_xstate_to_uabi_buf,0x2fa,ctx->rdi,"MOV RDI,qword ptr [RSP + 0x10]",write other [TODO]
__copy_xstate_to_uabi_buf,0x301,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
__copy_xstate_to_uabi_buf,0x30b,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
__copy_xstate_to_uabi_buf,0x319,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
__copy_xstate_to_uabi_buf,0x32f,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RDX",write stack
__copy_xstate_to_uabi_buf,0x360,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
__copy_xstate_to_uabi_buf,0x367,ctx->rax + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RAX + RCX*0x1 + -0x8],0x0",write other [TODO]
__copy_xstate_to_uabi_buf,0x38f,ctx->rsi + ctx->rdi * 0x1,"MOV qword ptr [RSI + RDI*0x1],R8",write other [TODO]
__copy_xstate_to_uabi_buf,0x39e,ctx->rax,"MOV dword ptr [RAX],0x0",write other [TODO]
__copy_xstate_to_uabi_buf,0x3a4,ctx->rax + ctx->rcx * 0x1 - 0x4,"MOV dword ptr [RAX + RCX*0x1 + -0x4],0x0",write other [TODO]
__copy_xstate_to_uabi_buf,0x3b1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
copy_xstate_to_uabi_buf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_xstate_to_uabi_buf,0x19,0xffffffff81045fd0,CALL 0xffffffff81045fd0,direct call
copy_xstate_to_uabi_buf,0x1f,,RET,ret
copy_uabi_from_kernel_to_xstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_uabi_from_kernel_to_xstate,0xb,0xffffffff81045b10,CALL 0xffffffff81045b10,direct call
copy_uabi_from_kernel_to_xstate,0x11,,RET,ret
copy_sigframe_from_user_to_xstate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_sigframe_from_user_to_xstate,0xe,0xffffffff81045b10,CALL 0xffffffff81045b10,direct call
copy_sigframe_from_user_to_xstate,0x14,,RET,ret
xsaves,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xsaves,0x15,0xffffffff81045cc0,CALL 0xffffffff81045cc0,direct call
xsaves,0x39,,RET,ret
xrstors,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xrstors,0x15,0xffffffff81045cc0,CALL 0xffffffff81045cc0,direct call
xrstors,0x39,,RET,ret
xfd_validate_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xfd_validate_state,0x4c,,RET,ret
fpstate_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpstate_free,0x1e,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
fpstate_free,0x24,,RET,ret
fpstate_free,0x25,,RET,ret
__xfd_enable_feature,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__xfd_enable_feature,0x50,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
__xfd_enable_feature,0x96,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ECX",write stack
__xfd_enable_feature,0x99,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__xfd_enable_feature,0xa2,0xffffffff812ea7c0,CALL 0xffffffff812ea7c0,direct call
__xfd_enable_feature,0xb6,ctx->rax,"MOV dword ptr [RAX],R13D",write other [TODO]
__xfd_enable_feature,0xb9,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],ECX",write other [TODO]
__xfd_enable_feature,0xc5,ctx->r12 + 0x20,"MOV byte ptr [R12 + 0x20],DL",write other [TODO]
__xfd_enable_feature,0xe1,ctx->r12 + 0x20,"MOV byte ptr [R12 + 0x20],AL",write other [TODO]
__xfd_enable_feature,0xf3,ctx->r12 + 0x20,"MOV byte ptr [R12 + 0x20],AL",write other [TODO]
__xfd_enable_feature,0x106,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],ECX",write other [TODO]
__xfd_enable_feature,0x10b,ctx->r12 + 0x20,"MOV byte ptr [R12 + 0x20],AL",write other [TODO]
__xfd_enable_feature,0x12b,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
__xfd_enable_feature,0x140,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],R14",write other [TODO]
__xfd_enable_feature,0x1c8,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__xfd_enable_feature,0x202,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RCX",write other [TODO]
__xfd_enable_feature,0x277,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R9D",write stack
__xfd_enable_feature,0x27b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
__xfd_enable_feature,0x27f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
__xfd_enable_feature,0x283,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__xfd_enable_feature,0x287,0xffffffff810437b0,CALL 0xffffffff810437b0,direct call
__xfd_enable_feature,0x294,ctx->gs + 0x1fb68,"MOV qword ptr GS:[0x1fb68],R8",write other [TODO]
__xfd_enable_feature,0x2a6,ctx->rcx + 0x1580,"MOV dword ptr [RCX + 0x1580],R9D",write other [TODO]
xfd_enable_feature,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xfd_enable_feature,0xb,0xffffffff81046500,CALL 0xffffffff81046500,direct call
xfd_enable_feature,0x11,,RET,ret
fpu_xstate_prctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fpu_xstate_prctl,0xa1,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
fpu_xstate_prctl,0x118,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
fpu_xstate_prctl,0x14b,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
fpu_xstate_prctl,0x161,,RET,ret
fpu_xstate_prctl,0x1a0,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
FUN_ffffffff810469c0,0xe,,RET,ret
caseD_1021,0xe,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
caseD_1021,0x24,,RET,ret
FUN_ffffffff81046a60,-0xeb,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
FUN_ffffffff81046a60,-0xe7,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
FUN_ffffffff81046a60,-0xd0,,RET,ret
FUN_ffffffff81046a60,0x9f,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
FUN_ffffffff81046a60,0xa2,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
FUN_ffffffff81046a60,0xa6,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R15D",write other [TODO]
FUN_ffffffff81046a60,0xc1,0xffffffff81036070,CALL 0xffffffff81036070,direct call
FUN_ffffffff81046a60,0x121,0xffffffff810459d0,CALL 0xffffffff810459d0,direct call
proc_pid_arch_status,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81046c2a,0x2,,RET,ret
ptrace_triggered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_triggered,0x37,,RET,ret
ptrace_triggered,0x49,,RET,ret
ioperm_active,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioperm_active,0x26,,RET,ret
ptrace_register_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_register_breakpoint,0x40,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ptrace_register_breakpoint,0x53,ctx->rbp - 0x70,"MOV byte ptr [RBP + -0x70],0x24",write stack
ptrace_register_breakpoint,0x61,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R10",write stack
ptrace_register_breakpoint,0x65,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
ptrace_register_breakpoint,0x6c,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],0x1",write stack
ptrace_register_breakpoint,0x77,0xffffffff8103fcf0,CALL 0xffffffff8103fcf0,direct call
ptrace_register_breakpoint,0xa0,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
ptrace_register_breakpoint,0xaa,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
ptrace_register_breakpoint,0xb6,ctx->rbp - 0x70,"MOV byte ptr [RBP + -0x70],BL",write stack
ptrace_register_breakpoint,0xb9,0xffffffff81278a90,CALL 0xffffffff81278a90,direct call
ptrace_register_breakpoint,0xde,,RET,ret
ptrace_register_breakpoint,0xdf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_set_breakpoint_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_set_breakpoint_addr,0x2e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ptrace_set_breakpoint_addr,0x4b,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDX",write stack
ptrace_set_breakpoint_addr,0x4f,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
ptrace_set_breakpoint_addr,0x5d,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
ptrace_set_breakpoint_addr,0x6b,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
ptrace_set_breakpoint_addr,0x79,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
ptrace_set_breakpoint_addr,0x84,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
ptrace_set_breakpoint_addr,0x8f,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
ptrace_set_breakpoint_addr,0x9a,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
ptrace_set_breakpoint_addr,0xa5,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
ptrace_set_breakpoint_addr,0xb0,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
ptrace_set_breakpoint_addr,0xbb,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
ptrace_set_breakpoint_addr,0xc6,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
ptrace_set_breakpoint_addr,0xd1,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
ptrace_set_breakpoint_addr,0xdc,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_set_breakpoint_addr,0xe7,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
ptrace_set_breakpoint_addr,0xf2,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
ptrace_set_breakpoint_addr,0xf6,0xffffffff8127a170,CALL 0xffffffff8127a170,direct call
ptrace_set_breakpoint_addr,0x115,,RET,ret
ptrace_set_breakpoint_addr,0x12c,0xffffffff81046ce0,CALL 0xffffffff81046ce0,direct call
ptrace_set_breakpoint_addr,0x139,ctx->r12 + ctx->rbx * 0x8 + 0x14c8,"MOV qword ptr [R12 + RBX*0x8 + 0x14c8],RAX",write other [TODO]
ptrace_set_breakpoint_addr,0x145,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ioperm_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioperm_get,0x53,,RET,ret
ioperm_get,0x66,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
ioperm_get,0x71,ctx->rdx + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RDX + RAX*0x1 + -0x8],RCX",write other [TODO]
ioperm_get,0x84,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
ioperm_get,0x8d,ctx->rax,"MOV byte ptr [RAX],DL",write other [TODO]
ioperm_get,0x9d,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
ioperm_get,0xa7,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
ioperm_get,0xb0,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],ECX",write other [TODO]
set_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_flags,0x37,ctx->rdx + 0x90,"MOV qword ptr [RDX + 0x90],RAX",write other [TODO]
set_flags,0x41,,RET,ret
putreg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
putreg,0x4a,ctx->rax + ctx->rcx * 0x1 + 0x3f58,"MOV qword ptr [RAX + RCX*0x1 + 0x3f58],RSI",write other [TODO]
putreg,0x55,,RET,ret
putreg,0x68,0xffffffff81046fe0,CALL 0xffffffff81046fe0,direct call
putreg,0x6e,,RET,ret
putreg,0x82,0xffffffff810356e0,CALL 0xffffffff810356e0,direct call
putreg,0x8a,,RET,ret
putreg,0x9e,0xffffffff81035710,CALL 0xffffffff81035710,direct call
putreg,0xa6,,RET,ret
putreg,0xe5,ctx->wordctx->ptrctx->rdi + 0x14e6,"MOV word ptr [RDI + 0x14e6],SI",write other [TODO]
putreg,0xed,,RET,ret
putreg,0xf9,ctx->wordctx->ptrctx->rdi + 0x14e0,"MOV word ptr [RDI + 0x14e0],SI",write other [TODO]
putreg,0x101,,RET,ret
putreg,0x125,,RET,ret
putreg,0x13b,,RET,ret
putreg,0x14b,,RET,ret
putreg,0x14e,ctx->wordctx->ptrctx->rdi + 0x14e4,"MOV word ptr [RDI + 0x14e4],SI",write other [TODO]
putreg,0x156,,RET,ret
putreg,0x159,ctx->wordctx->ptrctx->rdi + 0x14e2,"MOV word ptr [RDI + 0x14e2],SI",write other [TODO]
putreg,0x161,,RET,ret
putreg,0x19d,ctx->rax + 0x3fe0,"MOV qword ptr [RAX + 0x3fe0],RSI",write other [TODO]
putreg,0x1a7,,RET,ret
putreg,0x1b2,ctx->rax + 0x3ff8,"MOV qword ptr [RAX + 0x3ff8],RSI",write other [TODO]
putreg,0x1bc,,RET,ret
genregs_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
genregs_set,0x3c,0xffffffff81047040,CALL 0xffffffff81047040,direct call
genregs_set,0x5a,,RET,ret
genregs_set,0x6e,0xffffffff81047040,CALL 0xffffffff81047040,direct call
genregs_set,0x8e,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
genregs_set,0xa1,,RET,ret
ptrace_modify_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_modify_breakpoint,0x33,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ptrace_modify_breakpoint,0x3f,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
ptrace_modify_breakpoint,0x4e,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
ptrace_modify_breakpoint,0x5d,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
ptrace_modify_breakpoint,0x6c,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
ptrace_modify_breakpoint,0x78,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
ptrace_modify_breakpoint,0x84,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
ptrace_modify_breakpoint,0x90,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
ptrace_modify_breakpoint,0x9c,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
ptrace_modify_breakpoint,0xa8,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
ptrace_modify_breakpoint,0xb4,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
ptrace_modify_breakpoint,0xc0,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
ptrace_modify_breakpoint,0xcc,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
ptrace_modify_breakpoint,0xd8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
ptrace_modify_breakpoint,0xe4,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_modify_breakpoint,0xf0,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
ptrace_modify_breakpoint,0xfc,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
ptrace_modify_breakpoint,0x100,0xffffffff8103fcf0,CALL 0xffffffff8103fcf0,direct call
ptrace_modify_breakpoint,0x11d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
ptrace_modify_breakpoint,0x127,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
ptrace_modify_breakpoint,0x133,ctx->rbp - 0x70,"MOV byte ptr [RBP + -0x70],BL",write stack
ptrace_modify_breakpoint,0x136,0xffffffff8127a170,CALL 0xffffffff8127a170,direct call
ptrace_modify_breakpoint,0x155,,RET,ret
ptrace_modify_breakpoint,0x156,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_set_debugreg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_set_debugreg,0x19,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
ptrace_set_debugreg,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_set_debugreg,0x8a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
ptrace_set_debugreg,0x9f,0xffffffff8103fab0,CALL 0xffffffff8103fab0,direct call
ptrace_set_debugreg,0xbe,0xffffffff810472b0,CALL 0xffffffff810472b0,direct call
ptrace_set_debugreg,0xde,ctx->r12 + 0x1520,"MOV qword ptr [R12 + 0x1520],RAX",write other [TODO]
ptrace_set_debugreg,0x10a,,RET,ret
ptrace_set_debugreg,0x117,ctx->rdi + 0x1518,"MOV qword ptr [RDI + 0x1518],RAX",write other [TODO]
ptrace_set_debugreg,0x132,0xffffffff81046ce0,CALL 0xffffffff81046ce0,direct call
ptrace_set_debugreg,0x13f,ctx->r12 + ctx->r15 * 0x8 + 0x14f8,"MOV qword ptr [R12 + R15*0x8 + 0x14f8],RAX",write other [TODO]
ptrace_set_debugreg,0x173,0xffffffff8103fa80,CALL 0xffffffff8103fa80,direct call
ptrace_set_debugreg,0x180,0xffffffff81046dd0,CALL 0xffffffff81046dd0,direct call
ptrace_set_debugreg,0x19f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_flags,0x28,,RET,ret
getreg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
getreg,0x59,,RET,ret
getreg,0x70,0xffffffff810475c0,CALL 0xffffffff810475c0,direct call
getreg,0x76,,RET,ret
getreg,0xd1,,RET,ret
getreg,0xd2,0xffffffff81035620,CALL 0xffffffff81035620,direct call
getreg,0xd8,,RET,ret
getreg,0xd9,0xffffffff81035680,CALL 0xffffffff81035680,direct call
getreg,0xdf,,RET,ret
getreg,0x134,,RET,ret
genregs_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
genregs_get,0x1f,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
genregs_get,0x43,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
genregs_get,0x5f,0xffffffff810475f0,CALL 0xffffffff810475f0,direct call
genregs_get,0x64,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
genregs_get,0x76,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
genregs_get,0x9b,,RET,ret
genregs_get,0x9c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
getreg32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
getreg32,0x50,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x54,,RET,ret
getreg32,0x5e,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
getreg32,0x66,,RET,ret
getreg32,0x6e,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x72,,RET,ret
getreg32,0x7a,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x7e,,RET,ret
getreg32,0x83,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x87,,RET,ret
getreg32,0x8c,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x90,,RET,ret
getreg32,0x95,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x99,,RET,ret
getreg32,0x9e,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xa2,,RET,ret
getreg32,0xaa,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xae,,RET,ret
getreg32,0xb6,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xba,,RET,ret
getreg32,0xc3,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDX",write stack
getreg32,0xc7,0xffffffff810475c0,CALL 0xffffffff810475c0,direct call
getreg32,0xd0,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xd5,,RET,ret
getreg32,0xda,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xde,,RET,ret
getreg32,0xe3,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xe7,,RET,ret
getreg32,0xec,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xf0,,RET,ret
getreg32,0xf5,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0xf9,,RET,ret
getreg32,0x15b,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
getreg32,0x15f,,RET,ret
getreg32,0x1b1,,RET,ret
getreg32,0x1c3,,RET,ret
genregs32_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
genregs32_get,0x1f,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
genregs32_get,0x40,ctx->r13,"MOV dword ptr [R13],EAX",write other [TODO]
genregs32_get,0x5a,0xffffffff810477f0,CALL 0xffffffff810477f0,direct call
genregs32_get,0x62,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],EAX",write stack
genregs32_get,0x76,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
genregs32_get,0x9b,,RET,ret
genregs32_get,0x9c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
putreg32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
putreg32,0x38,0xffffffff81047410,CALL 0xffffffff81047410,direct call
putreg32,0x3e,,RET,ret
putreg32,0x58,,RET,ret
putreg32,0x5b,ctx->rcx + 0x28,"MOV qword ptr [RCX + 0x28],RAX",write other [TODO]
putreg32,0x62,,RET,ret
putreg32,0x65,ctx->rcx + 0x58,"MOV qword ptr [RCX + 0x58],RAX",write other [TODO]
putreg32,0x6c,,RET,ret
putreg32,0x6f,ctx->rcx + 0x60,"MOV qword ptr [RCX + 0x60],RAX",write other [TODO]
putreg32,0x76,,RET,ret
putreg32,0x79,ctx->rcx + 0x68,"MOV qword ptr [RCX + 0x68],RAX",write other [TODO]
putreg32,0x80,,RET,ret
putreg32,0x83,ctx->rcx + 0x70,"MOV qword ptr [RCX + 0x70],RAX",write other [TODO]
putreg32,0x8a,,RET,ret
putreg32,0x8d,ctx->rcx + 0x20,"MOV qword ptr [RCX + 0x20],RAX",write other [TODO]
putreg32,0x94,,RET,ret
putreg32,0x97,ctx->rcx + 0x50,"MOV qword ptr [RCX + 0x50],RAX",write other [TODO]
putreg32,0x9e,,RET,ret
putreg32,0xba,ctx->wordctx->ptrctx->rdi + 0x14e2,"MOV word ptr [RDI + 0x14e2],DX",write other [TODO]
putreg32,0xc4,,RET,ret
putreg32,0xe0,ctx->wordctx->ptrctx->rdi + 0x14e0,"MOV word ptr [RDI + 0x14e0],DX",write other [TODO]
putreg32,0xea,,RET,ret
putreg32,0x109,ctx->wordctx->ptrctx->rdi + 0x14e4,"MOV word ptr [RDI + 0x14e4],DX",write other [TODO]
putreg32,0x110,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
putreg32,0x114,0xffffffff810354c0,CALL 0xffffffff810354c0,direct call
putreg32,0x11d,ctx->rdi + 0x14e8,"MOV qword ptr [RDI + 0x14e8],RAX",write other [TODO]
putreg32,0x127,,RET,ret
putreg32,0x146,ctx->wordctx->ptrctx->rdi + 0x14e6,"MOV word ptr [RDI + 0x14e6],DX",write other [TODO]
putreg32,0x14d,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
putreg32,0x151,0xffffffff810354c0,CALL 0xffffffff810354c0,direct call
putreg32,0x15a,ctx->rdi + 0x14f0,"MOV qword ptr [RDI + 0x14f0],RAX",write other [TODO]
putreg32,0x16a,ctx->rcx + 0x78,"MOV qword ptr [RCX + 0x78],RAX",write other [TODO]
putreg32,0x17e,,RET,ret
putreg32,0x181,ctx->rcx + 0x80,"MOV qword ptr [RCX + 0x80],RAX",write other [TODO]
putreg32,0x18b,,RET,ret
putreg32,0x1bc,ctx->rcx + 0x88,"MOV qword ptr [RCX + 0x88],RDX",write other [TODO]
putreg32,0x1c4,,RET,ret
putreg32,0x1c7,0xffffffff81046fe0,CALL 0xffffffff81046fe0,direct call
putreg32,0x1cd,,RET,ret
putreg32,0x1d0,ctx->rcx + 0x98,"MOV qword ptr [RCX + 0x98],RAX",write other [TODO]
putreg32,0x1da,,RET,ret
putreg32,0x20b,ctx->rcx + 0xa0,"MOV qword ptr [RCX + 0xa0],RDX",write other [TODO]
putreg32,0x213,,RET,ret
putreg32,0x232,,RET,ret
genregs32_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
genregs32_set,0x40,0xffffffff81047a70,CALL 0xffffffff81047a70,direct call
genregs32_set,0x5d,,RET,ret
genregs32_set,0x73,0xffffffff81047a70,CALL 0xffffffff81047a70,direct call
genregs32_set,0x93,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
genregs32_set,0xa6,,RET,ret
regs_query_register_offset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regs_query_register_offset,0x1f,ctx->rdi,"MOV RDI,qword ptr [RBX + 0x10]",write other [TODO]
regs_query_register_offset,0x2f,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
regs_query_register_offset,0x3f,,RET,ret
regs_query_register_offset,0x49,,RET,ret
regs_query_register_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regs_query_register_name,0x2f,ctx->rax,"MOV RAX,R8",write other [TODO]
regs_query_register_name,0x33,,RET,ret
ptrace_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_disable,0x9,0xffffffff81048f60,CALL 0xffffffff81048f60,direct call
ptrace_disable,0xf,,RET,ret
arch_ptrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_ptrace,0x2b,0xffffffff810b2c10,CALL 0xffffffff810b2c10,direct call
arch_ptrace,0x37,,RET,ret
arch_ptrace,0x56,,RET,ret
arch_ptrace,0x90,0xffffffff81047410,CALL 0xffffffff81047410,direct call
arch_ptrace,0xaa,0xffffffff810d7380,CALL 0xffffffff810d7380,direct call
arch_ptrace,0xb6,,RET,ret
arch_ptrace,0x106,ctx->r10,CALL R10,in-direct call
arch_ptrace,0x124,0xffffffff810d7380,CALL 0xffffffff810d7380,direct call
arch_ptrace,0x130,,RET,ret
arch_ptrace,0x180,ctx->r10,CALL R10,in-direct call
arch_ptrace,0x197,0xffffffff81048760,CALL 0xffffffff81048760,direct call
arch_ptrace,0x1b2,0xffffffff81048510,CALL 0xffffffff81048510,direct call
arch_ptrace,0x1c0,0xffffffff81035bf0,CALL 0xffffffff81035bf0,direct call
arch_ptrace,0x1cc,,RET,ret
arch_ptrace,0x1e8,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
arch_ptrace,0x1fb,0xffffffff81047040,CALL 0xffffffff81047040,direct call
arch_ptrace,0x20a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RCX",write stack
arch_ptrace,0x20e,0xffffffff810475f0,CALL 0xffffffff810475f0,direct call
compat_arch_ptrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
compat_arch_ptrace,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
compat_arch_ptrace,0x35,0xffffffff810b3490,CALL 0xffffffff810b3490,direct call
compat_arch_ptrace,0x54,,RET,ret
compat_arch_ptrace,0x5d,0xffffffff81047e30,CALL 0xffffffff81047e30,direct call
compat_arch_ptrace,0x6b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],R9",write stack
compat_arch_ptrace,0x6f,0xffffffff810477f0,CALL 0xffffffff810477f0,direct call
compat_arch_ptrace,0x7f,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
compat_arch_ptrace,0xd5,ctx->r10,CALL R10,in-direct call
compat_arch_ptrace,0x128,ctx->r10,CALL R10,in-direct call
compat_arch_ptrace,0x146,0xffffffff810d7380,CALL 0xffffffff810d7380,direct call
compat_arch_ptrace,0x157,0xffffffff81047a70,CALL 0xffffffff81047a70,direct call
compat_arch_ptrace,0x174,0xffffffff810d7380,CALL 0xffffffff810d7380,direct call
compat_arch_ptrace,0x1c5,ctx->r10,CALL R10,in-direct call
compat_arch_ptrace,0x1e3,0xffffffff810d7380,CALL 0xffffffff810d7380,direct call
compat_arch_ptrace,0x1fb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
task_user_regset_view,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_user_regset_view,0x37,,RET,ret
send_sigtrap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sigtrap,0x16,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0x1",write other [TODO]
send_sigtrap,0x24,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],R8",write other [TODO]
send_sigtrap,0x40,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
send_sigtrap,0x46,,RET,ret
user_single_step_report,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
user_single_step_report,0x11,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0x1",write other [TODO]
user_single_step_report,0x1c,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],0x0",write other [TODO]
user_single_step_report,0x44,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
user_single_step_report,0x4a,,RET,ret
set_tls_desc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_tls_desc,0x42,ctx->wordctx->ptrctx->r8,"MOV word ptr [R8],DX",write other [TODO]
set_tls_desc,0x4e,ctx->wordctx->ptrctx->r8 + 0x2,"MOV word ptr [R8 + 0x2],DX",write other [TODO]
set_tls_desc,0x5b,ctx->r8 + 0x4,"MOV byte ptr [R8 + 0x4],DL",write other [TODO]
set_tls_desc,0x74,ctx->r8 + 0x5,"MOV byte ptr [R8 + 0x5],CL",write other [TODO]
set_tls_desc,0x93,ctx->r8 + 0x5,"MOV byte ptr [R8 + 0x5],DL",write other [TODO]
set_tls_desc,0xa9,ctx->r8 + 0x5,"MOV byte ptr [R8 + 0x5],DL",write other [TODO]
set_tls_desc,0xbe,ctx->r8 + 0x6,"MOV byte ptr [R8 + 0x6],DL",write other [TODO]
set_tls_desc,0xd1,ctx->r8 + 0x6,"MOV byte ptr [R8 + 0x6],DL",write other [TODO]
set_tls_desc,0xe4,ctx->r8 + 0x6,"MOV byte ptr [R8 + 0x6],DL",write other [TODO]
set_tls_desc,0xf7,ctx->r8 + 0x6,"MOV byte ptr [R8 + 0x6],DL",write other [TODO]
set_tls_desc,0x106,ctx->r8 + 0x6,"MOV byte ptr [R8 + 0x6],DL",write other [TODO]
set_tls_desc,0x10e,ctx->r8 - 0x1,"MOV byte ptr [R8 + -0x1],CL",write other [TODO]
set_tls_desc,0x13d,ctx->r8,"MOV qword ptr [R8],0x0",write other [TODO]
set_tls_desc,0x16b,,RET,ret
set_tls_desc,0x16c,0xffffffff82000810,CALL 0xffffffff82000810,direct call
set_tls_desc,0x172,,RET,ret
set_tls_desc,0x175,0xffffffff82e4b8b8,CALL qword ptr [0xffffffff82e4b8b8],in-direct call
do_set_thread_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_set_thread_area,0x34,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
do_set_thread_area,0x3a,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
do_set_thread_area,0x90,0xffffffff81048390,CALL 0xffffffff81048390,direct call
do_set_thread_area,0xbc,ctx->r13 + 0x14e8,"MOV qword ptr [R13 + 0x14e8],RAX",write other [TODO]
do_set_thread_area,0xf2,,RET,ret
do_set_thread_area,0x169,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
do_set_thread_area,0x1ac,0xffffffff82e4b8c0,CALL qword ptr [0xffffffff82e4b8c0],in-direct call
do_set_thread_area,0x1bc,ctx->r13 + 0x14f0,"MOV qword ptr [R13 + 0x14f0],RAX",write other [TODO]
do_set_thread_area,0x1e7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_set_thread_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_set_thread_area,0x23,0xffffffff81048510,CALL 0xffffffff81048510,direct call
__ia32_sys_set_thread_area,0x2b,,RET,ret
__x64_sys_set_thread_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_set_thread_area,0x23,0xffffffff81048510,CALL 0xffffffff81048510,direct call
__x64_sys_set_thread_area,0x2b,,RET,ret
do_get_thread_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_get_thread_area,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
do_get_thread_area,0x48,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],EDX",write stack
do_get_thread_area,0x4e,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],0x0",write stack
do_get_thread_area,0x8b,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
do_get_thread_area,0x9b,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],EAX",write stack
do_get_thread_area,0xfe,ctx->rbp - 0xc,"MOV byte ptr [RBP + -0xc],DL",write stack
do_get_thread_area,0x106,0xffffffff81605960,CALL 0xffffffff81605960,direct call
do_get_thread_area,0x120,,RET,ret
do_get_thread_area,0x124,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
do_get_thread_area,0x141,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_get_thread_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_get_thread_area,0x1e,0xffffffff81048760,CALL 0xffffffff81048760,direct call
__x64_sys_get_thread_area,0x26,,RET,ret
__ia32_sys_get_thread_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_get_thread_area,0x1e,0xffffffff81048760,CALL 0xffffffff81048760,direct call
__ia32_sys_get_thread_area,0x26,,RET,ret
regset_tls_active,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regset_tls_active,0x2e,,RET,ret
regset_tls_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regset_tls_get,0x1e,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
regset_tls_get,0x44,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],0x0",write other [TODO]
regset_tls_get,0x54,ctx->rsp,"MOV dword ptr [RSP],R9D",write stack
regset_tls_get,0x66,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],EAX",write stack
regset_tls_get,0x7d,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],EAX",write stack
regset_tls_get,0xdc,ctx->rsp + 0xc,"MOV byte ptr [RSP + 0xc],AL",write stack
regset_tls_get,0x101,ctx->rdi,"MOV byte ptr [RDI],DL",write other [TODO]
regset_tls_get,0x13f,,RET,ret
regset_tls_get,0x14e,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
regset_tls_get,0x158,ctx->rdi + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RDI + RDX*0x1 + -0x8],R10",write other [TODO]
regset_tls_get,0x181,ctx->rbx + ctx->r11 * 0x1,"MOV qword ptr [RBX + R11*0x1],R14",write other [TODO]
regset_tls_get,0x192,ctx->rdi,"MOV dword ptr [RDI],EDX",write other [TODO]
regset_tls_get,0x19b,ctx->rdi + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [RDI + RDX*0x1 + -0x4],R10D",write other [TODO]
regset_tls_get,0x1ad,ctx->wordctx->ptrctx->rdi + ctx->rdx * 0x1 - 0x2,"MOV word ptr [RDI + RDX*0x1 + -0x2],R10W",write other [TODO]
regset_tls_get,0x1b8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
regset_tls_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
regset_tls_set,0x21,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
regset_tls_set,0xc1,,RET,ret
regset_tls_set,0xd1,0xffffffff81048390,CALL 0xffffffff81048390,direct call
regset_tls_set,0xe4,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
regset_tls_set,0xf2,0xffffffff81c89c90,CALL 0xffffffff81c89c90,direct call
regset_tls_set,0x10e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
convert_ip_to_linear,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
convert_ip_to_linear,0x29,,RET,ret
convert_ip_to_linear,0x42,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
convert_ip_to_linear,0x95,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
convert_ip_to_linear,0xa3,,RET,ret
enable_single_step,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enable_single_step,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
enable_single_step,0x55,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],RAX",write other [TODO]
enable_single_step,0x5d,0xffffffff81048c20,CALL 0xffffffff81048c20,direct call
enable_single_step,0x77,0xffffffff812cd810,CALL 0xffffffff812cd810,direct call
enable_single_step,0xe5,,RET,ret
enable_single_step,0x186,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_task_blockstep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_task_blockstep,0x12,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
set_task_blockstep,0x1d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
set_task_blockstep,0x3f,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
set_task_blockstep,0x49,,RET,ret
set_task_blockstep,0x63,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
user_enable_single_step,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
user_enable_single_step,0xe,0xffffffff81048cd0,CALL 0xffffffff81048cd0,direct call
user_enable_single_step,0x23,,RET,ret
user_enable_single_step,0x29,0xffffffff81048e60,CALL 0xffffffff81048e60,direct call
user_enable_single_step,0x33,,RET,ret
user_enable_block_step,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
user_enable_block_step,0xe,0xffffffff81048cd0,CALL 0xffffffff81048cd0,direct call
user_enable_block_step,0x1f,0xffffffff81048e60,CALL 0xffffffff81048e60,direct call
user_enable_block_step,0x29,,RET,ret
user_enable_block_step,0x3a,0xffffffff81048e60,CALL 0xffffffff81048e60,direct call
user_enable_block_step,0x44,,RET,ret
user_disable_single_step,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
user_disable_single_step,0x3c,,RET,ret
user_disable_single_step,0x3f,0xffffffff81048e60,CALL 0xffffffff81048e60,direct call
tboot_extended_sleep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_extended_sleep,0x15,,RET,ret
tboot_log_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_log_read,0x21,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
tboot_log_read,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
tboot_log_read,0x39,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
tboot_log_read,0x56,0xffffffff816473b0,CALL 0xffffffff816473b0,direct call
tboot_log_read,0x72,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
tboot_log_read,0x9b,,RET,ret
tboot_log_read,0xd5,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
tboot_log_read,0xf1,0xffffffff816473b0,CALL 0xffffffff816473b0,direct call
tboot_log_read,0x111,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
tboot_log_read,0x120,0xffffffff81605960,CALL 0xffffffff81605960,direct call
tboot_log_read,0x134,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
tboot_log_read,0x155,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tboot_dying_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_dying_cpu,0x19,,RET,ret
tboot_dying_cpu,0x52,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
tboot_dying_cpu,0x83,,RET,ret
tboot_enabled,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_enabled,0x15,,RET,ret
tboot_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_shutdown,0x3a,ctx->r8 + 0x1c,"MOV dword ptr [R8 + 0x1c],R9D",write other [TODO]
tboot_shutdown,0x58,0xffffffff82e4b9c8,CALL qword ptr [0xffffffff82e4b9c8],in-direct call
tboot_shutdown,0x68,ctx->rax,CALL RAX,in-direct call
tboot_shutdown,0x6a,0xffffffff82e4b970,CALL qword ptr [0xffffffff82e4b970],in-direct call
tboot_shutdown,0x79,ctx->r8 + 0x70,"MOV byte ptr [R8 + 0x70],0x0",write other [TODO]
tboot_shutdown,0xe6,ctx->r8 + 0x70,"MOV byte ptr [R8 + 0x70],BL",write other [TODO]
tboot_shutdown,0x104,ctx->rbx + 0x1,"MOV qword ptr [RBX + 0x1],R12",write other [TODO]
tboot_shutdown,0x10d,ctx->rbx + 0x9,"MOV dword ptr [RBX + 0x9],EDX",write other [TODO]
tboot_shutdown,0x11e,ctx->r8 + 0x60,"MOV qword ptr [R8 + 0x60],RAX",write other [TODO]
tboot_shutdown,0x127,,RET,ret
tboot_sleep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_sleep,0x2f,ctx->rax + 0x20,"MOV byte ptr [RAX + 0x20],DL",write other [TODO]
tboot_sleep,0x39,ctx->rax + 0x21,"MOV byte ptr [RAX + 0x21],DL",write other [TODO]
tboot_sleep,0x43,ctx->rax + 0x22,"MOV byte ptr [RAX + 0x22],DL",write other [TODO]
tboot_sleep,0x4d,ctx->rax + 0x23,"MOV byte ptr [RAX + 0x23],DL",write other [TODO]
tboot_sleep,0x57,ctx->rax + 0x24,"MOV qword ptr [RAX + 0x24],RDX",write other [TODO]
tboot_sleep,0x62,ctx->rax + 0x2c,"MOV byte ptr [RAX + 0x2c],DL",write other [TODO]
tboot_sleep,0x6c,ctx->rax + 0x2d,"MOV byte ptr [RAX + 0x2d],DL",write other [TODO]
tboot_sleep,0x76,ctx->rax + 0x2e,"MOV byte ptr [RAX + 0x2e],DL",write other [TODO]
tboot_sleep,0x80,ctx->rax + 0x2f,"MOV byte ptr [RAX + 0x2f],DL",write other [TODO]
tboot_sleep,0x8a,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RDX",write other [TODO]
tboot_sleep,0x95,ctx->rax + 0x38,"MOV byte ptr [RAX + 0x38],DL",write other [TODO]
tboot_sleep,0x9f,ctx->rax + 0x39,"MOV byte ptr [RAX + 0x39],DL",write other [TODO]
tboot_sleep,0xa9,ctx->rax + 0x3a,"MOV byte ptr [RAX + 0x3a],DL",write other [TODO]
tboot_sleep,0xb3,ctx->rax + 0x3b,"MOV byte ptr [RAX + 0x3b],DL",write other [TODO]
tboot_sleep,0xbd,ctx->rax + 0x3c,"MOV qword ptr [RAX + 0x3c],RDX",write other [TODO]
tboot_sleep,0xc8,ctx->rax + 0x44,"MOV byte ptr [RAX + 0x44],DL",write other [TODO]
tboot_sleep,0xd2,ctx->rax + 0x45,"MOV byte ptr [RAX + 0x45],DL",write other [TODO]
tboot_sleep,0xdc,ctx->rax + 0x46,"MOV byte ptr [RAX + 0x46],DL",write other [TODO]
tboot_sleep,0xe6,ctx->rax + 0x47,"MOV byte ptr [RAX + 0x47],DL",write other [TODO]
tboot_sleep,0xf0,ctx->wordctx->ptrctx->rax + 0x50,"MOV word ptr [RAX + 0x50],DI",write other [TODO]
tboot_sleep,0xf4,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RDX",write other [TODO]
tboot_sleep,0xfe,ctx->wordctx->ptrctx->rax + 0x52,"MOV word ptr [RAX + 0x52],SI",write other [TODO]
tboot_sleep,0x106,ctx->rax + 0x5c,"MOV dword ptr [RAX + 0x5c],0x20",write other [TODO]
tboot_sleep,0x10d,ctx->rax + 0x54,"MOV qword ptr [RAX + 0x54],RDX",write other [TODO]
tboot_sleep,0x12d,0xffffffff810491f0,CALL 0xffffffff810491f0,direct call
tboot_sleep,0x13a,,RET,ret
tboot_get_dmar_table,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tboot_get_dmar_table,0x23,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
tboot_get_dmar_table,0x3e,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
tboot_get_dmar_table,0x49,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
tboot_get_dmar_table,0x6c,,RET,ret
tboot_get_dmar_table,0x6d,,RET,ret
tboot_get_dmar_table,0x74,,RET,ret
i8237A_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
i8237A_resume,0x10,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
i8237A_resume,0x64,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
i8237A_resume,0x6a,,RET,ret
arch_stack_walk,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_stack_walk,0x29,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
arch_stack_walk,0x42,ctx->rbx,CALL RBX,in-direct call
arch_stack_walk,0x5c,0xffffffff810829b0,CALL 0xffffffff810829b0,direct call
arch_stack_walk,0x70,ctx->rbx,CALL RBX,in-direct call
arch_stack_walk,0x7d,0xffffffff81082990,CALL 0xffffffff81082990,direct call
arch_stack_walk,0x93,0xffffffff81082600,CALL 0xffffffff81082600,direct call
arch_stack_walk,0xbb,,RET,ret
arch_stack_walk,0xde,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_stack_walk_reliable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_stack_walk_reliable,0x25,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
arch_stack_walk_reliable,0x49,0xffffffff810829b0,CALL 0xffffffff810829b0,direct call
arch_stack_walk_reliable,0x6a,0xffffffff81082600,CALL 0xffffffff81082600,direct call
arch_stack_walk_reliable,0x7a,ctx->rbx,CALL RBX,in-direct call
arch_stack_walk_reliable,0x87,0xffffffff81082990,CALL 0xffffffff81082990,direct call
arch_stack_walk_reliable,0xb8,,RET,ret
arch_stack_walk_reliable,0xd0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_stack_walk_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_stack_walk_user,0x2d,ctx->r13,CALL R13,in-direct call
arch_stack_walk_user,0x55,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
arch_stack_walk_user,0x78,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
arch_stack_walk_user,0x87,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
arch_stack_walk_user,0x93,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
arch_stack_walk_user,0xb9,ctx->r13,CALL R13,in-direct call
arch_stack_walk_user,0xde,,RET,ret
arch_stack_walk_user,0xf5,,RET,ret
cache_private_attrs_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cache_private_attrs_is_visible,0x44,,RET,ret
cache_private_attrs_is_visible,0x4a,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
cache_private_attrs_is_visible,0x5b,,RET,ret
cache_private_attrs_is_visible,0x61,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
amd_init_l3_cache.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_init_l3_cache.part.0,0x23,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
amd_init_l3_cache.part.0,0x41,0xffffffff8107e7a0,CALL 0xffffffff8107e7a0,direct call
amd_init_l3_cache.part.0,0x46,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
amd_init_l3_cache.part.0,0x75,,RET,ret
amd_init_l3_cache.part.0,0x83,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0x0",write stack
amd_init_l3_cache.part.0,0x8a,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_init_l3_cache.part.0,0xa6,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],DIL",write other [TODO]
amd_init_l3_cache.part.0,0xb4,ctx->rbx + 0x1d,"MOV byte ptr [RBX + 0x1d],AL",write other [TODO]
amd_init_l3_cache.part.0,0xdc,ctx->rbx + 0x1e,"MOV byte ptr [RBX + 0x1e],AL",write other [TODO]
amd_init_l3_cache.part.0,0xec,ctx->rbx + 0x1f,"MOV byte ptr [RBX + 0x1f],DL",write other [TODO]
amd_init_l3_cache.part.0,0x102,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
amd_init_l3_cache.part.0,0x11b,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],DIL",write other [TODO]
amd_init_l3_cache.part.0,0x127,ctx->rbx + 0x1d,"MOV byte ptr [RBX + 0x1d],SIL",write other [TODO]
amd_init_l3_cache.part.0,0x12d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
subcaches_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
subcaches_show,0x6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
subcaches_show,0x1c,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
subcaches_show,0x23,0xffffffff8107eab0,CALL 0xffffffff8107eab0,direct call
subcaches_show,0x34,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
subcaches_show,0x40,,RET,ret
subcaches_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
subcaches_store,0x1c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
subcaches_store,0x2b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
subcaches_store,0x35,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
subcaches_store,0x42,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
subcaches_store,0x57,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
subcaches_store,0x67,0xffffffff8107eb60,CALL 0xffffffff8107eb60,direct call
subcaches_store,0x8c,,RET,ret
subcaches_store,0x9f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cache_disable_0_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cache_disable_0_show,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
cache_disable_0_show,0x2c,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x0",write stack
cache_disable_0_show,0x3e,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
cache_disable_0_show,0x5e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cache_disable_0_show,0x79,,RET,ret
cache_disable_0_show,0x7f,ctx->r12,"MOV dword ptr [R12],0x45455246",write other [TODO]
cache_disable_0_show,0x87,ctx->wordctx->ptrctx->r12 + 0x4,"MOV word ptr [R12 + 0x4],AX",write other [TODO]
cache_disable_0_show,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cache_disable_1_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cache_disable_1_show,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
cache_disable_1_show,0x2c,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x0",write stack
cache_disable_1_show,0x3e,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
cache_disable_1_show,0x5e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cache_disable_1_show,0x79,,RET,ret
cache_disable_1_show,0x7f,ctx->r12,"MOV dword ptr [R12],0x45455246",write other [TODO]
cache_disable_1_show,0x87,ctx->wordctx->ptrctx->r12 + 0x4,"MOV word ptr [R12 + 0x4],AX",write other [TODO]
cache_disable_1_show,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
find_num_cache_leaves.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_num_cache_leaves.isra.0,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
find_num_cache_leaves.isra.0,0x4c,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EBX",write stack
find_num_cache_leaves.isra.0,0x55,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R12D",write stack
find_num_cache_leaves.isra.0,0x60,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
find_num_cache_leaves.isra.0,0x8c,,RET,ret
find_num_cache_leaves.isra.0,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
store_cache_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
store_cache_disable,0x1f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
store_cache_disable,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
store_cache_disable,0x3e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
store_cache_disable,0x46,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
store_cache_disable,0x53,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
store_cache_disable,0x5d,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
store_cache_disable,0x71,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
store_cache_disable,0x8e,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
store_cache_disable,0x9c,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
store_cache_disable,0xc5,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
store_cache_disable,0xd6,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
store_cache_disable,0x115,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EDX",write stack
store_cache_disable,0x118,0xffffffff81669050,CALL 0xffffffff81669050,direct call
store_cache_disable,0x120,0xffffffff81646c50,CALL 0xffffffff81646c50,direct call
store_cache_disable,0x135,0xffffffff81669050,CALL 0xffffffff81669050,direct call
store_cache_disable,0x165,,RET,ret
store_cache_disable,0x178,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cache_disable_1_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cache_disable_1_store,0x18,0xffffffff81049ce0,CALL 0xffffffff81049ce0,direct call
cache_disable_1_store,0x1e,,RET,ret
cache_disable_0_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cache_disable_0_store,0x15,0xffffffff81049ce0,CALL 0xffffffff81049ce0,direct call
cache_disable_0_store,0x1b,,RET,ret
cpuid4_cache_lookup_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuid4_cache_lookup_regs,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
cpuid4_cache_lookup_regs,0x52,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x4",write stack
cpuid4_cache_lookup_regs,0x59,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R12D",write stack
cpuid4_cache_lookup_regs,0x5d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpuid4_cache_lookup_regs,0x76,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
cpuid4_cache_lookup_regs,0x7c,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EDX",write other [TODO]
cpuid4_cache_lookup_regs,0x8d,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],ECX",write other [TODO]
cpuid4_cache_lookup_regs,0xb0,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
cpuid4_cache_lookup_regs,0xd7,,RET,ret
cpuid4_cache_lookup_regs,0xd8,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x8000001d",write stack
cpuid4_cache_lookup_regs,0xdf,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R12D",write stack
cpuid4_cache_lookup_regs,0xe3,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpuid4_cache_lookup_regs,0xf6,0xffffffff810498c0,CALL 0xffffffff810498c0,direct call
cpuid4_cache_lookup_regs,0x11a,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
cpuid4_cache_lookup_regs,0x121,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x0",write stack
cpuid4_cache_lookup_regs,0x135,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
cpuid4_cache_lookup_regs,0x13c,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x80000005",write stack
cpuid4_cache_lookup_regs,0x146,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
cpuid4_cache_lookup_regs,0x14d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpuid4_cache_lookup_regs,0x161,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x80000006",write stack
cpuid4_cache_lookup_regs,0x168,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
cpuid4_cache_lookup_regs,0x16f,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpuid4_cache_lookup_regs,0x1f7,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EDI",write stack
cpuid4_cache_lookup_regs,0x209,ctx->rbp - 0x4d,"MOV byte ptr [RBP + -0x4d],DIL",write stack
cpuid4_cache_lookup_regs,0x247,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EDX",write stack
cpuid4_cache_lookup_regs,0x255,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
cpuid4_cache_lookup_regs,0x25d,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDI",write stack
cpuid4_cache_lookup_regs,0x268,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x8000001d",write stack
cpuid4_cache_lookup_regs,0x277,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpuid4_cache_lookup_regs,0x32b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cache_get_priv_group,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cache_get_priv_group,0x2d,,RET,ret
cache_get_priv_group,0x42,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
cache_get_priv_group,0x50,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
cache_get_priv_group,0x6c,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
cache_get_priv_group,0x71,0xffffffff83402868,"MOV qword ptr [0xffffffff83402868],RAX",write .data
cache_get_priv_group,0x84,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
cache_get_priv_group,0x99,ctx->rax,"MOV qword ptr [RAX],-0x7d1c0300",write other [TODO]
cache_get_priv_group,0xa0,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],-0x7d1c0320",write other [TODO]
cache_get_priv_group,0xad,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
cache_get_priv_group,0xbd,0xffffffff82e3fc98,"MOV qword ptr [0xffffffff82e3fc98],RAX",write .data
cache_get_priv_group,0xd0,,RET,ret
cache_get_priv_group,0xd3,,RET,ret
cache_get_priv_group,0xd4,ctx->rax + ctx->rbx * 0x8,"MOV qword ptr [RAX + RBX*0x8],-0x7d1c0340",write other [TODO]
cacheinfo_amd_init_llc_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cacheinfo_amd_init_llc_id,0x32,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ESI",write stack
cacheinfo_amd_init_llc_id,0x41,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
cacheinfo_amd_init_llc_id,0x47,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x80000006",write stack
cacheinfo_amd_init_llc_id,0x4e,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
cacheinfo_amd_init_llc_id,0x55,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cacheinfo_amd_init_llc_id,0x85,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1,"MOV word ptr [RDX + RAX*0x1],CX",write other [TODO]
cacheinfo_amd_init_llc_id,0xaa,,RET,ret
cacheinfo_amd_init_llc_id,0xd5,ctx->wordctx->ptrctx->rcx + ctx->rax * 0x1,"MOV word ptr [RCX + RAX*0x1],DX",write other [TODO]
cacheinfo_amd_init_llc_id,0xe0,0xffffffff81049c40,CALL 0xffffffff81049c40,direct call
cacheinfo_amd_init_llc_id,0xf1,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x8000001d",write stack
cacheinfo_amd_init_llc_id,0xfb,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
cacheinfo_amd_init_llc_id,0xfe,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cacheinfo_amd_init_llc_id,0x13f,ctx->wordctx->ptrctx->rsi + ctx->rdx * 0x1,"MOV word ptr [RSI + RDX*0x1],AX",write other [TODO]
cacheinfo_amd_init_llc_id,0x148,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cacheinfo_hygon_init_llc_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cacheinfo_hygon_init_llc_id,0x2f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
cacheinfo_hygon_init_llc_id,0x35,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x80000006",write stack
cacheinfo_hygon_init_llc_id,0x3c,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
cacheinfo_hygon_init_llc_id,0x43,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cacheinfo_hygon_init_llc_id,0x6c,ctx->wordctx->ptrctx->rcx + ctx->rax * 0x1,"MOV word ptr [RCX + RAX*0x1],DX",write other [TODO]
cacheinfo_hygon_init_llc_id,0x87,,RET,ret
cacheinfo_hygon_init_llc_id,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_amd_cacheinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_amd_cacheinfo,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
init_amd_cacheinfo,0x41,,RET,ret
init_amd_cacheinfo,0x42,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x80000006",write stack
init_amd_cacheinfo,0x51,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
init_amd_cacheinfo,0x60,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_amd_cacheinfo,0x75,ctx->wordctx->ptr0xffffffff83402870,"MOV word ptr [0xffffffff83402870],AX",write .data
init_amd_cacheinfo,0x82,0xffffffff81049c40,CALL 0xffffffff81049c40,direct call
init_amd_cacheinfo,0x87,ctx->wordctx->ptr0xffffffff83402870,"MOV word ptr [0xffffffff83402870],AX",write .data
init_amd_cacheinfo,0x90,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_hygon_cacheinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_hygon_cacheinfo,0xd,0xffffffff81049c40,CALL 0xffffffff81049c40,direct call
init_hygon_cacheinfo,0x13,ctx->wordctx->ptr0xffffffff83402870,"MOV word ptr [0xffffffff83402870],AX",write .data
init_hygon_cacheinfo,0x1a,,RET,ret
init_intel_cacheinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_intel_cacheinfo,0x16,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDI",write stack
init_intel_cacheinfo,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_intel_cacheinfo,0x34,ctx->rbp - 0xa0,"MOV dword ptr [RBP + -0xa0],EBX",write stack
init_intel_cacheinfo,0x5e,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
init_intel_cacheinfo,0x71,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],0x0",write stack
init_intel_cacheinfo,0x7b,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],0x0",write stack
init_intel_cacheinfo,0x85,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],0x0",write stack
init_intel_cacheinfo,0x8f,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],0x0",write stack
init_intel_cacheinfo,0x99,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
init_intel_cacheinfo,0xca,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
init_intel_cacheinfo,0xd2,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x0",write stack
init_intel_cacheinfo,0xda,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
init_intel_cacheinfo,0xe2,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
init_intel_cacheinfo,0xea,0xffffffff81049ea0,CALL 0xffffffff81049ea0,direct call
init_intel_cacheinfo,0x11c,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EAX",write stack
init_intel_cacheinfo,0x13a,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],EDX",write stack
init_intel_cacheinfo,0x145,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
init_intel_cacheinfo,0x153,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],0x0",write stack
init_intel_cacheinfo,0x15d,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],0x0",write stack
init_intel_cacheinfo,0x167,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],0x0",write stack
init_intel_cacheinfo,0x171,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],0x0",write stack
init_intel_cacheinfo,0x17b,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
init_intel_cacheinfo,0x19b,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],0x0",write stack
init_intel_cacheinfo,0x1ee,ctx->wordctx->ptrctx->rsi + ctx->rdx * 0x1,"MOV word ptr [RSI + RDX*0x1],DI",write other [TODO]
init_intel_cacheinfo,0x201,ctx->wordctx->ptrctx->rsi + ctx->rdx * 0x1,"MOV word ptr [RSI + RDX*0x1],DI",write other [TODO]
init_intel_cacheinfo,0x21b,ctx->rsi,"MOV RSI,RAX",write other [TODO]
init_intel_cacheinfo,0x21e,ctx->wordctx->ptrctx->rdx + ctx->rsi * 0x1,"MOV word ptr [RDX + RSI*0x1],BX",write other [TODO]
init_intel_cacheinfo,0x238,ctx->rax + 0xd0,"MOV dword ptr [RAX + 0xd0],EBX",write other [TODO]
init_intel_cacheinfo,0x264,,RET,ret
init_intel_cacheinfo,0x282,ctx->rax + 0xd0,"MOV dword ptr [RAX + 0xd0],R13D",write other [TODO]
init_intel_cacheinfo,0x28d,0xffffffff8104b8a0,CALL 0xffffffff8104b8a0,direct call
init_intel_cacheinfo,0x298,ctx->rax + 0xd0,"MOV dword ptr [RAX + 0xd0],R15D",write other [TODO]
init_intel_cacheinfo,0x2a4,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EBX",write stack
init_intel_cacheinfo,0x2b2,ctx->wordctx->ptrctx->rax + ctx->rdx * 0x1,"MOV word ptr [RAX + RDX*0x1],CX",write other [TODO]
init_intel_cacheinfo,0x2c0,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EAX",write stack
init_intel_cacheinfo,0x2e5,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],EAX",write stack
init_intel_cacheinfo,0x304,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],EAX",write stack
init_intel_cacheinfo,0x325,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],EDX",write stack
init_intel_cacheinfo,0x334,0xffffffff81049c40,CALL 0xffffffff81049c40,direct call
init_intel_cacheinfo,0x339,0xffffffff83402860,"MOV dword ptr [0xffffffff83402860],0x1",write .data
init_intel_cacheinfo,0x343,ctx->wordctx->ptr0xffffffff83402870,"MOV word ptr [0xffffffff83402870],AX",write .data
init_intel_cacheinfo,0x353,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],0x0",write stack
init_intel_cacheinfo,0x35d,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],0x0",write stack
init_intel_cacheinfo,0x367,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
init_intel_cacheinfo,0x36e,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],0x0",write stack
init_intel_cacheinfo,0x378,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],0x0",write stack
init_intel_cacheinfo,0x382,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
init_intel_cacheinfo,0x39d,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],0x2",write stack
init_intel_cacheinfo,0x3ac,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],0x0",write stack
init_intel_cacheinfo,0x3bb,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_intel_cacheinfo,0x3c5,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],EAX",write stack
init_intel_cacheinfo,0x3d6,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],0x0",write stack
init_intel_cacheinfo,0x3e3,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],R13D",write stack
init_intel_cacheinfo,0x3ee,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x2",write stack
init_intel_cacheinfo,0x3fd,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_intel_cacheinfo,0x40c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_intel_cacheinfo,0x41b,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
init_intel_cacheinfo,0x42b,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
init_intel_cacheinfo,0x439,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_intel_cacheinfo,0x4c0,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],EAX",write stack
init_intel_cacheinfo,0x519,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],0x0",write stack
init_intel_cacheinfo,0x526,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],0x0",write stack
init_intel_cacheinfo,0x530,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
init_intel_cacheinfo,0x537,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],0x0",write stack
init_intel_cacheinfo,0x541,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],0x0",write stack
init_intel_cacheinfo,0x54b,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
init_intel_cacheinfo,0x55a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_cache_level,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_cache_level,0x9,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
init_cache_level,0x1f,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],0x3",write other [TODO]
init_cache_level,0x26,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EDX",write other [TODO]
init_cache_level,0x2c,,RET,ret
init_cache_level,0x33,,RET,ret
init_cache_level,0x3a,,RET,ret
populate_cache_leaves,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
populate_cache_leaves,0x16,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EDI",write stack
populate_cache_leaves,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
populate_cache_leaves,0x28,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
populate_cache_leaves,0x34,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0x0",write stack
populate_cache_leaves,0x3e,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
populate_cache_leaves,0x42,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
populate_cache_leaves,0x4a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
populate_cache_leaves,0x52,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
populate_cache_leaves,0x5a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
populate_cache_leaves,0x65,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDI",write stack
populate_cache_leaves,0x78,0xffffffff81049ea0,CALL 0xffffffff81049ea0,direct call
populate_cache_leaves,0x87,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EAX",write stack
populate_cache_leaves,0xcb,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
populate_cache_leaves,0xce,ctx->r15 - 0x440,"MOV dword ptr [R15 + -0x440],EAX",write other [TODO]
populate_cache_leaves,0xd5,ctx->r15 - 0x20,"MOV dword ptr [R15 + -0x20],0x10",write other [TODO]
populate_cache_leaves,0xe7,ctx->r15 - 0x438,"MOV dword ptr [R15 + -0x438],EAX",write other [TODO]
populate_cache_leaves,0xfc,ctx->r15 - 0x43c,"MOV dword ptr [R15 + -0x43c],EAX",write other [TODO]
populate_cache_leaves,0x10f,ctx->r15 - 0x434,"MOV dword ptr [R15 + -0x434],EAX",write other [TODO]
populate_cache_leaves,0x124,ctx->r15 - 0x42c,"MOV dword ptr [R15 + -0x42c],EAX",write other [TODO]
populate_cache_leaves,0x12f,ctx->r15 - 0x424,"MOV dword ptr [R15 + -0x424],EAX",write other [TODO]
populate_cache_leaves,0x13c,ctx->r15 - 0x430,"MOV dword ptr [R15 + -0x430],EAX",write other [TODO]
populate_cache_leaves,0x151,ctx->r15 - 0x428,"MOV dword ptr [R15 + -0x428],EAX",write other [TODO]
populate_cache_leaves,0x15c,ctx->r15 - 0x8,"MOV qword ptr [R15 + -0x8],RAX",write other [TODO]
populate_cache_leaves,0x160,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
populate_cache_leaves,0x19d,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
populate_cache_leaves,0x1b8,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RCX",write stack
populate_cache_leaves,0x1d9,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R15",write stack
populate_cache_leaves,0x1e9,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
populate_cache_leaves,0x1f9,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
populate_cache_leaves,0x231,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
populate_cache_leaves,0x27e,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x1",write other [TODO]
populate_cache_leaves,0x2a5,,RET,ret
populate_cache_leaves,0x2ca,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R15",write stack
populate_cache_leaves,0x2f3,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
populate_cache_leaves,0x307,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
populate_cache_leaves,0x316,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
populate_cache_leaves,0x326,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
populate_cache_leaves,0x33c,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
populate_cache_leaves,0x34c,ctx->rcx,"MOV RCX,qword ptr [RBP + -0x60]",write other [TODO]
populate_cache_leaves,0x39c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
populate_cache_leaves,0x3ac,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
populate_cache_leaves,0x3d7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
populate_cache_leaves,0x3e4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
populate_cache_leaves,0x3fa,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
populate_cache_leaves,0x414,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
populate_cache_leaves,0x41e,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
populate_cache_leaves,0x445,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_scattered_cpuid_features,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_scattered_cpuid_features,0x2d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDI",write stack
init_scattered_cpuid_features,0x3a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_scattered_cpuid_features,0x4d,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
init_scattered_cpuid_features,0x5a,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
init_scattered_cpuid_features,0x63,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_scattered_cpuid_features,0x82,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
init_scattered_cpuid_features,0x91,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EDX",write stack
init_scattered_cpuid_features,0x98,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_scattered_cpuid_features,0xeb,,RET,ret
init_scattered_cpuid_features,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
check_extended_topology_leaf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_extended_topology_leaf,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
check_extended_topology_leaf,0x20,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],EDI",write stack
check_extended_topology_leaf,0x27,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
check_extended_topology_leaf,0x36,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
check_extended_topology_leaf,0x5e,,RET,ret
check_extended_topology_leaf,0x66,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
detect_extended_topology_early,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
detect_extended_topology_early,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
detect_extended_topology_early,0x43,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xb",write stack
detect_extended_topology_early,0x58,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
detect_extended_topology_early,0x65,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_extended_topology_early,0x8c,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
detect_extended_topology_early,0x98,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
detect_extended_topology_early,0xa2,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_extended_topology_early,0xab,ctx->wordctx->ptrctx->r12 + 0xfc,"MOV word ptr [R12 + 0xfc],AX",write other [TODO]
detect_extended_topology_early,0xb8,0xffffffff82e3fd64,"MOV dword ptr [0xffffffff82e3fd64],EAX",write .data
detect_extended_topology_early,0xdd,,RET,ret
detect_extended_topology_early,0xe3,0xffffffff8104b040,CALL 0xffffffff8104b040,direct call
detect_extended_topology_early,0x117,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
detect_extended_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
detect_extended_topology,0x16,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDI",write stack
detect_extended_topology,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
detect_extended_topology,0x44,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xb",write stack
detect_extended_topology,0x53,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
detect_extended_topology,0x5a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
detect_extended_topology,0x5e,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
detect_extended_topology,0x62,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
detect_extended_topology,0x66,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RCX",write stack
detect_extended_topology,0x6a,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_extended_topology,0x93,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R15D",write stack
detect_extended_topology,0x9f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
detect_extended_topology,0xa6,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_extended_topology,0xb3,ctx->rbp - 0x71,"MOV byte ptr [RBP + -0x71],0x0",write stack
detect_extended_topology,0xba,ctx->wordctx->ptrctx->rdx + 0xfc,"MOV word ptr [RDX + 0xfc],AX",write other [TODO]
detect_extended_topology,0xc8,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EBX",write stack
detect_extended_topology,0xd4,0xffffffff82e3fd64,"MOV dword ptr [0xffffffff82e3fd64],EAX",write .data
detect_extended_topology,0xdf,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],EAX",write stack
detect_extended_topology,0xe2,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
detect_extended_topology,0x103,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R15D",write stack
detect_extended_topology,0x10f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EBX",write stack
detect_extended_topology,0x112,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_extended_topology,0x12d,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],EAX",write stack
detect_extended_topology,0x130,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
detect_extended_topology,0x143,ctx->rbp - 0x71,"MOV byte ptr [RBP + -0x71],0x1",write stack
detect_extended_topology,0x14b,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
detect_extended_topology,0x17e,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
detect_extended_topology,0x18f,ctx->wordctx->ptrctx->r15 + 0x106,"MOV word ptr [R15 + 0x106],AX",write other [TODO]
detect_extended_topology,0x1b2,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
detect_extended_topology,0x1c1,ctx->wordctx->ptrctx->rbx + 0x102,"MOV word ptr [RBX + 0x102],AX",write other [TODO]
detect_extended_topology,0x1cf,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
detect_extended_topology,0x1d7,ctx->wordctx->ptrctx->rbx + 0xfa,"MOV word ptr [RBX + 0xfa],AX",write other [TODO]
detect_extended_topology,0x1e9,ctx->wordctx->ptrctx->rbx + 0xf8,"MOV word ptr [RBX + 0xf8],AX",write other [TODO]
detect_extended_topology,0x1f6,0xffffffff83117b30,"MOV dword ptr [0xffffffff83117b30],EAX",write .data
detect_extended_topology,0x21f,,RET,ret
detect_extended_topology,0x232,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
detect_extended_topology,0x246,ctx->wordctx->ptrctx->r15 + 0x108,"MOV word ptr [R15 + 0x108],BX",write other [TODO]
detect_extended_topology,0x258,0xffffffff8104b040,CALL 0xffffffff8104b040,direct call
detect_extended_topology,0x277,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
detect_extended_topology,0x27f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
detect_extended_topology,0x287,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
detect_extended_topology,0x28f,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
detect_extended_topology,0x2a2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_llc_id,0x11,ctx->eax,"MOVZX EAX,word ptr [RDX + RAX*0x1]",write other [TODO]
get_llc_id,0x15,,RET,ret
cr4_update_irqsoff,0x1c,,RET,ret
cr4_update_irqsoff,0x21,ctx->gs + 0x30c98,"MOV qword ptr GS:[0x30c98],RDI",write other [TODO]
cr4_update_irqsoff,0x29,0xffffffff82e4b888,CALL qword ptr [0xffffffff82e4b888],in-direct call
cr4_update_irqsoff,0x30,,RET,ret
cr4_clear_bits,0x8,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cr4_clear_bits,0x11,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cr4_clear_bits,0x19,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_clear_bits,0x23,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cr4_clear_bits,0x2e,,RET,ret
cr4_set_bits,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cr4_set_bits,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cr4_set_bits,0x16,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_set_bits,0x20,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cr4_set_bits,0x2b,,RET,ret
cr4_read_shadow,0x8,,RET,ret
native_write_cr0,0x14,,RET,ret
filter_cpuid_features,0x4c,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
filter_cpuid_features,0x6d,,RET,ret
get_cpu_vendor,0x2c,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
get_cpu_vendor,0x41,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
get_cpu_vendor,0x65,ctx->r13 + 0x1,"MOV byte ptr [R13 + 0x1],0xff",write other [TODO]
get_cpu_vendor,0x6a,0xffffffff82e3fd20,"MOV qword ptr [0xffffffff82e3fd20],-0x7ddf71c0",write .data
get_cpu_vendor,0x7c,,RET,ret
get_cpu_vendor,0x80,0xffffffff82e3fd20,"MOV qword ptr [0xffffffff82e3fd20],RBX",write .data
get_cpu_vendor,0x8a,ctx->r13 + 0x1,"MOV byte ptr [R13 + 0x1],AL",write other [TODO]
get_cpu_vendor,0x93,,RET,ret
load_direct_gdt,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
load_direct_gdt,0x26,ctx->wordctx->ptrctx->rbp - 0xa,"MOV word ptr [RBP + -0xa],AX",write stack
load_direct_gdt,0x2a,0xffffffff82e4b898,CALL qword ptr [0xffffffff82e4b898],in-direct call
load_direct_gdt,0x31,,RET,ret
load_fixmap_gdt,0x8,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
load_fixmap_gdt,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
load_fixmap_gdt,0x1a,ctx->wordctx->ptrctx->rbp - 0xa,"MOV word ptr [RBP + -0xa],AX",write stack
load_fixmap_gdt,0x1e,0xffffffff82e4b898,CALL qword ptr [0xffffffff82e4b898],in-direct call
load_fixmap_gdt,0x25,,RET,ret
native_write_cr4,0x21,,RET,ret
cr4_init,0x36,0xffffffff82e4b888,CALL qword ptr [0xffffffff82e4b888],in-direct call
cr4_init,0x3c,ctx->gs + 0x30c98,"MOV qword ptr GS:[0x30c98],RBX",write other [TODO]
cr4_init,0x49,,RET,ret
FUN_ffffffff8104b7eb,0x0,,RET,ret
load_percpu_segment,0x25,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
load_percpu_segment,0x2c,,RET,ret
switch_to_new_gdt,0x9,0xffffffff8104b6b0,CALL 0xffffffff8104b6b0,direct call
switch_to_new_gdt,0x11,0xffffffff8104b7f0,CALL 0xffffffff8104b7f0,direct call
switch_to_new_gdt,0x1b,,RET,ret
detect_num_cpu_cores,0x9,ctx->wordctx->ptrctx->rdi + 0xf8,"MOV word ptr [RDI + 0xf8],AX",write other [TODO]
detect_num_cpu_cores,0x12,,RET,ret
detect_num_cpu_cores,0x2f,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x4",write stack
detect_num_cpu_cores,0x36,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
detect_num_cpu_cores,0x3d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_num_cpu_cores,0x50,ctx->wordctx->ptrctx->rbx + 0xf8,"MOV word ptr [RBX + 0xf8],AX",write other [TODO]
detect_num_cpu_cores,0x5c,,RET,ret
cpu_detect_cache_sizes,0x2c,,RET,ret
cpu_detect_cache_sizes,0x38,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x80000005",write stack
cpu_detect_cache_sizes,0x4d,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
cpu_detect_cache_sizes,0x57,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_cache_sizes,0x65,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],0x0",write other [TODO]
cpu_detect_cache_sizes,0x6e,ctx->rbx + 0xd0,"MOV dword ptr [RBX + 0xd0],EAX",write other [TODO]
cpu_detect_cache_sizes,0x7d,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x80000006",write stack
cpu_detect_cache_sizes,0x8d,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
cpu_detect_cache_sizes,0x98,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_cache_sizes,0xad,ctx->rbx + 0xd0,"MOV dword ptr [RBX + 0xd0],ECX",write other [TODO]
cpu_detect_cache_sizes,0xce,,RET,ret
default_init,0x4,0xffffffff8104b8a0,CALL 0xffffffff8104b8a0,direct call
default_init,0xa,,RET,ret
detect_ht_early,0x28,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x1",write stack
detect_ht_early,0x37,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
detect_ht_early,0x46,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
detect_ht_early,0x53,0xffffffff82e3fd64,"MOV dword ptr [0xffffffff82e3fd64],EAX",write .data
detect_ht_early,0x66,,RET,ret
detect_ht_early,0x7c,,RET,ret
detect_ht,0xa,0xffffffff8104b980,CALL 0xffffffff8104b980,direct call
detect_ht,0x41,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
detect_ht,0x4e,ctx->wordctx->ptrctx->rbx + 0x102,"MOV word ptr [RBX + 0x102],AX",write other [TODO]
detect_ht,0x5e,0xffffffff82e3fd64,"MOV dword ptr [0xffffffff82e3fd64],EAX",write .data
detect_ht,0x97,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
detect_ht,0xb0,ctx->wordctx->ptrctx->rbx + 0x106,"MOV word ptr [RBX + 0x106],AX",write other [TODO]
detect_ht,0xbb,,RET,ret
cpu_detect,0x25,ctx->rdi,"MOV dword ptr [RDI],0x0",write other [TODO]
cpu_detect,0x2b,ctx->rdi + 0x64,"MOV dword ptr [RDI + 0x64],0x0",write other [TODO]
cpu_detect,0x32,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect,0x3b,ctx->rbx,"MOV byte ptr [RBX],0x4",write other [TODO]
cpu_detect,0x47,,RET,ret
cpu_detect,0x48,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x1",write stack
cpu_detect,0x57,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
cpu_detect,0x66,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect,0x6c,ctx->edi,"MOV EDI,dword ptr [RBP + -0x14]",write other [TODO]
cpu_detect,0x6f,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
cpu_detect,0x77,ctx->rbx,"MOV byte ptr [RBX],AL",write other [TODO]
cpu_detect,0x79,0xffffffff81c89f10,CALL 0xffffffff81c89f10,direct call
cpu_detect,0x81,ctx->rbx + 0x2,"MOV byte ptr [RBX + 0x2],AL",write other [TODO]
cpu_detect,0x84,0xffffffff81c89f40,CALL 0xffffffff81c89f40,direct call
cpu_detect,0x89,ctx->rbx + 0x3,"MOV byte ptr [RBX + 0x3],AL",write other [TODO]
cpu_detect,0x99,ctx->wordctx->ptrctx->rbx + 0xfe,"MOV word ptr [RBX + 0xfe],AX",write other [TODO]
cpu_detect,0xa3,ctx->rbx + 0xd4,"MOV dword ptr [RBX + 0xd4],EAX",write other [TODO]
cpu_detect,0xae,,RET,ret
get_cpu_cap,0x2f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x80000000",write stack
get_cpu_cap,0x3f,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
get_cpu_cap,0x49,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x54,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
get_cpu_cap,0x5a,ctx->rbx + 0x20,"MOV dword ptr [RBX + 0x20],EAX",write other [TODO]
get_cpu_cap,0x7e,0xffffffff8104af40,CALL 0xffffffff8104af40,direct call
get_cpu_cap,0x11a,ctx->rbx + ctx->rdx * 0x1 + 0x28,"MOV dword ptr [RBX + RDX*0x1 + 0x28],EAX",write other [TODO]
get_cpu_cap,0x124,ctx->rbx + ctx->rdx * 0x1 + 0x28,"MOV dword ptr [RBX + RDX*0x1 + 0x28],EAX",write other [TODO]
get_cpu_cap,0x140,,RET,ret
get_cpu_cap,0x15d,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
get_cpu_cap,0x164,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x1",write stack
get_cpu_cap,0x173,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
get_cpu_cap,0x182,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x18f,ctx->rbx + 0x38,"MOV dword ptr [RBX + 0x38],EAX",write other [TODO]
get_cpu_cap,0x195,ctx->rbx + 0x28,"MOV dword ptr [RBX + 0x28],EAX",write other [TODO]
get_cpu_cap,0x1a6,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x6",write stack
get_cpu_cap,0x1bb,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
get_cpu_cap,0x1c8,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x1d5,ctx->rbx + 0x60,"MOV dword ptr [RBX + 0x60],EAX",write other [TODO]
get_cpu_cap,0x1de,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x7",write stack
get_cpu_cap,0x1ed,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
get_cpu_cap,0x1fc,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x205,ctx->rbx + 0x4c,"MOV dword ptr [RBX + 0x4c],EAX",write other [TODO]
get_cpu_cap,0x20b,ctx->rbx + 0x68,"MOV dword ptr [RBX + 0x68],EAX",write other [TODO]
get_cpu_cap,0x211,ctx->rbx + 0x70,"MOV dword ptr [RBX + 0x70],EAX",write other [TODO]
get_cpu_cap,0x22b,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xd",write stack
get_cpu_cap,0x23a,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x1",write stack
get_cpu_cap,0x249,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x252,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],EAX",write other [TODO]
get_cpu_cap,0x25a,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x80000007",write stack
get_cpu_cap,0x269,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
get_cpu_cap,0x278,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x288,ctx->rbx + 0x6c,"MOV dword ptr [RBX + 0x6c],EAX",write other [TODO]
get_cpu_cap,0x28e,ctx->rbx + 0xe4,"MOV dword ptr [RBX + 0xe4],EAX",write other [TODO]
get_cpu_cap,0x29a,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x80000008",write stack
get_cpu_cap,0x2a9,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
get_cpu_cap,0x2b8,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x2c8,ctx->rbx + 0x5c,"MOV dword ptr [RBX + 0x5c],EAX",write other [TODO]
get_cpu_cap,0x2d1,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x8000000a",write stack
get_cpu_cap,0x2e1,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
get_cpu_cap,0x2eb,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x2fb,ctx->rbx + 0x64,"MOV dword ptr [RBX + 0x64],EAX",write other [TODO]
get_cpu_cap,0x304,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x8000001f",write stack
get_cpu_cap,0x314,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
get_cpu_cap,0x31e,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x327,ctx->rbx + 0x74,"MOV dword ptr [RBX + 0x74],EAX",write other [TODO]
get_cpu_cap,0x32f,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x80000001",write stack
get_cpu_cap,0x33e,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
get_cpu_cap,0x34d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x356,ctx->rbx + 0x40,"MOV dword ptr [RBX + 0x40],EAX",write other [TODO]
get_cpu_cap,0x35c,ctx->rbx + 0x2c,"MOV dword ptr [RBX + 0x2c],EAX",write other [TODO]
get_cpu_cap,0x367,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x7",write stack
get_cpu_cap,0x376,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x1",write stack
get_cpu_cap,0x385,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_cap,0x38e,ctx->rbx + 0x58,"MOV dword ptr [RBX + 0x58],EAX",write other [TODO]
identify_cpu,0x32,ctx->wordctx->ptrctx->rdi + 0xc8,"MOV word ptr [RDI + 0xc8],R8W",write other [TODO]
identify_cpu,0x3a,ctx->wordctx->ptrctx->rdi - 0x2e,"MOV word ptr [RDI + -0x2e],SI",write other [TODO]
identify_cpu,0x3e,ctx->rdi + 0xb8,"MOV qword ptr [RDI + 0xb8],RAX",write other [TODO]
identify_cpu,0x4f,ctx->wordctx->ptrctx->rdi + 0xce,"MOV word ptr [RDI + 0xce],R9W",write other [TODO]
identify_cpu,0x57,ctx->rdi + 0xa0,"MOV qword ptr [RDI + 0xa0],RAX",write other [TODO]
identify_cpu,0x60,ctx->rdi - 0x2f,"MOV byte ptr [RDI + -0x2f],0xff",write other [TODO]
identify_cpu,0x64,ctx->rdi + 0x50,"MOV byte ptr [RDI + 0x50],0x0",write other [TODO]
identify_cpu,0x68,ctx->rdi + 0x60,"MOV byte ptr [RDI + 0x60],0x0",write other [TODO]
identify_cpu,0x6c,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
identify_cpu,0x74,ctx->rdi + 0x44,"MOV qword ptr [RDI + 0x44],0x0",write other [TODO]
identify_cpu,0x94,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
identify_cpu,0x9d,ctx->r12 + 0x1c,"MOV qword ptr [R12 + 0x1c],RAX",write other [TODO]
identify_cpu,0xa2,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],0x0",write other [TODO]
identify_cpu,0xab,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],0x0",write other [TODO]
identify_cpu,0xb4,0xffffffff8104bb00,CALL 0xffffffff8104bb00,direct call
identify_cpu,0xbc,0xffffffff8104b610,CALL 0xffffffff8104b610,direct call
identify_cpu,0xc4,0xffffffff8104bbb0,CALL 0xffffffff8104bbb0,direct call
identify_cpu,0xe3,ctx->r12 + 0x114,"MOV byte ptr [R12 + 0x114],AL",write other [TODO]
identify_cpu,0xef,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x1",write stack
identify_cpu,0xfe,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x0",write stack
identify_cpu,0x10d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
identify_cpu,0x117,ctx->wordctx->ptrctx->r12 + 0xfc,"MOV word ptr [R12 + 0xfc],AX",write other [TODO]
identify_cpu,0x120,ctx->wordctx->ptrctx->r12 + 0x102,"MOV word ptr [R12 + 0x102],AX",write other [TODO]
identify_cpu,0x14b,ctx->rax,CALL RAX,in-direct call
identify_cpu,0x15c,ctx->r12 + ctx->rdx * 0x1 + 0x28,"MOV dword ptr [R12 + RDX*0x1 + 0x28],EAX",write other [TODO]
identify_cpu,0x167,ctx->r12 + ctx->rdx * 0x1 + 0x28,"MOV dword ptr [R12 + RDX*0x1 + 0x28],EAX",write other [TODO]
identify_cpu,0x188,ctx->rax + 0xe0,CALL qword ptr [RAX + 0xe0],in-direct call
identify_cpu,0x18e,ctx->wordctx->ptrctx->r12 + 0xfa,"MOV word ptr [R12 + 0xfa],AX",write other [TODO]
identify_cpu,0x1aa,ctx->rax,CALL RAX,in-direct call
identify_cpu,0x3ab,ctx->r12 + 0x90,"MOV dword ptr [R12 + 0x90],0x80000002",write other [TODO]
identify_cpu,0x3b7,ctx->r12 + 0x98,"MOV dword ptr [R12 + 0x98],0x0",write other [TODO]
identify_cpu,0x3d6,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
identify_cpu,0x3ec,ctx->r12 + 0xa0,"MOV dword ptr [R12 + 0xa0],0x80000003",write other [TODO]
identify_cpu,0x408,ctx->r12 + 0xa8,"MOV dword ptr [R12 + 0xa8],0x0",write other [TODO]
identify_cpu,0x414,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
identify_cpu,0x42a,ctx->r12 + 0xb0,"MOV dword ptr [R12 + 0xb0],0x80000004",write other [TODO]
identify_cpu,0x446,ctx->r12 + 0xb8,"MOV dword ptr [R12 + 0xb8],0x0",write other [TODO]
identify_cpu,0x452,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
identify_cpu,0x464,ctx->r12 + 0xc0,"MOV byte ptr [R12 + 0xc0],0x0",write other [TODO]
identify_cpu,0x49a,ctx->rcx - 0x1,"MOV byte ptr [RCX + -0x1],AL",write other [TODO]
identify_cpu,0x4a4,ctx->rbx + 0x1,"MOV byte ptr [RBX + 0x1],0x0",write other [TODO]
identify_cpu,0x4ad,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80000008",write stack
identify_cpu,0x4bc,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x0",write stack
identify_cpu,0x4cb,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
identify_cpu,0x4dd,ctx->wordctx->ptrctx->r12 + 0x1c,"MOV word ptr [R12 + 0x1c],DX",write other [TODO]
identify_cpu,0x4ed,0xffffffff8104b510,CALL 0xffffffff8104b510,direct call
identify_cpu,0x4fc,0xffffffff8104b510,CALL 0xffffffff8104b510,direct call
FUN_ffffffff8104c16e,-0xe,0xffffffff8104b510,CALL 0xffffffff8104b510,direct call
FUN_ffffffff8104c16e,0x5,0xffffffff8104b4e0,CALL 0xffffffff8104b4e0,direct call
FUN_ffffffff8104c16e,0x1e,0xffffffff8104b5a0,CALL 0xffffffff8104b5a0,direct call
FUN_ffffffff8104c16e,0x35,0xffffffff8104ba20,CALL 0xffffffff8104ba20,direct call
FUN_ffffffff8104c16e,0x3d,0xffffffff8104cba0,CALL 0xffffffff8104cba0,direct call
FUN_ffffffff8104c16e,0x302,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
get_cpu_address_sizes,0x19,ctx->rbx + 0x114,"MOV byte ptr [RBX + 0x114],AL",write other [TODO]
get_cpu_address_sizes,0x24,,RET,ret
get_cpu_address_sizes,0x25,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x80000008",write stack
get_cpu_address_sizes,0x34,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
get_cpu_address_sizes,0x43,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
get_cpu_address_sizes,0x55,ctx->rbx + 0x114,"MOV byte ptr [RBX + 0x114],AL",write other [TODO]
get_cpu_address_sizes,0x5b,ctx->wordctx->ptrctx->rbx + 0x1c,"MOV word ptr [RBX + 0x1c],DX",write other [TODO]
get_cpu_address_sizes,0x64,,RET,ret
x86_read_arch_cap_msr,0x11,,RET,ret
x86_read_arch_cap_msr,0x1b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x86_read_arch_cap_msr,0x22,,RET,ret
check_null_seg_clears_base,0x41,,RET,ret
check_null_seg_clears_base,0x42,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80000021",write stack
check_null_seg_clears_base,0x51,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x0",write stack
check_null_seg_clears_base,0x60,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
check_null_seg_clears_base,0x78,,RET,ret
check_null_seg_clears_base,0x82,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
check_null_seg_clears_base,0x95,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
check_null_seg_clears_base,0xa2,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
check_null_seg_clears_base,0xb8,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
identify_secondary_cpu,0x13,0xffffffff8104bf50,CALL 0xffffffff8104bf50,direct call
identify_secondary_cpu,0x18,0xffffffff81058800,CALL 0xffffffff81058800,direct call
identify_secondary_cpu,0x2f,ctx->rax + 0xc8,CALL qword ptr [RAX + 0xc8],in-direct call
identify_secondary_cpu,0x4e,0xffffffff8106d1a0,CALL 0xffffffff8106d1a0,direct call
identify_secondary_cpu,0x61,0xffffffff8106d200,CALL 0xffffffff8106d200,direct call
identify_secondary_cpu,0x6a,0xffffffff8104d5c0,CALL 0xffffffff8104d5c0,direct call
identify_secondary_cpu,0x6f,0xffffffff8104d170,CALL 0xffffffff8104d170,direct call
identify_secondary_cpu,0x74,0xffffffff810502d0,CALL 0xffffffff810502d0,direct call
identify_secondary_cpu,0x7d,,RET,ret
syscall_init,0x11,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
syscall_init,0x30,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
syscall_init,0x4e,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
syscall_init,0x5b,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
syscall_init,0x72,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
syscall_init,0x91,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
syscall_init,0xa4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
syscall_init,0xaf,,RET,ret
syscall_init,0xc9,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cpu_init_exception_handling,0x42,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
cpu_init_exception_handling,0x7a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cpu_init_exception_handling,0x80,ctx->wordctx->ptrctx->rbp - 0x38,"MOV word ptr [RBP + -0x38],R12W",write stack
cpu_init_exception_handling,0xbe,ctx->wordctx->ptrctx->rbp - 0x33,"MOV word ptr [RBP + -0x33],R12W",write stack
cpu_init_exception_handling,0xcd,0xffffffff82e4b8d0,CALL qword ptr [0xffffffff82e4b8d0],in-direct call
cpu_init_exception_handling,0xe2,ctx->rbx + 0x70,"MOV dword ptr [RBX + 0x70],0x0",write other [TODO]
cpu_init_exception_handling,0xf2,ctx->rbx + 0x24,"MOV qword ptr [RBX + 0x24],RDX",write other [TODO]
cpu_init_exception_handling,0xfd,ctx->rbx + 0x2c,"MOV qword ptr [RBX + 0x2c],RDX",write other [TODO]
cpu_init_exception_handling,0x108,ctx->rbx + 0x34,"MOV qword ptr [RBX + 0x34],RDX",write other [TODO]
cpu_init_exception_handling,0x119,ctx->rbx + 0x44,"MOV qword ptr [RBX + 0x44],RAX",write other [TODO]
cpu_init_exception_handling,0x122,ctx->rbx + 0x3c,"MOV qword ptr [RBX + 0x3c],RDX",write other [TODO]
cpu_init_exception_handling,0x12b,ctx->wordctx->ptrctx->rbx + 0x66,"MOV word ptr [RBX + 0x66],AX",write other [TODO]
cpu_init_exception_handling,0x12f,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],0x0",write other [TODO]
cpu_init_exception_handling,0x137,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
cpu_init_exception_handling,0x13f,ctx->rbx + 0x4080,"MOV qword ptr [RBX + 0x4080],-0x1",write other [TODO]
cpu_init_exception_handling,0x14a,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
cpu_init_exception_handling,0x154,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
cpu_init_exception_handling,0x16a,ctx->wordctx->ptrctx->rbp - 0x38,"MOV word ptr [RBP + -0x38],DX",write stack
cpu_init_exception_handling,0x17b,ctx->wordctx->ptrctx->rbp - 0x36,"MOV word ptr [RBP + -0x36],AX",write stack
cpu_init_exception_handling,0x186,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
cpu_init_exception_handling,0x18e,ctx->rbp - 0x34,"MOV byte ptr [RBP + -0x34],DL",write stack
cpu_init_exception_handling,0x19c,ctx->rbp - 0x33,"MOV byte ptr [RBP + -0x33],0x89",write stack
cpu_init_exception_handling,0x1a0,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],DL",write stack
cpu_init_exception_handling,0x1a6,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
cpu_init_exception_handling,0x1a9,0xffffffff82e4b8d0,CALL qword ptr [0xffffffff82e4b8d0],in-direct call
cpu_init_exception_handling,0x1af,0xffffffff82e4b890,CALL qword ptr [0xffffffff82e4b890],in-direct call
cpu_init_exception_handling,0x1b5,0xffffffff81085330,CALL 0xffffffff81085330,direct call
cpu_init_exception_handling,0x1ba,0xffffffff81036f60,CALL 0xffffffff81036f60,direct call
cpu_init_exception_handling,0x1cd,,RET,ret
cpu_init,0x71,ctx->gs + 0x2db00,"MOV dword ptr GS:[0x2db00],EAX",write other [TODO]
cpu_init,0x82,0xffffffff8104b4e0,CALL 0xffffffff8104b4e0,direct call
cpu_init,0x8a,0xffffffff8104b6b0,CALL 0xffffffff8104b6b0,direct call
cpu_init,0x92,0xffffffff8104b7f0,CALL 0xffffffff8104b7f0,direct call
cpu_init,0x9b,ctx->r13 + 0x14c0,"MOV qword ptr [R13 + 0x14c0],0x0",write other [TODO]
cpu_init,0xa8,ctx->r13 + 0x14c8,"MOV qword ptr [R13 + 0x14c8],0x0",write other [TODO]
cpu_init,0xb3,ctx->r13 + 0x14d0,"MOV qword ptr [R13 + 0x14d0],0x0",write other [TODO]
cpu_init,0xbe,0xffffffff8104c6b0,CALL 0xffffffff8104c6b0,direct call
cpu_init,0xce,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cpu_init,0xdf,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cpu_init,0xe5,0xffffffff81070570,CALL 0xffffffff81070570,direct call
cpu_init,0xf9,ctx->r13 + 0x928,"MOV qword ptr [R13 + 0x928],-0x7d024660",write other [TODO]
cpu_init,0x10a,0xffffffff8108c6f0,CALL 0xffffffff8108c6f0,direct call
cpu_init,0x119,0xffffffff8108c6c0,CALL 0xffffffff8108c6c0,direct call
cpu_init,0x121,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
cpu_init,0x12d,0xffffffff82e4b8f0,CALL qword ptr [0xffffffff82e4b8f0],in-direct call
cpu_init,0x13f,0xffffffff8103b2e0,CALL 0xffffffff8103b2e0,direct call
cpu_init,0x152,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
cpu_init,0x16c,0xffffffff81042cd0,CALL 0xffffffff81042cd0,direct call
cpu_init,0x171,0xffffffff81075fa0,CALL 0xffffffff81075fa0,direct call
cpu_init,0x17d,0xffffffff8104b6f0,CALL 0xffffffff8104b6f0,direct call
cpu_init,0x188,,RET,ret
cpu_init,0x1a4,0xffffffff8105a450,CALL 0xffffffff8105a450,direct call
cpu_init,0x1ae,0xffffffff81076540,CALL 0xffffffff81076540,direct call
cpu_init,0x1b6,0xffffffff8104b6f0,CALL 0xffffffff8104b6f0,direct call
cpu_init,0x1c1,,RET,ret
cpu_init,0x1f2,ctx->rax,CALL RAX,in-direct call
cpu_init_secondary,0x4,0xffffffff8104c790,CALL 0xffffffff8104c790,direct call
cpu_init_secondary,0x9,0xffffffff8104c980,CALL 0xffffffff8104c980,direct call
cpu_init_secondary,0xf,,RET,ret
arch_smt_update,0x4,0xffffffff8104d220,CALL 0xffffffff8104d220,direct call
arch_smt_update,0x9,0xffffffff81070d20,CALL 0xffffffff81070d20,direct call
arch_smt_update,0xf,,RET,ret
x86_init_rdrand,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_init_rdrand,0x2e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
x86_init_rdrand,0x32,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
x86_init_rdrand,0x40,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
x86_init_rdrand,0x4c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
x86_init_rdrand,0x52,,RET,ret
x86_init_rdrand,0x7d,,RET,ret
x86_init_rdrand,0x7e,,RET,ret
x86_cpu_has_min_microcode_rev,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_cpu_has_min_microcode_rev,0x5c,,RET,ret
x86_cpu_has_min_microcode_rev,0x73,,RET,ret
x86_match_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_match_cpu,0x8d,,RET,ret
x86_match_cpu,0xbe,,RET,ret
spec_ctrl_current,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spec_ctrl_current,0x12,,RET,ret
spectre_v2_in_ibrs_mode,0x9,,RET,ret
x86_virt_spec_ctrl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104cdbd,-0x8,,RET,ret
FUN_ffffffff8104cdbd,0x25,0xffffffff81042110,CALL 0xffffffff81042110,direct call
FUN_ffffffff8104cdbd,0x2b,,RET,ret
mmio_stale_data_show_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmio_stale_data_show_state,0x28,ctx->r8,"MOV R8,qword ptr [-0x7ddf6e30 + RAX*0x8]",write other [TODO]
mmio_stale_data_show_state,0x41,ctx->rdx,"MOV RDX,R8",write other [TODO]
mmio_stale_data_show_state,0x4b,0xffffffff81417b00,CALL 0xffffffff81417b00,direct call
mmio_stale_data_show_state,0x53,,RET,ret
mmio_stale_data_show_state,0x64,0xffffffff81417b00,CALL 0xffffffff81417b00,direct call
mmio_stale_data_show_state,0x6c,,RET,ret
mmio_stale_data_show_state,0x7b,0xffffffff81417b00,CALL 0xffffffff81417b00,direct call
mmio_stale_data_show_state,0x83,,RET,ret
mmio_stale_data_show_state,0x84,ctx->rdx,"MOV RDX,R8",write other [TODO]
mmio_stale_data_show_state,0x8e,0xffffffff81417b00,CALL 0xffffffff81417b00,direct call
mmio_stale_data_show_state,0x96,,RET,ret
update_spec_ctrl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_spec_ctrl,0xc,ctx->gs + 0x1fbc8,"MOV qword ptr GS:[0x1fbc8],RDI",write other [TODO]
update_spec_ctrl,0x1f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
update_spec_ctrl,0x26,,RET,ret
update_stibp_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_stibp_msr,0x1e,ctx->gs + 0x1fbc8,"MOV qword ptr GS:[0x1fbc8],RDX",write other [TODO]
update_stibp_msr,0x31,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
update_stibp_msr,0x38,,RET,ret
x86_amd_ssb_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_amd_ssb_disable,0x34,,RET,ret
x86_amd_ssb_disable,0x43,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_amd_ssb_disable,0x4a,,RET,ret
x86_amd_ssb_disable,0x57,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x86_amd_ssb_disable,0x5e,,RET,ret
ib_prctl_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ib_prctl_set,0x24,,RET,ret
ib_prctl_set,0x96,,RET,ret
ib_prctl_set,0xd0,0xffffffff81042340,CALL 0xffffffff81042340,direct call
ib_prctl_set,0xd8,,RET,ret
ssb_prctl_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ssb_prctl_set,0x54,,RET,ret
ssb_prctl_set,0x8d,0xffffffff81042340,CALL 0xffffffff81042340,direct call
ssb_prctl_set,0x95,,RET,ret
ssb_prctl_set,0x9b,,RET,ret
ssb_prctl_set,0xcb,,RET,ret
ssb_prctl_set,0xd1,,RET,ret
update_spec_ctrl_cond,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_spec_ctrl_cond,0x12,ctx->gs + 0x1fbc8,"MOV qword ptr GS:[0x1fbc8],RDI",write other [TODO]
FUN_ffffffff8104d150,0x12,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff8104d150,0x19,,RET,ret
update_srbds_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_srbds_msr,0x36,,RET,ret
update_srbds_msr,0x40,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
update_srbds_msr,0x68,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
update_srbds_msr,0x6f,,RET,ret
unpriv_ebpf_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unpriv_ebpf_notify,0x22,,RET,ret
unpriv_ebpf_notify,0x2a,,RET,ret
unpriv_ebpf_notify,0xc43065,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
cpu_bugs_smt_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_bugs_smt_update,0x11,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_bugs_smt_update,0x172,0xffffffff8127f9f0,CALL 0xffffffff8127f9f0,direct call
arch_prctl_spec_ctrl_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prctl_spec_ctrl_set,0x26,,RET,ret
arch_prctl_spec_ctrl_set,0x27,0xffffffff8104d050,CALL 0xffffffff8104d050,direct call
arch_prctl_spec_ctrl_set,0x2d,,RET,ret
arch_prctl_spec_ctrl_set,0x36,,RET,ret
arch_prctl_spec_ctrl_set,0x37,0xffffffff8104cf60,CALL 0xffffffff8104cf60,direct call
arch_prctl_spec_ctrl_set,0x3d,,RET,ret
arch_seccomp_spec_mitigate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_seccomp_spec_mitigate,0x29,,RET,ret
arch_seccomp_spec_mitigate,0x2f,0xffffffff8104cf60,CALL 0xffffffff8104cf60,direct call
arch_seccomp_spec_mitigate,0x35,,RET,ret
arch_seccomp_spec_mitigate,0x3b,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
arch_seccomp_spec_mitigate,0x3f,0xffffffff8104d050,CALL 0xffffffff8104d050,direct call
arch_prctl_spec_ctrl_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prctl_spec_ctrl_get,0x20,,RET,ret
arch_prctl_spec_ctrl_get,0x73,,RET,ret
arch_prctl_spec_ctrl_get,0xd4,,RET,ret
arch_prctl_spec_ctrl_get,0xfc,,RET,ret
arch_prctl_spec_ctrl_get,0x10c,,RET,ret
arch_prctl_spec_ctrl_get,0x12e,,RET,ret
x86_spec_ctrl_setup_ap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_spec_ctrl_setup_ap,0x21,,RET,ret
x86_spec_ctrl_setup_ap,0x22,0xffffffff8104cf00,CALL 0xffffffff8104cf00,direct call
x86_spec_ctrl_setup_ap,0x28,,RET,ret
x86_spec_ctrl_setup_ap,0x30,ctx->gs + 0x1fbc8,"MOV qword ptr GS:[0x1fbc8],RDX",write other [TODO]
x86_spec_ctrl_setup_ap,0x43,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cpu_show_meltdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_meltdown,0x36,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa656c",write other [TODO]
cpu_show_meltdown,0x3e,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_meltdown,0x46,,RET,ret
cpu_show_meltdown,0x51,ctx->rdx + 0x10,"MOV byte ptr [RDX + 0x10],0x0",write other [TODO]
cpu_show_meltdown,0x56,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_meltdown,0x63,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
cpu_show_meltdown,0x6c,,RET,ret
cpu_show_meltdown,0x7c,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_meltdown,0x84,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_meltdown,0x8c,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],CX",write other [TODO]
cpu_show_meltdown,0x90,,RET,ret
cpu_show_meltdown,0x9b,ctx->rdx + 0x3a,"MOV byte ptr [RDX + 0x3a],0x0",write other [TODO]
cpu_show_meltdown,0xa0,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_meltdown,0xad,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
cpu_show_meltdown,0xbb,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RAX",write other [TODO]
cpu_show_meltdown,0xc9,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],RAX",write other [TODO]
cpu_show_meltdown,0xd7,ctx->rdx + 0x20,"MOV qword ptr [RDX + 0x20],RAX",write other [TODO]
cpu_show_meltdown,0xe5,ctx->rdx + 0x28,"MOV qword ptr [RDX + 0x28],RAX",write other [TODO]
cpu_show_meltdown,0xf3,ctx->rdx + 0x30,"MOV qword ptr [RDX + 0x30],RAX",write other [TODO]
cpu_show_meltdown,0xfc,ctx->wordctx->ptrctx->rdx + 0x38,"MOV word ptr [RDX + 0x38],AX",write other [TODO]
cpu_show_meltdown,0x105,,RET,ret
cpu_show_spectre_v1,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_spectre_v1,0x22,ctx->rdx,"MOV RDX,qword ptr [-0x7ddf6e70 + RAX*0x8]",write other [TODO]
cpu_show_spectre_v1,0x2d,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_spectre_v1,0x35,,RET,ret
cpu_show_spectre_v1,0x40,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_spectre_v1,0x47,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_spectre_v1,0x4f,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cpu_show_spectre_v1,0x58,,RET,ret
cpu_show_spectre_v2,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_spectre_v2,0x101,ctx->r9,"MOV R9,RBX",write other [TODO]
cpu_show_spectre_v2,0x122,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_spectre_v2,0x13b,,RET,ret
cpu_show_spectre_v2,0x16d,0xffffffff8127f390,CALL 0xffffffff8127f390,direct call
cpu_show_spectre_v2,0x188,0xffffffff8127f390,CALL 0xffffffff8127f390,direct call
cpu_show_spectre_v2,0x1c7,0xffffffff8127f390,CALL 0xffffffff8127f390,direct call
cpu_show_spectre_v2,0x1f6,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_spectre_v2,0x203,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
cpu_show_spectre_v2,0x211,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RAX",write other [TODO]
cpu_show_spectre_v2,0x21f,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],RAX",write other [TODO]
cpu_show_spectre_v2,0x22d,ctx->rdx + 0x20,"MOV qword ptr [RDX + 0x20],RAX",write other [TODO]
cpu_show_spectre_v2,0x236,ctx->wordctx->ptrctx->rdx + 0x28,"MOV word ptr [RDX + 0x28],CX",write other [TODO]
cpu_show_spectre_v2,0x249,ctx->rdx + 0x10,"MOV dword ptr [RDX + 0x10],0xa4543",write other [TODO]
cpu_show_spectre_v2,0x250,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_spectre_v2,0x25d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
cpu_show_spectre_v2,0x274,,RET,ret
cpu_show_spectre_v2,0x284,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_spectre_v2,0x28b,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_spectre_v2,0x293,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],DI",write other [TODO]
cpu_show_spectre_v2,0x2a5,,RET,ret
cpu_show_spec_store_bypass,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_spec_store_bypass,0x2f,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_spec_store_bypass,0x37,,RET,ret
cpu_show_spec_store_bypass,0x42,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_spec_store_bypass,0x49,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_spec_store_bypass,0x51,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cpu_show_spec_store_bypass,0x5a,,RET,ret
cpu_show_l1tf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_l1tf,0x2e,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0xa656c",write other [TODO]
cpu_show_l1tf,0x35,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_l1tf,0x3d,,RET,ret
cpu_show_l1tf,0x75,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_l1tf,0x7d,,RET,ret
cpu_show_l1tf,0x88,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_l1tf,0x8f,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_l1tf,0x97,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cpu_show_l1tf,0xa0,,RET,ret
cpu_show_l1tf,0xb9,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_l1tf,0xc1,,RET,ret
cpu_show_l1tf,0xd9,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_l1tf,0xe4,,RET,ret
cpu_show_mds,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_mds,0x28,ctx->r8,"MOV R8,qword ptr [-0x7ddf6de0 + RCX*0x8]",write other [TODO]
cpu_show_mds,0x56,ctx->rdx,"MOV RDX,R8",write other [TODO]
cpu_show_mds,0x60,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_mds,0x68,,RET,ret
cpu_show_mds,0x88,ctx->rdx,"MOV RDX,R8",write other [TODO]
cpu_show_mds,0x92,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_mds,0x9a,,RET,ret
cpu_show_mds,0xa5,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_mds,0xac,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_mds,0xb4,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cpu_show_mds,0xbd,,RET,ret
cpu_show_tsx_async_abort,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_tsx_async_abort,0x20,ctx->rdx,"MOV RDX,qword ptr [-0x7ddf6e00 + RDX*0x8]",write other [TODO]
cpu_show_tsx_async_abort,0x52,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_tsx_async_abort,0x5a,,RET,ret
cpu_show_tsx_async_abort,0x6b,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_tsx_async_abort,0x73,,RET,ret
cpu_show_tsx_async_abort,0x7b,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_tsx_async_abort,0x83,,RET,ret
cpu_show_tsx_async_abort,0x8e,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_tsx_async_abort,0x95,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_tsx_async_abort,0x9d,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cpu_show_tsx_async_abort,0xa6,,RET,ret
cpu_show_itlb_multihit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_itlb_multihit,0x45,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
cpu_show_itlb_multihit,0x52,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
cpu_show_itlb_multihit,0x60,ctx->wordctx->ptrctx->rbx + 0x20,"MOV word ptr [RBX + 0x20],CX",write other [TODO]
cpu_show_itlb_multihit,0x64,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
cpu_show_itlb_multihit,0x72,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
cpu_show_itlb_multihit,0x80,,RET,ret
cpu_show_itlb_multihit,0x81,0xffffffff8104b540,CALL 0xffffffff8104b540,direct call
cpu_show_itlb_multihit,0xa2,ctx->rbx + 0x22,"MOV byte ptr [RBX + 0x22],0x0",write other [TODO]
cpu_show_itlb_multihit,0xa6,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
cpu_show_itlb_multihit,0xb3,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
cpu_show_itlb_multihit,0xc1,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
cpu_show_itlb_multihit,0xcf,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
cpu_show_itlb_multihit,0xd8,ctx->wordctx->ptrctx->rbx + 0x20,"MOV word ptr [RBX + 0x20],AX",write other [TODO]
cpu_show_itlb_multihit,0xe6,,RET,ret
cpu_show_itlb_multihit,0xf1,ctx->rbx + 0x10,"MOV byte ptr [RBX + 0x10],0x0",write other [TODO]
cpu_show_itlb_multihit,0xf5,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
cpu_show_itlb_multihit,0x102,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
cpu_show_itlb_multihit,0x110,,RET,ret
cpu_show_itlb_multihit,0x120,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_itlb_multihit,0x127,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_itlb_multihit,0x12f,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],SI",write other [TODO]
cpu_show_itlb_multihit,0x138,,RET,ret
cpu_show_itlb_multihit,0x148,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],0x656c6261",write other [TODO]
cpu_show_itlb_multihit,0x14f,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
cpu_show_itlb_multihit,0x15c,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
cpu_show_itlb_multihit,0x16a,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
cpu_show_itlb_multihit,0x173,ctx->wordctx->ptrctx->rbx + 0x1c,"MOV word ptr [RBX + 0x1c],DX",write other [TODO]
cpu_show_itlb_multihit,0x177,ctx->rbx + 0x1e,"MOV byte ptr [RBX + 0x1e],0x0",write other [TODO]
cpu_show_srbds,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_srbds,0x24,ctx->rdx,"MOV RDX,qword ptr [-0x7ddf6e60 + RAX*0x8]",write other [TODO]
cpu_show_srbds,0x2f,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_srbds,0x37,,RET,ret
cpu_show_srbds,0x42,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_srbds,0x49,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_srbds,0x51,ctx->wordctx->ptrctx->rdx + 0xc,"MOV word ptr [RDX + 0xc],AX",write other [TODO]
cpu_show_srbds,0x5a,,RET,ret
cpu_show_mmio_stale_data,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_mmio_stale_data,0x28,0xffffffff8104cdf0,CALL 0xffffffff8104cdf0,direct call
cpu_show_mmio_stale_data,0x2e,,RET,ret
cpu_show_mmio_stale_data,0x40,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],0x64657463",write other [TODO]
cpu_show_mmio_stale_data,0x47,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
cpu_show_mmio_stale_data,0x4f,ctx->wordctx->ptrctx->rdi + 0xc,"MOV word ptr [RDI + 0xc],AX",write other [TODO]
cpu_show_mmio_stale_data,0x58,,RET,ret
cpu_show_retbleed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_show_retbleed,0x6c,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_retbleed,0x74,,RET,ret
cpu_show_retbleed,0x84,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
cpu_show_retbleed,0x8c,,RET,ret
cpu_show_retbleed,0xa1,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
cpu_show_retbleed,0xae,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
cpu_show_retbleed,0xbc,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
cpu_show_retbleed,0xca,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
cpu_show_retbleed,0xd8,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
cpu_show_retbleed,0xe6,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],RAX",write other [TODO]
cpu_show_retbleed,0xf4,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],RAX",write other [TODO]
cpu_show_retbleed,0x102,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RAX",write other [TODO]
cpu_show_retbleed,0x10b,ctx->wordctx->ptrctx->rdi + 0x40,"MOV word ptr [RDI + 0x40],AX",write other [TODO]
cpu_show_retbleed,0x114,,RET,ret
cpu_show_retbleed,0x11f,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],0x64657463",write other [TODO]
cpu_show_retbleed,0x126,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
cpu_show_retbleed,0x133,ctx->wordctx->ptrctx->rdi + 0xc,"MOV word ptr [RDI + 0xc],DX",write other [TODO]
cpu_show_retbleed,0x137,,RET,ret
arch_set_max_freq_ratio,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_set_max_freq_ratio,0x16,0xffffffff82e3fde8,"MOV qword ptr [0xffffffff82e3fde8],RAX",write .data
arch_set_max_freq_ratio,0x21,,RET,ret
freq_invariance_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
freq_invariance_enable,0x12,0xffffffff8127f930,CALL 0xffffffff8127f930,direct call
freq_invariance_enable,0x1e,0xffffffff817f9ec0,CALL 0xffffffff817f9ec0,direct call
freq_invariance_enable,0x23,ctx->rsi,"MOV RSI,qword ptr [0xffffffff82e3fde8]",write other [TODO]
freq_invariance_enable,0x31,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
freq_invariance_enable,0x37,,RET,ret
disable_freq_invariance_workfn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disable_freq_invariance_workfn,0x10,0xffffffff8127f9f0,CALL 0xffffffff8127f9f0,direct call
disable_freq_invariance_workfn,0x16,,RET,ret
init_counter_refs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_counter_refs,0xf,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_counter_refs,0x1d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_counter_refs,0x23,ctx->gs + 0x30c60,"MOV qword ptr GS:[0x30c60],RBX",write other [TODO]
init_counter_refs,0x2b,ctx->gs + 0x30c68,"MOV qword ptr GS:[0x30c68],RAX",write other [TODO]
init_counter_refs,0x38,,RET,ret
freq_invariance_set_perf_ratio,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
freq_invariance_set_perf_ratio,0xe,0xffffffff82e3fdf0,"MOV qword ptr [0xffffffff82e3fdf0],RDI",write .data
freq_invariance_set_perf_ratio,0x1c,0xffffffff82e3fde8,"MOV qword ptr [0xffffffff82e3fde8],RDI",write .data
freq_invariance_set_perf_ratio,0x23,0xffffffff8104e120,CALL 0xffffffff8104e120,direct call
freq_invariance_set_perf_ratio,0x29,,RET,ret
arch_scale_freq_tick,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104e2bc,0x6,,RET,ret
arch_freq_get_on_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104e32d,0x4,0xffffffff819fab20,CALL 0xffffffff819fab20,direct call
FUN_ffffffff8104e32d,0x13,,RET,ret
ap_init_aperfmperf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8104e365,0x0,,RET,ret
do_clear_cpu_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_clear_cpu_cap,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
do_clear_cpu_cap,0xc6,,RET,ret
do_clear_cpu_cap,0xce,0xffffffff8104e370,CALL 0xffffffff8104e370,direct call
do_clear_cpu_cap,0xe8,0xffffffff8104e370,CALL 0xffffffff8104e370,direct call
do_clear_cpu_cap,0xff,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
clear_cpu_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_cpu_cap,0x9,0xffffffff8104e370,CALL 0xffffffff8104e370,direct call
clear_cpu_cap,0xf,,RET,ret
setup_clear_cpu_cap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_clear_cpu_cap,0xd,0xffffffff8104e370,CALL 0xffffffff8104e370,direct call
setup_clear_cpu_cap,0x13,,RET,ret
max_time_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
max_time_show,0x1c,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
max_time_show,0x24,,RET,ret
enable_c02_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enable_c02_show,0x1e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
enable_c02_show,0x29,,RET,ret
enable_c02_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enable_c02_store,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
enable_c02_store,0x27,0xffffffff81607890,CALL 0xffffffff81607890,direct call
enable_c02_store,0x46,,RET,ret
enable_c02_store,0x4e,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
enable_c02_store,0x8c,0xffffffff82e3ff00,"MOV dword ptr [0xffffffff82e3ff00],EAX",write .data
enable_c02_store,0x92,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
enable_c02_store,0x9e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
enable_c02_store,0xa8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
umwait_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umwait_cpu_online,0x9,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
umwait_cpu_online,0xf,ctx->esi,"MOV ESI,dword ptr [0xffffffff82e3ff00]",write other [TODO]
umwait_cpu_online,0x1c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
umwait_cpu_online,0x22,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
umwait_cpu_online,0x2b,,RET,ret
max_time_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
max_time_store,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
max_time_store,0x29,0xffffffff81607bc0,CALL 0xffffffff81607bc0,direct call
max_time_store,0x3f,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
max_time_store,0x44,ctx->edx,"MOV EDX,dword ptr [0xffffffff82e3ff00]",write other [TODO]
max_time_store,0x4d,ctx->ecx,"MOV ECX,EDX",write other [TODO]
max_time_store,0x5d,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
max_time_store,0x79,,RET,ret
max_time_store,0x9f,0xffffffff82e3ff00,"MOV dword ptr [0xffffffff82e3ff00],EAX",write .data
max_time_store,0xa5,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
max_time_store,0xb9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
umwait_update_control_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umwait_update_control_msr,0xb,ctx->esi,"MOV ESI,dword ptr [0xffffffff82e3ff00]",write other [TODO]
umwait_update_control_msr,0x16,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
umwait_update_control_msr,0x1d,,RET,ret
umwait_cpu_offline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umwait_cpu_offline,0x16,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
umwait_cpu_offline,0x1f,,RET,ret
umwait_syscore_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umwait_syscore_resume,0xb,ctx->esi,"MOV ESI,dword ptr [0xffffffff82e3ff00]",write other [TODO]
umwait_syscore_resume,0x16,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
umwait_syscore_resume,0x1d,,RET,ret
c_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
c_stop,0xa,,RET,ret
show_cpuinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_cpuinfo,0x65,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x8d,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0xd2,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0xe1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
show_cpuinfo,0xf2,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
show_cpuinfo,0x103,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x11a,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x131,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x148,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x15f,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x172,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x181,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
show_cpuinfo,0x18c,ctx->rdx,"MOV RDX,qword ptr [-0x7ddf65a0 + RBX*0x8]",write other [TODO]
show_cpuinfo,0x1a3,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x1d5,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
show_cpuinfo,0x1e7,ctx->rdx,"MOV RDX,qword ptr [-0x7ddf66a0 + RBX*0x8]",write other [TODO]
show_cpuinfo,0x1fe,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x276,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x28d,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x2ad,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x2c3,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x2dc,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x2eb,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
show_cpuinfo,0x30a,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x327,ctx->rcx,"MOV RCX,qword ptr [-0x7ddf51a0 + RBX*0x8]",write other [TODO]
show_cpuinfo,0x342,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x357,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
show_cpuinfo,0x36c,,RET,ret
show_cpuinfo,0x377,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x38a,0xffffffff8104e2d0,CALL 0xffffffff8104e2d0,direct call
show_cpuinfo,0x3b0,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x3ce,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
show_cpuinfo,0x3e2,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
show_cpuinfo,0x3fc,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
show_cpuinfo,0x41e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
c_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
c_start,0x17,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
c_start,0x1d,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
c_start,0x26,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
c_start,0x48,,RET,ret
c_next,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
c_next,0x10,0xffffffff8104eb60,CALL 0xffffffff8104eb60,direct call
c_next,0x16,,RET,ret
init_ia32_feat_ctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_ia32_feat_ctl,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_ia32_feat_ctl,0x2c,0xffffffff810491d0,CALL 0xffffffff810491d0,direct call
init_ia32_feat_ctl,0x3c,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
init_ia32_feat_ctl,0x6b,ctx->rbp - 0x39,"MOV byte ptr [RBP + -0x39],CL",write stack
init_ia32_feat_ctl,0x7a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
init_ia32_feat_ctl,0xb9,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
init_ia32_feat_ctl,0xea,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_ia32_feat_ctl,0xfc,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],EAX",write other [TODO]
init_ia32_feat_ctl,0x101,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
init_ia32_feat_ctl,0x113,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],EAX",write other [TODO]
init_ia32_feat_ctl,0x118,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
init_ia32_feat_ctl,0x123,ctx->r12 + 0x14,"MOV qword ptr [R12 + 0x14],RAX",write other [TODO]
init_ia32_feat_ctl,0x128,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_ia32_feat_ctl,0x13a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
init_ia32_feat_ctl,0x13e,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
init_ia32_feat_ctl,0x153,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
init_ia32_feat_ctl,0x1a3,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],R13D",write other [TODO]
init_ia32_feat_ctl,0x2cd,ctx->rbp - 0x39,"MOV byte ptr [RBP + -0x39],DL",write stack
init_ia32_feat_ctl,0x2de,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
init_ia32_feat_ctl,0x2ed,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
init_ia32_feat_ctl,0x370,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
init_ia32_feat_ctl,0x37d,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
init_ia32_feat_ctl,0x38c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x40000",write stack
init_ia32_feat_ctl,0x3cb,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x40000",write stack
init_ia32_feat_ctl,0x3f6,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EAX",write other [TODO]
paravirt_read_msr,0x6,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr,0xd,,RET,ret
bsp_init_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bsp_init_intel,0x9,0xffffffff8105cdb0,CALL 0xffffffff8105cdb0,direct call
bsp_init_intel,0xf,,RET,ret
splitlock_cpu_offline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
splitlock_cpu_offline,0x21,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
splitlock_cpu_offline,0x2a,,RET,ret
intel_detect_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_detect_tlb,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
intel_detect_tlb,0x2f,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x2",write stack
intel_detect_tlb,0x3e,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
intel_detect_tlb,0x4d,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
intel_detect_tlb,0x57,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
intel_detect_tlb,0x62,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x0",write stack
intel_detect_tlb,0x73,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x2",write stack
intel_detect_tlb,0x82,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
intel_detect_tlb,0x91,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
intel_detect_tlb,0x9e,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
intel_detect_tlb,0xac,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
intel_detect_tlb,0xba,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
intel_detect_tlb,0xc8,ctx->rbp - 0x5b,"MOV byte ptr [RBP + -0x5b],0x0",write stack
intel_detect_tlb,0xd1,ctx->rbp - 0x54,"MOV byte ptr [RBP + -0x54],0x0",write stack
intel_detect_tlb,0xe1,ctx->wordctx->ptrctx->rbp - 0x5a,"MOV word ptr [RBP + -0x5a],AX",write stack
intel_detect_tlb,0xec,ctx->rbp - 0x53,"MOV byte ptr [RBP + -0x53],0x0",write stack
intel_detect_tlb,0xf8,ctx->wordctx->ptrctx->rbp - 0x5e,"MOV word ptr [RBP + -0x5e],AX",write stack
intel_detect_tlb,0x103,ctx->rbp - 0x51,"MOV byte ptr [RBP + -0x51],0x0",write stack
intel_detect_tlb,0x10f,ctx->rbp - 0x52,"MOV byte ptr [RBP + -0x52],0x0",write stack
intel_detect_tlb,0x1b0,ctx->rbp - 0x52,"MOV byte ptr [RBP + -0x52],CL",write stack
intel_detect_tlb,0x1bf,ctx->rbp - 0x53,"MOV byte ptr [RBP + -0x53],CL",write stack
intel_detect_tlb,0x1e8,ctx->wordctx->ptr0xffffffff83117b3a,"MOV word ptr [0xffffffff83117b3a],DI",write .data
intel_detect_tlb,0x1f3,ctx->wordctx->ptr0xffffffff83117b40,"MOV word ptr [0xffffffff83117b40],R10W",write .data
intel_detect_tlb,0x205,ctx->wordctx->ptr0xffffffff83117b3c,"MOV word ptr [0xffffffff83117b3c],AX",write .data
intel_detect_tlb,0x212,ctx->wordctx->ptr0xffffffff83117b42,"MOV word ptr [0xffffffff83117b42],R11W",write .data
intel_detect_tlb,0x220,ctx->wordctx->ptr0xffffffff83117b3e,"MOV word ptr [0xffffffff83117b3e],R9W",write .data
intel_detect_tlb,0x22e,ctx->wordctx->ptr0xffffffff83117b44,"MOV word ptr [0xffffffff83117b44],R8W",write .data
intel_detect_tlb,0x267,,RET,ret
intel_detect_tlb,0x287,ctx->wordctx->ptrctx->rbp - 0x5a,"MOV word ptr [RBP + -0x5a],CX",write stack
intel_detect_tlb,0x2a0,ctx->rbp - 0x54,"MOV byte ptr [RBP + -0x54],CL",write stack
intel_detect_tlb,0x307,ctx->rbp - 0x51,"MOV byte ptr [RBP + -0x51],AL",write stack
intel_detect_tlb,0x34b,ctx->rbp - 0x51,"MOV byte ptr [RBP + -0x51],CL",write stack
intel_detect_tlb,0x38d,ctx->rbp - 0x52,"MOV byte ptr [RBP + -0x52],CL",write stack
intel_detect_tlb,0x3a2,ctx->rbp - 0x51,"MOV byte ptr [RBP + -0x51],CL",write stack
intel_detect_tlb,0x3af,ctx->rbp - 0x53,"MOV byte ptr [RBP + -0x53],CL",write stack
intel_detect_tlb,0x3bb,ctx->wordctx->ptrctx->rbp - 0x5a,"MOV word ptr [RBP + -0x5a],CX",write stack
intel_detect_tlb,0x3dd,ctx->rbp - 0x54,"MOV byte ptr [RBP + -0x54],CL",write stack
intel_detect_tlb,0x423,ctx->rbp - 0x52,"MOV byte ptr [RBP + -0x52],CL",write stack
intel_detect_tlb,0x42e,ctx->rbp - 0x51,"MOV byte ptr [RBP + -0x51],AL",write stack
intel_detect_tlb,0x459,ctx->wordctx->ptrctx->rbp - 0x5e,"MOV word ptr [RBP + -0x5e],AX",write stack
intel_detect_tlb,0x469,ctx->rbp - 0x5b,"MOV byte ptr [RBP + -0x5b],AL",write stack
intel_detect_tlb,0x4fd,ctx->rbp - 0x52,"MOV byte ptr [RBP + -0x52],AL",write stack
intel_detect_tlb,0x512,ctx->wordctx->ptr0xffffffff83117b38,"MOV word ptr [0xffffffff83117b38],AX",write .data
intel_detect_tlb,0x51e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__split_lock_reenable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__split_lock_reenable,0x21,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__split_lock_reenable,0x2e,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
__split_lock_reenable,0x34,,RET,ret
intel_cpu_collect_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_cpu_collect_info,0x1c,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
intel_cpu_collect_info,0x23,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
intel_cpu_collect_info,0x2b,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],0x0",write other [TODO]
intel_cpu_collect_info,0x3a,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
intel_cpu_collect_info,0x44,0xffffffff81c89f10,CALL 0xffffffff81c89f10,direct call
intel_cpu_collect_info,0x74,ctx->r12,"MOV dword ptr [R12],R13D",write other [TODO]
intel_cpu_collect_info,0x7b,ctx->r12 + 0x4,"MOV dword ptr [R12 + 0x4],EDI",write other [TODO]
intel_cpu_collect_info,0x82,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],0x1",write other [TODO]
intel_cpu_collect_info,0x8f,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EDX",write other [TODO]
intel_cpu_collect_info,0x99,,RET,ret
split_lock_warn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
split_lock_warn,0x37,0xffffffff81154020,CALL 0xffffffff81154020,direct call
split_lock_warn,0x45,,RET,ret
split_lock_warn,0x4d,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
split_lock_warn,0x78,0xffffffff810c65a0,CALL 0xffffffff810c65a0,direct call
split_lock_warn,0x8f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
split_lock_warn,0x9e,0xffffffff82000810,CALL 0xffffffff82000810,direct call
split_lock_warn,0xb6,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
handle_guest_split_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_guest_split_lock,0x36,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],0x0",write other [TODO]
handle_guest_split_lock,0x41,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0x11",write other [TODO]
handle_guest_split_lock,0x4c,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
handle_guest_split_lock,0x54,,RET,ret
handle_guest_split_lock,0x55,0xffffffff8104f670,CALL 0xffffffff8104f670,direct call
handle_guest_split_lock,0x60,,RET,ret
split_lock_verify_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
split_lock_verify_msr,0x2a,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
split_lock_verify_msr,0x30,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
split_lock_verify_msr,0x60,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
split_lock_verify_msr,0x85,,RET,ret
split_lock_verify_msr,0x89,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
split_lock_verify_msr,0x97,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
early_init_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
early_init_intel,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
early_init_intel,0x14c,0xffffffff816471e0,CALL 0xffffffff816471e0,direct call
early_init_intel,0x155,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x0",write stack
early_init_intel,0x164,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
early_init_intel,0x173,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_intel,0x17f,ctx->r12 + 0x24,"MOV dword ptr [R12 + 0x24],EAX",write other [TODO]
early_init_intel,0x184,0xffffffff8104bbb0,CALL 0xffffffff8104bbb0,direct call
early_init_intel,0x1d7,ctx->r12 + 0x110,"MOV dword ptr [R12 + 0x110],EDX",write other [TODO]
init_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_intel,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
init_intel,0x24,0xffffffff8104f850,CALL 0xffffffff8104f850,direct call
init_intel,0x2c,0xffffffff8104b1d0,CALL 0xffffffff8104b1d0,direct call
init_intel,0x48,0xffffffff8104a550,CALL 0xffffffff8104a550,direct call
init_intel,0x8e,ctx->r12 + 0xd4,"MOV dword ptr [R12 + 0xd4],EAX",write other [TODO]
init_intel,0xa1,0xffffffff81094b30,CALL 0xffffffff81094b30,direct call
init_intel,0xc9,0xffffffff81094b80,CALL 0xffffffff81094b80,direct call
init_intel,0xd1,0xffffffff8104ebd0,CALL 0xffffffff8104ebd0,direct call
init_intel,0x29d,0xffffffff8104b840,CALL 0xffffffff8104b840,direct call
init_intel,0x2ac,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_intel,0x2e5,0xffffffff82e40018,"MOV dword ptr [0xffffffff82e40018],0x1",write .data
init_intel,0x34d,0xffffffff83402a80,"MOV qword ptr [0xffffffff83402a80],RAX",write .data
init_intel,0x36e,0xffffffff82e40018,"MOV dword ptr [0xffffffff82e40018],0x1",write .data
init_intel,0x382,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_intel,0x3ad,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0xa",write stack
init_intel,0x3b8,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x0",write stack
init_intel,0x3ca,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_intel,0xc408fd,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_intel,0xc40918,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_intel,0xc40935,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_intel,0xc4093a,0xffffffff82e40018,"MOV dword ptr [0xffffffff82e40018],0x1",write .data
init_intel,0xc40950,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
init_intel,0xc40953,0xffffffff830c7be5,"MOV byte ptr [0xffffffff830c7be5],0x1",write .data
init_intel,0xc4095a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_intel,0xc4096e,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],ESI",write stack
init_intel,0xc40971,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
init_intel,0xc40974,0xffffffff830c7be6,"MOV byte ptr [0xffffffff830c7be6],0x1",write .data
init_intel,0xc4097b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_intel,0xc40992,0xffffffff830c7be8,"MOV byte ptr [0xffffffff830c7be8],0x1",write .data
init_intel,0xc40999,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_intel,0xc409aa,0xffffffff830c7be9,"MOV byte ptr [0xffffffff830c7be9],0x1",write .data
init_intel,0xc409b1,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
handle_user_split_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_user_split_lock,0x24,0xffffffff8104f670,CALL 0xffffffff8104f670,direct call
handle_user_split_lock,0x2f,,RET,ret
handle_user_split_lock,0x30,,RET,ret
handle_bus_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_bus_lock,0x27,,RET,ret
handle_bus_lock,0x2d,0xffffffff81153fe0,CALL 0xffffffff81153fe0,direct call
handle_bus_lock,0x40,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
handle_bus_lock,0x57,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
handle_bus_lock,0x69,,RET,ret
handle_bus_lock,0x76,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
handle_bus_lock,0x80,,RET,ret
get_this_hybrid_cpu_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_this_hybrid_cpu_type,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
FUN_ffffffff810501ba,-0x1,,RET,ret
FUN_ffffffff810501ba,0x4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pconfig_target_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pconfig_target_supported,0x1f,,RET,ret
tsx_dev_mode_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8105023a,0x0,,RET,ret
tsx_clear_cpuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsx_ap_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsx_ap_init,0xa,0xffffffff81050200,CALL 0xffffffff81050200,direct call
tsx_ap_init,0x28,,RET,ret
tsx_ap_init,0x31,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
tsx_ap_init,0x47,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
tsx_ap_init,0x52,,RET,ret
tsx_ap_init,0x53,0xffffffff81050270,CALL 0xffffffff81050270,direct call
tsx_ap_init,0x5d,,RET,ret
tsx_ap_init,0x66,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
tsx_ap_init,0x7b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
tsx_ap_init,0x86,,RET,ret
energy_perf_bias_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
energy_perf_bias_store,0x34,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
energy_perf_bias_store,0x3a,0xffffffff81606390,CALL 0xffffffff81606390,direct call
energy_perf_bias_store,0x4c,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
energy_perf_bias_store,0x5c,0xffffffff81646600,CALL 0xffffffff81646600,direct call
energy_perf_bias_store,0x79,0xffffffff816466f0,CALL 0xffffffff816466f0,direct call
energy_perf_bias_store,0xa1,,RET,ret
energy_perf_bias_store,0xaf,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
energy_perf_bias_store,0xc8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
energy_perf_bias_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
energy_perf_bias_show,0x2a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
energy_perf_bias_show,0x30,0xffffffff81646600,CALL 0xffffffff81646600,direct call
energy_perf_bias_show,0x47,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
energy_perf_bias_show,0x62,,RET,ret
energy_perf_bias_show,0x63,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_epb_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_epb_restore,0x1a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_epb_restore,0x3c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_epb_restore,0x47,,RET,ret
intel_epb_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_epb_online,0xb,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
intel_epb_online,0x13,0xffffffff810504a0,CALL 0xffffffff810504a0,direct call
intel_epb_online,0x28,,RET,ret
intel_epb_online,0x33,0xffffffff81418f80,CALL 0xffffffff81418f80,direct call
intel_epb_online,0x3f,,RET,ret
intel_epb_save,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_epb_save,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_epb_save,0x1a,ctx->gs + 0x1fbd8,"MOV byte ptr GS:[0x1fbd8],AL",write other [TODO]
intel_epb_save,0x24,,RET,ret
intel_epb_offline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_epb_offline,0x9,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
intel_epb_offline,0x17,0xffffffff81050550,CALL 0xffffffff81050550,direct call
intel_epb_offline,0x1f,,RET,ret
intel_epb_offline,0x2a,0xffffffff81419080,CALL 0xffffffff81419080,direct call
intel_epb_offline,0x2f,0xffffffff81050550,CALL 0xffffffff81050550,direct call
intel_epb_offline,0x37,,RET,ret
amd_get_nodes_per_socket,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_nodes_per_socket,0x10,,RET,ret
amd_get_highest_perf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_highest_perf,0x20,,RET,ret
amd_get_highest_perf,0x3e,,RET,ret
amd_get_highest_perf,0x59,,RET,ret
clear_rdrand_cpuid_bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_rdrand_cpuid_bit,0x3e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
clear_rdrand_cpuid_bit,0x44,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x1",write stack
clear_rdrand_cpuid_bit,0x4b,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
clear_rdrand_cpuid_bit,0x52,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
clear_rdrand_cpuid_bit,0x8f,0xffffffff816471e0,CALL 0xffffffff816471e0,direct call
clear_rdrand_cpuid_bit,0x9d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x1",write stack
clear_rdrand_cpuid_bit,0xa7,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
clear_rdrand_cpuid_bit,0xae,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
clear_rdrand_cpuid_bit,0xd0,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
cpu_detect_tlb_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_detect_tlb_amd,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
cpu_detect_tlb_amd,0x57,,RET,ret
cpu_detect_tlb_amd,0x60,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x80000006",write stack
cpu_detect_tlb_amd,0x75,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
cpu_detect_tlb_amd,0x7c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_amd,0x9a,ctx->wordctx->ptr0xffffffff83117b44,"MOV word ptr [0xffffffff83117b44],AX",write .data
cpu_detect_tlb_amd,0xa6,ctx->wordctx->ptr0xffffffff83117b3e,"MOV word ptr [0xffffffff83117b3e],DX",write .data
cpu_detect_tlb_amd,0xc6,ctx->wordctx->ptr0xffffffff83117b3c,"MOV word ptr [0xffffffff83117b3c],AX",write .data
cpu_detect_tlb_amd,0xd0,ctx->wordctx->ptr0xffffffff83117b3a,"MOV word ptr [0xffffffff83117b3a],AX",write .data
cpu_detect_tlb_amd,0xfd,ctx->wordctx->ptr0xffffffff83117b42,"MOV word ptr [0xffffffff83117b42],AX",write .data
cpu_detect_tlb_amd,0x104,ctx->wordctx->ptr0xffffffff83117b40,"MOV word ptr [0xffffffff83117b40],DX",write .data
cpu_detect_tlb_amd,0x11e,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x80000005",write stack
cpu_detect_tlb_amd,0x125,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
cpu_detect_tlb_amd,0x12c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_amd,0x13d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x80000005",write stack
cpu_detect_tlb_amd,0x14c,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
cpu_detect_tlb_amd,0x15b,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_amd,0x168,ctx->wordctx->ptr0xffffffff83117b3c,"MOV word ptr [0xffffffff83117b3c],AX",write .data
cpu_detect_tlb_amd,0x182,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x80000005",write stack
cpu_detect_tlb_amd,0x189,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
cpu_detect_tlb_amd,0x190,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_amd,0x1a7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
bsp_init_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bsp_init_amd,0x1f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
bsp_init_amd,0x40,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
bsp_init_amd,0xaf,0xffffffff8105cdb0,CALL 0xffffffff8105cdb0,direct call
bsp_init_amd,0xcf,,RET,ret
bsp_init_amd,0xfe,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
bsp_init_amd,0x104,0xffffffff826bb9d0,"MOV qword ptr [0xffffffff826bb9d0],RAX",write .data
bsp_init_amd,0x13c,0xffffffff826bb9c8,"MOV qword ptr [0xffffffff826bb9c8],RAX",write .data
bsp_init_amd,0x14d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
bsp_init_amd,0x15d,0xffffffff82e40090,"MOV dword ptr [0xffffffff82e40090],EAX",write .data
bsp_init_amd,0x163,0xffffffff83117b30,"MOV dword ptr [0xffffffff83117b30],EAX",write .data
bsp_init_amd,0x16e,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x8000001e",write stack
bsp_init_amd,0x17d,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
bsp_init_amd,0x18c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
bsp_init_amd,0x19e,0xffffffff82e40090,"MOV dword ptr [0xffffffff82e40090],EAX",write .data
bsp_init_amd,0x1a4,0xffffffff83117b30,"MOV dword ptr [0xffffffff83117b30],EAX",write .data
bsp_init_amd,0x1af,0xffffffff81c8a600,CALL 0xffffffff81c8a600,direct call
bsp_init_amd,0x1b9,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x80000005",write stack
bsp_init_amd,0x1c8,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
bsp_init_amd,0x1d7,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
bsp_init_amd,0x1dd,0xffffffff83117fc0,"MOV dword ptr [0xffffffff83117fc0],0x3",write .data
bsp_init_amd,0x1e7,ctx->ecx,"MOV ECX,dword ptr [RBP + -0x1c]",write other [TODO]
bsp_init_amd,0x208,0xffffffff83117fc8,"MOV qword ptr [0xffffffff83117fc8],RAX",write .data
bsp_init_amd,0x20f,0xffffffff817b7100,CALL 0xffffffff817b7100,direct call
bsp_init_amd,0x21a,0xffffffff83117fd0,"MOV qword ptr [0xffffffff83117fd0],RAX",write .data
bsp_init_amd,0x226,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpu_has_amd_erratum,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_has_amd_erratum,0x7f,,RET,ret
cpu_has_amd_erratum,0x85,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cpu_has_amd_erratum,0x9f,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
early_init_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
early_init_amd,0x20,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
early_init_amd,0x45,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
early_init_amd,0x4b,ctx->rbx + 0x110,"MOV dword ptr [RBX + 0x110],EAX",write other [TODO]
early_init_amd,0xbf,0xffffffff81050b10,CALL 0xffffffff81050b10,direct call
early_init_amd,0x116,,RET,ret
early_init_amd,0x11c,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
early_init_amd,0x12d,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x8000001f",write stack
early_init_amd,0x13f,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
early_init_amd,0x14a,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_amd,0x16f,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
early_init_amd,0x182,0xffffffff8104e490,CALL 0xffffffff8104e490,direct call
early_init_amd,0x18c,0xffffffff8104e490,CALL 0xffffffff8104e490,direct call
early_init_amd,0x1c2,0xffffffff81647150,CALL 0xffffffff81647150,direct call
early_init_amd,0x1d4,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
early_init_amd,0x212,0xffffffff81c65780,CALL 0xffffffff81c65780,direct call
early_init_amd,0x231,0xffffffff8104e490,CALL 0xffffffff8104e490,direct call
early_init_amd,0x23b,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x80000008",write stack
early_init_amd,0x24d,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
early_init_amd,0x258,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_amd,0x26d,ctx->wordctx->ptrctx->rbx + 0xf8,"MOV word ptr [RBX + 0xf8],AX",write other [TODO]
early_init_amd,0x293,ctx->rbx + 0x1e,"MOV byte ptr [RBX + 0x1e],DL",write other [TODO]
early_init_amd,0x2af,0xffffffff81647150,CALL 0xffffffff81647150,direct call
early_init_amd,0x2b9,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x8000001e",write stack
early_init_amd,0x2cb,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
early_init_amd,0x2d6,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_amd,0x2e3,0xffffffff82e3fd64,"MOV dword ptr [0xffffffff82e3fd64],EAX",write .data
early_init_amd,0x2f3,0xffffffff8104e490,CALL 0xffffffff8104e490,direct call
early_init_amd,0x301,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_amd,0x20,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
init_amd,0x26,0xffffffff81050bd0,CALL 0xffffffff81050bd0,direct call
init_amd,0x33,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
init_amd,0x46,0xffffffff81070950,CALL 0xffffffff81070950,direct call
init_amd,0x4b,ctx->wordctx->ptrctx->r12 + 0xfa,"MOV word ptr [R12 + 0xfa],AX",write other [TODO]
init_amd,0x86,0xffffffff81050640,CALL 0xffffffff81050640,direct call
init_amd,0xb1,0xffffffff8104b8a0,CALL 0xffffffff8104b8a0,direct call
init_amd,0xdd,ctx->wordctx->ptrctx->r12 + 0x102,"MOV word ptr [R12 + 0x102],AX",write other [TODO]
init_amd,0xe6,ctx->wordctx->ptrctx->r12 + 0x108,"MOV word ptr [R12 + 0x108],AX",write other [TODO]
init_amd,0xef,ctx->wordctx->ptrctx->r12 + 0x106,"MOV word ptr [R12 + 0x106],DX",write other [TODO]
init_amd,0x100,ctx->wordctx->ptrctx->rdx + ctx->rbx * 0x1,"MOV word ptr [RDX + RBX*0x1],AX",write other [TODO]
init_amd,0x12f,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_amd,0x13b,ctx->wordctx->ptrctx->r12 + 0x108,"MOV word ptr [R12 + 0x108],AX",write other [TODO]
init_amd,0x14c,ctx->wordctx->ptrctx->rdx + ctx->rbx * 0x1,"MOV word ptr [RDX + RBX*0x1],AX",write other [TODO]
init_amd,0x18b,ctx->wordctx->ptrctx->r12 + 0x106,"MOV word ptr [R12 + 0x106],DX",write other [TODO]
init_amd,0x1a8,0xffffffff81094b30,CALL 0xffffffff81094b30,direct call
init_amd,0x1cb,ctx->rax,CALL RAX,in-direct call
init_amd,0x20d,0xffffffff81094b80,CALL 0xffffffff81094b80,direct call
init_amd,0x215,0xffffffff8104a490,CALL 0xffffffff8104a490,direct call
init_amd,0x224,0xffffffff81647150,CALL 0xffffffff81647150,direct call
init_amd,0x276,0xffffffff8104c550,CALL 0xffffffff8104c550,direct call
init_amd,0x29a,,RET,ret
init_amd,0x2a5,0xffffffff81050b10,CALL 0xffffffff81050b10,direct call
init_amd,0x2b8,0xffffffff81647150,CALL 0xffffffff81647150,direct call
init_amd,0x2bf,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x8000001e",write stack
init_amd,0x2ce,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
init_amd,0x2dd,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_amd,0x2e7,ctx->wordctx->ptrctx->r12 + 0x108,"MOV word ptr [R12 + 0x108],AX",write other [TODO]
init_amd,0x30b,ctx->wordctx->ptrctx->r12 + 0x106,"MOV word ptr [R12 + 0x106],AX",write other [TODO]
init_amd,0x325,ctx->wordctx->ptrctx->r12 + 0xf8,"MOV word ptr [R12 + 0xf8],AX",write other [TODO]
init_amd,0x331,0xffffffff8104b1d0,CALL 0xffffffff8104b1d0,direct call
init_amd,0x359,ctx->r12 + 0x1e,"MOV byte ptr [R12 + 0x1e],AL",write other [TODO]
init_amd,0x364,0xffffffff8104a2b0,CALL 0xffffffff8104a2b0,direct call
init_amd,0x376,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
init_amd,0x399,0xffffffff8104b480,CALL 0xffffffff8104b480,direct call
init_amd,0x3ae,0xffffffff8311cdb0,"MOV dword ptr [0xffffffff8311cdb0],0x20",write .data
init_amd,0x405,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x1",write stack
init_amd,0x414,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
init_amd,0x423,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_amd,0x466,ctx->r12 + 0x96,"MOV byte ptr [R12 + 0x96],0x0",write other [TODO]
init_amd,0x474,ctx->r12 + 0x90,"MOV dword ptr [R12 + 0x90],0x6d6d6148",write other [TODO]
init_amd,0x480,ctx->wordctx->ptrctx->r12 + 0x94,"MOV word ptr [R12 + 0x94],CX",write other [TODO]
init_amd,0x493,0xffffffff81647150,CALL 0xffffffff81647150,direct call
init_amd,0x4b6,0xffffffff81086630,CALL 0xffffffff81086630,direct call
init_amd,0x4c5,0xffffffff81647150,CALL 0xffffffff81647150,direct call
init_amd,0x4d4,0xffffffff816471e0,CALL 0xffffffff816471e0,direct call
init_amd,0x4e3,0xffffffff81050b10,CALL 0xffffffff81050b10,direct call
init_amd,0x50b,0xffffffff81647150,CALL 0xffffffff81647150,direct call
init_amd,0x595,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
init_amd,0x5b4,ctx->r12 + 0x1f,"MOV byte ptr [R12 + 0x1f],AL",write other [TODO]
init_amd,0x5b9,0xffffffff8104b1d0,CALL 0xffffffff8104b1d0,direct call
init_amd,0x5e3,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
init_amd,0x60b,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
init_amd,0x61e,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
init_amd,0x62a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
init_amd,0x632,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
init_amd,0x63a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
init_amd,0x642,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
init_amd,0x654,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0xc001100d",write stack
init_amd,0x65b,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x9c5a203a",write stack
init_amd,0x662,0xffffffff81647270,CALL 0xffffffff81647270,direct call
init_amd,0x67c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
init_amd,0x688,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
init_amd,0x693,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
init_amd,0x6a7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
init_amd,0x6b1,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EBX",write stack
init_amd,0x6bc,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0xc001100d",write stack
init_amd,0x6c3,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EBX",write stack
init_amd,0x6c6,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x9c5a203a",write stack
init_amd,0x6cd,0xffffffff816472c0,CALL 0xffffffff816472c0,direct call
init_amd,0x6d7,0xffffffff81d047a0,CALL 0xffffffff81d047a0,direct call
init_amd,0x706,0xffffffff830c7bef,"MOV byte ptr [0xffffffff830c7bef],0x1",write .data
init_amd,0x70d,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
init_amd,0x73a,0xffffffff830c7bee,"MOV byte ptr [0xffffffff830c7bee],0x1",write .data
init_amd,0x741,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
init_amd,0x74d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_spectral_chicken,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_spectral_chicken,0xa,,RET,ret
set_dr_addr_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_dr_addr_mask,0x31,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
set_dr_addr_mask,0x38,,RET,ret
set_dr_addr_mask,0x42,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
set_dr_addr_mask,0x49,,RET,ret
set_dr_addr_mask,0x4a,,RET,ret
bsp_init_hygon,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bsp_init_hygon,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
bsp_init_hygon,0x90,,RET,ret
bsp_init_hygon,0x96,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
bsp_init_hygon,0xa6,0xffffffff82e40094,"MOV dword ptr [0xffffffff82e40094],EAX",write .data
bsp_init_hygon,0xac,0xffffffff83117b30,"MOV dword ptr [0xffffffff83117b30],EAX",write .data
bsp_init_hygon,0xb4,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x8000001e",write stack
bsp_init_hygon,0xc3,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
bsp_init_hygon,0xd2,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
bsp_init_hygon,0xe4,0xffffffff82e40094,"MOV dword ptr [0xffffffff82e40094],EAX",write .data
bsp_init_hygon,0xea,0xffffffff83117b30,"MOV dword ptr [0xffffffff83117b30],EAX",write .data
bsp_init_hygon,0xf5,0xffffffff81c8a600,CALL 0xffffffff81c8a600,direct call
bsp_init_hygon,0x104,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
bsp_init_hygon,0x123,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
bsp_init_hygon,0x129,0xffffffff826bb9d0,"MOV qword ptr [0xffffffff826bb9d0],RAX",write .data
bsp_init_hygon,0x15b,0xffffffff826bb9c8,"MOV qword ptr [0xffffffff826bb9c8],0x400",write .data
bsp_init_hygon,0x16b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
early_init_hygon,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
early_init_hygon,0x20,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
early_init_hygon,0x40,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
early_init_hygon,0x46,ctx->rbx + 0x110,"MOV dword ptr [RBX + 0x110],EAX",write other [TODO]
early_init_hygon,0xc2,,RET,ret
early_init_hygon,0xc3,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x80000008",write stack
early_init_hygon,0xd5,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
early_init_hygon,0xe0,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_hygon,0xf5,ctx->wordctx->ptrctx->rbx + 0xf8,"MOV word ptr [RBX + 0xf8],AX",write other [TODO]
early_init_hygon,0x11b,ctx->rbx + 0x1e,"MOV byte ptr [RBX + 0x1e],DL",write other [TODO]
early_init_hygon,0x123,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x8000001e",write stack
early_init_hygon,0x135,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
early_init_hygon,0x140,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_hygon,0x14d,0xffffffff82e3fd64,"MOV dword ptr [0xffffffff82e3fd64],EAX",write .data
early_init_hygon,0x15c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_hygon,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_hygon,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_hygon,0x28,0xffffffff81051810,CALL 0xffffffff81051810,direct call
init_hygon,0x35,0xffffffff8104e480,CALL 0xffffffff8104e480,direct call
init_hygon,0x41,0xffffffff81070950,CALL 0xffffffff81070950,direct call
init_hygon,0x46,ctx->wordctx->ptrctx->r12 + 0xfa,"MOV word ptr [R12 + 0xfa],AX",write other [TODO]
init_hygon,0x67,0xffffffff8104b8a0,CALL 0xffffffff8104b8a0,direct call
init_hygon,0x93,ctx->wordctx->ptrctx->r12 + 0x102,"MOV word ptr [R12 + 0x102],AX",write other [TODO]
init_hygon,0x9f,ctx->wordctx->ptrctx->r12 + 0x108,"MOV word ptr [R12 + 0x108],AX",write other [TODO]
init_hygon,0xa8,ctx->wordctx->ptrctx->r12 + 0x106,"MOV word ptr [R12 + 0x106],DX",write other [TODO]
init_hygon,0xb9,ctx->wordctx->ptrctx->rdx + ctx->rbx * 0x1,"MOV word ptr [RDX + RBX*0x1],AX",write other [TODO]
init_hygon,0xfb,0xffffffff81094b30,CALL 0xffffffff81094b30,direct call
init_hygon,0x12a,ctx->rax,CALL RAX,in-direct call
init_hygon,0x13f,0xffffffff81094b80,CALL 0xffffffff81094b80,direct call
init_hygon,0x147,0xffffffff8104a530,CALL 0xffffffff8104a530,direct call
init_hygon,0x156,0xffffffff81647150,CALL 0xffffffff81647150,direct call
init_hygon,0x17f,0xffffffff8104c550,CALL 0xffffffff8104c550,direct call
init_hygon,0x1a5,,RET,ret
init_hygon,0x24e,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
init_hygon,0x26c,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
init_hygon,0x278,ctx->wordctx->ptrctx->r12 + 0x108,"MOV word ptr [R12 + 0x108],AX",write other [TODO]
init_hygon,0x289,ctx->wordctx->ptrctx->rdx + ctx->rbx * 0x1,"MOV word ptr [RDX + RBX*0x1],AX",write other [TODO]
init_hygon,0x2a6,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x8000001e",write stack
init_hygon,0x2b5,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_hygon,0x2c4,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_hygon,0x2d4,ctx->wordctx->ptrctx->r12 + 0x108,"MOV word ptr [R12 + 0x108],AX",write other [TODO]
init_hygon,0x2e1,ctx->wordctx->ptrctx->r12 + 0x106,"MOV word ptr [R12 + 0x106],AX",write other [TODO]
init_hygon,0x2fb,ctx->wordctx->ptrctx->r12 + 0xf8,"MOV word ptr [R12 + 0xf8],AX",write other [TODO]
init_hygon,0x307,0xffffffff8104b1d0,CALL 0xffffffff8104b1d0,direct call
init_hygon,0x32b,ctx->r12 + 0x1e,"MOV byte ptr [R12 + 0x1e],AL",write other [TODO]
init_hygon,0x343,ctx->wordctx->ptrctx->r12 + 0x102,"MOV word ptr [R12 + 0x102],AX",write other [TODO]
init_hygon,0x34c,0xffffffff8104a400,CALL 0xffffffff8104a400,direct call
init_hygon,0x367,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpu_detect_tlb_hygon,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_detect_tlb_hygon,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
cpu_detect_tlb_hygon,0x4b,,RET,ret
cpu_detect_tlb_hygon,0x54,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x80000006",write stack
cpu_detect_tlb_hygon,0x69,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
cpu_detect_tlb_hygon,0x76,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_hygon,0x85,ctx->wordctx->ptr0xffffffff83117b44,"MOV word ptr [0xffffffff83117b44],AX",write .data
cpu_detect_tlb_hygon,0x97,ctx->wordctx->ptr0xffffffff83117b3e,"MOV word ptr [0xffffffff83117b3e],DX",write .data
cpu_detect_tlb_hygon,0xab,ctx->wordctx->ptr0xffffffff83117b3c,"MOV word ptr [0xffffffff83117b3c],DX",write .data
cpu_detect_tlb_hygon,0xbc,ctx->wordctx->ptr0xffffffff83117b3a,"MOV word ptr [0xffffffff83117b3a],CX",write .data
cpu_detect_tlb_hygon,0xc7,ctx->wordctx->ptr0xffffffff83117b42,"MOV word ptr [0xffffffff83117b42],DX",write .data
cpu_detect_tlb_hygon,0xd1,ctx->wordctx->ptr0xffffffff83117b40,"MOV word ptr [0xffffffff83117b40],DX",write .data
cpu_detect_tlb_hygon,0xdd,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x80000005",write stack
cpu_detect_tlb_hygon,0xec,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
cpu_detect_tlb_hygon,0xfb,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_hygon,0x108,ctx->wordctx->ptr0xffffffff83117b3c,"MOV word ptr [0xffffffff83117b3c],CX",write .data
cpu_detect_tlb_hygon,0x111,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x80000005",write stack
cpu_detect_tlb_hygon,0x121,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
cpu_detect_tlb_hygon,0x12b,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
cpu_detect_tlb_hygon,0x137,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
paravirt_read_msr,0x6,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr,0xd,,RET,ret
paravirt_write_msr,0xa,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
paravirt_write_msr,0x11,,RET,ret
early_init_centaur,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
early_init_centaur,0x2e,,RET,ret
init_centaur,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_centaur,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_centaur,0x28,0xffffffff81051e60,CALL 0xffffffff81051e60,direct call
init_centaur,0x30,0xffffffff8104a550,CALL 0xffffffff8104a550,direct call
init_centaur,0x38,0xffffffff8104b840,CALL 0xffffffff8104b840,direct call
init_centaur,0x56,0xffffffff8104ebd0,CALL 0xffffffff8104ebd0,direct call
init_centaur,0x7c,,RET,ret
init_centaur,0x7d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xa",write stack
init_centaur,0x8c,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_centaur,0x9b,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_centaur,0xc0,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xc0000000",write stack
init_centaur,0xd5,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_centaur,0xe2,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_centaur,0x125,ctx->r12 + 0xd4,"MOV dword ptr [R12 + 0xd4],EAX",write other [TODO]
init_centaur,0x13b,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xc0000001",write stack
init_centaur,0x14b,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_centaur,0x155,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_centaur,0x15b,ctx->ecx,"MOV ECX,dword ptr [RBP + -0x34]",write other [TODO]
init_centaur,0x172,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xc0000001",write stack
init_centaur,0x182,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_centaur,0x18c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_centaur,0x195,ctx->r12 + 0x3c,"MOV dword ptr [R12 + 0x3c],EAX",write other [TODO]
init_centaur,0x19f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_centaur,0x1a9,0xffffffff81051e30,CALL 0xffffffff81051e30,direct call
init_centaur,0x1bf,0xffffffff81051e40,CALL 0xffffffff81051e40,direct call
init_centaur,0x1cb,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_centaur,0x1d7,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ECX",write stack
init_centaur,0x1da,0xffffffff81051e30,CALL 0xffffffff81051e30,direct call
init_centaur,0x1f3,0xffffffff81051e40,CALL 0xffffffff81051e40,direct call
init_centaur,0x1ff,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
paravirt_write_msr.constprop.0,0xd,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
paravirt_write_msr.constprop.0,0x14,,RET,ret
paravirt_read_msr.constprop.0,0x9,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr.constprop.0,0x10,,RET,ret
early_init_zhaoxin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
early_init_zhaoxin,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
early_init_zhaoxin,0x5d,,RET,ret
early_init_zhaoxin,0x5e,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x1",write stack
early_init_zhaoxin,0x6d,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
early_init_zhaoxin,0x7c,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
early_init_zhaoxin,0x9e,ctx->rbx + 0x1e,"MOV byte ptr [RBX + 0x1e],AL",write other [TODO]
early_init_zhaoxin,0xaa,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_zhaoxin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_zhaoxin,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
init_zhaoxin,0x28,0xffffffff810520f0,CALL 0xffffffff810520f0,direct call
init_zhaoxin,0x30,0xffffffff8104a550,CALL 0xffffffff8104a550,direct call
init_zhaoxin,0x38,0xffffffff8104b840,CALL 0xffffffff8104b840,direct call
init_zhaoxin,0x56,0xffffffff8104ebd0,CALL 0xffffffff8104ebd0,direct call
init_zhaoxin,0x7c,,RET,ret
init_zhaoxin,0x7d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xa",write stack
init_zhaoxin,0x8c,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_zhaoxin,0x9b,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_zhaoxin,0xc0,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xc0000000",write stack
init_zhaoxin,0xd5,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_zhaoxin,0xe2,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_zhaoxin,0x108,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xc0000001",write stack
init_zhaoxin,0x118,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_zhaoxin,0x122,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_zhaoxin,0x13f,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xc0000001",write stack
init_zhaoxin,0x14f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
init_zhaoxin,0x159,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
init_zhaoxin,0x162,ctx->r12 + 0x3c,"MOV dword ptr [R12 + 0x3c],EAX",write other [TODO]
init_zhaoxin,0x169,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_zhaoxin,0x16e,0xffffffff810520d0,CALL 0xffffffff810520d0,direct call
init_zhaoxin,0x182,0xffffffff810520b0,CALL 0xffffffff810520b0,direct call
init_zhaoxin,0x18e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
init_zhaoxin,0x195,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EDX",write stack
init_zhaoxin,0x198,0xffffffff810520d0,CALL 0xffffffff810520d0,direct call
init_zhaoxin,0x1aa,0xffffffff810520b0,CALL 0xffffffff810520b0,direct call
init_zhaoxin,0x1b6,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__traceiter_mce_record,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_mce_record,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_mce_record,0x37,,RET,ret
msr_to_offset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msr_to_offset,0x96,,RET,ret
FUN_ffffffff81052433,-0xa,,RET,ret
mce_is_correctable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_is_correctable,0x2d,,RET,ret
mce_is_correctable,0x3c,,RET,ret
mce_adjust_timer_default,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_adjust_timer_default,0xd,,RET,ret
fake_panic_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fake_panic_get,0xd,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
fake_panic_get,0x16,,RET,ret
perf_trace_mce_record,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_mce_record,0x4b,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_mce_record,0x72,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_mce_record,0x79,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_mce_record,0x80,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_mce_record,0x8b,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_mce_record,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
perf_trace_mce_record,0xa2,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
perf_trace_mce_record,0xa9,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
perf_trace_mce_record,0xb1,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
perf_trace_mce_record,0xb9,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],RAX",write other [TODO]
perf_trace_mce_record,0xc1,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],RAX",write other [TODO]
perf_trace_mce_record,0xc9,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RAX",write other [TODO]
perf_trace_mce_record,0xd1,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],RAX",write other [TODO]
perf_trace_mce_record,0xd9,ctx->rdi + 0x48,"MOV qword ptr [RDI + 0x48],RAX",write other [TODO]
perf_trace_mce_record,0xe1,ctx->rdi + 0x50,"MOV qword ptr [RDI + 0x50],RAX",write other [TODO]
perf_trace_mce_record,0xe8,ctx->rdi + 0x58,"MOV dword ptr [RDI + 0x58],EAX",write other [TODO]
perf_trace_mce_record,0xee,ctx->rdi + 0x5c,"MOV dword ptr [RDI + 0x5c],EAX",write other [TODO]
perf_trace_mce_record,0xf4,ctx->rdi + 0x60,"MOV dword ptr [RDI + 0x60],EAX",write other [TODO]
perf_trace_mce_record,0xfd,ctx->rdi + 0x64,"MOV dword ptr [RDI + 0x64],EAX",write other [TODO]
perf_trace_mce_record,0x104,ctx->rdi + 0x68,"MOV byte ptr [RDI + 0x68],AL",write other [TODO]
perf_trace_mce_record,0x10b,ctx->rdi + 0x69,"MOV byte ptr [RDI + 0x69],AL",write other [TODO]
perf_trace_mce_record,0x112,ctx->rdi + 0x6a,"MOV byte ptr [RDI + 0x6a],AL",write other [TODO]
perf_trace_mce_record,0x119,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_mce_record,0x139,,RET,ret
perf_trace_mce_record,0x149,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_mce_record,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_mce_record,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_mce_record,0x4f,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x57,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x5e,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x66,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x6e,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x76,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x7e,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x86,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x8e,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x96,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
trace_event_raw_event_mce_record,0x9d,ctx->rax + 0x58,"MOV dword ptr [RAX + 0x58],EDX",write other [TODO]
trace_event_raw_event_mce_record,0xa3,ctx->rax + 0x5c,"MOV dword ptr [RAX + 0x5c],EDX",write other [TODO]
trace_event_raw_event_mce_record,0xa9,ctx->rax + 0x60,"MOV dword ptr [RAX + 0x60],EDX",write other [TODO]
trace_event_raw_event_mce_record,0xaf,ctx->rax + 0x64,"MOV dword ptr [RAX + 0x64],EDX",write other [TODO]
trace_event_raw_event_mce_record,0xb6,ctx->rax + 0x68,"MOV byte ptr [RAX + 0x68],DL",write other [TODO]
trace_event_raw_event_mce_record,0xbd,ctx->rax + 0x69,"MOV byte ptr [RAX + 0x69],DL",write other [TODO]
trace_event_raw_event_mce_record,0xc4,ctx->rax + 0x6a,"MOV byte ptr [RAX + 0x6a],DL",write other [TODO]
trace_event_raw_event_mce_record,0xc7,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_mce_record,0xe3,,RET,ret
trace_event_raw_event_mce_record,0xed,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_mce_record,0xfc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_mce_record,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_mce_record,0x26,,RET,ret
trace_raw_output_mce_record,0x6f,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_mce_record,0x80,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_mce_record,0x8d,,RET,ret
__bpf_trace_mce_record,0x4,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_mce_record,0xa,,RET,ret
mce_log,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_log,0x9,0xffffffff81054810,CALL 0xffffffff81054810,direct call
mce_log,0x13,,RET,ret
mce_log,0x1b,0xffffffff8120a350,CALL 0xffffffff8120a350,direct call
mce_log,0x21,,RET,ret
mce_register_decode_chain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_register_decode_chain,0x19,0xffffffff810d2bb0,CALL 0xffffffff810d2bb0,direct call
mce_register_decode_chain,0x1f,,RET,ret
mce_unregister_decode_chain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_unregister_decode_chain,0x13,0xffffffff810d2970,CALL 0xffffffff810d2970,direct call
mce_unregister_decode_chain,0x19,,RET,ret
mce_default_notifier,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_default_notifier,0x24,,RET,ret
kill_me_now,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_me_now,0x6,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],0x0",write other [TODO]
kill_me_now,0x15,0xffffffff810b95a0,CALL 0xffffffff810b95a0,direct call
kill_me_now,0x1b,,RET,ret
wait_for_panic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wait_for_panic,0x11,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
wait_for_panic,0x21,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
queue_task_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
queue_task_work,0x25,ctx->rdx + 0x1490,"MOV dword ptr [RDX + 0x1490],EAX",write other [TODO]
queue_task_work,0x70,0xffffffff81d01240,CALL 0xffffffff81d01240,direct call
queue_task_work,0x7a,,RET,ret
queue_task_work,0x88,0xffffffff81d01240,CALL 0xffffffff81d01240,direct call
queue_task_work,0x93,ctx->rdx + 0x1470,"MOV qword ptr [RDX + 0x1470],RAX",write other [TODO]
queue_task_work,0x9e,ctx->rdx + 0x1468,"MOV qword ptr [RDX + 0x1468],RAX",write other [TODO]
queue_task_work,0xb8,ctx->rdx + 0x1478,"MOV byte ptr [RDX + 0x1478],AL",write other [TODO]
queue_task_work,0xef,ctx->rdx + 0x1478,"MOV byte ptr [RDX + 0x1478],AL",write other [TODO]
queue_task_work,0xfe,ctx->rax + 0x1488,"MOV qword ptr [RAX + 0x1488],RCX",write other [TODO]
queue_task_work,0x11a,0xffffffff810ca980,CALL 0xffffffff810ca980,direct call
queue_task_work,0x124,,RET,ret
__start_timer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__start_timer,0x19,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__start_timer,0x22,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__start_timer,0x3e,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__start_timer,0x48,,RET,ret
__start_timer,0x49,0xffffffff81153820,CALL 0xffffffff81153820,direct call
__start_timer,0x54,0xffffffff81153f70,CALL 0xffffffff81153f70,direct call
__mcheck_cpu_init_vendor,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mcheck_cpu_init_vendor,0x1a,0xffffffff81056770,CALL 0xffffffff81056770,direct call
__mcheck_cpu_init_vendor,0x20,,RET,ret
__mcheck_cpu_init_vendor,0x21,,RET,ret
__mcheck_cpu_init_vendor,0x22,0xffffffff81055410,CALL 0xffffffff81055410,direct call
__mcheck_cpu_init_vendor,0x28,0xffffffff82e40388,"MOV qword ptr [0xffffffff82e40388],-0x7efab070",write .data
__mcheck_cpu_init_vendor,0x33,,RET,ret
__mcheck_cpu_init_vendor,0x51,0xffffffff83117b6c,"MOV dword ptr [0xffffffff83117b6c],0xf4240",write .data
__mcheck_cpu_init_vendor,0x5c,,RET,ret
__mcheck_cpu_init_vendor,0x86,0xffffffff810552b0,CALL 0xffffffff810552b0,direct call
__mcheck_cpu_init_vendor,0x8b,0xffffffff81055350,CALL 0xffffffff81055350,direct call
__mcheck_cpu_init_vendor,0x91,0xffffffff82e40388,"MOV qword ptr [0xffffffff82e40388],-0x7efab070",write .data
__mcheck_cpu_init_vendor,0x9c,,RET,ret
__mcheck_cpu_init_vendor,0xa9,ctx->rdx + 0x80,"MOV qword ptr [RDX + 0x80],0x0",write other [TODO]
__mce_disable_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mce_disable_bank,0x22,0xffffffff81055230,CALL 0xffffffff81055230,direct call
__mce_disable_bank,0x28,,RET,ret
mce_device_remove,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_device_remove,0x51,0xffffffff817f1160,CALL 0xffffffff817f1160,direct call
mce_device_remove,0x56,ctx->rsi,"MOV RSI,qword ptr [RBX + -0x8]",write other [TODO]
mce_device_remove,0x94,0xffffffff817f1160,CALL 0xffffffff817f1160,direct call
mce_device_remove,0xaa,0xffffffff817f2540,CALL 0xffffffff817f2540,direct call
mce_device_remove,0xc3,ctx->rax + ctx->r14 * 0x1,"MOV qword ptr [RAX + R14*0x1],0x0",write other [TODO]
mce_device_remove,0xd5,,RET,ret
set_cmci_disabled,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_cmci_disabled,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
set_cmci_disabled,0x29,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
set_cmci_disabled,0x3d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
set_cmci_disabled,0x70,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_cmci_disabled,0x75,0xffffffff83117b69,"MOV byte ptr [0xffffffff83117b69],0x1",write .data
set_cmci_disabled,0x83,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
set_cmci_disabled,0x9f,,RET,ret
set_cmci_disabled,0xb7,0xffffffff83117b69,"MOV byte ptr [0xffffffff83117b69],0x0",write .data
set_cmci_disabled,0xbe,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_cmci_disabled,0xce,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_device_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_device_release,0x9,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mce_device_release,0xf,,RET,ret
mce_cpu_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_cpu_dead,0xb,0xffffffff81054f50,CALL 0xffffffff81054f50,direct call
mce_cpu_dead,0x1c,,RET,ret
mce_cpu_dead,0x1d,0xffffffff81055180,CALL 0xffffffff81055180,direct call
mce_cpu_dead,0x25,,RET,ret
show_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_bank,0x4f,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
show_bank,0x57,,RET,ret
show_bank,0x5f,,RET,ret
show_bank,0x67,,RET,ret
fake_panic_fops_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fake_panic_fops_open,0x1e,0xffffffff81399a60,CALL 0xffffffff81399a60,direct call
fake_panic_fops_open,0x24,,RET,ret
mce_notify_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_notify_irq,0x16,,RET,ret
mce_notify_irq,0x1b,0xffffffff81057f10,CALL 0xffffffff81057f10,direct call
mce_notify_irq,0x2e,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
mce_notify_irq,0x41,,RET,ret
mce_early_notifier,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_early_notifier,0x18,0xffffffff81052e00,CALL 0xffffffff81052e00,direct call
mce_early_notifier,0x20,,RET,ret
mce_early_notifier,0x65,,RET,ret
mce_is_memory_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_is_memory_error,0x1b,0xffffffff81056ba0,CALL 0xffffffff81056ba0,direct call
mce_is_memory_error,0x21,,RET,ret
mce_is_memory_error,0x5f,,RET,ret
mce_is_memory_error,0x62,,RET,ret
mce_is_memory_error,0x63,,RET,ret
mce_usable_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_usable_address,0x54,,RET,ret
mce_irq_work_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_irq_work_cb,0x9,0xffffffff810547f0,CALL 0xffffffff810547f0,direct call
mce_irq_work_cb,0x13,,RET,ret
mce_irq_work_cb,0x27,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
mce_irq_work_cb,0x2d,,RET,ret
mce_timer_delete_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_timer_delete_all,0x25,0xffffffff811531c0,CALL 0xffffffff811531c0,direct call
mce_timer_delete_all,0x2d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
mce_timer_delete_all,0x3d,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
mce_timer_delete_all,0x51,,RET,ret
set_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_bank,0x2e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
set_bank,0x34,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
set_bank,0x7a,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
set_bank,0x7d,0xffffffff81052fc0,CALL 0xffffffff81052fc0,direct call
set_bank,0x99,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_bank,0xba,,RET,ret
set_bank,0xcd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_ignore_ce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_ignore_ce,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
set_ignore_ce,0x29,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
set_ignore_ce,0x3d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
set_ignore_ce,0x59,0xffffffff81052fc0,CALL 0xffffffff81052fc0,direct call
set_ignore_ce,0x75,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_ignore_ce,0x7a,0xffffffff83117b6a,"MOV byte ptr [0xffffffff83117b6a],0x1",write .data
set_ignore_ce,0x88,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
set_ignore_ce,0xa4,,RET,ret
set_ignore_ce,0xbf,0xffffffff83117b6a,"MOV byte ptr [0xffffffff83117b6a],0x0",write .data
set_ignore_ce,0xc6,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
set_ignore_ce,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
store_int_with_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
store_int_with_restart,0x13,0xffffffff817f0db0,CALL 0xffffffff817f0db0,direct call
store_int_with_restart,0x2b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
store_int_with_restart,0x30,0xffffffff81052fc0,CALL 0xffffffff81052fc0,direct call
store_int_with_restart,0x4c,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
store_int_with_restart,0x58,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
store_int_with_restart,0x64,,RET,ret
__mcheck_cpu_init_timer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mcheck_cpu_init_timer,0x2e,0xffffffff81152f60,CALL 0xffffffff81152f60,direct call
__mcheck_cpu_init_timer,0x51,,RET,ret
__mcheck_cpu_init_timer,0x52,ctx->gs + 0x1fc08,"MOV qword ptr GS:[0x1fc08],RSI",write other [TODO]
__mcheck_cpu_init_timer,0x5d,0xffffffff81052a10,CALL 0xffffffff81052a10,direct call
__mcheck_cpu_init_timer,0x67,,RET,ret
fake_panic_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fake_panic_set,0xc,0xffffffff83402b04,"MOV dword ptr [0xffffffff83402b04],0x0",write .data
fake_panic_set,0x16,0xffffffff83402b00,"MOV dword ptr [0xffffffff83402b00],0x0",write .data
fake_panic_set,0x33,0xffffffff83402afc,"MOV dword ptr [0xffffffff83402afc],0x0",write .data
fake_panic_set,0x3d,0xffffffff83402af8,"MOV dword ptr [0xffffffff83402af8],0x0",write .data
fake_panic_set,0x62,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
fake_panic_set,0x67,0xffffffff83402b08,"MOV dword ptr [0xffffffff83402b08],EBX",write .data
fake_panic_set,0x74,,RET,ret
__mcheck_cpu_init_clear_banks,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810533db,-0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff810533db,-0x1,,RET,ret
FUN_ffffffff810533e0,-0x40,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
vendor_disable_error_reporting,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vendor_disable_error_reporting,0x98,,RET,ret
FUN_ffffffff81053489,-0x28,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81053489,-0x2,,RET,ret
mce_syscore_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_syscore_suspend,0x9,0xffffffff810533f0,CALL 0xffffffff810533f0,direct call
mce_syscore_suspend,0x11,,RET,ret
mce_syscore_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_syscore_shutdown,0x9,0xffffffff810533f0,CALL 0xffffffff810533f0,direct call
mce_syscore_shutdown,0xf,,RET,ret
uc_decode_notifier,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uc_decode_notifier,0x4f,,RET,ret
uc_decode_notifier,0x8c,0xffffffff813514a0,CALL 0xffffffff813514a0,direct call
uc_decode_notifier,0x98,0xffffffff81090530,CALL 0xffffffff81090530,direct call
uc_decode_notifier,0xb0,,RET,ret
mce_disable_cmci,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_disable_cmci,0x32,0xffffffff810550f0,CALL 0xffffffff810550f0,direct call
mce_disable_cmci,0x38,,RET,ret
mce_disable_cmci,0x39,,RET,ret
mce_enable_ce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_enable_ce,0x36,0xffffffff810551e0,CALL 0xffffffff810551e0,direct call
mce_enable_ce,0x3b,0xffffffff81055090,CALL 0xffffffff81055090,direct call
mce_enable_ce,0x45,0xffffffff81053250,CALL 0xffffffff81053250,direct call
mce_enable_ce,0x4f,,RET,ret
mce_enable_ce,0x50,,RET,ret
mce_cpu_pre_down,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_cpu_pre_down,0x51,0xffffffff810533f0,CALL 0xffffffff810533f0,direct call
mce_cpu_pre_down,0x59,0xffffffff811531c0,CALL 0xffffffff811531c0,direct call
mce_cpu_pre_down,0x61,0xffffffff81056c20,CALL 0xffffffff81056c20,direct call
mce_cpu_pre_down,0x69,0xffffffff81052b60,CALL 0xffffffff81052b60,direct call
mce_cpu_pre_down,0x75,,RET,ret
mce_cpu_pre_down,0x76,0xffffffff810550f0,CALL 0xffffffff810550f0,direct call
mce_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_cpu_online,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mce_cpu_online,0x15f,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
mce_cpu_online,0x170,ctx->rax + 0x298,"MOV dword ptr [RAX + 0x298],R12D",write other [TODO]
mce_cpu_online,0x17d,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],-0x7d1bfd60",write other [TODO]
mce_cpu_online,0x185,ctx->rax + 0x2c0,"MOV qword ptr [RAX + 0x2c0],-0x7efad2e0",write other [TODO]
mce_cpu_online,0x190,0xffffffff817f5780,CALL 0xffffffff817f5780,direct call
mce_cpu_online,0x1a9,ctx->rsi,"MOV RSI,qword ptr [-0x7ddf34c0 + R15*0x8]",write other [TODO]
mce_cpu_online,0x1bc,0xffffffff817f10e0,CALL 0xffffffff817f10e0,direct call
mce_cpu_online,0x1fd,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EBX",write stack
mce_cpu_online,0x237,0xffffffff817f10e0,CALL 0xffffffff817f10e0,direct call
mce_cpu_online,0x289,0xffffffff817f1160,CALL 0xffffffff817f1160,direct call
mce_cpu_online,0x2a1,0xffffffff817f1160,CALL 0xffffffff817f1160,direct call
mce_cpu_online,0x2ae,0xffffffff817f2540,CALL 0xffffffff817f2540,direct call
mce_cpu_online,0x2b6,0xffffffff81056c50,CALL 0xffffffff81056c50,direct call
mce_cpu_online,0x303,ctx->rax + ctx->rdx * 0x1,"MOV qword ptr [RAX + RDX*0x1],R14",write other [TODO]
FUN_ffffffff81053973,-0x1fd,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81053973,-0x1b3,,RET,ret
FUN_ffffffff81053973,-0x109,ctx->gs + 0x1fc08,"MOV qword ptr GS:[0x1fc08],RSI",write other [TODO]
FUN_ffffffff81053973,-0xfd,0xffffffff81052a10,CALL 0xffffffff81052a10,direct call
FUN_ffffffff810539ac,-0x2c5,0xffffffff81056c50,CALL 0xffffffff81056c50,direct call
FUN_ffffffff810539ac,-0x43,0xffffffff81052b60,CALL 0xffffffff81052b60,direct call
FUN_ffffffff810539ac,-0x31,0xffffffff810551e0,CALL 0xffffffff810551e0,direct call
FUN_ffffffff810539ac,0x3,0xffffffff817f1560,CALL 0xffffffff817f1560,direct call
mce_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_setup,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mce_setup,0x27,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
mce_setup,0x2f,ctx->rdi + 0x70,"MOV qword ptr [RDI + 0x70],0x0",write other [TODO]
mce_setup,0x4e,ctx->rbx + 0x44,"MOV dword ptr [RBX + 0x44],EAX",write other [TODO]
mce_setup,0x51,ctx->rbx + 0x42,"MOV byte ptr [RBX + 0x42],AL",write other [TODO]
mce_setup,0x54,0xffffffff81d03960,CALL 0xffffffff81d03960,direct call
mce_setup,0x59,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x1",write stack
mce_setup,0x68,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
mce_setup,0x7b,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
mce_setup,0x82,ctx->rbx + 0x38,"MOV byte ptr [RBX + 0x38],AL",write other [TODO]
mce_setup,0x85,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
mce_setup,0x9d,ctx->rbx + 0x3c,"MOV dword ptr [RBX + 0x3c],EAX",write other [TODO]
mce_setup,0xb0,ctx->rbx + 0x48,"MOV dword ptr [RBX + 0x48],EAX",write other [TODO]
mce_setup,0xc3,ctx->rbx + 0x4c,"MOV dword ptr [RBX + 0x4c],EAX",write other [TODO]
mce_setup,0xcf,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RDX",write other [TODO]
mce_setup,0xe3,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
mce_setup,0xed,ctx->rbx + 0x70,"MOV dword ptr [RBX + 0x70],EAX",write other [TODO]
mce_setup,0x104,,RET,ret
mce_setup,0x105,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
machine_check_poll,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_check_poll,0x26,ctx->rbp - 0xb8,"MOV dword ptr [RBP + -0xb8],EDI",write stack
machine_check_poll,0x3d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
machine_check_poll,0x53,0xffffffff81d01ab0,CALL 0xffffffff81d01ab0,direct call
machine_check_poll,0x67,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RDX",write stack
machine_check_poll,0x83,ctx->rbp - 0xb2,"MOV byte ptr [RBP + -0xb2],0x0",write stack
machine_check_poll,0x9c,ctx->rbp - 0xbc,"MOV dword ptr [RBP + -0xbc],EAX",write stack
machine_check_poll,0x255,ctx->rbp - 0xb2,"MOV byte ptr [RBP + -0xb2],0x0",write stack
FUN_ffffffff81053ce4,-0x120,0xffffffff81d018a0,CALL 0xffffffff81d018a0,direct call
FUN_ffffffff81053ce4,-0x11b,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RAX",write stack
FUN_ffffffff81053ce4,-0xb4,0xffffffff81d018e0,CALL 0xffffffff81d018e0,direct call
FUN_ffffffff81053ce4,-0xa2,0xffffffff81d02720,CALL 0xffffffff81d02720,direct call
FUN_ffffffff81053ce4,-0x96,ctx->rbp - 0x76,"MOV byte ptr [RBP + -0x76],AL",write stack
FUN_ffffffff81053ce4,-0x8a,0xffffffff81052f30,CALL 0xffffffff81052f30,direct call
FUN_ffffffff81053ce4,-0x6d,0xffffffff81054810,CALL 0xffffffff81054810,direct call
FUN_ffffffff81053ce4,0x23,0xffffffff81054810,CALL 0xffffffff81054810,direct call
FUN_ffffffff81053ce4,0x37,0xffffffff8120a350,CALL 0xffffffff8120a350,direct call
FUN_ffffffff81053cec,-0x14a,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],0x0",write stack
FUN_ffffffff81053cec,-0x13f,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
FUN_ffffffff81053cec,-0x134,ctx->rbp - 0x6f,"MOV byte ptr [RBP + -0x6f],R15B",write stack
FUN_ffffffff81053cec,-0x66,0xffffffff81d01180,CALL 0xffffffff81d01180,direct call
FUN_ffffffff81053cec,-0x5a,ctx->rbp - 0xb2,"MOV byte ptr [RBP + -0xb2],AL",write stack
__mcheck_cpu_init_generic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mcheck_cpu_init_generic,0x1d,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__mcheck_cpu_init_generic,0x2a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],-0x1",write stack
__mcheck_cpu_init_generic,0x3c,0xffffffff81053ad0,CALL 0xffffffff81053ad0,direct call
__mcheck_cpu_init_generic,0x41,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__mcheck_cpu_init_generic,0x4a,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__mcheck_cpu_init_generic,0x57,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
__mcheck_cpu_init_generic,0x61,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__mcheck_cpu_init_generic,0x6c,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__mcheck_cpu_init_generic,0x8b,,RET,ret
__mcheck_cpu_init_generic,0x99,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__mcheck_cpu_init_generic,0xa1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_syscore_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_syscore_resume,0x9,0xffffffff81053d40,CALL 0xffffffff81053d40,direct call
mce_syscore_resume,0x1d,0xffffffff81052a70,CALL 0xffffffff81052a70,direct call
mce_syscore_resume,0x22,0xffffffff81053340,CALL 0xffffffff81053340,direct call
mce_syscore_resume,0x28,,RET,ret
mce_cpu_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_cpu_restart,0x32,0xffffffff81053d40,CALL 0xffffffff81053d40,direct call
mce_cpu_restart,0x37,0xffffffff81053340,CALL 0xffffffff81053340,direct call
mce_cpu_restart,0x3c,0xffffffff81053250,CALL 0xffffffff81053250,direct call
mce_cpu_restart,0x42,,RET,ret
mce_cpu_restart,0x43,,RET,ret
mce_timer_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_timer_fn,0x50,0xffffffff81052e00,CALL 0xffffffff81052e00,direct call
mce_timer_fn,0x6e,ctx->gs + 0x1fc08,"MOV qword ptr GS:[0x1fc08],RSI",write other [TODO]
mce_timer_fn,0x76,0xffffffff81052a10,CALL 0xffffffff81052a10,direct call
mce_timer_fn,0x80,,RET,ret
mce_timer_fn,0x9b,0xffffffff81053ad0,CALL 0xffffffff81053ad0,direct call
mce_timer_fn,0xa0,0xffffffff81054f00,CALL 0xffffffff81054f00,direct call
mce_timer_fn,0xac,0xffffffff82e40388,CALL qword ptr [0xffffffff82e40388],in-direct call
mce_timer_fn,0xc2,0xffffffff81152d60,CALL 0xffffffff81152d60,direct call
mce_available,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_available,0x28,,RET,ret
mce_timer_kick,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_timer_kick,0x29,0xffffffff81052a10,CALL 0xffffffff81052a10,direct call
mce_timer_kick,0x33,ctx->gs + 0x1fc08,"MOV qword ptr GS:[0x1fc08],RBX",write other [TODO]
mce_timer_kick,0x3f,,RET,ret
filter_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
filter_mce,0x1c,,RET,ret
filter_mce,0x1d,0xffffffff810554e0,CALL 0xffffffff810554e0,direct call
filter_mce,0x23,,RET,ret
filter_mce,0x24,0xffffffff810566c0,CALL 0xffffffff810566c0,direct call
filter_mce,0x2a,,RET,ret
mcheck_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mcheck_cpu_init,0xe,,RET,ret
mcheck_cpu_init,0x46,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
mcheck_cpu_init,0x5b,ctx->gs + 0x19440,"MOV dword ptr GS:[0x19440],EAX",write other [TODO]
mcheck_cpu_init,0x97,ctx->rax - 0x10,"MOV qword ptr [RAX + -0x10],-0x1",write other [TODO]
mcheck_cpu_init,0x14e,0xffffffff83117b6c,"MOV dword ptr [0xffffffff83117b6c],0x0",write .data
mcheck_cpu_init,0x161,0xffffffff83117b70,"MOV dword ptr [0xffffffff83117b70],0x1e",write .data
mcheck_cpu_init,0x16b,0xffffffff81054930,CALL 0xffffffff81054930,direct call
mcheck_cpu_init,0x197,0xffffffff81053d40,CALL 0xffffffff81053d40,direct call
mcheck_cpu_init,0x19f,0xffffffff81052a70,CALL 0xffffffff81052a70,direct call
mcheck_cpu_init,0x1a4,0xffffffff81053340,CALL 0xffffffff81053340,direct call
mcheck_cpu_init,0x26a,0xffffffff83117b74,"MOV dword ptr [0xffffffff83117b74],0x189",write .data
mcheck_cpu_init,0x2aa,0xffffffff83117b78,"MOV byte ptr [0xffffffff83117b78],0x0",write .data
mcheck_cpu_init,0x2d1,0xffffffff83117b80,"MOV byte ptr [0xffffffff83117b80],AL",write .data
mcheck_cpu_init,0x2e9,0xffffffff83117b80,"MOV byte ptr [0xffffffff83117b80],AL",write .data
mcheck_cpu_init,0x301,0xffffffff83117b80,"MOV byte ptr [0xffffffff83117b80],AL",write .data
mcheck_cpu_init,0x332,0xffffffff83117b6c,"MOV dword ptr [0xffffffff83117b6c],0xf4240",write .data
mcheck_cpu_init,0x36d,0xffffffff83117b6c,"MOV dword ptr [0xffffffff83117b6c],0xf4240",write .data
mcheck_cpu_init,0x3cf,0xffffffff83117b78,"MOV byte ptr [0xffffffff83117b78],0x0",write .data
mcheck_cpu_init,0x3f3,ctx->rcx,"MOV qword ptr [RCX],0x0",write other [TODO]
mcheck_cpu_init,0xc3ca02,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mcheck_cpu_init,0xc3ca13,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81054252,-0x82,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81054252,-0x6d,ctx->rbx + 0x8,"MOV byte ptr [RBX + 0x8],AL",write other [TODO]
FUN_ffffffff81054252,-0x32,0xffffffff81152f60,CALL 0xffffffff81152f60,direct call
FUN_ffffffff81054252,-0x23,,RET,ret
mcheck_cpu_clear,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mcheck_cpu_clear,0xe,,RET,ret
mcheck_cpu_clear,0x30,0xffffffff810553d0,CALL 0xffffffff810553d0,direct call
mcheck_cpu_clear,0x36,,RET,ret
mcheck_cpu_clear,0x37,0xffffffff810554a0,CALL 0xffffffff810554a0,direct call
mcheck_cpu_clear,0x3d,,RET,ret
mce_disable_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_disable_bank,0x10,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],EDI",write stack
mce_disable_bank,0x44,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
mce_get_debugfs_dir,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_get_debugfs_dir,0x11,,RET,ret
mce_get_debugfs_dir,0x1f,0xffffffff814dae60,CALL 0xffffffff814dae60,direct call
mce_get_debugfs_dir,0x25,0xffffffff83402ae8,"MOV qword ptr [0xffffffff83402ae8],RAX",write .data
mce_get_debugfs_dir,0x2c,,RET,ret
s_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
s_start,0x1f,,RET,ret
s_start,0x23,,RET,ret
s_next,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
s_next,0x10,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
s_next,0x26,,RET,ret
s_next,0x2a,,RET,ret
s_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
s_stop,0xa,,RET,ret
severities_coverage_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
severities_coverage_write,0x13,ctx->rcx,"MOV byte ptr [RCX],0x0",write other [TODO]
severities_coverage_write,0x24,,RET,ret
is_copy_from_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_copy_from_user,0x1b,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
is_copy_from_user,0x39,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
is_copy_from_user,0x5d,,RET,ret
is_copy_from_user,0x73,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
is_copy_from_user,0xa4,0xffffffff81c8b600,CALL 0xffffffff81c8b600,direct call
is_copy_from_user,0xaf,0xffffffff81089880,CALL 0xffffffff81089880,direct call
is_copy_from_user,0xc1,ctx->rax + 0x1460,"MOV qword ptr [RAX + 0x1460],R12",write other [TODO]
is_copy_from_user,0xee,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
severities_coverage_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
severities_coverage_open,0x13,0xffffffff813949e0,CALL 0xffffffff813949e0,direct call
severities_coverage_open,0x19,,RET,ret
s_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
s_show,0x18,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
s_show,0x20,,RET,ret
mce_gen_pool_prepare_records,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_gen_pool_prepare_records,0x1b,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mce_gen_pool_prepare_records,0x21,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
mce_gen_pool_prepare_records,0x95,,RET,ret
mce_gen_pool_prepare_records,0x9d,0xffffffff81602360,CALL 0xffffffff81602360,direct call
mce_gen_pool_prepare_records,0xa9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_gen_pool_process,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_gen_pool_process,0x1a,0xffffffff81602340,CALL 0xffffffff81602340,direct call
mce_gen_pool_process,0x3b,0xffffffff810d30e0,CALL 0xffffffff810d30e0,direct call
mce_gen_pool_process,0x51,0xffffffff81612f50,CALL 0xffffffff81612f50,direct call
mce_gen_pool_process,0x5f,,RET,ret
mce_gen_pool_process,0x60,,RET,ret
mce_gen_pool_empty,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_gen_pool_empty,0x17,,RET,ret
mce_gen_pool_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_gen_pool_add,0xd,0xffffffff81053fc0,CALL 0xffffffff81053fc0,direct call
mce_gen_pool_add,0x3a,0xffffffff81612d30,CALL 0xffffffff81612d30,direct call
mce_gen_pool_add,0x51,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
mce_gen_pool_add,0x59,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
mce_gen_pool_add,0x61,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
mce_gen_pool_add,0x69,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RDX",write other [TODO]
mce_gen_pool_add,0x71,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RDX",write other [TODO]
mce_gen_pool_add,0x79,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RDX",write other [TODO]
mce_gen_pool_add,0x81,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],RDX",write other [TODO]
mce_gen_pool_add,0x89,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],RDX",write other [TODO]
mce_gen_pool_add,0x91,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RDX",write other [TODO]
mce_gen_pool_add,0x99,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
mce_gen_pool_add,0xa1,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RDX",write other [TODO]
mce_gen_pool_add,0xa9,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RDX",write other [TODO]
mce_gen_pool_add,0xb1,ctx->rax + 0x68,"MOV qword ptr [RAX + 0x68],RDX",write other [TODO]
mce_gen_pool_add,0xb9,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],RDX",write other [TODO]
mce_gen_pool_add,0xc1,ctx->rax + 0x78,"MOV qword ptr [RAX + 0x78],RDX",write other [TODO]
mce_gen_pool_add,0xc9,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
mce_gen_pool_add,0xd7,0xffffffff81602360,CALL 0xffffffff81602360,direct call
mce_gen_pool_add,0x100,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
mce_gen_pool_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_gen_pool_init,0x11,,RET,ret
mce_gen_pool_init,0x26,0xffffffff81612640,CALL 0xffffffff81612640,direct call
mce_gen_pool_init,0x52,0xffffffff816126a0,CALL 0xffffffff816126a0,direct call
mce_gen_pool_init,0x5b,0xffffffff83405988,"MOV qword ptr [0xffffffff83405988],R12",write .data
mce_gen_pool_init,0x67,,RET,ret
mce_gen_pool_init,0x6b,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
mce_gen_pool_init,0x6e,0xffffffff81612960,CALL 0xffffffff81612960,direct call
cmci_recheck.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_recheck.part.0,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cmci_recheck.part.0,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cmci_recheck.part.0,0x2a,0xffffffff81053ad0,CALL 0xffffffff81053ad0,direct call
cmci_recheck.part.0,0x34,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cmci_recheck.part.0,0x3f,,RET,ret
cmci_toggle_interrupt_mode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_toggle_interrupt_mode,0x23,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
cmci_toggle_interrupt_mode,0x45,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
cmci_toggle_interrupt_mode,0x54,,RET,ret
cmci_toggle_interrupt_mode,0x6b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cmci_toggle_interrupt_mode,0x91,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_threshold_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_threshold_interrupt,0x3d,ctx->gs + 0x1fd3c,"MOV dword ptr GS:[0x1fd3c],EDX",write other [TODO]
intel_threshold_interrupt,0x50,0xffffffff810549f0,CALL 0xffffffff810549f0,direct call
intel_threshold_interrupt,0x55,ctx->gs + 0x1fd38,"MOV dword ptr GS:[0x1fd38],0x1",write other [TODO]
intel_threshold_interrupt,0x6d,0xffffffff81053f80,CALL 0xffffffff81053f80,direct call
intel_threshold_interrupt,0x72,ctx->gs + 0x1fd48,"MOV dword ptr GS:[0x1fd48],0x12c",write other [TODO]
intel_threshold_interrupt,0x8b,ctx->gs + 0x1fd40,"MOV qword ptr GS:[0x1fd40],RSI",write other [TODO]
intel_threshold_interrupt,0x93,ctx->gs + 0x1fd3c,"MOV dword ptr GS:[0x1fd3c],0x1",write other [TODO]
intel_threshold_interrupt,0xb2,0xffffffff81053ad0,CALL 0xffffffff81053ad0,direct call
intel_threshold_interrupt,0xbc,,RET,ret
intel_threshold_interrupt,0xbd,,RET,ret
__cmci_disable_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cmci_disable_bank,0x33,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__cmci_disable_bank,0x4c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__cmci_disable_bank,0x64,,RET,ret
cmci_discover,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_discover,0x38,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
cmci_discover,0x3d,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
cmci_discover,0x44,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
cmci_discover,0x73,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cmci_discover,0x94,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x0",write stack
cmci_discover,0xb5,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cmci_discover,0xbe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cmci_discover,0x10b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
cmci_discover,0x143,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x0",write stack
cmci_discover,0x155,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x1",write stack
cmci_discover,0x1b3,,RET,ret
cmci_discover,0x1c6,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
cmci_discover,0x1e2,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
cmci_discover,0x1f5,,RET,ret
cmci_discover,0xc3be8b,0xffffffff830c7bf2,"MOV byte ptr [0xffffffff830c7bf2],0x1",write .data
cmci_discover,0xc3be92,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
lmce_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lmce_supported,0x10,,RET,ret
lmce_supported,0x1b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
lmce_supported,0x35,,RET,ret
lmce_supported,0x3b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cmci_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_supported,0x34,0xffffffff81070020,CALL 0xffffffff81070020,direct call
cmci_supported,0x45,,RET,ret
cmci_supported,0x48,,RET,ret
cmci_supported,0x4e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
cmci_supported,0x68,ctx->rbx,"MOV dword ptr [RBX],EDX",write other [TODO]
cmci_supported,0x6f,,RET,ret
cmci_rediscover_work_func,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_rediscover_work_func,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
cmci_rediscover_work_func,0x20,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
cmci_rediscover_work_func,0x39,,RET,ret
cmci_rediscover_work_func,0x3a,ctx->edi,"MOV EDI,dword ptr [RBP + -0xc]",write other [TODO]
cmci_rediscover_work_func,0x3d,0xffffffff81054be0,CALL 0xffffffff81054be0,direct call
cmci_rediscover_work_func,0x44,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_intel_cmci_poll,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_intel_cmci_poll,0x12,,RET,ret
mce_intel_cmci_poll,0x28,0xffffffff81053ad0,CALL 0xffffffff81053ad0,direct call
mce_intel_cmci_poll,0x31,ctx->gs + 0x1fd48,"MOV dword ptr GS:[0x1fd48],0x12c",write other [TODO]
mce_intel_cmci_poll,0x3d,,RET,ret
mce_intel_cmci_poll,0x4b,,RET,ret
mce_intel_hcpu_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_intel_hcpu_update,0x30,ctx->rax + ctx->rcx * 0x1,"MOV dword ptr [RAX + RCX*0x1],0x0",write other [TODO]
mce_intel_hcpu_update,0x38,,RET,ret
cmci_intel_adjust_timer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_intel_adjust_timer,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
cmci_intel_adjust_timer,0x6e,ctx->gs + 0x1fd38,"MOV dword ptr GS:[0x1fd38],0x2",write other [TODO]
cmci_intel_adjust_timer,0xe9,0xffffffff81052e00,CALL 0xffffffff81052e00,direct call
cmci_recheck,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_recheck,0x1d,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
cmci_recheck,0x2b,0xffffffff81053f50,CALL 0xffffffff81053f50,direct call
cmci_recheck,0x44,,RET,ret
cmci_recheck,0x49,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
cmci_recheck,0x52,0xffffffff810549b0,CALL 0xffffffff810549b0,direct call
cmci_recheck,0x59,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cmci_clear,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_clear,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
cmci_clear,0x25,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
cmci_clear,0x47,,RET,ret
cmci_clear,0x4f,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
cmci_clear,0x67,0xffffffff81054b70,CALL 0xffffffff81054b70,direct call
cmci_clear,0x7b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
cmci_clear,0x82,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cmci_rediscover,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_rediscover,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
cmci_rediscover,0x20,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
cmci_rediscover,0x40,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
cmci_rediscover,0x55,,RET,ret
cmci_rediscover,0x56,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cmci_reenable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_reenable,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
cmci_reenable,0x20,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
cmci_reenable,0x39,,RET,ret
cmci_reenable,0x3a,ctx->edi,"MOV EDI,dword ptr [RBP + -0xc]",write other [TODO]
cmci_reenable,0x3d,0xffffffff81054be0,CALL 0xffffffff81054be0,direct call
cmci_reenable,0x44,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cmci_disable_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmci_disable_bank,0x21,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
cmci_disable_bank,0x27,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
cmci_disable_bank,0x37,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
cmci_disable_bank,0x42,0xffffffff81054b70,CALL 0xffffffff81054b70,direct call
cmci_disable_bank,0x51,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
cmci_disable_bank,0x6e,,RET,ret
cmci_disable_bank,0x6f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_init_cmci,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_init_cmci,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
intel_init_cmci,0x20,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
intel_init_cmci,0x39,,RET,ret
intel_init_cmci,0x3a,0xffffffff82e41228,"MOV qword ptr [0xffffffff82e41228],-0x7efab550",write .data
intel_init_cmci,0x45,ctx->edi,"MOV EDI,dword ptr [RBP + -0x10]",write other [TODO]
intel_init_cmci,0x48,0xffffffff81054be0,CALL 0xffffffff81054be0,direct call
intel_init_cmci,0x5e,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
intel_init_cmci,0x70,0xffffffff81053f50,CALL 0xffffffff81053f50,direct call
intel_init_cmci,0x7d,0xffffffff81054e40,CALL 0xffffffff81054e40,direct call
intel_init_cmci,0x86,0xffffffff810549b0,CALL 0xffffffff810549b0,direct call
intel_init_cmci,0x8d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
intel_init_lmce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_init_lmce,0xe,,RET,ret
intel_init_lmce,0x19,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_init_lmce,0x31,,RET,ret
intel_init_lmce,0x37,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_init_lmce,0x4d,ctx->rdi,"MOV RDI,RBX",write other [TODO]
intel_init_lmce,0x50,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_init_lmce,0x60,ctx->rdi,"MOV RDI,RBX",write other [TODO]
intel_init_lmce,0x69,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_init_lmce,0x74,,RET,ret
intel_clear_lmce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_clear_lmce,0xa,0xffffffff81054de0,CALL 0xffffffff81054de0,direct call
intel_clear_lmce,0x18,ctx->rdi,"MOV RDI,RBX",write other [TODO]
intel_clear_lmce,0x1b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
intel_clear_lmce,0x28,ctx->rdi,"MOV RDI,RBX",write other [TODO]
intel_clear_lmce,0x31,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
intel_clear_lmce,0x3c,,RET,ret
mce_intel_feature_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_intel_feature_init,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mce_intel_feature_init,0x20,0xffffffff810552b0,CALL 0xffffffff810552b0,direct call
mce_intel_feature_init,0x25,0xffffffff81055350,CALL 0xffffffff81055350,direct call
mce_intel_feature_init,0x45,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
mce_intel_feature_init,0x66,,RET,ret
mce_intel_feature_init,0x76,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
mce_intel_feature_init,0x7e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_intel_feature_clear,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_intel_feature_clear,0xa,0xffffffff81054de0,CALL 0xffffffff81054de0,direct call
mce_intel_feature_clear,0x18,ctx->rdi,"MOV RDI,RBX",write other [TODO]
mce_intel_feature_clear,0x1b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
mce_intel_feature_clear,0x28,ctx->rdi,"MOV RDI,RBX",write other [TODO]
mce_intel_feature_clear,0x31,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
mce_intel_feature_clear,0x3c,,RET,ret
intel_filter_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
intel_filter_mce,0x15,,RET,ret
intel_filter_mce,0x68,,RET,ret
smca_get_long_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
smca_get_long_name,0x1c,,RET,ret
smca_get_long_name,0x20,,RET,ret
smca_get_bank_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
smca_get_bank_type,0x3d,,RET,ret
show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show,0x19,ctx->rax,CALL RAX,in-direct call
show,0x1c,,RET,ret
show,0x24,,RET,ret
store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
store,0x1c,ctx->rax,CALL RAX,in-direct call
store,0x1f,,RET,ret
store,0x27,,RET,ret
threshold_block_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
threshold_block_release,0xd,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
threshold_block_release,0x13,,RET,ret
store_interrupt_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
store_interrupt_enable,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
store_interrupt_enable,0x34,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
store_interrupt_enable,0x5a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
store_interrupt_enable,0x62,ctx->wordctx->ptrctx->rbx + 0x10,"MOV word ptr [RBX + 0x10],AX",write other [TODO]
store_interrupt_enable,0x66,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
store_interrupt_enable,0x6e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
store_interrupt_enable,0x72,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
store_interrupt_enable,0x9b,,RET,ret
store_interrupt_enable,0xa5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
store_threshold_limit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
store_threshold_limit,0x28,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
store_threshold_limit,0x2e,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
store_threshold_limit,0x4d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x1",write stack
store_threshold_limit,0x61,ctx->wordctx->ptrctx->rbx + 0x14,"MOV word ptr [RBX + 0x14],DX",write other [TODO]
store_threshold_limit,0x75,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
store_threshold_limit,0x79,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
store_threshold_limit,0x81,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
store_threshold_limit,0x89,ctx->wordctx->ptrctx->rbp - 0x1c,"MOV word ptr [RBP + -0x1c],AX",write stack
store_threshold_limit,0x8d,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
store_threshold_limit,0xb6,,RET,ret
store_threshold_limit,0xb7,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0xfff",write stack
store_threshold_limit,0xcf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
show_interrupt_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_interrupt_enable,0x1b,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
show_interrupt_enable,0x23,,RET,ret
show_threshold_limit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_threshold_limit,0x1b,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
show_threshold_limit,0x23,,RET,ret
show_error_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_error_count,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
show_error_count,0x33,0xffffffff81646570,CALL 0xffffffff81646570,direct call
show_error_count,0x59,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
show_error_count,0x77,,RET,ret
show_error_count,0x81,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_block_address.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_block_address.constprop.0,0x3c,,RET,ret
get_block_address.constprop.0,0x40,,RET,ret
get_block_address.constprop.0,0x55,,RET,ret
get_block_address.constprop.0,0x88,,RET,ret
FUN_ffffffff81055949,0x8,,RET,ret
__threshold_remove_device,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__threshold_remove_device,0x16,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
__threshold_remove_device,0x4c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__threshold_remove_device,0x57,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__threshold_remove_device,0xa0,0xffffffff81c6aae0,CALL 0xffffffff81c6aae0,direct call
__threshold_remove_device,0xc2,0xffffffff81c6aae0,CALL 0xffffffff81c6aae0,direct call
__threshold_remove_device,0xd9,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
__threshold_remove_device,0xf2,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__threshold_remove_device,0x105,,RET,ret
__threshold_remove_device,0x10f,ctx->rcx,"MOV RCX,qword ptr [RBP + -0x40]",write other [TODO]
__threshold_remove_device,0x123,0xffffffff8107e7a0,CALL 0xffffffff8107e7a0,direct call
__threshold_remove_device,0x128,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
__threshold_remove_device,0x151,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
__threshold_remove_device,0x155,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__threshold_remove_device,0x158,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],R14",write other [TODO]
__threshold_remove_device,0x15c,ctx->rdi + 0x48,"MOV qword ptr [RDI + 0x48],R13",write other [TODO]
__threshold_remove_device,0x160,0xffffffff81c6a900,CALL 0xffffffff81c6a900,direct call
__threshold_remove_device,0x17b,0xffffffff81c6a900,CALL 0xffffffff81c6a900,direct call
__threshold_remove_device,0x184,0xffffffff81c6a900,CALL 0xffffffff81c6a900,direct call
__threshold_remove_device,0x18c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__threshold_remove_device,0x19b,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__sysvec_deferred_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_deferred_error,0x12,0xffffffff82e41220,CALL qword ptr [0xffffffff82e41220],in-direct call
__sysvec_deferred_error,0x28,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_deferred_error,0x2b,,RET,ret
get_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_name,0x2b,,RET,ret
get_name,0x83,,RET,ret
get_name,0xc7,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
get_name,0xd4,,RET,ret
get_name,0x118,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
get_name,0x12b,,RET,ret
threshold_restart_bank,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
threshold_restart_bank,0x32,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
threshold_restart_bank,0x5a,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],0x1",write other [TODO]
prepare_threshold_block,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prepare_threshold_block,0x24,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
prepare_threshold_block,0x5f,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],R11D",write stack
prepare_threshold_block,0x66,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],R9D",write stack
prepare_threshold_block,0x70,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],ESI",write stack
prepare_threshold_block,0x76,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],EDX",write stack
prepare_threshold_block,0x9c,ctx->wordctx->ptrctx->rbp - 0x78,"MOV word ptr [RBP + -0x78],CX",write stack
prepare_threshold_block,0xda,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x0",write stack
prepare_threshold_block,0xe5,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
prepare_threshold_block,0xf1,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x0",write stack
prepare_threshold_block,0xfc,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],0x1",write stack
prepare_threshold_block,0x106,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],R12D",write stack
prepare_threshold_block,0x10d,ctx->wordctx->ptrctx->rbp - 0x74,"MOV word ptr [RBP + -0x74],AX",write stack
prepare_threshold_block,0x111,0xffffffff81055d00,CALL 0xffffffff81055d00,direct call
prepare_threshold_block,0x135,,RET,ret
prepare_threshold_block,0x145,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
prepare_threshold_block,0x171,0xffffffff8106f620,CALL 0xffffffff8106f620,direct call
prepare_threshold_block,0x181,0xffffffff834059be,"MOV byte ptr [0xffffffff834059be],0x1",write .data
prepare_threshold_block,0x18d,ctx->rbp - 0x76,"MOV byte ptr [RBP + -0x76],0x1",write stack
prepare_threshold_block,0x196,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__log_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__log_error,0x32,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__log_error,0x38,0xffffffff810539c0,CALL 0xffffffff810539c0,direct call
__log_error,0x3d,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],R13",write stack
__log_error,0x44,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R14",write stack
__log_error,0x4b,ctx->rbp - 0x67,"MOV byte ptr [RBP + -0x67],BL",write stack
__log_error,0x5c,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDX",write stack
__log_error,0x66,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R12",write stack
__log_error,0x98,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
__log_error,0xa8,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__log_error,0xae,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__log_error,0xc2,0xffffffff810527d0,CALL 0xffffffff810527d0,direct call
__log_error,0xe5,,RET,ret
__log_error,0xf7,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__log_error,0xfd,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
__log_error,0x103,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
log_and_reset_block,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
log_and_reset_block,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
log_and_reset_block,0x3b,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
FUN_ffffffff81056153,0x8,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
FUN_ffffffff810561eb,-0x7b,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
FUN_ffffffff810561eb,-0x77,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff810561eb,-0x4e,0xffffffff81055fd0,CALL 0xffffffff81055fd0,direct call
FUN_ffffffff810561eb,-0x40,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff810561eb,-0x37,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
FUN_ffffffff810561eb,-0x2f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
FUN_ffffffff810561eb,-0x27,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
FUN_ffffffff810561eb,-0x23,0xffffffff81055d00,CALL 0xffffffff81055d00,direct call
FUN_ffffffff810561eb,-0x1,,RET,ret
FUN_ffffffff810561eb,0x10,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff810561eb,0x1b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_threshold_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_threshold_interrupt,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
amd_threshold_interrupt,0x90,0xffffffff810560e0,CALL 0xffffffff810560e0,direct call
amd_threshold_interrupt,0xae,0xffffffff810560e0,CALL 0xffffffff810560e0,direct call
amd_threshold_interrupt,0xd3,,RET,ret
allocate_threshold_blocks,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
allocate_threshold_blocks,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
allocate_threshold_blocks,0x5e,,RET,ret
allocate_threshold_blocks,0x72,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
allocate_threshold_blocks,0x7b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
allocate_threshold_blocks,0xa6,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
allocate_threshold_blocks,0xaa,0xffffffff810558c0,CALL 0xffffffff810558c0,direct call
allocate_threshold_blocks,0xc1,0xffffffff810562f0,CALL 0xffffffff810562f0,direct call
allocate_threshold_blocks,0xd5,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
allocate_threshold_blocks,0xe7,0xffffffff81c6c2c0,CALL 0xffffffff81c6c2c0,direct call
allocate_threshold_blocks,0x115,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
allocate_threshold_blocks,0x119,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
allocate_threshold_blocks,0x130,ctx->rax,"MOV dword ptr [RAX],EBX",write other [TODO]
allocate_threshold_blocks,0x136,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],R12D",write other [TODO]
allocate_threshold_blocks,0x13a,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
allocate_threshold_blocks,0x13e,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
allocate_threshold_blocks,0x142,ctx->wordctx->ptrctx->rax + 0x10,"MOV word ptr [RAX + 0x10],SI",write other [TODO]
allocate_threshold_blocks,0x157,ctx->wordctx->ptrctx->rax + 0x14,"MOV word ptr [RAX + 0x14],DX",write other [TODO]
allocate_threshold_blocks,0x165,0xffffffff82e411b0,"MOV qword ptr [0xffffffff82e411b0],0x0",write .data
allocate_threshold_blocks,0x178,ctx->r9 + 0x58,"MOV qword ptr [R9 + 0x58],RAX",write other [TODO]
allocate_threshold_blocks,0x17c,ctx->r9 + 0x60,"MOV qword ptr [R9 + 0x60],RAX",write other [TODO]
allocate_threshold_blocks,0x18d,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
allocate_threshold_blocks,0x191,ctx->r9 + 0x58,"MOV qword ptr [R9 + 0x58],RCX",write other [TODO]
allocate_threshold_blocks,0x199,ctx->r9 + 0x60,"MOV qword ptr [R9 + 0x60],RCX",write other [TODO]
allocate_threshold_blocks,0x19d,ctx->rdx + 0x58,"MOV qword ptr [RDX + 0x58],RAX",write other [TODO]
allocate_threshold_blocks,0x1aa,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
allocate_threshold_blocks,0x1ae,0xffffffff81055bd0,CALL 0xffffffff81055bd0,direct call
allocate_threshold_blocks,0x1c8,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
allocate_threshold_blocks,0x1cc,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
allocate_threshold_blocks,0x1d0,0xffffffff81c6b4b0,CALL 0xffffffff81c6b4b0,direct call
allocate_threshold_blocks,0x1f0,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R8D",write stack
allocate_threshold_blocks,0x1f4,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
allocate_threshold_blocks,0x1f8,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
allocate_threshold_blocks,0x205,ctx->r9 + 0x58,"MOV qword ptr [R9 + 0x58],RAX",write other [TODO]
allocate_threshold_blocks,0x20d,ctx->r9 + 0x60,"MOV qword ptr [R9 + 0x60],RAX",write other [TODO]
allocate_threshold_blocks,0x211,0xffffffff81c6a900,CALL 0xffffffff81c6a900,direct call
allocate_threshold_blocks,0x233,ctx->rax + 0x12,"MOV byte ptr [RAX + 0x12],0x1",write other [TODO]
allocate_threshold_blocks,0x237,ctx->wordctx->ptrctx->rax + 0x14,"MOV word ptr [RAX + 0x14],CX",write other [TODO]
allocate_threshold_blocks,0x23b,0xffffffff82e411b0,"MOV qword ptr [0xffffffff82e411b0],-0x7d1bee20",write .data
allocate_threshold_blocks,0x24b,ctx->wordctx->ptrctx->r9 + 0x10,"MOV word ptr [R9 + 0x10],AX",write other [TODO]
allocate_threshold_blocks,0x255,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R9",write other [TODO]
allocate_threshold_blocks,0x25e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_deferred_error_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_deferred_error_interrupt,0x151,,RET,ret
FUN_ffffffff81056672,-0xc8,0xffffffff81055fd0,CALL 0xffffffff81055fd0,direct call
FUN_ffffffff81056672,-0xba,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81056672,-0x93,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81056672,-0x5e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81056672,-0x3d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81056672,-0x18,0xffffffff81055fd0,CALL 0xffffffff81055fd0,direct call
FUN_ffffffff81056672,-0xb,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
FUN_ffffffff81056672,0x17,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81056672,0x2f,,RET,ret
FUN_ffffffff81056672,0x34,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_filter_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_filter_mce,0x59,,RET,ret
amd_filter_mce,0x85,,RET,ret
amd_filter_mce,0xa2,,RET,ret
mce_amd_feature_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_amd_feature_init,0x16,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDI",write stack
mce_amd_feature_init,0x2b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mce_amd_feature_init,0x50,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0xc0002003",write stack
mce_amd_feature_init,0x57,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0xffffffff",write stack
mce_amd_feature_init,0x5e,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
amd_mce_is_memory_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_mce_is_memory_error,0x33,,RET,ret
amd_mce_is_memory_error,0x73,,RET,ret
mce_threshold_remove_device,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_threshold_remove_device,0x14,,RET,ret
mce_threshold_remove_device,0x19,ctx->gs + 0x1fd60,"MOV qword ptr GS:[0x1fd60],0x0",write other [TODO]
mce_threshold_remove_device,0x25,0xffffffff81055960,CALL 0xffffffff81055960,direct call
mce_threshold_remove_device,0x2d,,RET,ret
mce_threshold_create_device,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_threshold_create_device,0x5e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
mce_threshold_create_device,0x62,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
mce_threshold_create_device,0x67,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
mce_threshold_create_device,0x84,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
FUN_ffffffff81056f3b,-0x2a8,,RET,ret
FUN_ffffffff81056f3b,-0x25e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
FUN_ffffffff81056f3b,-0x245,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
FUN_ffffffff81056f3b,-0x241,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
FUN_ffffffff81056f3b,-0x229,0xffffffff81c6b410,CALL 0xffffffff81c6b410,direct call
FUN_ffffffff81056f3b,-0x224,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
FUN_ffffffff81056f3b,-0x205,ctx->r14 + 0x14,"MOV dword ptr [R14 + 0x14],0x1",write other [TODO]
FUN_ffffffff81056f3b,-0x1fd,ctx->r14 + 0x10,"MOV dword ptr [R14 + 0x10],0x1",write other [TODO]
FUN_ffffffff81056f3b,-0x1e1,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],R14",write other [TODO]
FUN_ffffffff81056f3b,-0x1c0,0xffffffff810562f0,CALL 0xffffffff810562f0,direct call
FUN_ffffffff81056f3b,-0x1ac,ctx->rax + ctx->r13 * 0x8,"MOV qword ptr [RAX + R13*0x8],R14",write other [TODO]
FUN_ffffffff81056f3b,-0x173,0xffffffff81055bd0,CALL 0xffffffff81055bd0,direct call
FUN_ffffffff81056f3b,-0x13b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
FUN_ffffffff81056f3b,-0x127,0xffffffff8107e7a0,CALL 0xffffffff8107e7a0,direct call
FUN_ffffffff81056f3b,-0x11b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
FUN_ffffffff81056f3b,-0xfb,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
FUN_ffffffff81056f3b,-0xf7,0xffffffff81c6b360,CALL 0xffffffff81c6b360,direct call
FUN_ffffffff81056f3b,-0xdb,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RCX",write other [TODO]
FUN_ffffffff81056f3b,-0xb3,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
FUN_ffffffff81056f3b,-0xa7,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R14",write stack
FUN_ffffffff81056f3b,-0xa3,0xffffffff81c6b360,CALL 0xffffffff81c6b360,direct call
FUN_ffffffff81056f3b,-0x4c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
FUN_ffffffff81056f3b,-0x48,0xffffffff81c6b360,CALL 0xffffffff81c6b360,direct call
FUN_ffffffff81056f3b,-0x1b,0xffffffff81c6aae0,CALL 0xffffffff81c6aae0,direct call
FUN_ffffffff81056f3b,0x16,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
FUN_ffffffff81056f3b,0x1f,0xffffffff81055960,CALL 0xffffffff81055960,direct call
FUN_ffffffff81056f3b,0x2c,0xffffffff81c6a900,CALL 0xffffffff81c6a900,direct call
FUN_ffffffff81056f3b,0x34,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
FUN_ffffffff81056f3b,0x3f,ctx->gs + 0x1fd60,"MOV qword ptr GS:[0x1fd60],RAX",write other [TODO]
FUN_ffffffff81056f3b,0x54,0xffffffff82e41228,"MOV qword ptr [0xffffffff82e41228],-0x7efa9df0",write .data
FUN_ffffffff81056f3b,0x69,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
FUN_ffffffff81056f3b,0x6d,0xffffffff81605660,CALL 0xffffffff81605660,direct call
FUN_ffffffff81056f3b,0x8f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
FUN_ffffffff81056f3b,0x93,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__sysvec_threshold,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_threshold,0x12,0xffffffff82e41228,CALL qword ptr [0xffffffff82e41228],in-direct call
__sysvec_threshold,0x28,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_threshold,0x2b,,RET,ret
apei_mce_report_mem_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apei_mce_report_mem_error,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
apei_mce_report_mem_error,0x44,0xffffffff810539c0,CALL 0xffffffff810539c0,direct call
apei_mce_report_mem_error,0x49,ctx->rbp - 0x5f,"MOV byte ptr [RBP + -0x5f],0xff",write stack
apei_mce_report_mem_error,0x57,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
apei_mce_report_mem_error,0x5e,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R13",write stack
apei_mce_report_mem_error,0x7b,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
apei_mce_report_mem_error,0x8b,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RDX",write stack
apei_mce_report_mem_error,0x9a,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
apei_mce_report_mem_error,0xa1,0xffffffff810527d0,CALL 0xffffffff810527d0,direct call
apei_mce_report_mem_error,0xc2,,RET,ret
apei_mce_report_mem_error,0xeb,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
apei_mce_report_mem_error,0xf4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apei_smca_report_x86_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apei_smca_report_x86_error,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
apei_smca_report_x86_error,0x66,0xffffffff810539c0,CALL 0xffffffff810539c0,direct call
apei_smca_report_x86_error,0x6b,ctx->rbp - 0x5c,"MOV qword ptr [RBP + -0x5c],-0x1",write stack
apei_smca_report_x86_error,0x73,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
apei_smca_report_x86_error,0xa5,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
apei_smca_report_x86_error,0xaa,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
apei_smca_report_x86_error,0xbf,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EBX",write stack
apei_smca_report_x86_error,0xc5,ctx->rbp - 0x5f,"MOV byte ptr [RBP + -0x5f],AL",write stack
apei_smca_report_x86_error,0xcc,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
apei_smca_report_x86_error,0xd7,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
apei_smca_report_x86_error,0xe2,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
apei_smca_report_x86_error,0xed,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
apei_smca_report_x86_error,0xf5,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
apei_smca_report_x86_error,0xf9,0xffffffff810527d0,CALL 0xffffffff810527d0,direct call
apei_smca_report_x86_error,0x11c,,RET,ret
apei_smca_report_x86_error,0x11d,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EAX",write stack
apei_smca_report_x86_error,0x129,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EAX",write stack
apei_smca_report_x86_error,0x135,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apei_write_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apei_write_mce,0x2e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
apei_write_mce,0x41,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],0x52455043",write stack
apei_write_mce,0x4b,ctx->rbp - 0x15c,"MOV qword ptr [RBP + -0x15c],RAX",write stack
apei_write_mce,0x5c,ctx->rbp - 0x120,"MOV qword ptr [RBP + -0x120],RAX",write stack
apei_write_mce,0x6d,ctx->rbp - 0x118,"MOV qword ptr [RBP + -0x118],RAX",write stack
apei_write_mce,0x7e,ctx->rbp - 0x110,"MOV qword ptr [RBP + -0x110],RAX",write stack
apei_write_mce,0x8f,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],0x1",write stack
apei_write_mce,0x99,ctx->rbp - 0x14c,"MOV dword ptr [RBP + -0x14c],0x148",write stack
apei_write_mce,0xa3,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
apei_write_mce,0xaa,0xffffffff81a24fd0,CALL 0xffffffff81a24fd0,direct call
apei_write_mce,0xaf,ctx->rbp - 0xd6,"MOV byte ptr [RBP + -0xd6],0x0",write stack
apei_write_mce,0xb9,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
apei_write_mce,0xca,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],RAX",write stack
apei_write_mce,0xd6,ctx->wordctx->ptrctx->rbp - 0xd8,"MOV word ptr [RBP + -0xd8],AX",write stack
apei_write_mce,0xe7,ctx->rbp - 0xd4,"MOV qword ptr [RBP + -0xd4],RAX",write stack
apei_write_mce,0xf8,ctx->rbp - 0xcc,"MOV qword ptr [RBP + -0xcc],RAX",write stack
apei_write_mce,0x102,ctx->rbp - 0xf8,"MOV dword ptr [RBP + -0xf8],0x2",write stack
apei_write_mce,0x10c,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
apei_write_mce,0x117,ctx->rbp - 0xc4,"MOV dword ptr [RBP + -0xc4],0xfc384a04",write stack
apei_write_mce,0x121,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
apei_write_mce,0x12c,ctx->rbp - 0xb0,"MOV dword ptr [RBP + -0xb0],0x1",write stack
apei_write_mce,0x136,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
apei_write_mce,0x141,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
apei_write_mce,0x149,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
apei_write_mce,0x151,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
apei_write_mce,0x159,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
apei_write_mce,0x161,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
apei_write_mce,0x169,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
apei_write_mce,0x171,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
apei_write_mce,0x179,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
apei_write_mce,0x181,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
apei_write_mce,0x189,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
apei_write_mce,0x191,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
apei_write_mce,0x199,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
apei_write_mce,0x1a1,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
apei_write_mce,0x1a5,0xffffffff81732470,CALL 0xffffffff81732470,direct call
apei_write_mce,0x1c4,,RET,ret
apei_write_mce,0x1c5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apei_read_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apei_read_mce,0x3e,ctx->rsp + 0x168,"MOV qword ptr [RSP + 0x168],RAX",write stack
apei_read_mce,0x4d,0xffffffff81731a70,CALL 0xffffffff81731a70,direct call
apei_read_mce,0x70,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],R13",write stack
apei_read_mce,0x7a,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],R12",write stack
apei_read_mce,0x7f,0xffffffff81732aa0,CALL 0xffffffff81732aa0,direct call
apei_read_mce,0x91,0xffffffff81731bf0,CALL 0xffffffff81731bf0,direct call
apei_read_mce,0x9d,0xffffffff81731990,CALL 0xffffffff81731990,direct call
apei_read_mce,0xc8,,RET,ret
apei_read_mce,0xe8,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
apei_read_mce,0xf3,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
apei_read_mce,0xff,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
apei_read_mce,0x10b,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],RAX",write other [TODO]
apei_read_mce,0x117,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],RAX",write other [TODO]
apei_read_mce,0x123,ctx->r14 + 0x28,"MOV qword ptr [R14 + 0x28],RAX",write other [TODO]
apei_read_mce,0x12f,ctx->r14 + 0x30,"MOV qword ptr [R14 + 0x30],RAX",write other [TODO]
apei_read_mce,0x13b,ctx->r14 + 0x38,"MOV qword ptr [R14 + 0x38],RAX",write other [TODO]
apei_read_mce,0x147,ctx->r14 + 0x40,"MOV qword ptr [R14 + 0x40],RAX",write other [TODO]
apei_read_mce,0x153,ctx->r14 + 0x48,"MOV qword ptr [R14 + 0x48],RAX",write other [TODO]
apei_read_mce,0x15f,ctx->r14 + 0x50,"MOV qword ptr [R14 + 0x50],RAX",write other [TODO]
apei_read_mce,0x16b,ctx->r14 + 0x58,"MOV qword ptr [R14 + 0x58],RAX",write other [TODO]
apei_read_mce,0x177,ctx->r14 + 0x60,"MOV qword ptr [R14 + 0x60],RAX",write other [TODO]
apei_read_mce,0x183,ctx->r14 + 0x68,"MOV qword ptr [R14 + 0x68],RAX",write other [TODO]
apei_read_mce,0x18f,ctx->r14 + 0x70,"MOV qword ptr [R14 + 0x70],RAX",write other [TODO]
apei_read_mce,0x19b,ctx->r14 + 0x78,"MOV qword ptr [R14 + 0x78],RAX",write other [TODO]
apei_read_mce,0x1a4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apei_check_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apei_check_mce,0x9,0xffffffff81731f00,CALL 0xffffffff81731f00,direct call
apei_check_mce,0xf,,RET,ret
apei_clear_mce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apei_clear_mce,0x9,0xffffffff817321f0,CALL 0xffffffff817321f0,direct call
apei_clear_mce,0xf,,RET,ret
mce_chrdev_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_chrdev_release,0x10,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
mce_chrdev_release,0x23,0xffffffff834059c4,"MOV dword ptr [0xffffffff834059c4],0x0",write .data
mce_chrdev_release,0x2d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mce_chrdev_release,0x35,,RET,ret
mce_do_trigger,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_do_trigger,0x1b,0xffffffff810c2350,CALL 0xffffffff810c2350,direct call
mce_do_trigger,0x21,,RET,ret
set_trigger,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_trigger,0x19,0xffffffff81c7f840,CALL 0xffffffff81c7f840,direct call
set_trigger,0x2a,0xffffffff83405a5f,"MOV byte ptr [0xffffffff83405a5f],0x0",write .data
set_trigger,0x31,0xffffffff81c7f910,CALL 0xffffffff81c7f910,direct call
set_trigger,0x3e,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
set_trigger,0x4d,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
set_trigger,0x6d,,RET,ret
show_trigger,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
show_trigger,0x19,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
show_trigger,0x4f,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
show_trigger,0x5f,ctx->rbx + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RBX + RDX*0x1 + -0x8],RCX",write other [TODO]
show_trigger,0x77,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
show_trigger,0x7d,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
show_trigger,0x93,ctx->wordctx->ptrctx->rbx + ctx->rax * 0x1,"MOV word ptr [RBX + RAX*0x1],DX",write other [TODO]
show_trigger,0x97,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
show_trigger,0xb3,,RET,ret
show_trigger,0xc3,ctx->rbx,"MOV byte ptr [RBX],DL",write other [TODO]
show_trigger,0xd6,ctx->wordctx->ptrctx->rbx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RBX + RAX*0x1 + -0x2],DX",write other [TODO]
show_trigger,0xe5,ctx->rbx,"MOV dword ptr [RBX],EDX",write other [TODO]
show_trigger,0xf1,ctx->rbx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RBX + RAX*0x1 + -0x4],EDX",write other [TODO]
mce_register_injector_chain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_register_injector_chain,0x13,0xffffffff810d2bb0,CALL 0xffffffff810d2bb0,direct call
mce_register_injector_chain,0x19,,RET,ret
mce_unregister_injector_chain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_unregister_injector_chain,0x13,0xffffffff810d2970,CALL 0xffffffff810d2970,direct call
mce_unregister_injector_chain,0x19,,RET,ret
mce_chrdev_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_chrdev_open,0x1a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
mce_chrdev_open,0x42,0xffffffff834059c4,"MOV dword ptr [0xffffffff834059c4],0x1",write .data
mce_chrdev_open,0x56,0xffffffff834059c8,"MOV dword ptr [0xffffffff834059c8],EAX",write .data
mce_chrdev_open,0x5c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mce_chrdev_open,0x67,0xffffffff8135efc0,CALL 0xffffffff8135efc0,direct call
mce_chrdev_open,0x71,,RET,ret
mce_chrdev_open,0x7d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mce_chrdev_ioctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_chrdev_ioctl,0x16,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
mce_chrdev_ioctl,0x48,,RET,ret
mce_chrdev_ioctl,0x67,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mce_chrdev_ioctl,0x73,,RET,ret
mce_chrdev_ioctl,0x7c,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mce_chrdev_ioctl,0x88,,RET,ret
mce_chrdev_ioctl,0x96,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mce_chrdev_ioctl,0xa2,,RET,ret
__mce_read_apei,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mce_read_apei,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__mce_read_apei,0x3b,0xffffffff810574d0,CALL 0xffffffff810574d0,direct call
__mce_read_apei,0x47,0xffffffff834059c0,"MOV dword ptr [0xffffffff834059c0],0x1",write .data
__mce_read_apei,0x74,,RET,ret
__mce_read_apei,0x84,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__mce_read_apei,0x95,0xffffffff81057690,CALL 0xffffffff81057690,direct call
__mce_read_apei,0xa7,0xffffffff834059c0,"MOV dword ptr [0xffffffff834059c0],0x1",write .data
__mce_read_apei,0xc3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_chrdev_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_chrdev_read,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mce_chrdev_read,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
mce_chrdev_read,0x37,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mce_chrdev_read,0x9f,0xffffffff81605960,CALL 0xffffffff81605960,direct call
mce_chrdev_read,0xb2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
mce_chrdev_read,0xcf,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
mce_chrdev_read,0xd4,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],0x0",write other [TODO]
mce_chrdev_read,0xe7,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mce_chrdev_read,0xfc,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mce_chrdev_read,0x123,,RET,ret
mce_chrdev_read,0x12b,0xffffffff81057a20,CALL 0xffffffff81057a20,direct call
mce_chrdev_read,0x145,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mce_chrdev_read,0x15a,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
mce_chrdev_read,0x15d,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mce_chrdev_read,0x168,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
dev_mce_log,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dev_mce_log,0xd,,RET,ret
dev_mce_log,0x1d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
dev_mce_log,0x3f,ctx->rdx + 0x10,"MOV dword ptr [RDX + 0x10],ECX",write other [TODO]
dev_mce_log,0x55,ctx->rax,"MOV qword ptr [RAX],RSI",write other [TODO]
dev_mce_log,0x5c,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RSI",write other [TODO]
dev_mce_log,0x64,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RSI",write other [TODO]
dev_mce_log,0x6c,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RSI",write other [TODO]
dev_mce_log,0x74,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RSI",write other [TODO]
dev_mce_log,0x7c,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RSI",write other [TODO]
dev_mce_log,0x84,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RSI",write other [TODO]
dev_mce_log,0x8c,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],RSI",write other [TODO]
dev_mce_log,0x94,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],RSI",write other [TODO]
dev_mce_log,0x9c,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RSI",write other [TODO]
dev_mce_log,0xa4,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RSI",write other [TODO]
dev_mce_log,0xac,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RSI",write other [TODO]
dev_mce_log,0xb4,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RSI",write other [TODO]
dev_mce_log,0xbc,ctx->rax + 0x68,"MOV qword ptr [RAX + 0x68],RSI",write other [TODO]
dev_mce_log,0xc4,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],RSI",write other [TODO]
dev_mce_log,0xcd,ctx->rdx + 0x63,"MOV byte ptr [RDX + 0x63],0x1",write other [TODO]
dev_mce_log,0xd1,ctx->rdx + 0x98,"MOV qword ptr [RDX + 0x98],0x0",write other [TODO]
dev_mce_log,0xe1,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
dev_mce_log,0xed,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
dev_mce_log,0x10a,,RET,ret
mce_chrdev_poll,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_chrdev_poll,0x22,ctx->rax,CALL RAX,in-direct call
mce_chrdev_poll,0x46,,RET,ret
mce_chrdev_poll,0x47,0xffffffff81057680,CALL 0xffffffff81057680,direct call
mce_chrdev_poll,0x5e,,RET,ret
mce_chrdev_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_chrdev_write,0x27,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
mce_chrdev_write,0x2d,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
mce_chrdev_write,0x71,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
mce_chrdev_write,0x83,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
mce_chrdev_write,0xb1,,RET,ret
mce_chrdev_write,0xb2,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
mce_chrdev_write,0xc3,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
mce_chrdev_write,0xe8,0xffffffff81d135c0,CALL 0xffffffff81d135c0,direct call
mce_chrdev_write,0xfd,0xffffffff810d30e0,CALL 0xffffffff810d30e0,direct call
mce_chrdev_write,0x11c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mce_work_trigger,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mce_work_trigger,0xe,,RET,ret
mce_work_trigger,0x26,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
mce_work_trigger,0x2c,,RET,ret
arch_phys_wc_index,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_phys_wc_index,0x18,,RET,ret
arch_phys_wc_index,0x1f,,RET,ret
mtrr_save,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_save,0x42,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_save,0x54,,RET,ret
mtrr_save,0x57,,RET,ret
mtrr_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_restore,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
mtrr_restore,0x5a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mtrr_restore,0x65,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],R12D",write stack
mtrr_restore,0x69,ctx->rbp - 0x1c,"MOV byte ptr [RBP + -0x1c],DL",write stack
mtrr_restore,0x73,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
mtrr_restore,0x77,0xffffffff811906f0,CALL 0xffffffff811906f0,direct call
mtrr_restore,0x95,,RET,ret
mtrr_restore,0x96,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mtrr_rendezvous_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_rendezvous_handler,0x28,ctx->rax + 0x8,CALL qword ptr [RAX + 0x8],in-direct call
mtrr_rendezvous_handler,0x2e,,RET,ret
mtrr_rendezvous_handler,0x3f,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
mtrr_rendezvous_handler,0x45,,RET,ret
mtrr_add_page.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_add_page.part.0,0x19,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RSI",write stack
mtrr_add_page.part.0,0x1d,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],ECX",write stack
mtrr_add_page.part.0,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mtrr_add_page.part.0,0x74,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
mtrr_add_page.part.0,0x80,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mtrr_add_page.part.0,0xfa,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_add_page.part.0,0x157,ctx->rax + 0x20,CALL qword ptr [RAX + 0x20],in-direct call
mtrr_add_page.part.0,0x177,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R12",write stack
mtrr_add_page.part.0,0x17b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RBX",write stack
mtrr_add_page.part.0,0x17f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
mtrr_add_page.part.0,0x182,ctx->rbp - 0x34,"MOV byte ptr [RBP + -0x34],R13B",write stack
mtrr_add_page.part.0,0x186,0xffffffff81190580,CALL 0xffffffff81190580,direct call
mtrr_add_page.part.0,0x197, - 0x7cbfa580 + ctx->rax * 0x4,"MOV dword ptr [-0x7cbfa580 + RAX*0x4],0x1",write other [TODO]
mtrr_add_page.part.0,0x21e,0xffffffff81059300,CALL 0xffffffff81059300,direct call
mtrr_add_page.part.0,0x22a,0xffffffff81059300,CALL 0xffffffff81059300,direct call
mtrr_add_page.part.0,0x243,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mtrr_add_page.part.0,0x26b,0xffffffff81678a60,CALL 0xffffffff81678a60,direct call
mtrr_add_page.part.0,0x294,0xffffffff81676870,CALL 0xffffffff81676870,direct call
mtrr_add_page.part.0,0x2ad,ctx->rax,CALL RAX,in-direct call
mtrr_add_page.part.0,0x2d2, - 0x7cbfa580 + ctx->rdx * 0x4,"MOV dword ptr [-0x7cbfa580 + RDX*0x4],EAX",write other [TODO]
mtrr_add_page.part.0,0x2f4,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
mtrr_add_page.part.0,0x2fc,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
mtrr_add_page.part.0,0x304,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R15D",write stack
mtrr_add_page.part.0,0x308,ctx->rbp - 0x34,"MOV byte ptr [RBP + -0x34],0x0",write stack
mtrr_add_page.part.0,0x30c,0xffffffff81190580,CALL 0xffffffff81190580,direct call
mtrr_add_page.part.0,0x311, - 0x7cbfa580 + ctx->rbx * 0x4,"MOV dword ptr [-0x7cbfa580 + RBX*0x4],0x0",write other [TODO]
mtrr_add_page.part.0,0x35e,ctx->rax + 0x20,CALL qword ptr [RAX + 0x20],in-direct call
mtrr_add_page.part.0,0x370,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R12",write stack
mtrr_add_page.part.0,0x382,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R14D",write stack
mtrr_add_page.part.0,0x386,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
mtrr_add_page.part.0,0x38a,ctx->rbp - 0x34,"MOV byte ptr [RBP + -0x34],R13B",write stack
mtrr_add_page.part.0,0x38e,0xffffffff81190580,CALL 0xffffffff81190580,direct call
mtrr_add_page.part.0,0xc38b8e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mtrr_add_page.part.0,0xc38ba5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mtrr_add_page.part.0,0xc38beb,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mtrr_add_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_add_page,0x2b,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
mtrr_add_page,0x3e,0xffffffff810580c0,CALL 0xffffffff810580c0,direct call
mtrr_add_page,0x4b,,RET,ret
mtrr_add_page,0x51,,RET,ret
mtrr_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_add,0x79,,RET,ret
arch_phys_wc_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_phys_wc_add,0x17,0xffffffff81090a00,CALL 0xffffffff81090a00,direct call
arch_phys_wc_add,0x43,0xffffffff810584d0,CALL 0xffffffff810584d0,direct call
arch_phys_wc_add,0x63,,RET,ret
mtrr_del_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_del_page,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mtrr_del_page,0x3f,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
mtrr_del_page,0x4b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mtrr_del_page,0x78,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_del_page,0x9b, - 0x7cbfa580 + ctx->rdx * 0x4,"MOV dword ptr [-0x7cbfa580 + RDX*0x4],EAX",write other [TODO]
mtrr_del_page,0x104,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_del_page,0x13f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
mtrr_del_page,0x147,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
mtrr_del_page,0x14f,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R12D",write stack
mtrr_del_page,0x153,ctx->rbp - 0x2c,"MOV byte ptr [RBP + -0x2c],0x0",write stack
mtrr_del_page,0x157,0xffffffff81190580,CALL 0xffffffff81190580,direct call
mtrr_del_page,0xc38791,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mtrr_del_page,0xc387ab,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_phys_wc_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_phys_wc_del,0x28,0xffffffff810585c0,CALL 0xffffffff810585c0,direct call
arch_phys_wc_del,0x2e,,RET,ret
arch_phys_wc_del,0x33,,RET,ret
mtrr_del,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_del,0x51,,RET,ret
mtrr_ap_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_ap_init,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
mtrr_ap_init,0x47,,RET,ret
mtrr_ap_init,0x63,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
mtrr_ap_init,0x6b,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
mtrr_ap_init,0x73,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0xffffffff",write stack
mtrr_ap_init,0x7a,ctx->rbp - 0xc,"MOV byte ptr [RBP + -0xc],0x0",write stack
mtrr_ap_init,0x7e,0xffffffff81190730,CALL 0xffffffff81190730,direct call
mtrr_ap_init,0x85,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mtrr_save_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_save_state,0xe,,RET,ret
mtrr_save_state,0x10,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
mtrr_save_state,0x20,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
mtrr_save_state,0x35,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
mtrr_save_state,0x3b,,RET,ret
set_mtrr_aps_delayed_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_mtrr_aps_delayed_init,0x25,,RET,ret
set_mtrr_aps_delayed_init,0x26,0xffffffff834076a0,"MOV byte ptr [0xffffffff834076a0],0x1",write .data
set_mtrr_aps_delayed_init,0x2e,,RET,ret
mtrr_aps_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_aps_init,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
mtrr_aps_init,0x3c,,RET,ret
mtrr_aps_init,0x61,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
mtrr_aps_init,0x69,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
mtrr_aps_init,0x71,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0xffffffff",write stack
mtrr_aps_init,0x78,ctx->rbp - 0xc,"MOV byte ptr [RBP + -0xc],0x0",write stack
mtrr_aps_init,0x7c,0xffffffff811906f0,CALL 0xffffffff811906f0,direct call
mtrr_aps_init,0x81,0xffffffff834076a0,"MOV byte ptr [0xffffffff834076a0],0x0",write .data
mtrr_aps_init,0x8a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mtrr_bp_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_bp_restore,0x24,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
mtrr_bp_restore,0x28,,RET,ret
mtrr_bp_restore,0x29,,RET,ret
mtrr_close,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_close,0x20,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
mtrr_close,0x4b,0xffffffff810587a0,CALL 0xffffffff810587a0,direct call
mtrr_close,0x65,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mtrr_close,0x71,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],0x0",write other [TODO]
mtrr_close,0x80,0xffffffff81395050,CALL 0xffffffff81395050,direct call
mtrr_close,0x93,,RET,ret
mtrr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_write,0x29,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mtrr_write,0x47,0xffffffff81641c90,CALL 0xffffffff81641c90,direct call
mtrr_write,0x5c,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
mtrr_write,0x76,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDX",write stack
mtrr_write,0xb0,0xffffffff81c80a20,CALL 0xffffffff81c80a20,direct call
mtrr_write,0xbb,0xffffffff810585c0,CALL 0xffffffff810585c0,direct call
mtrr_write,0xe0,ctx->rax,"MOV RAX,R12",write other [TODO]
mtrr_write,0xeb,,RET,ret
mtrr_write,0xfb,ctx->rdx,"MOV byte ptr [RDX],0x0",write other [TODO]
mtrr_write,0x116,0xffffffff81c80a00,CALL 0xffffffff81c80a00,direct call
mtrr_write,0x122,0xffffffff81606320,CALL 0xffffffff81606320,direct call
mtrr_write,0x136,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
mtrr_write,0x13d,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
mtrr_write,0x154,0xffffffff81c80a00,CALL 0xffffffff81c80a00,direct call
mtrr_write,0x171,0xffffffff81606320,CALL 0xffffffff81606320,direct call
mtrr_write,0x185,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
mtrr_write,0x18c,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
mtrr_write,0x19d,0xffffffff81606320,CALL 0xffffffff81606320,direct call
mtrr_write,0x1b1,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
mtrr_write,0x1b5,0xffffffff81606be0,CALL 0xffffffff81606be0,direct call
mtrr_write,0x1d3,0xffffffff81058470,CALL 0xffffffff81058470,direct call
mtrr_write,0x1ee,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mtrr_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_open,0x26,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
mtrr_open,0x3b,0xffffffff81394c10,CALL 0xffffffff81394c10,direct call
mtrr_open,0x45,,RET,ret
mtrr_open,0x52,,RET,ret
mtrr_open,0x58,,RET,ret
mtrr_seq_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_seq_show,0x29,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mtrr_seq_show,0x46,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
mtrr_seq_show,0x84,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
mtrr_seq_show,0xaa,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_seq_show,0xd1, - 0x7cbfa580 + ctx->rbx * 0x4,"MOV dword ptr [-0x7cbfa580 + RBX*0x4],0x0",write other [TODO]
mtrr_seq_show,0x102,,RET,ret
mtrr_seq_show,0x103,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mtrr_file_add.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_file_add.constprop.0,0x5b,0xffffffff81058470,CALL 0xffffffff81058470,direct call
mtrr_file_add.constprop.0,0x7a,,RET,ret
mtrr_file_add.constprop.0,0x87,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
mtrr_file_add.constprop.0,0x94,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
mtrr_file_add.constprop.0,0xab,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],R14",write other [TODO]
mtrr_ioctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_ioctl,0x22,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mtrr_ioctl,0x28,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
mtrr_ioctl,0x30,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
mtrr_ioctl,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
mtrr_ioctl,0x72,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
mtrr_ioctl,0xc0,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_ioctl,0xd2,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
mtrr_ioctl,0xd9,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
mtrr_ioctl,0xe0,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
mtrr_ioctl,0x11c,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mtrr_ioctl,0x12b,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mtrr_ioctl,0x138,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mtrr_ioctl,0x147,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mtrr_ioctl,0x166,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x16d,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDX",write stack
mtrr_ioctl,0x175,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x183,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
mtrr_ioctl,0x187,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x18e,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EDX",write stack
mtrr_ioctl,0x196,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x19b,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
mtrr_ioctl,0x1e4,,RET,ret
mtrr_ioctl,0x209,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x212,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
mtrr_ioctl,0x21b,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x222,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDX",write stack
mtrr_ioctl,0x22a,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
mtrr_ioctl,0x22f,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EDX",write stack
mtrr_ioctl,0x268,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
mtrr_ioctl,0x2aa,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mtrr_ioctl,0x2da,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
mtrr_ioctl,0x2e1,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
mtrr_ioctl,0x2e5,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
mtrr_ioctl,0x2f6,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x50]",write other [TODO]
mtrr_ioctl,0x2fd,0xffffffff81058dd0,CALL 0xffffffff81058dd0,direct call
mtrr_ioctl,0x329,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x50]",write other [TODO]
mtrr_ioctl,0x32d,0xffffffff81058470,CALL 0xffffffff81058470,direct call
mtrr_ioctl,0x34d,0xffffffff810585c0,CALL 0xffffffff810585c0,direct call
mtrr_ioctl,0x370,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
mtrr_ioctl,0x380,0xffffffff810585c0,CALL 0xffffffff810585c0,direct call
mtrr_ioctl,0x3ce,0xffffffff810587a0,CALL 0xffffffff810587a0,direct call
mtrr_ioctl,0x3e2,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x50]",write other [TODO]
mtrr_ioctl,0x3e6,0xffffffff810584d0,CALL 0xffffffff810584d0,direct call
mtrr_ioctl,0x414,0xffffffff81605960,CALL 0xffffffff81605960,direct call
mtrr_ioctl,0x440,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
mtrr_ioctl,0x44b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
mtrr_ioctl,0x44f,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
mtrr_ioctl,0x461,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mtrr_attrib_to_str,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_attrib_to_str,0x21,,RET,ret
paravirt_read_msr,0x6,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
paravirt_read_msr,0xd,,RET,ret
generic_get_free_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_get_free_region,0x1f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
generic_get_free_region,0x4a,,RET,ret
generic_get_free_region,0x73,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
generic_get_free_region,0x87,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
generic_validate_add_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_validate_add_page,0xc37a08,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mtrr_type_lookup_variable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_type_lookup_variable,0x5,ctx->rcx,"MOV dword ptr [RCX],0x0",write other [TODO]
mtrr_type_lookup_variable,0xb,ctx->r8,"MOV byte ptr [R8],0x1",write other [TODO]
mtrr_type_lookup_variable,0xb5,ctx->r8,"MOV byte ptr [R8],0x0",write other [TODO]
mtrr_type_lookup_variable,0xe9,,RET,ret
mtrr_type_lookup_variable,0x119,,RET,ret
mtrr_type_lookup_variable,0x131,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
mtrr_type_lookup_variable,0x139,ctx->r12,"MOV dword ptr [R12],0x1",write other [TODO]
mtrr_type_lookup_variable,0x145,ctx->r8,"MOV byte ptr [R8],0x0",write other [TODO]
mtrr_type_lookup_variable,0x19a,,RET,ret
generic_have_wrcomb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_have_wrcomb,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
generic_have_wrcomb,0x1a,,RET,ret
generic_get_mtrr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_get_mtrr,0x30,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
generic_get_mtrr,0x3b,ctx->r13,"MOV qword ptr [R13],0x0",write other [TODO]
generic_get_mtrr,0x45,ctx->r14,"MOV qword ptr [R14],0x0",write other [TODO]
generic_get_mtrr,0x71,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
mtrr_type_lookup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_type_lookup,0x1c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
mtrr_type_lookup,0x30,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mtrr_type_lookup,0x36,ctx->rbp - 0x3e,"MOV byte ptr [RBP + -0x3e],0x1",write stack
mtrr_type_lookup,0x8f,0xffffffff81059470,CALL 0xffffffff81059470,direct call
mtrr_type_lookup,0xb3,ctx->rbp - 0x3e,"MOV byte ptr [RBP + -0x3e],0x0",write stack
mtrr_type_lookup,0xba,0xffffffff81059470,CALL 0xffffffff81059470,direct call
mtrr_type_lookup,0xea,ctx->rcx,"MOV byte ptr [RCX],AL",write other [TODO]
mtrr_type_lookup,0x110,,RET,ret
mtrr_type_lookup,0x126,0xffffffff81059470,CALL 0xffffffff81059470,direct call
mtrr_type_lookup,0x12b,ctx->ecx,"MOV ECX,dword ptr [RBP + -0x3c]",write other [TODO]
mtrr_type_lookup,0x1f1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fill_mtrr_var_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fill_mtrr_var_range,0xc,ctx->rdi - 0x7cbf8940,"MOV dword ptr [RDI + -0x7cbf8940],ESI",write other [TODO]
fill_mtrr_var_range,0x15,ctx->rdi - 0x7cbf893c,"MOV dword ptr [RDI + -0x7cbf893c],EDX",write other [TODO]
fill_mtrr_var_range,0x1c,ctx->rdi - 0x7cbf8938,"MOV dword ptr [RDI + -0x7cbf8938],ECX",write other [TODO]
fill_mtrr_var_range,0x22,ctx->rdi - 0x7cbf8934,"MOV dword ptr [RDI + -0x7cbf8934],R8D",write other [TODO]
fill_mtrr_var_range,0x29,,RET,ret
mtrr_wrmsr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_wrmsr,0x1d,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
get_fixed_ranges.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_fixed_ranges.constprop.0,0x88,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
mtrr_save_fixed_ranges,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mtrr_save_fixed_ranges,0x11,,RET,ret
mtrr_save_fixed_ranges,0x16,0xffffffff810599a0,CALL 0xffffffff810599a0,direct call
mtrr_save_fixed_ranges,0x1c,,RET,ret
prepare_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prepare_set,0x10,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
prepare_set,0x15,0xffffffff82e4b878,CALL qword ptr [0xffffffff82e4b878],in-direct call
prepare_set,0x24,0xffffffff82e4b880,CALL qword ptr [0xffffffff82e4b880],in-direct call
FUN_ffffffff81059ae7,0x0,0xffffffff82e4b908,CALL qword ptr [0xffffffff82e4b908],in-direct call
FUN_ffffffff81059ae7,0x7,,RET,ret
FUN_ffffffff81059aef,-0x44,0xffffffff8108cda0,CALL 0xffffffff8108cda0,direct call
FUN_ffffffff81059aef,-0x3a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
FUN_ffffffff81059aef,-0x2a,0xffffffff8340873c,"MOV dword ptr [0xffffffff8340873c],EAX",write .data
FUN_ffffffff81059aef,-0x1a,0xffffffff83408738,"MOV dword ptr [0xffffffff83408738],EDX",write .data
FUN_ffffffff81059aef,-0x14,0xffffffff81059960,CALL 0xffffffff81059960,direct call
FUN_ffffffff81059aef,0x0,0xffffffff82e4b908,CALL qword ptr [0xffffffff82e4b908],in-direct call
FUN_ffffffff81059aef,0x15,0xffffffff83408730,"MOV qword ptr [0xffffffff83408730],RDI",write .data
FUN_ffffffff81059aef,0x20,0xffffffff82e4b888,CALL qword ptr [0xffffffff82e4b888],in-direct call
post_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
post_set,0x9,0xffffffff8108cda0,CALL 0xffffffff8108cda0,direct call
post_set,0x1f,0xffffffff81059960,CALL 0xffffffff81059960,direct call
post_set,0x24,0xffffffff82e4b878,CALL qword ptr [0xffffffff82e4b878],in-direct call
post_set,0x33,0xffffffff82e4b880,CALL qword ptr [0xffffffff82e4b880],in-direct call
post_set,0x4c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
post_set,0x52,,RET,ret
post_set,0x5a,0xffffffff82e4b888,CALL qword ptr [0xffffffff82e4b888],in-direct call
post_set,0x67,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
post_set,0x6d,,RET,ret
generic_set_mtrr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_set_mtrr,0x21,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
generic_set_mtrr,0x2a,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
generic_set_mtrr,0x30,0xffffffff81059a70,CALL 0xffffffff81059a70,direct call
generic_set_mtrr,0x50,0xffffffff81059960,CALL 0xffffffff81059960,direct call
generic_set_mtrr,0x55,ctx->rbx - 0x7cbf8940,"MOV qword ptr [RBX + -0x7cbf8940],0x0",write other [TODO]
generic_set_mtrr,0x60,ctx->rbx - 0x7cbf8938,"MOV qword ptr [RBX + -0x7cbf8938],0x0",write other [TODO]
generic_set_mtrr,0x6b,0xffffffff81059b20,CALL 0xffffffff81059b20,direct call
generic_set_mtrr,0x79,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
generic_set_mtrr,0x8d,,RET,ret
generic_set_mtrr,0xa8,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R8D",write stack
generic_set_mtrr,0xca,ctx->rbx - 0x7cbf8940,"MOV dword ptr [RBX + -0x7cbf8940],ESI",write other [TODO]
generic_set_mtrr,0xd0,ctx->rbx - 0x7cbf893c,"MOV dword ptr [RBX + -0x7cbf893c],R14D",write other [TODO]
generic_set_mtrr,0xd7,ctx->rbx - 0x7cbf8938,"MOV dword ptr [RBX + -0x7cbf8938],EAX",write other [TODO]
generic_set_mtrr,0xdd,ctx->rbx - 0x7cbf8934,"MOV dword ptr [RBX + -0x7cbf8934],R12D",write other [TODO]
generic_set_mtrr,0xe4,0xffffffff81059960,CALL 0xffffffff81059960,direct call
generic_set_mtrr,0xf8,0xffffffff81059960,CALL 0xffffffff81059960,direct call
generic_set_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_set_all,0x16,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
generic_set_all,0x1c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
generic_set_all,0x20,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
generic_set_all,0x26,0xffffffff81059a70,CALL 0xffffffff81059a70,direct call
generic_set_all,0x41,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
generic_set_all,0x54,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
generic_set_all,0x80,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
generic_set_all,0xc8,0xffffffff81059960,CALL 0xffffffff81059960,direct call
generic_set_all,0xdc,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
generic_set_all,0x11f,0xffffffff81059960,CALL 0xffffffff81059960,direct call
generic_set_all,0x124,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x2",write stack
generic_set_all,0x268,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
positive_have_wrcomb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
positive_have_wrcomb,0xf,,RET,ret
x86_cpuid_vendor,0x4f,,RET,ret
x86_cpuid_vendor,0x57,,RET,ret
collect_cpu_info_local,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_cpu_info_local,0x1e,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
collect_cpu_info_local,0x21,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
collect_cpu_info_local,0x29,,RET,ret
apply_microcode_local,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_microcode_local,0x1b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
apply_microcode_local,0x1e,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
apply_microcode_local,0x25,,RET,ret
mc_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mc_cpu_online,0xe,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
mc_cpu_online,0x1d,0xffffffff81418f40,CALL 0xffffffff81418f40,direct call
pf_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pf_show,0x28,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
pf_show,0x30,,RET,ret
version_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
version_show,0x28,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
version_show,0x30,,RET,ret
collect_cpu_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_cpu_info,0x27,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
collect_cpu_info,0x30,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
collect_cpu_info,0x46,ctx->rax - 0x7cbf78a0,"MOV qword ptr [RAX + -0x7cbf78a0],0x0",write other [TODO]
collect_cpu_info,0x51,ctx->rax - 0x7cbf7898,"MOV qword ptr [RAX + -0x7cbf7898],0x0",write other [TODO]
collect_cpu_info,0x5c,ctx->rax - 0x7cbf7890,"MOV qword ptr [RAX + -0x7cbf7890],0x0",write other [TODO]
collect_cpu_info,0x67,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RBX",write stack
collect_cpu_info,0x6b,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
collect_cpu_info,0x7b,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0x1",write other [TODO]
collect_cpu_info,0x96,,RET,ret
collect_cpu_info,0x97,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mc_cpu_down_prep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mc_cpu_down_prep,0xe,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
mc_cpu_down_prep,0x1d,0xffffffff81418b70,CALL 0xffffffff81418b70,direct call
mc_cpu_down_prep,0x2b,,RET,ret
microcode_init_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
microcode_init_cpu,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
microcode_init_cpu,0x56,,RET,ret
microcode_init_cpu,0x62,0xffffffff8105a0c0,CALL 0xffffffff8105a0c0,direct call
microcode_init_cpu,0x92,ctx->rax,CALL qword ptr [RAX],in-direct call
microcode_init_cpu,0xb1,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
microcode_init_cpu,0xd3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mc_device_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mc_device_add,0x2f,0xffffffff81418f40,CALL 0xffffffff81418f40,direct call
mc_device_add,0x3d,,RET,ret
mc_device_add,0x5d,0xffffffff8105a1b0,CALL 0xffffffff8105a1b0,direct call
mc_device_add,0x6e,,RET,ret
mc_device_add,0x71,,RET,ret
mc_device_remove,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mc_device_remove,0x38,ctx->rax,CALL RAX,in-direct call
mc_device_remove,0x44,0xffffffff81418b70,CALL 0xffffffff81418b70,direct call
mc_device_remove,0x4e,,RET,ret
mc_device_remove,0x76,,RET,ret
mc_cpu_starting,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mc_cpu_starting,0x1b,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mc_cpu_starting,0x21,0xffffffff8105a0c0,CALL 0xffffffff8105a0c0,direct call
mc_cpu_starting,0x3d,0xffffffff8105a1b0,CALL 0xffffffff8105a1b0,direct call
mc_cpu_starting,0x5a,,RET,ret
mc_cpu_starting,0x86,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
mc_cpu_starting,0xb1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
load_ucode_ap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_ucode_ap,0xe,,RET,ret
load_ucode_ap,0x67,,RET,ret
load_ucode_ap,0x6b,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
load_ucode_ap,0x75,0xffffffff8105b5b0,CALL 0xffffffff8105b5b0,direct call
load_ucode_ap,0x7f,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
load_ucode_ap,0x8c,0xffffffff8105c460,CALL 0xffffffff8105c460,direct call
find_microcode_in_initrd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_microcode_in_initrd,0x26,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
find_microcode_in_initrd,0xaa,0xffffffff81c68680,CALL 0xffffffff81c68680,direct call
find_microcode_in_initrd,0xc6,,RET,ret
find_microcode_in_initrd,0xc9,ctx->r12,"MOV qword ptr [R12],0x0",write other [TODO]
find_microcode_in_initrd,0xd1,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
find_microcode_in_initrd,0xda,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],0x0",write other [TODO]
find_microcode_in_initrd,0xe3,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],0x0",write other [TODO]
find_microcode_in_initrd,0xec,ctx->wordctx->ptrctx->r12 + 0x20,"MOV word ptr [R12 + 0x20],AX",write other [TODO]
find_microcode_in_initrd,0xfd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
reload_early_microcode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reload_early_microcode,0x52,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
reload_early_microcode,0x5c,,RET,ret
reload_early_microcode,0x63,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
reload_early_microcode,0x6d,0xffffffff8105c510,CALL 0xffffffff8105c510,direct call
reload_early_microcode,0x77,,RET,ret
reload_early_microcode,0x85,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
reload_early_microcode,0x8f,0xffffffff8105b630,CALL 0xffffffff8105b630,direct call
reload_early_microcode,0x99,,RET,ret
microcode_bsp_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
microcode_bsp_resume,0x34,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
microcode_bsp_resume,0x38,,RET,ret
microcode_bsp_resume,0x40,0xffffffff8105a600,CALL 0xffffffff8105a600,direct call
microcode_bsp_resume,0x46,,RET,ret
microcode_sanity_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
microcode_sanity_check,0x155,,RET,ret
microcode_sanity_check,0x159,,RET,ret
microcode_sanity_check,0x168,,RET,ret
microcode_sanity_check,0x177,,RET,ret
microcode_sanity_check,0x186,,RET,ret
microcode_sanity_check,0x195,,RET,ret
microcode_sanity_check,0x1a4,,RET,ret
microcode_sanity_check,0xc367f8,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
microcode_sanity_check,0xc3680e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
microcode_sanity_check,0xc36824,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
microcode_sanity_check,0xc3683a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
microcode_sanity_check,0xc36850,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
microcode_sanity_check,0xc36866,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
load_builtin_intel_microcode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_builtin_intel_microcode,0x28,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
load_builtin_intel_microcode,0x38,0xffffffff81c89f40,CALL 0xffffffff81c89f40,direct call
load_builtin_intel_microcode,0x42,0xffffffff81c89f10,CALL 0xffffffff81c89f10,direct call
load_builtin_intel_microcode,0x4d,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
load_builtin_intel_microcode,0x65,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
load_builtin_intel_microcode,0x72,0xffffffff81818d40,CALL 0xffffffff81818d40,direct call
load_builtin_intel_microcode,0x7f,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RDX",write other [TODO]
load_builtin_intel_microcode,0x87,ctx->r13,"MOV qword ptr [R13],RDX",write other [TODO]
load_builtin_intel_microcode,0xa6,,RET,ret
load_builtin_intel_microcode,0xa7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
memdup_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memdup_patch,0x24,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
memdup_patch,0x3b,0xffffffff812a7590,CALL 0xffffffff812a7590,direct call
memdup_patch,0x40,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
memdup_patch,0x53,,RET,ret
memdup_patch,0x5a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
collect_cpu_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_cpu_info,0x3a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
collect_cpu_info,0x40,ctx->rsi,"MOV qword ptr [RSI],0x0",write other [TODO]
collect_cpu_info,0x47,ctx->rsi + 0x8,"MOV dword ptr [RSI + 0x8],0x0",write other [TODO]
collect_cpu_info,0x52,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x1",write stack
collect_cpu_info,0x59,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
collect_cpu_info,0x60,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
collect_cpu_info,0x69,ctx->rbx,"MOV dword ptr [RBX],ESI",write other [TODO]
collect_cpu_info,0x7f,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
collect_cpu_info,0x98,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EDX",write other [TODO]
collect_cpu_info,0xa9,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],ECX",write other [TODO]
find_matching_signature,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_matching_signature,0x7a,,RET,ret
find_matching_signature,0x82,,RET,ret
find_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_patch,0x3c,0xffffffff8105aab0,CALL 0xffffffff8105aab0,direct call
find_patch,0x50,,RET,ret
find_patch,0x74,,RET,ret
save_microcode_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
save_microcode_patch,0x20,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
save_microcode_patch,0x24,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
save_microcode_patch,0x37,ctx->rbp - 0x29,"MOV byte ptr [RBP + -0x29],0x0",write stack
generic_load_microcode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_load_microcode,0x19,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EDI",write stack
generic_load_microcode,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
generic_load_microcode,0x46,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EAX",write stack
generic_load_microcode,0x4f,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],0x0",write stack
generic_load_microcode,0x5d,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],0x0",write stack
generic_load_microcode,0x6a,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],0x0",write stack
generic_load_microcode,0x71,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],0x0",write stack
generic_load_microcode,0x84,0xffffffff815fdd00,CALL 0xffffffff815fdd00,direct call
generic_load_microcode,0xcf,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
generic_load_microcode,0xd7,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
generic_load_microcode,0xdf,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
generic_load_microcode,0xe7,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
generic_load_microcode,0xef,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],RAX",write other [TODO]
generic_load_microcode,0xf7,ctx->r13 + 0x28,"MOV qword ptr [R13 + 0x28],RAX",write other [TODO]
generic_load_microcode,0x10b,ctx->rsi,"MOV RSI,R14",write other [TODO]
generic_load_microcode,0x10e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
generic_load_microcode,0x112,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
generic_load_microcode,0x11e,ctx->rsi,"MOV RSI,R14",write other [TODO]
generic_load_microcode,0x121,0xffffffff815fdd00,CALL 0xffffffff815fdd00,direct call
generic_load_microcode,0x137,0xffffffff8105a6f0,CALL 0xffffffff8105a6f0,direct call
generic_load_microcode,0x153,0xffffffff8105aab0,CALL 0xffffffff8105aab0,direct call
generic_load_microcode,0x173,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
generic_load_microcode,0x1b3,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
generic_load_microcode,0x1b8,ctx->edi,"MOV EDI,R12D",write other [TODO]
generic_load_microcode,0x1bb,0xffffffff812ea790,CALL 0xffffffff812ea790,direct call
generic_load_microcode,0x1c8,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],R12D",write stack
generic_load_microcode,0x1d5,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
generic_load_microcode,0x1dd,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R13",write stack
generic_load_microcode,0x1e4,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],R12D",write stack
generic_load_microcode,0x1e8,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EAX",write stack
generic_load_microcode,0x1eb,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],0x1",write stack
generic_load_microcode,0x206,0xffffffff815fd2b0,CALL 0xffffffff815fd2b0,direct call
generic_load_microcode,0x212,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
generic_load_microcode,0x2a6,0xffffffff815fd2b0,CALL 0xffffffff815fd2b0,direct call
generic_load_microcode,0x2dd,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
generic_load_microcode,0x2e9,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],0x0",write stack
generic_load_microcode,0xc3630b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
request_microcode_fw,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
request_microcode_fw,0x36,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
request_microcode_fw,0x72,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
request_microcode_fw,0x82,0xffffffff81817b20,CALL 0xffffffff81817b20,direct call
request_microcode_fw,0xa1,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
request_microcode_fw,0xac,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
request_microcode_fw,0xb0,0xffffffff815fc820,CALL 0xffffffff815fc820,direct call
request_microcode_fw,0xbc,0xffffffff8105acf0,CALL 0xffffffff8105acf0,direct call
request_microcode_fw,0xc8,0xffffffff81817150,CALL 0xffffffff81817150,direct call
request_microcode_fw,0xc3602a,0xffffffff830c7bf4,"MOV byte ptr [0xffffffff830c7bf4],0x1",write .data
request_microcode_fw,0xc36031,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
scan_microcode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
scan_microcode,0x16,ctx->rbp - 0x2d,"MOV byte ptr [RBP + -0x2d],CL",write stack
scan_microcode,0x35,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
scan_microcode,0x4c,0xffffffff8105a6f0,CALL 0xffffffff8105a6f0,direct call
scan_microcode,0x66,0xffffffff8105aab0,CALL 0xffffffff8105aab0,direct call
scan_microcode,0x8f,0xffffffff8105aab0,CALL 0xffffffff8105aab0,direct call
scan_microcode,0xb5,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x800",write stack
scan_microcode,0xd5,,RET,ret
scan_microcode,0xe0,ctx->edx,"MOV EDX,dword ptr [RBP + -0x2c]",write other [TODO]
scan_microcode,0xe9,0xffffffff8105abc0,CALL 0xffffffff8105abc0,direct call
__load_ucode_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__load_ucode_intel,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__load_ucode_intel,0x29,0xffffffff83438780,"MOV qword ptr [0xffffffff83438780],-0x7ddf29a0",write .data
__load_ucode_intel,0x34,0xffffffff8105a8a0,CALL 0xffffffff8105a8a0,direct call
__load_ucode_intel,0x52,0xffffffff8104f5b0,CALL 0xffffffff8104f5b0,direct call
__load_ucode_intel,0x62,0xffffffff8105b170,CALL 0xffffffff8105b170,direct call
__load_ucode_intel,0x87,,RET,ret
__load_ucode_intel,0x88,ctx->rsi,"MOV RSI,qword ptr [0xffffffff83438780]",write other [TODO]
__load_ucode_intel,0x95,0xffffffff8105a4f0,CALL 0xffffffff8105a4f0,direct call
__load_ucode_intel,0xa1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apply_microcode_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_microcode_intel,0x37,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
apply_microcode_intel,0x41,ctx->wordctx->ptrctx->rbp - 0x2a,"MOV word ptr [RBP + -0x2a],AX",write stack
apply_microcode_intel,0x4c,ctx->wordctx->ptrctx->rbp - 0x2c,"MOV word ptr [RBP + -0x2c],AX",write stack
apply_microcode_intel,0x65,0xffffffff8105ab40,CALL 0xffffffff8105ab40,direct call
apply_microcode_intel,0xa9,ctx->r14 + 0x8,"MOV dword ptr [R14 + 0x8],EAX",write other [TODO]
apply_microcode_intel,0xb1,ctx->r15 + 0x110,"MOV dword ptr [R15 + 0x110],EAX",write other [TODO]
apply_microcode_intel,0xf4,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
apply_microcode_intel,0x13f,ctx->r14 + 0x8,"MOV dword ptr [R14 + 0x8],EDX",write other [TODO]
apply_microcode_intel,0x148,ctx->r15 + 0x110,"MOV dword ptr [R15 + 0x110],EDX",write other [TODO]
apply_microcode_intel,0x15d,,RET,ret
apply_microcode_intel,0x16b,ctx->r14 + 0x8,"MOV dword ptr [R14 + 0x8],R12D",write other [TODO]
apply_microcode_intel,0x174,ctx->r15 + 0x110,"MOV dword ptr [R15 + 0x110],R12D",write other [TODO]
apply_microcode_intel,0x17b,0xffffffff83117af0,"MOV dword ptr [0xffffffff83117af0],EBX",write .data
apply_microcode_intel,0x18f,,RET,ret
apply_microcode_intel,0xc35d65,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
apply_microcode_intel,0xc35d6a,0xffffffff83438788,"MOV dword ptr [0xffffffff83438788],R12D",write .data
apply_microcode_early,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_microcode_early,0x4e,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EDX",write other [TODO]
apply_microcode_early,0x99,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EAX",write other [TODO]
apply_microcode_early,0xc1,,RET,ret
apply_microcode_early,0xd9,,RET,ret
apply_microcode_early,0xc35bde,0xffffffff830c7bf5,"MOV byte ptr [0xffffffff830c7bf5],0x1",write .data
apply_microcode_early,0xc35be5,0xffffffff81c90f89,CALL 0xffffffff81c90f89,direct call
load_ucode_intel_ap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_ucode_intel_ap,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
load_ucode_intel_ap,0x2f,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
load_ucode_intel_ap,0x33,0xffffffff8105b4c0,CALL 0xffffffff8105b4c0,direct call
load_ucode_intel_ap,0x3c,0xffffffff834387a0,"MOV qword ptr [0xffffffff834387a0],0x0",write .data
load_ucode_intel_ap,0x4b,0xffffffff8105b260,CALL 0xffffffff8105b260,direct call
load_ucode_intel_ap,0x55,0xffffffff834387a0,"MOV qword ptr [0xffffffff834387a0],RAX",write .data
load_ucode_intel_ap,0x6e,,RET,ret
load_ucode_intel_ap,0x6f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
reload_ucode_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reload_ucode_intel,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
reload_ucode_intel,0x20,0xffffffff8104f5b0,CALL 0xffffffff8104f5b0,direct call
reload_ucode_intel,0x29,0xffffffff8105ab40,CALL 0xffffffff8105ab40,direct call
reload_ucode_intel,0x39,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
reload_ucode_intel,0x3d,0xffffffff8105b4c0,CALL 0xffffffff8105b4c0,direct call
reload_ucode_intel,0x52,,RET,ret
reload_ucode_intel,0x53,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__apply_microcode_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__apply_microcode_amd,0x32,,RET,ret
microcode_fini_cpu_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
microcode_fini_cpu_amd,0xd, - 0x7cbf7890 + ctx->rax * 0x8,"MOV qword ptr [-0x7cbf7890 + RAX*0x8],0x0",write other [TODO]
microcode_fini_cpu_amd,0x1d,,RET,ret
verify_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
verify_patch,0x88,ctx->rcx,"MOV dword ptr [RCX],R8D",write other [TODO]
verify_patch,0xcf,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
free_equiv_cpu_table,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_equiv_cpu_table,0x10,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
free_equiv_cpu_table,0x16,0xffffffff8343b7d0,"MOV qword ptr [0xffffffff8343b7d0],0x0",write .data
free_equiv_cpu_table,0x21,0xffffffff8343b7d8,"MOV qword ptr [0xffffffff8343b7d8],0x0",write .data
free_equiv_cpu_table,0x2c,,RET,ret
free_cache,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_cache,0x25,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
free_cache,0x29,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
free_cache,0x31,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
free_cache,0x36,ctx->rdi,"MOV RDI,R12",write other [TODO]
free_cache,0x3c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
free_cache,0x41,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
free_cache,0x51,,RET,ret
__load_ucode_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__load_ucode_amd,0x1f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__load_ucode_amd,0x25,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
__load_ucode_amd,0x2a,ctx->rbp - 0x24,"MOV qword ptr [RBP + -0x24],0x6e6962",write stack
__load_ucode_amd,0x46,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],RCX",write stack
__load_ucode_amd,0x54,ctx->rbp - 0x34,"MOV qword ptr [RBP + -0x34],RCX",write stack
__load_ucode_amd,0x58,ctx->rbp - 0x2c,"MOV qword ptr [RBP + -0x2c],RDX",write stack
__load_ucode_amd,0x5c,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],0x0",write stack
__load_ucode_amd,0x70,0xffffffff81818d40,CALL 0xffffffff81818d40,direct call
__load_ucode_amd,0x86,0xffffffff8105a4f0,CALL 0xffffffff8105a4f0,direct call
__load_ucode_amd,0x93,0xffffffff83408760,"MOV dword ptr [0xffffffff83408760],R12D",write .data
__load_ucode_amd,0x9a,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
__load_ucode_amd,0xa2,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
__load_ucode_amd,0xa5,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
__load_ucode_amd,0xad,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
__load_ucode_amd,0xb5,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
__load_ucode_amd,0xd0,,RET,ret
__load_ucode_amd,0xed,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
__load_ucode_amd,0xf7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
verify_container,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
verify_container,0x30,,RET,ret
verify_equivalence_table.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
verify_equivalence_table.part.0,0x32,,RET,ret
verify_equivalence_table.part.0,0x47,,RET,ret
__load_microcode_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__load_microcode_amd,0x30,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__load_microcode_amd,0x36,0xffffffff8105ba40,CALL 0xffffffff8105ba40,direct call
__load_microcode_amd,0x4b,0xffffffff8105bab0,CALL 0xffffffff8105bab0,direct call
__load_microcode_amd,0x5f,0xffffffff812ea790,CALL 0xffffffff812ea790,direct call
__load_microcode_amd,0x64,0xffffffff8343b7d8,"MOV qword ptr [0xffffffff8343b7d8],RAX",write .data
__load_microcode_amd,0x7e,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
__load_microcode_amd,0x89,0xffffffff8343b7d0,"MOV dword ptr [0xffffffff8343b7d0],EAX",write .data
__load_microcode_amd,0xaf,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
__load_microcode_amd,0xcb,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
__load_microcode_amd,0xd2,0xffffffff8105b6f0,CALL 0xffffffff8105b6f0,direct call
__load_microcode_amd,0xf0,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
__load_microcode_amd,0x110,0xffffffff812a7590,CALL 0xffffffff812a7590,direct call
__load_microcode_amd,0x115,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
__load_microcode_amd,0x12a,ctx->r13,"MOV qword ptr [R13],R13",write other [TODO]
__load_microcode_amd,0x12e,ctx->r13 + 0x18,"MOV dword ptr [R13 + 0x18],R15D",write other [TODO]
__load_microcode_amd,0x132,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],R13",write other [TODO]
__load_microcode_amd,0x136,ctx->r13 + 0x1c,"MOV dword ptr [R13 + 0x1c],ECX",write other [TODO]
__load_microcode_amd,0x13a,ctx->wordctx->ptrctx->r13 + 0x20,"MOV word ptr [R13 + 0x20],R8W",write other [TODO]
__load_microcode_amd,0x15b,ctx->r12,"MOV R12,qword ptr [R12]",write other [TODO]
__load_microcode_amd,0x183,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__load_microcode_amd,0x18b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__load_microcode_amd,0x1d3,ctx->r13,"MOV qword ptr [R13],-0x7d1beae0",write other [TODO]
__load_microcode_amd,0x1db,0xffffffff82e41528,"MOV qword ptr [0xffffffff82e41528],R13",write .data
__load_microcode_amd,0x1e2,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
__load_microcode_amd,0x1e6,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
__load_microcode_amd,0x20e,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
__load_microcode_amd,0x212,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
__load_microcode_amd,0x21b,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
__load_microcode_amd,0x21f,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
__load_microcode_amd,0x227,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__load_microcode_amd,0x22c,ctx->rdi,"MOV RDI,R12",write other [TODO]
__load_microcode_amd,0x22f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__load_microcode_amd,0xc355aa,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__load_microcode_amd,0xc355c0,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__load_microcode_amd,0xc355c8,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__load_microcode_amd,0xc355d9,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
find_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_patch,0x45,,RET,ret
find_patch,0x60,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
find_patch,0x72,,RET,ret
collect_cpu_info_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_cpu_info_amd,0x45,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
collect_cpu_info_amd,0x4b,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x1",write stack
collect_cpu_info_amd,0x52,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
collect_cpu_info_amd,0x59,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
collect_cpu_info_amd,0x65,ctx->r13,"MOV dword ptr [R13],EAX",write other [TODO]
collect_cpu_info_amd,0x6f,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EBX",write other [TODO]
collect_cpu_info_amd,0x73,0xffffffff8105bda0,CALL 0xffffffff8105bda0,direct call
apply_microcode_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_microcode_amd,0x3f,0xffffffff8105bda0,CALL 0xffffffff8105bda0,direct call
apply_microcode_amd,0x5a,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],R13",write other [TODO]
apply_microcode_amd,0x5e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
apply_microcode_amd,0xa9,0xffffffff8105b690,CALL 0xffffffff8105b690,direct call
load_microcode_amd.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_microcode_amd.part.0,0x13,0xffffffff8105bda0,CALL 0xffffffff8105bda0,direct call
load_microcode_amd.part.0,0x42,,RET,ret
load_microcode_amd.part.0,0x51,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
load_microcode_amd.part.0,0x6f,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
load_microcode_amd.part.0,0x7d,,RET,ret
load_microcode_amd.part.0,0x8a,,RET,ret
scan_containers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
scan_containers,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
scan_containers,0x42,0xffffffff8105ba40,CALL 0xffffffff8105ba40,direct call
scan_containers,0x5a,0xffffffff8105bab0,CALL 0xffffffff8105bab0,direct call
scan_containers,0x72,ctx->wordctx->ptrctx->rbp - 0x3a,"MOV word ptr [RBP + -0x3a],DX",write stack
scan_containers,0xa0,ctx->wordctx->ptrctx->rbp - 0x3a,"MOV word ptr [RBP + -0x3a],AX",write stack
scan_containers,0xc9,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],EAX",write other [TODO]
scan_containers,0xce,ctx->r12,"MOV qword ptr [R12],RDX",write other [TODO]
scan_containers,0xe2,0xffffffff81c89ee0,CALL 0xffffffff81c89ee0,direct call
scan_containers,0xfa,0xffffffff8105b6f0,CALL 0xffffffff8105b6f0,direct call
scan_containers,0x127,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],R14",write other [TODO]
scan_containers,0x12c,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],R13",write other [TODO]
scan_containers,0x14e,,RET,ret
scan_containers,0x153,ctx->wordctx->ptrctx->rbp - 0x3a,"MOV word ptr [RBP + -0x3a],AX",write stack
scan_containers,0x15c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
apply_microcode_early_amd.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_microcode_early_amd.isra.0,0x28,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
apply_microcode_early_amd.isra.0,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
apply_microcode_early_amd.isra.0,0x36,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
apply_microcode_early_amd.isra.0,0x3e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
apply_microcode_early_amd.isra.0,0x46,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
apply_microcode_early_amd.isra.0,0x4e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R8D",write stack
apply_microcode_early_amd.isra.0,0x52,0xffffffff8105c010,CALL 0xffffffff8105c010,direct call
apply_microcode_early_amd.isra.0,0x8c,,RET,ret
apply_microcode_early_amd.isra.0,0x90,0xffffffff8105b690,CALL 0xffffffff8105b690,direct call
apply_microcode_early_amd.isra.0,0x9e,0xffffffff8343b7c0,"MOV dword ptr [0xffffffff8343b7c0],EAX",write .data
apply_microcode_early_amd.isra.0,0xc0,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
apply_microcode_early_amd.isra.0,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
request_microcode_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
request_microcode_amd,0x20,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
request_microcode_amd,0x2e,ctx->rbp - 0x34,"MOV qword ptr [RBP + -0x34],0x6e6962",write stack
request_microcode_amd,0x36,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x0",write stack
request_microcode_amd,0x3d,ctx->rbp - 0x4c,"MOV qword ptr [RBP + -0x4c],RAX",write stack
request_microcode_amd,0x4b,ctx->rbp - 0x44,"MOV qword ptr [RBP + -0x44],RAX",write stack
request_microcode_amd,0x59,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],RAX",write stack
request_microcode_amd,0xa6,0xffffffff81817b20,CALL 0xffffffff81817b20,direct call
request_microcode_amd,0xc6,0xffffffff8105ba40,CALL 0xffffffff8105ba40,direct call
request_microcode_amd,0xe5,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
request_microcode_amd,0xed,0xffffffff8343b7d0,"MOV qword ptr [0xffffffff8343b7d0],0x0",write .data
request_microcode_amd,0xfe,0xffffffff8343b7d8,"MOV qword ptr [0xffffffff8343b7d8],0x0",write .data
request_microcode_amd,0x109,0xffffffff8105bb40,CALL 0xffffffff8105bb40,direct call
request_microcode_amd,0x11e,0xffffffff8105bf80,CALL 0xffffffff8105bf80,direct call
request_microcode_amd,0x12a,0xffffffff81817150,CALL 0xffffffff81817150,direct call
request_microcode_amd,0x151,,RET,ret
request_microcode_amd,0x16c,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
request_microcode_amd,0x1a1,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
request_microcode_amd,0x1ad,0xffffffff8343b7d0,"MOV qword ptr [0xffffffff8343b7d0],0x0",write .data
request_microcode_amd,0x1b8,0xffffffff8343b7d8,"MOV qword ptr [0xffffffff8343b7d8],0x0",write .data
request_microcode_amd,0x1d8,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
request_microcode_amd,0x1dc,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
request_microcode_amd,0x1e3,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
request_microcode_amd,0x1e8,ctx->rdi,"MOV RDI,R13",write other [TODO]
request_microcode_amd,0x1ee,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
request_microcode_amd,0x1f3,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
request_microcode_amd,0x204,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
load_ucode_amd_ap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
load_ucode_amd_ap,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
load_ucode_amd_ap,0x48,0xffffffff8105b940,CALL 0xffffffff8105b940,direct call
load_ucode_amd_ap,0x4d,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x38]",write other [TODO]
load_ucode_amd_ap,0x73,,RET,ret
load_ucode_amd_ap,0x79,0xffffffff8105c180,CALL 0xffffffff8105c180,direct call
load_ucode_amd_ap,0x87,0xffffffff8105b690,CALL 0xffffffff8105b690,direct call
load_ucode_amd_ap,0x96,0xffffffff8343b7c0,"MOV dword ptr [0xffffffff8343b7c0],EAX",write .data
load_ucode_amd_ap,0x9e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
reload_ucode_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reload_ucode_amd,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
reload_ucode_amd,0x25,0xffffffff8105b690,CALL 0xffffffff8105b690,direct call
reload_ucode_amd,0x33,,RET,ret
__cpuid,0x4,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
__cpuid,0xb,,RET,ret
cat_wrmsr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cat_wrmsr,0x3e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
cat_wrmsr,0x57,,RET,ret
mba_wrmsr_amd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mba_wrmsr_intel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_offline_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_offline_cpu,0x2c,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
resctrl_offline_cpu,0x55,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
resctrl_offline_cpu,0xc0,ctx->r14,"MOV R14,qword ptr [R14]",write other [TODO]
resctrl_offline_cpu,0xfa,ctx->rsi,"MOV RSI,R12",write other [TODO]
resctrl_offline_cpu,0xfd,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
resctrl_offline_cpu,0x144,ctx->rsi,"MOV RSI,R14",write other [TODO]
resctrl_offline_cpu,0x14e,0xffffffff81061de0,CALL 0xffffffff81061de0,direct call
resctrl_offline_cpu,0x162,0xffffffff810c5f30,CALL 0xffffffff810c5f30,direct call
resctrl_offline_cpu,0x169,ctx->rdi,"MOV RDI,R14",write other [TODO]
resctrl_offline_cpu,0x16c,0xffffffff81061f80,CALL 0xffffffff81061f80,direct call
resctrl_offline_cpu,0x1ee,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
resctrl_offline_cpu,0x1f5,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
resctrl_offline_cpu,0x1fd,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
resctrl_offline_cpu,0x20a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
resctrl_offline_cpu,0x21b,,RET,ret
resctrl_offline_cpu,0x21c,ctx->rsi,"MOV RSI,R14",write other [TODO]
resctrl_offline_cpu,0x21f,ctx->rdi,"MOV RDI,R15",write other [TODO]
resctrl_offline_cpu,0x222,0xffffffff81061460,CALL 0xffffffff81061460,direct call
resctrl_offline_cpu,0x22e,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
resctrl_offline_cpu,0x232,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
resctrl_offline_cpu,0x23f,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
resctrl_offline_cpu,0x24a,ctx->r14,"MOV qword ptr [R14],R13",write other [TODO]
resctrl_offline_cpu,0x252,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
resctrl_offline_cpu,0x25a,ctx->rdi,"MOV RDI,qword ptr [R14 + 0x518]",write other [TODO]
resctrl_offline_cpu,0x261,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_cpu,0x26d,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_cpu,0x279,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_cpu,0x27e,ctx->rdi,"MOV RDI,R14",write other [TODO]
resctrl_offline_cpu,0x281,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_cpu,0x292,0xffffffff810c5f30,CALL 0xffffffff810c5f30,direct call
resctrl_offline_cpu,0x299,ctx->rdi,"MOV RDI,R14",write other [TODO]
resctrl_offline_cpu,0x29c,0xffffffff810623a0,CALL 0xffffffff810623a0,direct call
resctrl_offline_cpu,0x2b5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
resctrl_online_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_online_cpu,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
resctrl_online_cpu,0x39,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
resctrl_online_cpu,0x45,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
resctrl_online_cpu,0x6d,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
resctrl_online_cpu,0xda,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
resctrl_online_cpu,0x112,ctx->rdi,"MOV RDI,R14",write other [TODO]
resctrl_online_cpu,0x11c,0xffffffff8105ec40,CALL 0xffffffff8105ec40,direct call
resctrl_online_cpu,0x150,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
resctrl_online_cpu,0x157,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
resctrl_online_cpu,0x15f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
resctrl_online_cpu,0x16c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
resctrl_online_cpu,0x194,,RET,ret
resctrl_online_cpu,0x1a4,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],R10D",write stack
resctrl_online_cpu,0x1bf,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
resctrl_online_cpu,0x1d4,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R10D",write other [TODO]
resctrl_online_cpu,0x1de,ctx->rdi,"MOV RDI,R14",write other [TODO]
resctrl_online_cpu,0x1e1,0xffffffff8105ec40,CALL 0xffffffff8105ec40,direct call
resctrl_online_cpu,0x216,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],R15",write other [TODO]
resctrl_online_cpu,0x21d,ctx->rdi,"MOV RDI,R14",write other [TODO]
resctrl_online_cpu,0x220,ctx->r15,"MOV qword ptr [R15],R13",write other [TODO]
resctrl_online_cpu,0x223,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
resctrl_online_cpu,0x227,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
resctrl_online_cpu,0x22a,0xffffffff81061620,CALL 0xffffffff81061620,direct call
resctrl_online_cpu,0x23b,ctx->rdx,"MOV RDX,qword ptr [R15]",write other [TODO]
resctrl_online_cpu,0x23e,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
resctrl_online_cpu,0x242,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
resctrl_online_cpu,0x24f,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
resctrl_online_cpu,0x256,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
resctrl_online_cpu,0x261,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_online_cpu,0x26d,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_online_cpu,0x279,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_online_cpu,0x281,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_online_cpu,0x29b,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
resctrl_online_cpu,0x2ac,ctx->r15 + 0x510,"MOV qword ptr [R15 + 0x510],RAX",write other [TODO]
resctrl_online_cpu,0x2bd,ctx->rax + ctx->rdx * 0x4,"MOV dword ptr [RAX + RDX*0x4],ESI",write other [TODO]
resctrl_online_cpu,0x2c8,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ECX",write stack
resctrl_online_cpu,0x2cb,ctx->rdx,"MOV RDX,R14",write other [TODO]
resctrl_online_cpu,0x2d5,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
resctrl_online_cpu,0x2dc,ctx->r14 + 0x98,CALL qword ptr [R14 + 0x98],in-direct call
resctrl_online_cpu,0x2f3,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
resctrl_online_cpu,0x2f8,ctx->r15 + 0x520,"MOV qword ptr [R15 + 0x520],RAX",write other [TODO]
resctrl_online_cpu,0x30f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_online_cpu,0x314,ctx->r15 + 0x518,"MOV qword ptr [R15 + 0x518],0x0",write other [TODO]
resctrl_online_cpu,0x32b,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EDX",write stack
resctrl_online_cpu,0x332,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
resctrl_online_cpu,0x337,ctx->r15 + 0x518,"MOV qword ptr [R15 + 0x518],RAX",write other [TODO]
resctrl_online_cpu,0x355,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
resctrl_online_cpu,0x36b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
is_mba_sc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_mba_sc,0x1a,,RET,ret
get_domain_from_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_domain_from_cpu,0x2a,,RET,ret
get_domain_from_cpu,0x2e,,RET,ret
resctrl_arch_get_num_closid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_get_num_closid,0x10,,RET,ret
rdt_ctrl_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_ctrl_update,0x40,ctx->rcx + 0x98,CALL qword ptr [RCX + 0x98],in-direct call
rdt_ctrl_update,0x56,,RET,ret
rdt_find_domain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_find_domain,0x33,,RET,ret
rdt_find_domain,0x3e,ctx->rdx,"MOV qword ptr [RDX],RDI",write other [TODO]
rdt_find_domain,0x42,,RET,ret
resctrl_cpu_detect,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_cpu_detect,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
resctrl_cpu_detect,0x31,ctx->rdi + 0xd8,"MOV qword ptr [RDI + 0xd8],-0x1",write other [TODO]
resctrl_cpu_detect,0x3c,ctx->rdi + 0xe0,"MOV dword ptr [RDI + 0xe0],0xffffffff",write other [TODO]
resctrl_cpu_detect,0x67,,RET,ret
resctrl_cpu_detect,0x70,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xf",write stack
resctrl_cpu_detect,0x85,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
resctrl_cpu_detect,0x92,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
resctrl_cpu_detect,0x9b,ctx->rbx + 0xd8,"MOV dword ptr [RBX + 0xd8],EAX",write other [TODO]
resctrl_cpu_detect,0xb7,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0xf",write stack
resctrl_cpu_detect,0xc7,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x1",write stack
resctrl_cpu_detect,0xd1,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
resctrl_cpu_detect,0xde,ctx->rbx + 0xd8,"MOV dword ptr [RBX + 0xd8],EAX",write other [TODO]
resctrl_cpu_detect,0xe7,ctx->rbx + 0xdc,"MOV dword ptr [RBX + 0xdc],EAX",write other [TODO]
resctrl_cpu_detect,0xf1,ctx->rbx + 0xe0,"MOV dword ptr [RBX + 0xe0],EAX",write other [TODO]
resctrl_cpu_detect,0x105,ctx->rbx + 0xe0,"MOV dword ptr [RBX + 0xe0],0x14",write other [TODO]
resctrl_cpu_detect,0x125,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_seqfile_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_seqfile_show,0x26,ctx->rcx,CALL RCX,in-direct call
rdtgroup_seqfile_show,0x29,,RET,ret
rdtgroup_seqfile_show,0x2c,,RET,ret
rdtgroup_file_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_file_write,0x19,ctx->rax,CALL RAX,in-direct call
rdtgroup_file_write,0x1c,,RET,ret
rdtgroup_file_write,0x24,,RET,ret
rdt_move_group_tasks,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_move_group_tasks,0x26,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
rdt_move_group_tasks,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdt_move_group_tasks,0x4a,ctx->rdx,"MOV RDX,qword ptr [R15 + 0x318]",write other [TODO]
rdt_move_group_tasks,0xcc,ctx->rbx + 0xe10,"MOV dword ptr [RBX + 0xe10],EAX",write other [TODO]
rdt_move_group_tasks,0xd9,ctx->rbx + 0xe14,"MOV dword ptr [RBX + 0xe14],EAX",write other [TODO]
rdt_move_group_tasks,0xe4,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_move_group_tasks,0xe7,0xffffffff810e2250,CALL 0xffffffff810e2250,direct call
rdt_move_group_tasks,0x114,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdt_move_group_tasks,0x12c,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
rdt_move_group_tasks,0x13f,,RET,ret
max_threshold_occ_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
max_threshold_occ_show,0x19,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
max_threshold_occ_show,0x21,,RET,ret
rdt_delay_linear_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_delay_linear_show,0x28,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_delay_linear_show,0x30,,RET,ret
rdt_bw_gran_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_bw_gran_show,0x28,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_bw_gran_show,0x30,,RET,ret
rdt_min_bw_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_min_bw_show,0x28,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_min_bw_show,0x30,,RET,ret
rdt_shareable_bits_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_shareable_bits_show,0x28,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_shareable_bits_show,0x30,,RET,ret
rdt_min_cbm_bits_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_min_cbm_bits_show,0x28,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_min_cbm_bits_show,0x30,,RET,ret
rdt_default_ctrl_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_default_ctrl_show,0x28,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_default_ctrl_show,0x30,,RET,ret
rdt_num_rmids_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_num_rmids_show,0x24,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_num_rmids_show,0x2c,,RET,ret
rdt_mon_features_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_mon_features_show,0x3c,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_mon_features_show,0x56,,RET,ret
rdt_num_closids_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_num_closids_show,0x24,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_num_closids_show,0x2c,,RET,ret
max_threshold_occ_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
max_threshold_occ_write,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
max_threshold_occ_write,0x29,0xffffffff81607bc0,CALL 0xffffffff81607bc0,direct call
max_threshold_occ_write,0x4a,0xffffffff8343bf24,"MOV dword ptr [0xffffffff8343bf24],EAX",write .data
max_threshold_occ_write,0x67,,RET,ret
max_threshold_occ_write,0x75,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdt_thread_throttle_mode_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_thread_throttle_mode_show,0x2b,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdt_thread_throttle_mode_show,0x33,,RET,ret
rdt_thread_throttle_mode_show,0x3b,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdt_thread_throttle_mode_show,0x43,,RET,ret
rdt_last_cmd_status_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_last_cmd_status_show,0x15,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
rdt_last_cmd_status_show,0x46,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_last_cmd_status_show,0x52,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdt_last_cmd_status_show,0x5e,,RET,ret
rdt_last_cmd_status_show,0x69,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_show_options,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_show_options,0x27,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_show_options,0x37,,RET,ret
rdtgroup_show_options,0x3f,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_show_options,0x57,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_show_options,0x63,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_show_options,0x76,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_show_options,0x82,,RET,ret
rdtgroup_kn_set_ugid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_kn_set_ugid,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
rdtgroup_kn_set_ugid,0x2e,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x6",write stack
rdtgroup_kn_set_ugid,0x4b,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EDX",write stack
rdtgroup_kn_set_ugid,0x50,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],ECX",write stack
rdtgroup_kn_set_ugid,0x58,0xffffffff814137c0,CALL 0xffffffff814137c0,direct call
rdtgroup_kn_set_ugid,0x6d,,RET,ret
rdtgroup_kn_set_ugid,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_add_files,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_add_files,0x50,ctx->rsi,"MOV RSI,qword ptr [RBX]",write other [TODO]
rdtgroup_add_files,0x5c,0xffffffff81417290,CALL 0xffffffff81417290,direct call
rdtgroup_add_files,0x73,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
rdt_parse_param,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_parse_param,0x2d,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
rdt_parse_param,0x33,0xffffffff813ab870,CALL 0xffffffff813ab870,direct call
rdt_parse_param,0x63,,RET,ret
rdt_parse_param,0x85,ctx->rbx + 0x22,"MOV byte ptr [RBX + 0x22],0x1",write other [TODO]
rdt_parse_param,0x8d,ctx->rbx + 0x21,"MOV byte ptr [RBX + 0x21],0x1",write other [TODO]
rdt_parse_param,0x93,ctx->rbx + 0x20,"MOV byte ptr [RBX + 0x20],0x1",write other [TODO]
rdt_parse_param,0x9b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdt_fs_context_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_fs_context_free,0xf,0xffffffff814130e0,CALL 0xffffffff814130e0,direct call
rdt_fs_context_free,0x17,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdt_fs_context_free,0x21,,RET,ret
schemata_list_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
schemata_list_add,0x27,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
schemata_list_add,0x35,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RBX",write other [TODO]
schemata_list_add,0x3f,0xffffffff8105cce0,CALL 0xffffffff8105cce0,direct call
schemata_list_add,0x46,ctx->r12 + 0x28,"MOV dword ptr [R12 + 0x28],EAX",write other [TODO]
schemata_list_add,0x64,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],R13D",write other [TODO]
schemata_list_add,0x9f,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
schemata_list_add,0xb5,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
schemata_list_add,0xfe,ctx->r12,"MOV qword ptr [R12],R12",write other [TODO]
schemata_list_add,0x102,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],R12",write other [TODO]
schemata_list_add,0x107,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R12",write other [TODO]
schemata_list_add,0x10b,0xffffffff82e41cb0,"MOV qword ptr [0xffffffff82e41cb0],R12",write .data
schemata_list_add,0x112,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],-0x7d1be350",write other [TODO]
schemata_list_add,0x11b,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
schemata_list_add,0x129,,RET,ret
schemata_list_add,0x12c,ctx->r12 + 0x28,"MOV dword ptr [R12 + 0x28],EAX",write other [TODO]
schemata_list_add,0x142,0xffffffff8343b7e8,"MOV dword ptr [0xffffffff8343b7e8],EDX",write .data
schemata_list_add,0x14d,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
schemata_list_add,0x15f,,RET,ret
free_all_child_rdtgrp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_all_child_rdtgrp,0x4c,ctx->r12 + 0x420,"MOV dword ptr [R12 + 0x420],0x1",write other [TODO]
free_all_child_rdtgrp,0x78,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
free_all_child_rdtgrp,0x8d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
free_all_child_rdtgrp,0x91,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
free_all_child_rdtgrp,0x9c,ctx->r12 + 0x440,"MOV qword ptr [R12 + 0x440],R14",write other [TODO]
free_all_child_rdtgrp,0xa4,ctx->r12 + 0x448,"MOV qword ptr [R12 + 0x448],R13",write other [TODO]
free_all_child_rdtgrp,0xb4,0xffffffff81414920,CALL 0xffffffff81414920,direct call
free_all_child_rdtgrp,0xbc,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
free_all_child_rdtgrp,0xcd,,RET,ret
mongroup_create_dir,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mongroup_create_dir,0x21,0xffffffff814156e0,CALL 0xffffffff814156e0,direct call
mongroup_create_dir,0x37,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
mongroup_create_dir,0x3e,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
mongroup_create_dir,0x4d,0xffffffff814154e0,CALL 0xffffffff814154e0,direct call
mongroup_create_dir,0x5e,,RET,ret
mongroup_create_dir,0x5f,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
mongroup_create_dir,0x70,,RET,ret
mongroup_create_dir,0x80,,RET,ret
rdtgroup_mkdir_info_resdir,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_mkdir_info_resdir,0x29,0xffffffff814156e0,CALL 0xffffffff814156e0,direct call
rdtgroup_mkdir_info_resdir,0x3d,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
rdtgroup_mkdir_info_resdir,0x4f,,RET,ret
rdtgroup_mkdir_info_resdir,0x56,0xffffffff8105d540,CALL 0xffffffff8105d540,direct call
rdtgroup_mkdir_info_resdir,0x62,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
rdtgroup_mkdir_info_resdir,0x65,0xffffffff814154e0,CALL 0xffffffff814154e0,direct call
rdtgroup_mkdir_info_resdir,0x76,,RET,ret
mkdir_mondata_subdir,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mkdir_mondata_subdir,0x23,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RSI",write stack
mkdir_mondata_subdir,0x2e,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RCX",write stack
mkdir_mondata_subdir,0x48,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mkdir_mondata_subdir,0x4e,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
mkdir_mondata_subdir,0x6a,0xffffffff814156e0,CALL 0xffffffff814156e0,direct call
mkdir_mondata_subdir,0x82,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
mkdir_mondata_subdir,0x93,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
mkdir_mondata_subdir,0xb6,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],EAX",write stack
mkdir_mondata_subdir,0x125,0xffffffff81417290,CALL 0xffffffff81417290,direct call
mkdir_mondata_subdir,0x13c,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
mkdir_mondata_subdir,0x16c,0xffffffff81063300,CALL 0xffffffff81063300,direct call
mkdir_mondata_subdir,0x17f,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],EAX",write stack
mkdir_mondata_subdir,0x185,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
mkdir_mondata_subdir,0x193,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],EAX",write stack
mkdir_mondata_subdir,0x199,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
mkdir_mondata_subdir,0x1c1,,RET,ret
mkdir_mondata_subdir,0x1c5,0xffffffff814154e0,CALL 0xffffffff814154e0,direct call
mkdir_mondata_subdir,0x1d7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mkdir_mondata_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mkdir_mondata_all,0x30,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mkdir_mondata_all,0x36,0xffffffff8105d910,CALL 0xffffffff8105d910,direct call
mkdir_mondata_all,0x3b,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
mkdir_mondata_all,0x4b,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
mkdir_mondata_all,0x81,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
mkdir_mondata_all,0x8c,ctx->rdx,"MOV RDX,R15",write other [TODO]
mkdir_mondata_all,0x8f,ctx->rsi,"MOV RSI,RBX",write other [TODO]
mkdir_mondata_all,0x95,0xffffffff8105da20,CALL 0xffffffff8105da20,direct call
mkdir_mondata_all,0xa1,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
mkdir_mondata_all,0xa4,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
mkdir_mondata_all,0xc9,,RET,ret
mkdir_mondata_all,0xca,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
l2_qos_cfg_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
l2_qos_cfg_update,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
l2_qos_cfg_update,0x1a,,RET,ret
l3_qos_cfg_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
l3_qos_cfg_update,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
l3_qos_cfg_update,0x1a,,RET,ret
rdt_bit_usage_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_bit_usage_show,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdt_bit_usage_show,0x30,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
rdt_bit_usage_show,0x38,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
rdt_bit_usage_show,0x40,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
rdt_bit_usage_show,0x48,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
rdt_bit_usage_show,0x5c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
rdt_bit_usage_show,0x60,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
rdt_bit_usage_show,0x6d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
rdt_bit_usage_show,0x75,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
rdt_bit_usage_show,0x8f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
rdt_bit_usage_show,0x97,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
rdt_bit_usage_show,0x9f,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdt_bit_usage_show,0xd1,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
rdt_bit_usage_show,0x156,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x17a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
rdt_bit_usage_show,0x1d4,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x1f4,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x20a,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x22a,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
rdt_bit_usage_show,0x247,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x264,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x276,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x288,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdt_bit_usage_show,0x294,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdt_bit_usage_show,0x2b8,,RET,ret
rdt_bit_usage_show,0x2b9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__rdtgroup_cbm_overlaps,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__rdtgroup_cbm_overlaps,0x22,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
__rdtgroup_cbm_overlaps,0x26,ctx->rbp - 0x45,"MOV byte ptr [RBP + -0x45],R9B",write stack
__rdtgroup_cbm_overlaps,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__rdtgroup_cbm_overlaps,0x5f,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
__rdtgroup_cbm_overlaps,0x6d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__rdtgroup_cbm_overlaps,0xb1,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ECX",write stack
__rdtgroup_cbm_overlaps,0xc1,0xffffffff815f9ce0,CALL 0xffffffff815f9ce0,direct call
__rdtgroup_cbm_overlaps,0x102,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__rdtgroup_cbm_overlaps,0x106,0xffffffff815f9ce0,CALL 0xffffffff815f9ce0,direct call
__rdtgroup_cbm_overlaps,0x135,,RET,ret
__rdtgroup_cbm_overlaps,0x136,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_cache_qos_cfg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_cache_qos_cfg,0x18,ctx->rbp - 0x3c,"MOV byte ptr [RBP + -0x3c],SIL",write stack
set_cache_qos_cfg,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
set_cache_qos_cfg,0x3c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x7efa2330",write stack
set_cache_qos_cfg,0x52,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
set_cache_qos_cfg,0x8f,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
set_cache_qos_cfg,0xa8,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
set_cache_qos_cfg,0xc6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
set_cache_qos_cfg,0xd2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
set_cache_qos_cfg,0x105,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x48]",write other [TODO]
set_cache_qos_cfg,0x109,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x38]",write other [TODO]
set_cache_qos_cfg,0x115,0xffffffff8116e520,CALL 0xffffffff8116e520,direct call
set_cache_qos_cfg,0x127,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
set_cache_qos_cfg,0x14b,,RET,ret
set_cache_qos_cfg,0x153,ctx->rax,CALL RAX,in-direct call
set_cache_qos_cfg,0x157,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x7efa2310",write stack
set_cache_qos_cfg,0x164,0xffffffff82000810,CALL 0xffffffff82000810,direct call
set_cache_qos_cfg,0x179,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdt_init_fs_context,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_init_fs_context,0x1e,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
rdt_init_fs_context,0x37,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
rdt_init_fs_context,0x3b,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],0x7655821",write other [TODO]
rdt_init_fs_context,0x43,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
rdt_init_fs_context,0x46,ctx->rbx,"MOV qword ptr [RBX],-0x7ddf2800",write other [TODO]
rdt_init_fs_context,0x9c,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],-0x7d19c340",write other [TODO]
rdt_init_fs_context,0xa9,,RET,ret
rdt_init_fs_context,0xaa,0xffffffff8118e3e0,CALL 0xffffffff8118e3e0,direct call
rdt_init_fs_context,0xbd,0xffffffff81605660,CALL 0xffffffff81605660,direct call
rdt_init_fs_context,0xd0,0xffffffff81605660,CALL 0xffffffff81605660,direct call
rdt_init_fs_context,0xdf,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__resctrl_sched_in,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__resctrl_sched_in,0x57,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],EDX",write other [TODO]
__resctrl_sched_in,0x5a,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
__resctrl_sched_in,0x5f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__resctrl_sched_in,0x66,,RET,ret
__resctrl_sched_in,0x67,,RET,ret
update_cpu_closid_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_cpu_closid_rmid,0xd,ctx->gs + 0x1fd7c,"MOV dword ptr GS:[0x1fd7c],EAX",write other [TODO]
update_cpu_closid_rmid,0x1a,ctx->gs + 0x1fd78,"MOV dword ptr GS:[0x1fd78],EAX",write other [TODO]
FUN_ffffffff8105e413,0x4,0xffffffff8105e380,CALL 0xffffffff8105e380,direct call
FUN_ffffffff8105e413,0xa,,RET,ret
FUN_ffffffff8105e41e,0x0,,RET,ret
_update_task_closid_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_update_task_closid_rmid,0x13,,RET,ret
FUN_ffffffff8105e436,0x4,0xffffffff8105e380,CALL 0xffffffff8105e380,direct call
FUN_ffffffff8105e436,0xa,,RET,ret
update_closid_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_closid_rmid,0x37,0xffffffff8116e520,CALL 0xffffffff8116e520,direct call
update_closid_rmid,0x4a,,RET,ret
update_closid_rmid,0x53,ctx->gs + 0x1fd7c,"MOV dword ptr GS:[0x1fd7c],EAX",write other [TODO]
update_closid_rmid,0x60,ctx->gs + 0x1fd78,"MOV dword ptr GS:[0x1fd78],EAX",write other [TODO]
update_closid_rmid,0x78,0xffffffff82000810,CALL 0xffffffff82000810,direct call
update_closid_rmid,0x82,,RET,ret
set_mba_sc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_mba_sc,0x16,0xffffffff8105cce0,CALL 0xffffffff8105cce0,direct call
set_mba_sc,0x36,,RET,ret
set_mba_sc,0x4a,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
set_mba_sc,0x5b,0xffffffff82e41734,"MOV byte ptr [0xffffffff82e41734],R12B",write .data
set_mba_sc,0x7e,ctx->rdx + ctx->rcx * 0x4,"MOV dword ptr [RDX + RCX*0x4],0xffffffff",write other [TODO]
set_mba_sc,0x89,ctx->rsi,"MOV RSI,qword ptr [RSI]",write other [TODO]
set_mba_sc,0x9b,,RET,ret
rdt_last_cmd_clear,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_last_cmd_clear,0x6,0xffffffff8343bef0,"MOV qword ptr [0xffffffff8343bef0],0x0",write .data
rdt_last_cmd_clear,0x11,0xffffffff8343bef8,"MOV qword ptr [0xffffffff8343bef8],0x0",write .data
rdt_last_cmd_clear,0x20,,RET,ret
rdt_last_cmd_puts,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_last_cmd_puts,0x13,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdt_last_cmd_puts,0x19,,RET,ret
rdt_last_cmd_printf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_last_cmd_printf,0xd,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RSI",write stack
rdt_last_cmd_printf,0x1c,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RDX",write stack
rdt_last_cmd_printf,0x24,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RCX",write stack
rdt_last_cmd_printf,0x29,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R8",write stack
rdt_last_cmd_printf,0x2e,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],R9",write stack
rdt_last_cmd_printf,0x3c,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
rdt_last_cmd_printf,0x47,ctx->rsp,"MOV dword ptr [RSP],0x8",write stack
rdt_last_cmd_printf,0x4e,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
rdt_last_cmd_printf,0x58,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
rdt_last_cmd_printf,0x5d,0xffffffff81c7db00,CALL 0xffffffff81c7db00,direct call
rdt_last_cmd_printf,0x73,,RET,ret
rdt_last_cmd_printf,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
closids_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
closids_supported,0x10,,RET,ret
closid_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
closid_free,0x19,,RET,ret
rdtgroup_mode_by_closid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_mode_by_closid,0x3c,,RET,ret
rdtgroup_mode_by_closid,0x43,,RET,ret
rdtgroup_tasks_assigned,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_tasks_assigned,0xf,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
rdtgroup_tasks_assigned,0xc5,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
rdtgroup_tasks_assigned,0xd1,,RET,ret
rdtgroup_tasks_assigned,0xd2,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
rdtgroup_tasks_assigned,0xe1,,RET,ret
proc_resctrl_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_resctrl_show,0x1b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
proc_resctrl_show,0x2f,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
proc_resctrl_show,0x3b,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
proc_resctrl_show,0x49,,RET,ret
rdtgroup_cbm_overlaps,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_cbm_overlaps,0x53,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
rdtgroup_cbm_overlaps,0x57,0xffffffff8105dfd0,CALL 0xffffffff8105dfd0,direct call
rdtgroup_cbm_overlaps,0x8b,,RET,ret
rdtgroup_cbm_overlaps,0x9b,0xffffffff8105dfd0,CALL 0xffffffff8105dfd0,direct call
rdtgroup_cbm_overlaps,0xae,,RET,ret
rdtgroup_cbm_to_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_cbm_to_size,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
rdtgroup_cbm_to_size,0x23,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
rdtgroup_cbm_to_size,0x28,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cbm_to_size,0x34,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cbm_to_size,0x3b,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
rdtgroup_cbm_to_size,0x8d,,RET,ret
rdtgroup_cbm_to_size,0x9a,,RET,ret
rdtgroup_kn_mode_restrict,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_kn_mode_restrict,0x2b,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
rdtgroup_kn_mode_restrict,0x37,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],0x1",write stack
rdtgroup_kn_mode_restrict,0x3e,0xffffffff81414710,CALL 0xffffffff81414710,direct call
rdtgroup_kn_mode_restrict,0x6a,0xffffffff814137c0,CALL 0xffffffff814137c0,direct call
rdtgroup_kn_mode_restrict,0x75,0xffffffff81414920,CALL 0xffffffff81414920,direct call
rdtgroup_kn_mode_restrict,0x95,,RET,ret
rdtgroup_kn_mode_restrict,0x9b,ctx->wordctx->ptrctx->rbp - 0x64,"MOV word ptr [RBP + -0x64],DX",write stack
rdtgroup_kn_mode_restrict,0xa6,ctx->wordctx->ptrctx->rbp - 0x64,"MOV word ptr [RBP + -0x64],CX",write stack
rdtgroup_kn_mode_restrict,0xb1,ctx->wordctx->ptrctx->rbp - 0x64,"MOV word ptr [RBP + -0x64],AX",write stack
rdtgroup_kn_mode_restrict,0xbf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_kn_mode_restore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_kn_mode_restore,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_kn_mode_restore,0x44,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],0x1",write stack
rdtgroup_kn_mode_restore,0x4b,ctx->rdi,"MOV RDI,qword ptr [RBX]",write other [TODO]
rdtgroup_kn_mode_restore,0x51,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_kn_mode_restore,0x61,ctx->wordctx->ptrctx->rbp - 0x7c,"MOV word ptr [RBP + -0x7c],AX",write stack
rdtgroup_kn_mode_restore,0x7b,0xffffffff81414710,CALL 0xffffffff81414710,direct call
rdtgroup_kn_mode_restore,0xab,0xffffffff814137c0,CALL 0xffffffff814137c0,direct call
rdtgroup_kn_mode_restore,0xb6,0xffffffff81414920,CALL 0xffffffff81414920,direct call
rdtgroup_kn_mode_restore,0xdb,,RET,ret
rdtgroup_kn_mode_restore,0xe7,0xffffffff81414fd0,CALL 0xffffffff81414fd0,direct call
rdtgroup_kn_mode_restore,0xfc,0xffffffff81414920,CALL 0xffffffff81414920,direct call
rdtgroup_kn_mode_restore,0x119,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdt_domain_reconfigure_cdp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_domain_reconfigure_cdp,0x26,,RET,ret
rdt_domain_reconfigure_cdp,0x35,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
rdt_domain_reconfigure_cdp,0x40,,RET,ret
rdt_domain_reconfigure_cdp,0x41,,RET,ret
rdt_domain_reconfigure_cdp,0x49,0xffffffff8105dcd0,CALL 0xffffffff8105dcd0,direct call
resctrl_arch_set_cdp_enabled,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_set_cdp_enabled,0x51,,RET,ret
resctrl_arch_set_cdp_enabled,0x54,0xffffffff8105e110,CALL 0xffffffff8105e110,direct call
resctrl_arch_set_cdp_enabled,0x5c,ctx->rbx + 0xa8,"MOV byte ptr [RBX + 0xa8],0x0",write other [TODO]
resctrl_arch_set_cdp_enabled,0x67,,RET,ret
resctrl_arch_set_cdp_enabled,0x85,0xffffffff8105e110,CALL 0xffffffff8105e110,direct call
resctrl_arch_set_cdp_enabled,0x94,ctx->rbx + 0xa8,"MOV byte ptr [RBX + 0xa8],0x1",write other [TODO]
resctrl_arch_set_cdp_enabled,0x9f,,RET,ret
rdt_get_tree,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_get_tree,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdt_get_tree,0x2c,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
rdt_get_tree,0x38,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
rdt_get_tree,0x5b,0xffffffff8105eca0,CALL 0xffffffff8105eca0,direct call
rdt_get_tree,0x84,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_get_tree,0x87,0xffffffff8105d6d0,CALL 0xffffffff8105d6d0,direct call
rdt_get_tree,0x98,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_get_tree,0x9b,0xffffffff8105d6d0,CALL 0xffffffff8105d6d0,direct call
rdt_get_tree,0xdb,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_get_tree,0xde,0xffffffff8105d6d0,CALL 0xffffffff8105d6d0,direct call
rdt_get_tree,0x116,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
rdt_get_tree,0x11a,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
rdt_get_tree,0x11d,ctx->rdi,"MOV qword ptr [RDI],R13",write other [TODO]
rdt_get_tree,0x120,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RBX",write other [TODO]
rdt_get_tree,0x124,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdt_get_tree,0x12c,ctx->r15,"MOV R15,qword ptr [R15]",write other [TODO]
rdt_get_tree,0x145,0xffffffff8105e4e0,CALL 0xffffffff8105e4e0,direct call
rdt_get_tree,0x15b,0xffffffff8105eca0,CALL 0xffffffff8105eca0,direct call
rdt_get_tree,0x172,0xffffffff8343bef0,"MOV qword ptr [0xffffffff8343bef0],0x0",write .data
rdt_get_tree,0x17d,0xffffffff8343bef8,"MOV qword ptr [0xffffffff8343bef8],0x0",write .data
rdt_get_tree,0x188,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdt_get_tree,0x18d,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdt_get_tree,0x1b6,,RET,ret
rdt_get_tree,0x1c1,0xffffffff8105eca0,CALL 0xffffffff8105eca0,direct call
rdt_get_tree,0x1fb,0xffffffff8105eca0,CALL 0xffffffff8105eca0,direct call
rdt_get_tree,0x220,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
rdt_get_tree,0x245,0xffffffff8343bcc0,"MOV dword ptr [0xffffffff8343bcc0],ECX",write .data
rdt_get_tree,0x25a,0xffffffff8343bcc4,"MOV dword ptr [0xffffffff8343bcc4],EAX",write .data
rdt_get_tree,0x266,0xffffffff814156e0,CALL 0xffffffff814156e0,direct call
rdt_get_tree,0x26e,0xffffffff8343bf10,"MOV qword ptr [0xffffffff8343bf10],RAX",write .data
rdt_get_tree,0x28b,0xffffffff8105d540,CALL 0xffffffff8105d540,direct call
rdt_get_tree,0x2d5,ctx->rdx,"MOV RDX,qword ptr [RBX + 0x50]",write other [TODO]
rdt_get_tree,0x2e4,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
rdt_get_tree,0x2f1,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_get_tree,0x2f7,0xffffffff8105d9a0,CALL 0xffffffff8105d9a0,direct call
rdt_get_tree,0x30a,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_get_tree,0x33d,0xffffffff8105d910,CALL 0xffffffff8105d910,direct call
rdt_get_tree,0x362,0xffffffff8105dc00,CALL 0xffffffff8105dc00,direct call
rdt_get_tree,0x379,0xffffffff8343bc50,"MOV qword ptr [0xffffffff8343bc50],RAX",write .data
rdt_get_tree,0x380,0xffffffff81065480,CALL 0xffffffff81065480,direct call
rdt_get_tree,0x393,0xffffffff81412ee0,CALL 0xffffffff81412ee0,direct call
rdt_get_tree,0x3c0,0xffffffff8127f8a0,CALL 0xffffffff8127f8a0,direct call
rdt_get_tree,0x3de,0xffffffff8127f8a0,CALL 0xffffffff8127f8a0,direct call
rdt_get_tree,0x404,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_get_tree,0x40c,0xffffffff810623a0,CALL 0xffffffff810623a0,direct call
rdt_get_tree,0x411,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
rdt_get_tree,0x422,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
rdt_get_tree,0x43a,ctx->rdi,"MOV RDI,RBX",write other [TODO]
rdt_get_tree,0x448,0xffffffff8105d9a0,CALL 0xffffffff8105d9a0,direct call
rdt_get_tree,0x459,0xffffffff81065510,CALL 0xffffffff81065510,direct call
rdt_get_tree,0x472,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_get_tree,0x4a6,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
rdt_get_tree,0x4aa,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
rdt_get_tree,0x4ad,ctx->rdi,"MOV qword ptr [RDI],R13",write other [TODO]
rdt_get_tree,0x4b0,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RBX",write other [TODO]
rdt_get_tree,0x4b4,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdt_get_tree,0x4bc,ctx->r15,"MOV R15,qword ptr [R15]",write other [TODO]
rdt_get_tree,0x4dd,0xffffffff8105e4e0,CALL 0xffffffff8105e4e0,direct call
rdt_get_tree,0x4f1,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
rdt_get_tree,0x508,0xffffffff814154e0,CALL 0xffffffff814154e0,direct call
rdt_get_tree,0x519,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_get_tree,0x532,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_get_tree,0x543,0xffffffff8127f8a0,CALL 0xffffffff8127f8a0,direct call
rdt_get_tree,0x571,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdt_kill_sb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_kill_sb,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdt_kill_sb,0x2f,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
rdt_kill_sb,0x3b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
rdt_kill_sb,0x42,0xffffffff8105e4e0,CALL 0xffffffff8105e4e0,direct call
rdt_kill_sb,0x71,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
rdt_kill_sb,0x88,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RBX",write stack
rdt_kill_sb,0x8c,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
rdt_kill_sb,0x93,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
rdt_kill_sb,0x9b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
rdt_kill_sb,0xa9,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdt_kill_sb,0xd1,ctx->rdx + ctx->rcx * 0x4,"MOV dword ptr [RDX + RCX*0x4],ESI",write other [TODO]
rdt_kill_sb,0xdc,ctx->r14,"MOV R14,qword ptr [R14]",write other [TODO]
rdt_kill_sb,0x119,0xffffffff8116e520,CALL 0xffffffff8116e520,direct call
rdt_kill_sb,0x136,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdt_kill_sb,0x177,0xffffffff8105cf40,CALL 0xffffffff8105cf40,direct call
rdt_kill_sb,0x1a5,ctx->r12 + 0x420,"MOV dword ptr [R12 + 0x420],0x1",write other [TODO]
rdt_kill_sb,0x1d0,ctx->rdi,"MOV RDI,R12",write other [TODO]
rdt_kill_sb,0x1d3,0xffffffff8105d840,CALL 0xffffffff8105d840,direct call
rdt_kill_sb,0x1f8,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdt_kill_sb,0x203,ctx->rdi,"MOV RDI,RSI",write other [TODO]
rdt_kill_sb,0x206,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdt_kill_sb,0x213,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
rdt_kill_sb,0x218,ctx->rdi,"MOV RDI,qword ptr [R12]",write other [TODO]
rdt_kill_sb,0x21c,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_kill_sb,0x22b,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
rdt_kill_sb,0x22f,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
rdt_kill_sb,0x23a,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],R15",write other [TODO]
rdt_kill_sb,0x23f,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],R14",write other [TODO]
rdt_kill_sb,0x24c,ctx->rdi,"MOV RDI,qword ptr [R12]",write other [TODO]
rdt_kill_sb,0x250,0xffffffff81414920,CALL 0xffffffff81414920,direct call
rdt_kill_sb,0x255,ctx->rdi,"MOV RDI,R12",write other [TODO]
rdt_kill_sb,0x258,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdt_kill_sb,0x262,ctx->rdi,"MOV RDI,R12",write other [TODO]
rdt_kill_sb,0x265,0xffffffff81065310,CALL 0xffffffff81065310,direct call
rdt_kill_sb,0x28e,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdt_kill_sb,0x29a,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_kill_sb,0x2a6,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_kill_sb,0x2b2,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdt_kill_sb,0x2b7,0xffffffff81065510,CALL 0xffffffff81065510,direct call
rdt_kill_sb,0x2c3,0xffffffff8343bc78,"MOV dword ptr [0xffffffff8343bc78],0x0",write .data
rdt_kill_sb,0x2dd,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
rdt_kill_sb,0x2e1,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
rdt_kill_sb,0x2e4,ctx->rdi,"MOV qword ptr [RDI],R14",write other [TODO]
rdt_kill_sb,0x2e7,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R12",write other [TODO]
rdt_kill_sb,0x2eb,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdt_kill_sb,0x2f3,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
rdt_kill_sb,0x306,0xffffffff8127f960,CALL 0xffffffff8127f960,direct call
rdt_kill_sb,0x312,0xffffffff8127f960,CALL 0xffffffff8127f960,direct call
rdt_kill_sb,0x31e,0xffffffff8127f960,CALL 0xffffffff8127f960,direct call
rdt_kill_sb,0x326,0xffffffff81413110,CALL 0xffffffff81413110,direct call
rdt_kill_sb,0x332,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdt_kill_sb,0x337,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdt_kill_sb,0x359,,RET,ret
rdt_kill_sb,0x35d,0xffffffff8105cd00,CALL 0xffffffff8105cd00,direct call
rdt_kill_sb,0x36b,0xffffffff8105eca0,CALL 0xffffffff8105eca0,direct call
rdt_kill_sb,0x384,0xffffffff8105eca0,CALL 0xffffffff8105eca0,direct call
rdt_kill_sb,0x38e,0xffffffff82000810,CALL 0xffffffff82000810,direct call
rdt_kill_sb,0x398,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_kn_lock_live,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_kn_lock_live,0x3c,0xffffffff81415ae0,CALL 0xffffffff81415ae0,direct call
rdtgroup_kn_lock_live,0x48,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
rdtgroup_kn_lock_live,0x60,,RET,ret
rdtgroup_kn_lock_live,0x6c,,RET,ret
rdtgroup_kn_unlock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_kn_unlock,0x3f,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdtgroup_kn_unlock,0x6a,0xffffffff81415b30,CALL 0xffffffff81415b30,direct call
rdtgroup_kn_unlock,0x73,0xffffffff81414920,CALL 0xffffffff81414920,direct call
rdtgroup_kn_unlock,0x7b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_kn_unlock,0x85,,RET,ret
rdtgroup_kn_unlock,0x93,0xffffffff81415b30,CALL 0xffffffff81415b30,direct call
rdtgroup_kn_unlock,0x9d,,RET,ret
rdtgroup_kn_unlock,0xa1,0xffffffff81065310,CALL 0xffffffff81065310,direct call
rdtgroup_size_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_size_show,0x19,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
rdtgroup_size_show,0x20,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_size_show,0x48,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EBX",write stack
rdtgroup_size_show,0x4b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_size_show,0x61,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
rdtgroup_size_show,0x81,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDI",write stack
rdtgroup_size_show,0x8b,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_size_show,0xac,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_size_show,0xd0,0xffffffff8105e9b0,CALL 0xffffffff8105e9b0,direct call
rdtgroup_size_show,0xe5,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_size_show,0xfa,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdtgroup_size_show,0x119,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
rdtgroup_size_show,0x12a,0xffffffff81394890,CALL 0xffffffff81394890,direct call
rdtgroup_size_show,0x133,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
rdtgroup_size_show,0x136,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_size_show,0x150,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_size_show,0x166,,RET,ret
rdtgroup_size_show,0x18c,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_size_show,0x1a6,0xffffffff8105e9b0,CALL 0xffffffff8105e9b0,direct call
rdtgroup_size_show,0x1c8,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_size_show,0x1e0,0xffffffff8343bef0,"MOV qword ptr [0xffffffff8343bef0],0x0",write .data
rdtgroup_size_show,0x1f1,0xffffffff8343bef8,"MOV qword ptr [0xffffffff8343bef8],0x0",write .data
rdtgroup_size_show,0x1fc,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_size_show,0x213,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_mode_write,0x16,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
rdtgroup_mode_write,0x37,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
rdtgroup_mode_write,0x3d,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_mode_write,0x5f,0xffffffff8343bef0,"MOV qword ptr [0xffffffff8343bef0],0x0",write .data
rdtgroup_mode_write,0x6a,0xffffffff8343bef8,"MOV qword ptr [0xffffffff8343bef8],0x0",write .data
rdtgroup_mode_write,0x75,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_mode_write,0x93,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_mode_write,0x98,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
rdtgroup_mode_write,0xb3,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_mode_write,0xba,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
rdtgroup_mode_write,0xc9,ctx->rbp - 0x41,"MOV byte ptr [RBP + -0x41],CL",write stack
rdtgroup_mode_write,0xd8,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_mode_write,0x104,ctx->r12 + 0x458,"MOV dword ptr [R12 + 0x458],0x0",write other [TODO]
rdtgroup_mode_write,0x117,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_write,0x12d,,RET,ret
rdtgroup_mode_write,0x13b,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_write,0x150,0xffffffff81064820,CALL 0xffffffff81064820,direct call
rdtgroup_mode_write,0x15d,ctx->r12 + 0x458,"MOV dword ptr [R12 + 0x458],0x2",write other [TODO]
rdtgroup_mode_write,0x170,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_write,0x185,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_mode_write,0x191,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_write,0x1ab,,RET,ret
rdtgroup_mode_write,0x1db,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
rdtgroup_mode_write,0x200,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
rdtgroup_mode_write,0x204,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
rdtgroup_mode_write,0x214,ctx->rdi,"MOV RDI,R15",write other [TODO]
rdtgroup_mode_write,0x217,0xffffffff8105e900,CALL 0xffffffff8105e900,direct call
rdtgroup_mode_write,0x232,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_mode_write,0x23e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_mode_write,0x249,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_write,0x25a,0xffffffff81064ad0,CALL 0xffffffff81064ad0,direct call
rdtgroup_mode_write,0x26b,ctx->rbp - 0x41,"MOV byte ptr [RBP + -0x41],0x1",write stack
rdtgroup_mode_write,0x26f,ctx->r15,"MOV R15,qword ptr [R15]",write other [TODO]
rdtgroup_mode_write,0x290,ctx->r12 + 0x458,"MOV dword ptr [R12 + 0x458],0x1",write other [TODO]
rdtgroup_mode_write,0x2a4,0xffffffff81064ad0,CALL 0xffffffff81064ad0,direct call
rdtgroup_mode_write,0x2c4,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_mode_show,0x15,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_mode_show,0x43,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_mode_show,0x4b,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mode_show,0x56,,RET,ret
rdtgroup_mode_show,0x5a,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_tasks_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_tasks_write,0x1c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
rdtgroup_tasks_write,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_tasks_write,0x2f,0xffffffff81606c40,CALL 0xffffffff81606c40,direct call
rdtgroup_tasks_write,0x3d,0xffffffff81608040,CALL 0xffffffff81608040,direct call
rdtgroup_tasks_write,0x5b,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_tasks_write,0x72,0xffffffff8343bef0,"MOV qword ptr [0xffffffff8343bef0],0x0",write .data
rdtgroup_tasks_write,0x7d,0xffffffff8343bef8,"MOV qword ptr [0xffffffff8343bef8],0x0",write .data
rdtgroup_tasks_write,0xa1,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
rdtgroup_tasks_write,0xd3,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
rdtgroup_tasks_write,0xdb,0xffffffff810d3830,CALL 0xffffffff810d3830,direct call
rdtgroup_tasks_write,0x145,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_tasks_write,0x175,,RET,ret
rdtgroup_tasks_write,0x179,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
rdtgroup_tasks_write,0x18a,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
rdtgroup_tasks_write,0x199,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_tasks_write,0x1a2,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_tasks_write,0x1d1,ctx->r12 + 0xe10,"MOV dword ptr [R12 + 0xe10],EAX",write other [TODO]
rdtgroup_tasks_write,0x1e0,ctx->r12 + 0xe14,"MOV dword ptr [R12 + 0xe14],EAX",write other [TODO]
rdtgroup_tasks_write,0x1eb,0xffffffff810e2250,CALL 0xffffffff810e2250,direct call
rdtgroup_tasks_write,0x229,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_tasks_write,0x232,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_tasks_write,0x246,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
rdtgroup_tasks_write,0x253,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],ECX",write stack
rdtgroup_tasks_write,0x256,0xffffffff810d3a10,CALL 0xffffffff810d3a10,direct call
rdtgroup_tasks_write,0x2a3,ctx->r12 + 0xe14,"MOV dword ptr [R12 + 0xe14],EAX",write other [TODO]
rdtgroup_tasks_write,0x2b8,0xffffffff81605660,CALL 0xffffffff81605660,direct call
rdtgroup_tasks_write,0x2ca,0xffffffff81605660,CALL 0xffffffff81605660,direct call
rdtgroup_tasks_write,0x2e8,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
rdtgroup_tasks_write,0x2fa,0xffffffff81605660,CALL 0xffffffff81605660,direct call
rdtgroup_tasks_write,0x313,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
rdtgroup_tasks_write,0x317,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_tasks_write,0x368,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_tasks_write,0x389,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_tasks_write,0x39a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_tasks_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_tasks_show,0x19,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
rdtgroup_tasks_show,0x20,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_tasks_show,0x31,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
rdtgroup_tasks_show,0x51,ctx->rcx,"MOV RCX,qword ptr [RBX + 0x318]",write other [TODO]
rdtgroup_tasks_show,0x58,ctx->rdx,"MOV RDX,qword ptr [RCX + 0x10]",write other [TODO]
rdtgroup_tasks_show,0xde,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_tasks_show,0x107,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
rdtgroup_tasks_show,0x116,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_tasks_show,0x12c,,RET,ret
rdtgroup_cpus_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_cpus_write,0x16,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDX",write stack
rdtgroup_cpus_write,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_cpus_write,0x46,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
rdtgroup_cpus_write,0x61,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
rdtgroup_cpus_write,0x7c,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
rdtgroup_cpus_write,0x8c,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_cpus_write,0xb2,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0xc6,ctx->ecx,"MOV ECX,EDX",write other [TODO]
rdtgroup_cpus_write,0xd3,0xffffffff815fa410,CALL 0xffffffff815fa410,direct call
rdtgroup_cpus_write,0xee,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_cpus_write,0xf6,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_cpus_write,0xff,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x108,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x111,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x13a,,RET,ret
rdtgroup_cpus_write,0x13e,0xffffffff815faa60,CALL 0xffffffff815faa60,direct call
rdtgroup_cpus_write,0x15a,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x160,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x170,ctx->rsi,"MOV RSI,R14",write other [TODO]
rdtgroup_cpus_write,0x173,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x1ad,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x1b7,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
rdtgroup_cpus_write,0x1c2,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
rdtgroup_cpus_write,0x1c9,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
rdtgroup_cpus_write,0x1cd,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x1dc,ctx->rsi,"MOV RSI,R13",write other [TODO]
rdtgroup_cpus_write,0x1df,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x1ed,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x202,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x211,ctx->rsi,"MOV RSI,R13",write other [TODO]
rdtgroup_cpus_write,0x214,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x222,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x232,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x237,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x240,ctx->rsi,"MOV RSI,RDX",write other [TODO]
rdtgroup_cpus_write,0x243,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
rdtgroup_cpus_write,0x247,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x267,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RCX",write stack
rdtgroup_cpus_write,0x279,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x285,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x2a4,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_cpus_write,0x2c2,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
rdtgroup_cpus_write,0x2ca,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_cpus_write,0x2d3,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x2dc,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x2e5,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x314,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_cpus_write,0x32a,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x330,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
rdtgroup_cpus_write,0x33f,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
rdtgroup_cpus_write,0x343,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
rdtgroup_cpus_write,0x347,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x356,ctx->rsi,"MOV RSI,R13",write other [TODO]
rdtgroup_cpus_write,0x359,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x377,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x380,ctx->rdi,"MOV RDI,RSI",write other [TODO]
rdtgroup_cpus_write,0x383,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdtgroup_cpus_write,0x392,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_cpus_write,0x397,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x3a8,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x3ad,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x3b6,ctx->rsi,"MOV RSI,RDX",write other [TODO]
rdtgroup_cpus_write,0x3b9,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
rdtgroup_cpus_write,0x3bd,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x3e3,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x3f4,ctx->rsi,"MOV RSI,R15",write other [TODO]
rdtgroup_cpus_write,0x3f7,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
rdtgroup_cpus_write,0x3fc,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x406,ctx->rsi,"MOV RSI,RDX",write other [TODO]
rdtgroup_cpus_write,0x409,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
rdtgroup_cpus_write,0x40d,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_cpus_write,0x412,ctx->rdx,"MOV RDX,qword ptr [RBP + -0x50]",write other [TODO]
rdtgroup_cpus_write,0x435,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_cpus_write,0x448,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EDX",write stack
rdtgroup_cpus_write,0x457,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
rdtgroup_cpus_write,0x464,ctx->ecx,"MOV ECX,dword ptr [RBP + -0x50]",write other [TODO]
rdtgroup_cpus_write,0x485,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R9",write stack
rdtgroup_cpus_write,0x489,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
rdtgroup_cpus_write,0x494,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_cpus_write,0x4a5,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EDX",write stack
rdtgroup_cpus_write,0x4b4,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
rdtgroup_cpus_write,0x4d4,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x4de,ctx->rsi,"MOV RSI,R15",write other [TODO]
rdtgroup_cpus_write,0x4e1,ctx->rdi,"MOV RDI,R15",write other [TODO]
rdtgroup_cpus_write,0x4e4,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
rdtgroup_cpus_write,0x504,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x50a,ctx->rsi,"MOV RSI,R15",write other [TODO]
rdtgroup_cpus_write,0x50d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
rdtgroup_cpus_write,0x514,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
rdtgroup_cpus_write,0x54a,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_cpus_write,0x564,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_write,0x570,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdtgroup_cpus_write,0x57c,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_cpus_write,0x591,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x5a6,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x5af,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_cpus_write,0x5d3,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_cpus_write,0x5dd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_cpus_write,0x5f7,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_cpus_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_cpus_show,0x15,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_cpus_show,0x36,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_cpus_show,0x55,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_cpus_show,0x5d,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_cpus_show,0x69,,RET,ret
rdtgroup_cpus_show,0x96,0xffffffff8343bef0,"MOV qword ptr [0xffffffff8343bef0],0x0",write .data
rdtgroup_cpus_show,0xa7,0xffffffff8343bef8,"MOV qword ptr [0xffffffff8343bef8],0x0",write .data
rdtgroup_cpus_show,0xb2,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_rmdir,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_rmdir,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_rmdir,0x3a,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
rdtgroup_rmdir,0x4a,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_rmdir,0x80,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_rmdir,0x89,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_rmdir,0xb2,,RET,ret
rdtgroup_rmdir,0xc9,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_rmdir,0xe1,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_rmdir,0x102,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
rdtgroup_rmdir,0x106,0xffffffff8105cf40,CALL 0xffffffff8105cf40,direct call
rdtgroup_rmdir,0x114,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
rdtgroup_rmdir,0x132,ctx->rdx + ctx->rsi * 0x1,"MOV dword ptr [RDX + RSI*0x1],ECX",write other [TODO]
rdtgroup_rmdir,0x135,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_rmdir,0x141,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
rdtgroup_rmdir,0x146,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_rmdir,0x164,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdtgroup_rmdir,0x16e,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_rmdir,0x17a,ctx->r14 + 0x420,"MOV dword ptr [R14 + 0x420],0x1",write other [TODO]
rdtgroup_rmdir,0x185,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
rdtgroup_rmdir,0x1a4,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
rdtgroup_rmdir,0x1a8,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
rdtgroup_rmdir,0x1b8,ctx->r14 + 0x440,"MOV qword ptr [R14 + 0x440],RAX",write other [TODO]
rdtgroup_rmdir,0x1c3,ctx->r14 + 0x448,"MOV qword ptr [R14 + 0x448],RAX",write other [TODO]
rdtgroup_rmdir,0x1ca,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdtgroup_rmdir,0x20a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
rdtgroup_rmdir,0x20e,0xffffffff8105cf40,CALL 0xffffffff8105cf40,direct call
rdtgroup_rmdir,0x21a,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_rmdir,0x223,ctx->rdi,"MOV RDI,RSI",write other [TODO]
rdtgroup_rmdir,0x226,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdtgroup_rmdir,0x243,ctx->rcx + ctx->r13 * 0x1,"MOV dword ptr [RCX + R13*0x1],ESI",write other [TODO]
rdtgroup_rmdir,0x255,ctx->rdx + ctx->rbx * 0x1,"MOV dword ptr [RDX + RBX*0x1],ECX",write other [TODO]
rdtgroup_rmdir,0x258,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_rmdir,0x264,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
rdtgroup_rmdir,0x269,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_rmdir,0x283,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdtgroup_rmdir,0x28d,0xffffffff8105e450,CALL 0xffffffff8105e450,direct call
rdtgroup_rmdir,0x2aa,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
rdtgroup_rmdir,0x2b7,ctx->r14 + 0x420,"MOV dword ptr [R14 + 0x420],0x1",write other [TODO]
rdtgroup_rmdir,0x2c2,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
rdtgroup_rmdir,0x2c6,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
rdtgroup_rmdir,0x2d6,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
rdtgroup_rmdir,0x2de,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
rdtgroup_rmdir,0x2e2,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdtgroup_rmdir,0x2ea,0xffffffff8105d840,CALL 0xffffffff8105d840,direct call
rdtgroup_rmdir,0x2ff,ctx->r14 + 0x420,"MOV dword ptr [R14 + 0x420],0x1",write other [TODO]
rdtgroup_rmdir,0x30a,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
rdtgroup_rmdir,0x30e,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
rdtgroup_rmdir,0x31e,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
rdtgroup_rmdir,0x326,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
rdtgroup_rmdir,0x32a,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdtgroup_rmdir,0x346,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mkdir_rdt_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mkdir_rdt_prepare,0x21,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
mkdir_rdt_prepare,0x24,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
mkdir_rdt_prepare,0x5d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
mkdir_rdt_prepare,0x61,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
mkdir_rdt_prepare,0x76,ctx->rax + 0x438,"MOV qword ptr [RAX + 0x438],RCX",write other [TODO]
mkdir_rdt_prepare,0x86,ctx->rax + 0x428,"MOV dword ptr [RAX + 0x428],EBX",write other [TODO]
mkdir_rdt_prepare,0x95,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
mkdir_rdt_prepare,0xa2,ctx->r15 + 0x440,"MOV qword ptr [R15 + 0x440],RAX",write other [TODO]
mkdir_rdt_prepare,0xa9,ctx->r15 + 0x448,"MOV qword ptr [R15 + 0x448],RAX",write other [TODO]
mkdir_rdt_prepare,0xb0,0xffffffff814156e0,CALL 0xffffffff814156e0,direct call
mkdir_rdt_prepare,0xc9,ctx->r15,"MOV qword ptr [R15],R13",write other [TODO]
mkdir_rdt_prepare,0xcc,0xffffffff81413fe0,CALL 0xffffffff81413fe0,direct call
mkdir_rdt_prepare,0xd4,0xffffffff8105d4c0,CALL 0xffffffff8105d4c0,direct call
mkdir_rdt_prepare,0xf1,0xffffffff8105d540,CALL 0xffffffff8105d540,direct call
mkdir_rdt_prepare,0x10a,0xffffffff81061e10,CALL 0xffffffff81061e10,direct call
mkdir_rdt_prepare,0x126,ctx->r15 + 0x450,"MOV dword ptr [R15 + 0x450],EAX",write other [TODO]
mkdir_rdt_prepare,0x12d,0xffffffff8105dc00,CALL 0xffffffff8105dc00,direct call
mkdir_rdt_prepare,0x13f,0xffffffff814154e0,CALL 0xffffffff814154e0,direct call
mkdir_rdt_prepare,0x154,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
mkdir_rdt_prepare,0x15c,0xffffffff81414920,CALL 0xffffffff81414920,direct call
mkdir_rdt_prepare,0x164,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
mkdir_rdt_prepare,0x16c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mkdir_rdt_prepare,0x174,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
mkdir_rdt_prepare,0x18a,,RET,ret
mkdir_rdt_prepare,0x19f,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
mkdir_rdt_prepare,0x1bc,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
mkdir_rdt_prepare,0x1d4,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
mkdir_rdt_prepare,0x1ec,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
mkdir_rdt_prepare,0x1f8,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
mkdir_rdt_prepare,0x213,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
mkdir_rdt_prepare,0x231,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_mkdir,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_mkdir,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_mkdir,0x35,0xffffffff81c7f910,CALL 0xffffffff81c7f910,direct call
rdtgroup_mkdir,0x68,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_mkdir,0x6d,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xffffffff",write stack
rdtgroup_mkdir,0x82,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_mkdir,0x9d,0xffffffff81060c10,CALL 0xffffffff81060c10,direct call
rdtgroup_mkdir,0xa2,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
rdtgroup_mkdir,0xc4,ctx->rdx + 0x18,"MOV dword ptr [RDX + 0x18],ECX",write other [TODO]
rdtgroup_mkdir,0xcb,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RSI",write other [TODO]
rdtgroup_mkdir,0xcf,ctx->rdx + 0x440,"MOV qword ptr [RDX + 0x440],RAX",write other [TODO]
rdtgroup_mkdir,0xd6,ctx->rdx + 0x448,"MOV qword ptr [RDX + 0x448],RCX",write other [TODO]
rdtgroup_mkdir,0xdd,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
rdtgroup_mkdir,0xe3,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mkdir,0x10c,,RET,ret
rdtgroup_mkdir,0x129,0xffffffff81060c10,CALL 0xffffffff81060c10,direct call
rdtgroup_mkdir,0x12e,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
rdtgroup_mkdir,0x13e,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
rdtgroup_mkdir,0x145,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
rdtgroup_mkdir,0x152,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],ECX",write stack
rdtgroup_mkdir,0x163,0xffffffff8343bcc4,"MOV dword ptr [0xffffffff8343bcc4],EAX",write .data
rdtgroup_mkdir,0x17f,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],ECX",write other [TODO]
rdtgroup_mkdir,0x18f,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R15",write stack
rdtgroup_mkdir,0x1a1,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
rdtgroup_mkdir,0x1bc,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R14D",write stack
rdtgroup_mkdir,0x1c7,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0x2",write stack
rdtgroup_mkdir,0x1db,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],ECX",write stack
rdtgroup_mkdir,0x1e8,ctx->r15 + 0x4f4,"MOV byte ptr [R15 + 0x4f4],0x0",write other [TODO]
rdtgroup_mkdir,0x1f4,ctx->r15 + 0x4f0,"MOV dword ptr [R15 + 0x4f0],R12D",write other [TODO]
rdtgroup_mkdir,0x205,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R15",write stack
rdtgroup_mkdir,0x2a5,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],R9D",write stack
rdtgroup_mkdir,0x2a9,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],R10D",write stack
rdtgroup_mkdir,0x2ad,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
rdtgroup_mkdir,0x32c,ctx->r15 + 0x4f0,"MOV dword ptr [R15 + 0x4f0],EAX",write other [TODO]
rdtgroup_mkdir,0x337,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
rdtgroup_mkdir,0x347,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
rdtgroup_mkdir,0x34b,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_mkdir,0x35b,0xffffffff81602030,CALL 0xffffffff81602030,direct call
rdtgroup_mkdir,0x36b,0xffffffff815f9e30,CALL 0xffffffff815f9e30,direct call
rdtgroup_mkdir,0x378,ctx->r15 + 0x4f0,"MOV dword ptr [R15 + 0x4f0],EDX",write other [TODO]
rdtgroup_mkdir,0x383,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
rdtgroup_mkdir,0x38a,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
rdtgroup_mkdir,0x398,ctx->r15 + 0x4f4,"MOV byte ptr [R15 + 0x4f4],0x1",write other [TODO]
rdtgroup_mkdir,0x3c3,0xffffffff81062ac0,CALL 0xffffffff81062ac0,direct call
rdtgroup_mkdir,0x3d0,ctx->r13,"MOV R13,qword ptr [R13]",write other [TODO]
rdtgroup_mkdir,0x414,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
rdtgroup_mkdir,0x432,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],R9D",write stack
rdtgroup_mkdir,0x436,0xffffffff810630c0,CALL 0xffffffff810630c0,direct call
rdtgroup_mkdir,0x462,ctx->r12 + 0x4f4,"MOV byte ptr [R12 + 0x4f4],0x1",write other [TODO]
rdtgroup_mkdir,0x46b,ctx->r12 + 0x4f0,"MOV dword ptr [R12 + 0x4f0],EAX",write other [TODO]
rdtgroup_mkdir,0x47f,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_mkdir,0x490,ctx->rax + ctx->r14 * 0x1,"MOV dword ptr [RAX + R14*0x1],0xffffffff",write other [TODO]
rdtgroup_mkdir,0x49e,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_mkdir,0x4b0,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xffffffea",write stack
rdtgroup_mkdir,0x4bc,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xffffffff",write stack
rdtgroup_mkdir,0x4de,ctx->rsi + 0x458,"MOV dword ptr [RSI + 0x458],0x0",write other [TODO]
rdtgroup_mkdir,0x4ec,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
rdtgroup_mkdir,0x4f0,0xffffffff82e41cc0,"MOV qword ptr [0xffffffff82e41cc0],RAX",write .data
rdtgroup_mkdir,0x4f7,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RDX",write other [TODO]
rdtgroup_mkdir,0x4fb,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],-0x7d1be340",write other [TODO]
rdtgroup_mkdir,0x516,0xffffffff8105d910,CALL 0xffffffff8105d910,direct call
rdtgroup_mkdir,0x533,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_mkdir,0x53c,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EBX",write stack
rdtgroup_mkdir,0x547,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
rdtgroup_mkdir,0x54b,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
rdtgroup_mkdir,0x558,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
rdtgroup_mkdir,0x560,ctx->rcx + 0x10,"MOV qword ptr [RCX + 0x10],RAX",write other [TODO]
rdtgroup_mkdir,0x57c,0xffffffff81415a30,CALL 0xffffffff81415a30,direct call
rdtgroup_mkdir,0x587,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
rdtgroup_mkdir,0x58f,0xffffffff81414920,CALL 0xffffffff81414920,direct call
rdtgroup_mkdir,0x597,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_mkdir,0x5b4,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_mkdir,0x5b9,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xffffffe4",write stack
rdtgroup_mkdir,0x5d5,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_mkdir,0x5da,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EBX",write stack
rdtgroup_mkdir,0x5f3,0xffffffff81c7dbd0,CALL 0xffffffff81c7dbd0,direct call
rdtgroup_mkdir,0x5f8,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EBX",write stack
rdtgroup_mkdir,0x600,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
resctrl_offline_domain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_offline_domain,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
resctrl_offline_domain,0x5b,0xffffffff810c5f30,CALL 0xffffffff810c5f30,direct call
resctrl_offline_domain,0x75,0xffffffff815fa2d0,CALL 0xffffffff815fa2d0,direct call
resctrl_offline_domain,0x81,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_domain,0x8d,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_domain,0xb3,,RET,ret
resctrl_offline_domain,0x166,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_offline_domain,0x16b,ctx->r13 + 0x508,"MOV qword ptr [R13 + 0x508],0x0",write other [TODO]
resctrl_offline_domain,0x181,0xffffffff81061de0,CALL 0xffffffff81061de0,direct call
resctrl_offline_domain,0x196,0xffffffff81061cb0,CALL 0xffffffff81061cb0,direct call
resctrl_offline_domain,0x1a2,0xffffffff810c5f30,CALL 0xffffffff810c5f30,direct call
resctrl_offline_domain,0x1ac,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
resctrl_online_domain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_online_domain,0x4d,,RET,ret
resctrl_online_domain,0x81,ctx->r12 + 0x430,"MOV qword ptr [R12 + 0x430],RAX",write other [TODO]
resctrl_online_domain,0x9d,ctx->r12 + 0x438,"MOV qword ptr [R12 + 0x438],RAX",write other [TODO]
resctrl_online_domain,0xa5,ctx->r12 + 0x448,"MOV qword ptr [R12 + 0x448],-0x7ef9deb0",write other [TODO]
resctrl_online_domain,0xb1,ctx->r12 + 0x440,"MOV qword ptr [R12 + 0x440],RAX",write other [TODO]
resctrl_online_domain,0xb9,0xffffffff81152f60,CALL 0xffffffff81152f60,direct call
resctrl_online_domain,0xc6,0xffffffff810623a0,CALL 0xffffffff810623a0,direct call
resctrl_online_domain,0x15f,0xffffffff8105cce0,CALL 0xffffffff8105cce0,direct call
resctrl_online_domain,0x164,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
resctrl_online_domain,0x171,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
resctrl_online_domain,0x192,ctx->edx,"MOV EDX,dword ptr [RAX + RDX*0x1]",write other [TODO]
resctrl_online_domain,0x195,0xffffffff812b3fa0,CALL 0xffffffff812b3fa0,direct call
resctrl_online_domain,0x19a,ctx->r12 + 0x508,"MOV qword ptr [R12 + 0x508],RAX",write other [TODO]
resctrl_online_domain,0x1c5,ctx->rax + ctx->rcx * 0x4,"MOV dword ptr [RAX + RCX*0x4],0xffffffff",write other [TODO]
resctrl_online_domain,0x1de,0xffffffff815faa40,CALL 0xffffffff815faa40,direct call
resctrl_online_domain,0x1e3,ctx->r12 + 0x418,"MOV qword ptr [R12 + 0x418],RAX",write other [TODO]
resctrl_online_domain,0x21f,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
resctrl_online_domain,0x224,ctx->r12 + 0x420,"MOV qword ptr [R12 + 0x420],RAX",write other [TODO]
resctrl_online_domain,0x260,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
resctrl_online_domain,0x265,ctx->r12 + 0x428,"MOV qword ptr [R12 + 0x428],RAX",write other [TODO]
resctrl_online_domain,0x298,ctx->r12 + 0x488,"MOV qword ptr [R12 + 0x488],RAX",write other [TODO]
resctrl_online_domain,0x2b4,ctx->r12 + 0x490,"MOV qword ptr [R12 + 0x490],RAX",write other [TODO]
resctrl_online_domain,0x2bc,ctx->r12 + 0x4a0,"MOV qword ptr [R12 + 0x4a0],-0x7ef9e100",write other [TODO]
resctrl_online_domain,0x2c8,ctx->r12 + 0x498,"MOV qword ptr [R12 + 0x498],RAX",write other [TODO]
resctrl_online_domain,0x2d0,0xffffffff81152f60,CALL 0xffffffff81152f60,direct call
resctrl_online_domain,0x2da,ctx->r12 + 0x420,"MOV qword ptr [R12 + 0x420],0x0",write other [TODO]
resctrl_online_domain,0x2ee,0xffffffff815fa2d0,CALL 0xffffffff815fa2d0,direct call
resctrl_online_domain,0x2fd,ctx->r12 + 0x428,"MOV qword ptr [R12 + 0x428],0x0",write other [TODO]
resctrl_online_domain,0x311,0xffffffff815fa2d0,CALL 0xffffffff815fa2d0,direct call
resctrl_online_domain,0x31e,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resctrl_arch_reset_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_reset_rmid,0x1b,,RET,ret
resctrl_arch_reset_rmid,0x2e,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
resctrl_arch_reset_rmid,0x35,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],0x0",write other [TODO]
resctrl_arch_reset_rmid,0x3e,,RET,ret
resctrl_arch_rmid_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_rmid_read,0x16,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
resctrl_arch_rmid_read,0x46,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
resctrl_arch_rmid_read,0x51,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
resctrl_arch_rmid_read,0x91,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
resctrl_arch_rmid_read,0xa4,,RET,ret
resctrl_arch_rmid_read,0xd8,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
resctrl_arch_rmid_read,0xe9,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
__mon_event_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mon_event_count,0x1f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__mon_event_count,0x29,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
__mon_event_count,0x45,0xffffffff810619a0,CALL 0xffffffff810619a0,direct call
__mon_event_count,0x4a,ctx->rbx + 0x20,"MOV dword ptr [RBX + 0x20],EAX",write other [TODO]
__mon_event_count,0x7f,,RET,ret
__mon_event_count,0x98,0xffffffff81061950,CALL 0xffffffff81061950,direct call
__mon_event_count,0xbb,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
__mon_event_count,0xc2,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],0x0",write other [TODO]
__mon_event_count,0xca,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],0x0",write other [TODO]
__mon_event_count,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mbm_update.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mbm_update.constprop.0,0x19,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
mbm_update.constprop.0,0x25,ctx->rbp - 0x24,"MOV byte ptr [RBP + -0x24],0x0",write stack
mbm_update.constprop.0,0x29,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],-0x7d1bea60",write stack
mbm_update.constprop.0,0x31,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
mbm_update.constprop.0,0x55,,RET,ret
mbm_update.constprop.0,0x5c,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x2",write stack
mbm_update.constprop.0,0x63,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
mbm_update.constprop.0,0x6b,0xffffffff81061ab0,CALL 0xffffffff81061ab0,direct call
mbm_update.constprop.0,0x80,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x3",write stack
mbm_update.constprop.0,0x87,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
mbm_update.constprop.0,0x8f,0xffffffff81061ab0,CALL 0xffffffff81061ab0,direct call
mbm_update.constprop.0,0x96,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
mbm_update.constprop.0,0xbe,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
mbm_update.constprop.0,0xde,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],ECX",write other [TODO]
mbm_update.constprop.0,0xe1,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x0",write other [TODO]
mbm_update.constprop.0,0xe5,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EDX",write other [TODO]
mbm_update.constprop.0,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__check_limbo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__check_limbo,0x2f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__check_limbo,0x35,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
__check_limbo,0x49,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__check_limbo,0x8c,0xffffffff810619a0,CALL 0xffffffff810619a0,direct call
__check_limbo,0xd9,0xffffffff82e41d48,"MOV qword ptr [0xffffffff82e41d48],RDX",write .data
__check_limbo,0xe0,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
__check_limbo,0xe4,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],-0x7d1be2c0",write other [TODO]
__check_limbo,0xec,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
__check_limbo,0x117,,RET,ret
__check_limbo,0x11f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
has_busy_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
has_busy_rmid,0x1b,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
has_busy_rmid,0x2f,,RET,ret
alloc_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_rmid,0x3a,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
alloc_rmid,0x3e,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
alloc_rmid,0x41,ctx->rax,"MOV qword ptr [RAX],RSI",write other [TODO]
alloc_rmid,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDI",write other [TODO]
alloc_rmid,0x4c,,RET,ret
alloc_rmid,0x5d,,RET,ret
mon_event_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mon_event_count,0x22,0xffffffff81061ab0,CALL 0xffffffff81061ab0,direct call
mon_event_count,0x54,0xffffffff81061ab0,CALL 0xffffffff81061ab0,direct call
mon_event_count,0x77,ctx->r15 + 0x20,"MOV dword ptr [R15 + 0x20],0x0",write other [TODO]
mon_event_count,0x89,,RET,ret
cqm_handle_limbo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cqm_handle_limbo,0x1f,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cqm_handle_limbo,0x2e,0xffffffff81061cb0,CALL 0xffffffff81061cb0,direct call
cqm_handle_limbo,0x3f,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
cqm_handle_limbo,0x62,0xffffffff810c65a0,CALL 0xffffffff810c65a0,direct call
cqm_handle_limbo,0x6e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cqm_handle_limbo,0x78,,RET,ret
cqm_setup_limbo_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cqm_setup_limbo_handler,0x11,0xffffffff8114fe70,CALL 0xffffffff8114fe70,direct call
cqm_setup_limbo_handler,0x16,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cqm_setup_limbo_handler,0x23,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
cqm_setup_limbo_handler,0x39,ctx->rbx + 0x4e4,"MOV dword ptr [RBX + 0x4e4],EAX",write other [TODO]
cqm_setup_limbo_handler,0x41,0xffffffff810c65a0,CALL 0xffffffff810c65a0,direct call
cqm_setup_limbo_handler,0x4a,,RET,ret
free_rmid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_rmid,0x1b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
free_rmid,0x55,0xffffffff82e41d48,"MOV qword ptr [0xffffffff82e41d48],RDX",write .data
free_rmid,0x5c,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
free_rmid,0x61,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],-0x7d1be2c0",write other [TODO]
free_rmid,0x6a,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
free_rmid,0x8a,,RET,ret
free_rmid,0x8b,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
free_rmid,0x9a,ctx->r12 + 0x4,"MOV dword ptr [R12 + 0x4],0x0",write other [TODO]
free_rmid,0xe6,ctx->rdi,"MOV RDI,RBX",write other [TODO]
free_rmid,0xe9,0xffffffff81061f80,CALL 0xffffffff81061f80,direct call
free_rmid,0x104,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
free_rmid,0x124,ctx->rsi,"MOV RSI,RBX",write other [TODO]
free_rmid,0x12e,0xffffffff810619a0,CALL 0xffffffff810619a0,direct call
free_rmid,0x14a,ctx->rdi,"MOV RDI,qword ptr [RBX + 0x418]",write other [TODO]
free_rmid,0x151,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
free_rmid,0x16e,0xffffffff82000810,CALL 0xffffffff82000810,direct call
free_rmid,0x178,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mbm_handle_overflow,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mbm_handle_overflow,0x27,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
mbm_handle_overflow,0x2a,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mbm_handle_overflow,0xca,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mbm_handle_overflow,0xdd,,RET,ret
mbm_setup_overflow_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mbm_setup_overflow_handler,0x11,0xffffffff8114fe70,CALL 0xffffffff8114fe70,direct call
mbm_setup_overflow_handler,0x4c,,RET,ret
rdt_get_mon_l3_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_get_mon_l3_config,0x24,ctx->rdi + 0xa0,"MOV dword ptr [RDI + 0xa0],ECX",write other [TODO]
rdt_get_mon_l3_config,0x33,0xffffffff8343bf20,"MOV dword ptr [0xffffffff8343bf20],EAX",write .data
rdt_get_mon_l3_config,0x39,ctx->r12 + 0xa4,"MOV dword ptr [R12 + 0xa4],0x18",write other [TODO]
rdt_get_mon_l3_config,0x48,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EBX",write other [TODO]
rdt_get_mon_l3_config,0x59,ctx->r12 + 0xa4,"MOV dword ptr [R12 + 0xa4],EDX",write other [TODO]
rdt_get_mon_l3_config,0x7a,0xffffffff8343bf24,"MOV dword ptr [0xffffffff8343bf24],EAX",write .data
rdt_get_mon_l3_config,0x94,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
rdt_get_mon_l3_config,0x99,0xffffffff8343bf30,"MOV qword ptr [0xffffffff8343bf30],RAX",write .data
rdt_get_mon_l3_config,0xba,ctx->rdx - 0x8,"MOV dword ptr [RDX + -0x8],ECX",write other [TODO]
rdt_get_mon_l3_config,0xc0,ctx->rdx,"MOV qword ptr [RDX],RDX",write other [TODO]
rdt_get_mon_l3_config,0xc3,0xffffffff82e41d48,"MOV qword ptr [0xffffffff82e41d48],RDX",write .data
rdt_get_mon_l3_config,0xca,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RDX",write other [TODO]
rdt_get_mon_l3_config,0xce,ctx->rdx,"MOV qword ptr [RDX],-0x7d1be2c0",write other [TODO]
rdt_get_mon_l3_config,0xd5,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RSI",write other [TODO]
rdt_get_mon_l3_config,0xd9,ctx->rsi,"MOV qword ptr [RSI],RDX",write other [TODO]
rdt_get_mon_l3_config,0x10a,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
rdt_get_mon_l3_config,0x10e,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
rdt_get_mon_l3_config,0x117,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDI",write other [TODO]
rdt_get_mon_l3_config,0x11b,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
rdt_get_mon_l3_config,0x124,ctx->r12 + 0x70,"MOV qword ptr [R12 + 0x70],RAX",write other [TODO]
rdt_get_mon_l3_config,0x129,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],RAX",write other [TODO]
rdt_get_mon_l3_config,0x13d,0xffffffff82e41d10,"MOV qword ptr [0xffffffff82e41d10],RAX",write .data
rdt_get_mon_l3_config,0x144,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],-0x7d1be2f0",write other [TODO]
rdt_get_mon_l3_config,0x14d,0xffffffff82e41d18,"MOV qword ptr [0xffffffff82e41d18],RDX",write .data
rdt_get_mon_l3_config,0x154,ctx->rdx,"MOV qword ptr [RDX],-0x7d1be2f0",write other [TODO]
rdt_get_mon_l3_config,0x16b,0xffffffff82e41cf0,"MOV qword ptr [0xffffffff82e41cf0],RAX",write .data
rdt_get_mon_l3_config,0x172,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],-0x7d1be310",write other [TODO]
rdt_get_mon_l3_config,0x17b,0xffffffff82e41cf8,"MOV qword ptr [0xffffffff82e41cf8],RDX",write .data
rdt_get_mon_l3_config,0x182,ctx->rdx,"MOV qword ptr [RDX],-0x7d1be310",write other [TODO]
rdt_get_mon_l3_config,0x189,ctx->r12 + 0x5,"MOV byte ptr [R12 + 0x5],0x1",write other [TODO]
rdt_get_mon_l3_config,0x195,,RET,ret
rdt_get_mon_l3_config,0x1a4,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],-0x7d1be2d0",write other [TODO]
rdt_get_mon_l3_config,0x1ad,0xffffffff82e41d30,"MOV qword ptr [0xffffffff82e41d30],RAX",write .data
rdt_get_mon_l3_config,0x1b4,0xffffffff82e41d38,"MOV qword ptr [0xffffffff82e41d38],RAX",write .data
rdt_get_mon_l3_config,0x1bb,ctx->r12 + 0x70,"MOV qword ptr [R12 + 0x70],-0x7d1be2d0",write other [TODO]
rdt_get_mon_l3_config,0x1d0,0xffffffff8343bf30,"MOV qword ptr [0xffffffff8343bf30],0x0",write .data
parse_bw,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
parse_bw,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
parse_bw,0x30,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
parse_bw,0x6b,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
parse_bw,0x94,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
parse_bw,0xbd,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
parse_bw,0xc6,ctx->r13 + 0x4f0,"MOV dword ptr [R13 + 0x4f0],EBX",write other [TODO]
parse_bw,0xcd,ctx->r13 + 0x4f4,"MOV byte ptr [R13 + 0x4f4],0x1",write other [TODO]
parse_bw,0xf9,,RET,ret
parse_bw,0x105,ctx->rax + ctx->rdx * 0x4,"MOV dword ptr [RAX + RDX*0x4],EBX",write other [TODO]
parse_bw,0x11a,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_bw,0x12e,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
parse_bw,0x14e,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_bw,0x165,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_bw,0x16f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
parse_cbm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
parse_cbm,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
parse_cbm,0x3d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
parse_cbm,0x6e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
parse_cbm,0x72,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
parse_cbm,0x75,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
parse_cbm,0xaa,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
parse_cbm,0xd3,,RET,ret
parse_cbm,0xe9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
parse_cbm,0xed,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
parse_cbm,0xfd,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
parse_cbm,0x101,0xffffffff81602030,CALL 0xffffffff81602030,direct call
parse_cbm,0x152,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
parse_cbm,0x156,0xffffffff8105e900,CALL 0xffffffff8105e900,direct call
parse_cbm,0x173,0xffffffff8105e900,CALL 0xffffffff8105e900,direct call
parse_cbm,0x192,ctx->rax + 0x4f0,"MOV dword ptr [RAX + 0x4f0],R15D",write other [TODO]
parse_cbm,0x199,ctx->rax + 0x4f4,"MOV byte ptr [RAX + 0x4f4],0x1",write other [TODO]
parse_cbm,0x1a8,0xffffffff81064c40,CALL 0xffffffff81064c40,direct call
parse_cbm,0x1c2,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
parse_cbm,0x1d2,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
parse_cbm,0x1d6,0xffffffff81064bd0,CALL 0xffffffff81064bd0,direct call
parse_cbm,0x1f4,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
parse_cbm,0x20e,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_cbm,0x21c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R8",write stack
parse_cbm,0x220,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
parse_cbm,0x224,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
parse_cbm,0x228,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
parse_cbm,0x253,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_cbm,0x26a,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_cbm,0x281,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
parse_cbm,0x29b,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
parse_cbm,0x2b2,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
parse_cbm,0x2bc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
resctrl_arch_update_one,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_update_one,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDX",write stack
resctrl_arch_update_one,0x4d,ctx->rdx + ctx->rcx * 0x4,"MOV dword ptr [RDX + RCX*0x4],R8D",write other [TODO]
resctrl_arch_update_one,0x54,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],EAX",write stack
resctrl_arch_update_one,0x5a,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
resctrl_arch_update_one,0x5d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],R9",write stack
resctrl_arch_update_one,0x61,ctx->r9 + 0x98,CALL qword ptr [R9 + 0x98],in-direct call
resctrl_arch_update_one,0x7a,,RET,ret
resctrl_arch_update_one,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
resctrl_arch_update_domains,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_update_domains,0x21,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
resctrl_arch_update_domains,0x29,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],ESI",write stack
resctrl_arch_update_domains,0x3a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
resctrl_arch_update_domains,0x40,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
resctrl_arch_update_domains,0x55,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
resctrl_arch_update_domains,0x5d,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
resctrl_arch_update_domains,0x6e,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
resctrl_arch_update_domains,0x74,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
resctrl_arch_update_domains,0xd3,ctx->rsi,"MOV RSI,RBX",write other [TODO]
resctrl_arch_update_domains,0xd6,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
resctrl_arch_update_domains,0x112,0xffffffff8116e520,CALL 0xffffffff8116e520,direct call
resctrl_arch_update_domains,0x128,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
resctrl_arch_update_domains,0x150,,RET,ret
resctrl_arch_update_domains,0x151,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
resctrl_arch_update_domains,0x15b,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
resctrl_arch_update_domains,0x176,ctx->rax + ctx->rbx * 0x4,"MOV dword ptr [RAX + RBX*0x4],ESI",write other [TODO]
resctrl_arch_update_domains,0x193,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
resctrl_arch_update_domains,0x19e,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
resctrl_arch_update_domains,0x1ae,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R12D",write stack
resctrl_arch_update_domains,0x1b2,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],ESI",write stack
resctrl_arch_update_domains,0x1b5,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
resctrl_arch_update_domains,0x1c2,0xffffffff8105cd00,CALL 0xffffffff8105cd00,direct call
resctrl_arch_update_domains,0x1cc,0xffffffff82000810,CALL 0xffffffff82000810,direct call
resctrl_arch_update_domains,0x1e0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_schemata_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_schemata_write,0x16,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RDI",write stack
rdtgroup_schemata_write,0x1a,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RSI",write stack
rdtgroup_schemata_write,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_schemata_write,0x47,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
rdtgroup_schemata_write,0x4d,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
rdtgroup_schemata_write,0x55,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_schemata_write,0x66,0xffffffff8105e580,CALL 0xffffffff8105e580,direct call
rdtgroup_schemata_write,0xa2,ctx->rax + 0x4f0,"MOV qword ptr [RAX + 0x4f0],0x0",write other [TODO]
rdtgroup_schemata_write,0xad,ctx->rax + 0x4f8,"MOV qword ptr [RAX + 0x4f8],0x0",write other [TODO]
rdtgroup_schemata_write,0xb8,ctx->rax + 0x500,"MOV qword ptr [RAX + 0x500],0x0",write other [TODO]
rdtgroup_schemata_write,0xd3,ctx->rcx,"MOV RCX,qword ptr [RCX]",write other [TODO]
rdtgroup_schemata_write,0xea,0xffffffff81c7fae0,CALL 0xffffffff81c7fae0,direct call
rdtgroup_schemata_write,0xef,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
rdtgroup_schemata_write,0x107,0xffffffff81c7fae0,CALL 0xffffffff81c7fae0,direct call
rdtgroup_schemata_write,0x10f,0xffffffff81606c40,CALL 0xffffffff81606c40,direct call
rdtgroup_schemata_write,0x144,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
rdtgroup_schemata_write,0x158,ctx->r15,"MOV R15,qword ptr [R15]",write other [TODO]
rdtgroup_schemata_write,0x16e,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_schemata_write,0x17a,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
rdtgroup_schemata_write,0x185,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_schemata_write,0x18a,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdtgroup_schemata_write,0x1b4,,RET,ret
rdtgroup_schemata_write,0x1bd,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
rdtgroup_schemata_write,0x1ca,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
rdtgroup_schemata_write,0x1d2,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EAX",write stack
rdtgroup_schemata_write,0x1ef,0xffffffff81c7fae0,CALL 0xffffffff81c7fae0,direct call
rdtgroup_schemata_write,0x1ff,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
rdtgroup_schemata_write,0x203,0xffffffff81c7fae0,CALL 0xffffffff81c7fae0,direct call
rdtgroup_schemata_write,0x21f,0xffffffff81607b50,CALL 0xffffffff81607b50,direct call
rdtgroup_schemata_write,0x230,0xffffffff81606c40,CALL 0xffffffff81606c40,direct call
rdtgroup_schemata_write,0x23d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
rdtgroup_schemata_write,0x25d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
rdtgroup_schemata_write,0x264,ctx->rsi,"MOV RSI,R15",write other [TODO]
rdtgroup_schemata_write,0x26b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R12",write stack
rdtgroup_schemata_write,0x26f,ctx->r14 + 0x68,CALL qword ptr [R14 + 0x68],in-direct call
rdtgroup_schemata_write,0x2b5,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_schemata_write,0x2cd,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_schemata_write,0x2d9,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_schemata_write,0x2de,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdtgroup_schemata_write,0x306,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_schemata_write,0x317,0xffffffff81062ac0,CALL 0xffffffff81062ac0,direct call
rdtgroup_schemata_write,0x324,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
rdtgroup_schemata_write,0x342,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_schemata_write,0x347,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdtgroup_schemata_write,0x35e,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_schemata_write,0x36b,0xffffffff81064d40,CALL 0xffffffff81064d40,direct call
rdtgroup_schemata_write,0x379,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_schemata_write,0x37e,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdtgroup_schemata_write,0x396,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_schemata_write,0x3b6,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
rdtgroup_schemata_write,0x3c1,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
rdtgroup_schemata_write,0x3d7,ctx->rdx + 0x10,"MOV dword ptr [RDX + 0x10],EAX",write other [TODO]
rdtgroup_schemata_write,0x3e2,ctx->rbx + 0x4e8,"MOV qword ptr [RBX + 0x4e8],RAX",write other [TODO]
rdtgroup_schemata_write,0x3f5,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_schemata_write,0x3fa,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
rdtgroup_schemata_write,0x40b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
resctrl_arch_get_config,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resctrl_arch_get_config,0x24,,RET,ret
resctrl_arch_get_config,0x36,,RET,ret
rdtgroup_schemata_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_schemata_show,0x19,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
rdtgroup_schemata_show,0x20,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_schemata_show,0x51,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
rdtgroup_schemata_show,0x6b,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ECX",write stack
rdtgroup_schemata_show,0x6e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EBX",write stack
rdtgroup_schemata_show,0x71,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
rdtgroup_schemata_show,0x77,ctx->r12,"MOV R12,qword ptr [R12]",write other [TODO]
rdtgroup_schemata_show,0xac,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_schemata_show,0xc5,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_schemata_show,0xee,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_schemata_show,0x109,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_schemata_show,0x111,0xffffffff8105cc90,CALL 0xffffffff8105cc90,direct call
rdtgroup_schemata_show,0x170,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_schemata_show,0x17f,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_schemata_show,0x195,,RET,ret
rdtgroup_schemata_show,0x1a0,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_schemata_show,0x1c8,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_schemata_show,0x1cd,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
rdtgroup_schemata_show,0x1e3,0xffffffff8105e580,CALL 0xffffffff8105e580,direct call
rdtgroup_schemata_show,0x1f5,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
mon_event_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mon_event_read,0xc,ctx->rdi,"MOV qword ptr [RDI],RCX",write other [TODO]
mon_event_read,0x14,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RSI",write other [TODO]
mon_event_read,0x1f,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RDX",write other [TODO]
mon_event_read,0x26,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],R8D",write other [TODO]
mon_event_read,0x2a,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],0x0",write other [TODO]
mon_event_read,0x3d,0xffffffff8116e800,CALL 0xffffffff8116e800,direct call
mon_event_read,0x43,,RET,ret
rdtgroup_mondata_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_mondata_show,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_mondata_show,0x2f,0xffffffff8105f670,CALL 0xffffffff8105f670,direct call
rdtgroup_mondata_show,0x75,0xffffffff8105cd60,CALL 0xffffffff8105cd60,direct call
rdtgroup_mondata_show,0xa3,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R15",write stack
rdtgroup_mondata_show,0xa7,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R13D",write stack
rdtgroup_mondata_show,0xab,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R14",write stack
rdtgroup_mondata_show,0xaf,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
rdtgroup_mondata_show,0xb3,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
rdtgroup_mondata_show,0xbb,ctx->rbp - 0x44,"MOV byte ptr [RBP + -0x44],0x0",write stack
rdtgroup_mondata_show,0xbf,0xffffffff8116e800,CALL 0xffffffff8116e800,direct call
rdtgroup_mondata_show,0xe2,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
rdtgroup_mondata_show,0xea,0xffffffff8105f6f0,CALL 0xffffffff8105f6f0,direct call
rdtgroup_mondata_show,0x10f,,RET,ret
rdtgroup_mondata_show,0x11d,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_mondata_show,0x139,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
rdtgroup_mondata_show,0x140,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__traceiter_pseudo_lock_mem_latency,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_pseudo_lock_mem_latency,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_pseudo_lock_mem_latency,0x37,,RET,ret
__traceiter_pseudo_lock_l2,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_pseudo_lock_l2,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_pseudo_lock_l2,0x41,,RET,ret
__traceiter_pseudo_lock_l3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_pseudo_lock_l3,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_pseudo_lock_l3,0x41,,RET,ret
pseudo_lock_dev_mremap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_dev_mremap,0xf,,RET,ret
perf_trace_pseudo_lock_mem_latency,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_pseudo_lock_mem_latency,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_pseudo_lock_mem_latency,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_pseudo_lock_mem_latency,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_pseudo_lock_mem_latency,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_pseudo_lock_mem_latency,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_pseudo_lock_mem_latency,0x91,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_pseudo_lock_mem_latency,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_pseudo_lock_mem_latency,0xb8,,RET,ret
perf_trace_pseudo_lock_mem_latency,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_pseudo_lock_l2,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_pseudo_lock_l2,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_pseudo_lock_l2,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_pseudo_lock_l2,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_pseudo_lock_l2,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_pseudo_lock_l2,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_pseudo_lock_l2,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_pseudo_lock_l2,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_pseudo_lock_l2,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_pseudo_lock_l2,0xc7,,RET,ret
perf_trace_pseudo_lock_l2,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_pseudo_lock_l3,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_pseudo_lock_l3,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_pseudo_lock_l3,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_pseudo_lock_l3,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_pseudo_lock_l3,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_pseudo_lock_l3,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_pseudo_lock_l3,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_pseudo_lock_l3,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_pseudo_lock_l3,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_pseudo_lock_l3,0xc7,,RET,ret
perf_trace_pseudo_lock_l3,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_pseudo_lock_mem_latency,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_pseudo_lock_mem_latency,0x34,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_pseudo_lock_mem_latency,0x3e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_pseudo_lock_mem_latency,0x45,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_pseudo_lock_mem_latency,0x61,,RET,ret
trace_event_raw_event_pseudo_lock_mem_latency,0x67,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_pseudo_lock_mem_latency,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_pseudo_lock_l2,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_pseudo_lock_l2,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_pseudo_lock_l2,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_pseudo_lock_l2,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_pseudo_lock_l2,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_pseudo_lock_l2,0x6e,,RET,ret
trace_event_raw_event_pseudo_lock_l2,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_pseudo_lock_l2,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_pseudo_lock_l3,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_pseudo_lock_l3,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_pseudo_lock_l3,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_pseudo_lock_l3,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_pseudo_lock_l3,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_pseudo_lock_l3,0x6e,,RET,ret
trace_event_raw_event_pseudo_lock_l3,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_pseudo_lock_l3,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_pseudo_lock_mem_latency,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_pseudo_lock_mem_latency,0x22,,RET,ret
trace_raw_output_pseudo_lock_mem_latency,0x32,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_pseudo_lock_mem_latency,0x3e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_pseudo_lock_mem_latency,0x47,,RET,ret
trace_raw_output_pseudo_lock_l2,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_pseudo_lock_l2,0x22,,RET,ret
trace_raw_output_pseudo_lock_l2,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_pseudo_lock_l2,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_pseudo_lock_l2,0x4c,,RET,ret
trace_raw_output_pseudo_lock_l3,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_pseudo_lock_l3,0x22,,RET,ret
trace_raw_output_pseudo_lock_l3,0x37,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_pseudo_lock_l3,0x43,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_pseudo_lock_l3,0x4c,,RET,ret
__bpf_trace_pseudo_lock_mem_latency,0x6,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_pseudo_lock_mem_latency,0xc,,RET,ret
__bpf_trace_pseudo_lock_l2,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_pseudo_lock_l2,0xa,,RET,ret
pseudo_lock_dev_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_dev_release,0x14,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pseudo_lock_dev_release,0x25,ctx->rbx + 0xc8,"MOV qword ptr [RBX + 0xc8],0x0",write other [TODO]
pseudo_lock_dev_release,0x3e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_release,0x4a,,RET,ret
pseudo_lock_dev_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_dev_open,0x19,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pseudo_lock_dev_open,0x66,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_open,0x77,ctx->rbx + 0xc8,"MOV qword ptr [RBX + 0xc8],RAX",write other [TODO]
pseudo_lock_dev_open,0x90,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_open,0x9b,,RET,ret
pseudo_lock_devnode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_devnode,0x17,ctx->wordctx->ptrctx->rsi,"MOV word ptr [RSI],DX",write other [TODO]
pseudo_lock_devnode,0x2d,0xffffffff815f9a70,CALL 0xffffffff815f9a70,direct call
pseudo_lock_devnode,0x33,,RET,ret
pseudo_lock_dev_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_dev_mmap,0x2a,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pseudo_lock_dev_mmap,0x60,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
pseudo_lock_dev_mmap,0x71,0xffffffff815f9d40,CALL 0xffffffff815f9d40,direct call
pseudo_lock_dev_mmap,0xd2,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
pseudo_lock_dev_mmap,0xeb,0xffffffff812cb1e0,CALL 0xffffffff812cb1e0,direct call
pseudo_lock_dev_mmap,0xf7,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],-0x7ddf2540",write other [TODO]
pseudo_lock_dev_mmap,0x106,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_mmap,0x118,,RET,ret
pseudo_lock_dev_mmap,0x148,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_mmap,0x15c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_mmap,0x170,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_dev_mmap,0x184,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdtgroup_locksetup_user_restore.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_locksetup_user_restore.part.0,0x1d,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_user_restore.part.0,0x33,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
rdtgroup_locksetup_user_restore.part.0,0x41,,RET,ret
rdtgroup_locksetup_user_restore.part.0,0x51,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_user_restore.part.0,0x75,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_user_restore.part.0,0x8d,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
rdtgroup_locksetup_user_restore.part.0,0x9c,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
__bpf_trace_pseudo_lock_l3,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_pseudo_lock_l3,0xa,,RET,ret
pseudo_lock_measure_trigger,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_measure_trigger,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pseudo_lock_measure_trigger,0x4b,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
pseudo_lock_measure_trigger,0x5a,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
pseudo_lock_measure_trigger,0x75,ctx->rbp + ctx->r14 * 0x1 - 0x50,"MOV byte ptr [RBP + R14*0x1 + -0x50],0x0",write stack
pseudo_lock_measure_trigger,0x7b,0xffffffff81608040,CALL 0xffffffff81608040,direct call
pseudo_lock_measure_trigger,0x9b,0xffffffff814dbd40,CALL 0xffffffff814dbd40,direct call
pseudo_lock_measure_trigger,0xb3,0xffffffff810a6120,CALL 0xffffffff810a6120,direct call
pseudo_lock_measure_trigger,0xbf,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pseudo_lock_measure_trigger,0xdf,ctx->r14 + 0x30,"MOV dword ptr [R14 + 0x30],0x0",write other [TODO]
pseudo_lock_measure_trigger,0xe7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
pseudo_lock_measure_trigger,0xf1,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
pseudo_lock_measure_trigger,0x109,ctx->r14 + 0x34,"MOV dword ptr [R14 + 0x34],R8D",write other [TODO]
pseudo_lock_measure_trigger,0x14e,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],R8D",write stack
pseudo_lock_measure_trigger,0x158,0xffffffff810cc630,CALL 0xffffffff810cc630,direct call
pseudo_lock_measure_trigger,0x17a,0xffffffff810cc980,CALL 0xffffffff810cc980,direct call
pseudo_lock_measure_trigger,0x182,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
pseudo_lock_measure_trigger,0x187,0xffffffff82000828,CALL 0xffffffff82000828,direct call
pseudo_lock_measure_trigger,0x19d,0xffffffff811040c0,CALL 0xffffffff811040c0,direct call
pseudo_lock_measure_trigger,0x1a9,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
pseudo_lock_measure_trigger,0x1ba,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
pseudo_lock_measure_trigger,0x1cd,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
pseudo_lock_measure_trigger,0x1d9,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_measure_trigger,0x1de,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
pseudo_lock_measure_trigger,0x1ea,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
pseudo_lock_measure_trigger,0x1f1,0xffffffff814dbd00,CALL 0xffffffff814dbd00,direct call
pseudo_lock_measure_trigger,0x222,,RET,ret
pseudo_lock_measure_trigger,0x234,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_measure_trigger,0x239,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
pseudo_lock_measure_trigger,0x26b,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],R8D",write stack
pseudo_lock_measure_trigger,0x275,0xffffffff810cc630,CALL 0xffffffff810cc630,direct call
pseudo_lock_measure_trigger,0x2ac,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],R8D",write stack
pseudo_lock_measure_trigger,0x2b6,0xffffffff810cc630,CALL 0xffffffff810cc630,direct call
pseudo_lock_measure_trigger,0x2e9,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_measure_trigger,0x2ee,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
pseudo_lock_measure_trigger,0x306,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pseudo_lock_measure_trigger,0x30b,0xffffffff810a6170,CALL 0xffffffff810a6170,direct call
pseudo_lock_measure_trigger,0x31c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pseudo_lock_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pseudo_lock_fn,0x18,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
pseudo_lock_fn,0xb5,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pseudo_lock_fn,0xbb,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
pseudo_lock_fn,0xc1,ctx->r12 + 0x30,"MOV dword ptr [R12 + 0x30],0x1",write other [TODO]
pseudo_lock_fn,0xdb,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
pseudo_lock_fn,0xe6,,RET,ret
measure_cycles_lat_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
measure_cycles_lat_fn,0x15,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
measure_cycles_lat_fn,0x23,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
measure_cycles_lat_fn,0x3e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
measure_cycles_lat_fn,0x85,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
measure_cycles_lat_fn,0x8b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
measure_cycles_lat_fn,0x91,ctx->r12 + 0x30,"MOV dword ptr [R12 + 0x30],0x1",write other [TODO]
measure_cycles_lat_fn,0xab,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
measure_cycles_lat_fn,0xbc,,RET,ret
measure_residency_fn.constprop.0.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
measure_residency_fn.constprop.0.isra.0,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
measure_residency_fn.constprop.0.isra.0,0x3c,0xffffffff81270060,CALL 0xffffffff81270060,direct call
measure_residency_fn.constprop.0.isra.0,0x61,0xffffffff81270060,CALL 0xffffffff81270060,direct call
measure_residency_fn.constprop.0.isra.0,0x75,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
measure_residency_fn.constprop.0.isra.0,0x86,0xffffffff8126ced0,CALL 0xffffffff8126ced0,direct call
measure_residency_fn.constprop.0.isra.0,0x8f,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
measure_residency_fn.constprop.0.isra.0,0x95,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
measure_residency_fn.constprop.0.isra.0,0xa2,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
measure_residency_fn.constprop.0.isra.0,0xad,0xffffffff81271070,CALL 0xffffffff81271070,direct call
measure_residency_fn.constprop.0.isra.0,0xb5,0xffffffff81271070,CALL 0xffffffff81271070,direct call
measure_residency_fn.constprop.0.isra.0,0xbe,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],R13",write other [TODO]
measure_residency_fn.constprop.0.isra.0,0xc2,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],RBX",write other [TODO]
measure_residency_fn.constprop.0.isra.0,0xc6,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
measure_residency_fn.constprop.0.isra.0,0xcd,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
measure_residency_fn.constprop.0.isra.0,0xf2,,RET,ret
measure_residency_fn.constprop.0.isra.0,0xfe,0xffffffff8126ced0,CALL 0xffffffff8126ced0,direct call
measure_residency_fn.constprop.0.isra.0,0x110,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
measure_residency_fn.constprop.0.isra.0,0x116,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
measure_residency_fn.constprop.0.isra.0,0x126,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
measure_residency_fn.constprop.0.isra.0,0x12d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
measure_residency_fn.constprop.0.isra.0,0x136,0xffffffff81007140,CALL 0xffffffff81007140,direct call
measure_residency_fn.constprop.0.isra.0,0x13e,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
measure_residency_fn.constprop.0.isra.0,0x141,0xffffffff81007140,CALL 0xffffffff81007140,direct call
measure_residency_fn.constprop.0.isra.0,0x150,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],ECX",write stack
measure_residency_fn.constprop.0.isra.0,0x153,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EBX",write stack
measure_residency_fn.constprop.0.isra.0,0x15c,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
measure_residency_fn.constprop.0.isra.0,0x166,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
measure_residency_fn.constprop.0.isra.0,0x16a,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
measure_residency_fn.constprop.0.isra.0,0x176,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
measure_residency_fn.constprop.0.isra.0,0x17c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
measure_residency_fn.constprop.0.isra.0,0x184,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
measure_residency_fn.constprop.0.isra.0,0x18a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
measure_residency_fn.constprop.0.isra.0,0x1b4,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
measure_residency_fn.constprop.0.isra.0,0x1c1,0xffffffff82e4b938,CALL qword ptr [0xffffffff82e4b938],in-direct call
measure_residency_fn.constprop.0.isra.0,0x1d9,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
measure_residency_fn.constprop.0.isra.0,0x1df,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
measure_residency_fn.constprop.0.isra.0,0x1ea,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
measure_residency_fn.constprop.0.isra.0,0x1f7,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
measure_residency_fn.constprop.0.isra.0,0x204,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
measure_residency_fn.constprop.0.isra.0,0x211,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
measure_residency_fn.constprop.0.isra.0,0x21e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
measure_l3_residency,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
measure_l3_residency,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
measure_l3_residency,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
measure_l3_residency,0x2f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
measure_l3_residency,0x37,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
measure_l3_residency,0x3f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
measure_l3_residency,0x59,ctx->rbx + 0x30,"MOV dword ptr [RBX + 0x30],0x1",write other [TODO]
measure_l3_residency,0x60,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
measure_l3_residency,0x7f,,RET,ret
measure_l3_residency,0x80,0xffffffff82e41d68,"MOV qword ptr [0xffffffff82e41d68],0x4f2e",write .data
measure_l3_residency,0x8f,0xffffffff82e41de8,"MOV qword ptr [0xffffffff82e41de8],0x412e",write .data
measure_l3_residency,0x9a,0xffffffff810643b0,CALL 0xffffffff810643b0,direct call
measure_l3_residency,0xb6,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
measure_l3_residency,0xc9,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RSI",write stack
measure_l3_residency,0x11e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
measure_l2_residency,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
measure_l2_residency,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
measure_l2_residency,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
measure_l2_residency,0x2f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
measure_l2_residency,0x37,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
measure_l2_residency,0x3f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
measure_l2_residency,0x5f,ctx->rbx + 0x30,"MOV dword ptr [RBX + 0x30],0x1",write other [TODO]
measure_l2_residency,0x66,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
measure_l2_residency,0x85,,RET,ret
measure_l2_residency,0x8d,0xffffffff82e41de8,"MOV qword ptr [0xffffffff82e41de8],0x10d1",write .data
measure_l2_residency,0x98,0xffffffff82e41d68,"MOV qword ptr [0xffffffff82e41d68],0x2d1",write .data
measure_l2_residency,0xa3,0xffffffff810643b0,CALL 0xffffffff810643b0,direct call
measure_l2_residency,0x108,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_locksetup_enter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_locksetup_enter,0x6a,0xffffffff8343bf50,"MOV qword ptr [0xffffffff8343bf50],0x0",write .data
rdtgroup_locksetup_enter,0x75,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x83,,RET,ret
rdtgroup_locksetup_enter,0x91,0xffffffff8343bf50,"MOV qword ptr [0xffffffff8343bf50],RAX",write .data
rdtgroup_locksetup_enter,0xac,0xffffffff8105e6e0,CALL 0xffffffff8105e6e0,direct call
rdtgroup_locksetup_enter,0xc4,ctx->rsi,"MOV RSI,RBX",write other [TODO]
rdtgroup_locksetup_enter,0xc7,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_locksetup_enter,0xdf,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
rdtgroup_locksetup_enter,0xf5,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x109,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
rdtgroup_locksetup_enter,0x120,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
rdtgroup_locksetup_enter,0x143,0xffffffff8105ea50,CALL 0xffffffff8105ea50,direct call
rdtgroup_locksetup_enter,0x161,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
rdtgroup_locksetup_enter,0x180,0xffffffff81103c70,CALL 0xffffffff81103c70,direct call
rdtgroup_locksetup_enter,0x189,ctx->r12 + 0x460,"MOV qword ptr [R12 + 0x460],RBX",write other [TODO]
rdtgroup_locksetup_enter,0x199,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
rdtgroup_locksetup_enter,0x19d,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
rdtgroup_locksetup_enter,0x1a1,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
rdtgroup_locksetup_enter,0x1af,,RET,ret
rdtgroup_locksetup_enter,0x1bd,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x1d1,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_enter,0x1e1,0xffffffff81063dc0,CALL 0xffffffff81063dc0,direct call
rdtgroup_locksetup_enter,0x1ef,,RET,ret
rdtgroup_locksetup_enter,0x1ff,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_enter,0x213,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_enter,0x227,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_enter,0x248,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x25f,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x276,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x28d,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_enter,0x2a4,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_locksetup_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_locksetup_exit,0x1a,0xffffffff81061e10,CALL 0xffffffff81061e10,direct call
rdtgroup_locksetup_exit,0x2a,ctx->rbx + 0x450,"MOV dword ptr [RBX + 0x450],EAX",write other [TODO]
rdtgroup_locksetup_exit,0x3f,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_locksetup_exit,0x51,0xffffffff81061fd0,CALL 0xffffffff81061fd0,direct call
rdtgroup_locksetup_exit,0x5f,,RET,ret
rdtgroup_locksetup_exit,0x63,0xffffffff81063dc0,CALL 0xffffffff81063dc0,direct call
rdtgroup_locksetup_exit,0x76,ctx->r13 + 0x38,"MOV qword ptr [R13 + 0x38],0x0",write other [TODO]
rdtgroup_locksetup_exit,0x82,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_locksetup_exit,0x8b,ctx->r13 + 0x40,"MOV qword ptr [R13 + 0x40],0x0",write other [TODO]
rdtgroup_locksetup_exit,0x93,ctx->r13,"MOV qword ptr [R13],0x0",write other [TODO]
rdtgroup_locksetup_exit,0xa0,ctx->rax + 0x4e8,"MOV qword ptr [RAX + 0x4e8],0x0",write other [TODO]
rdtgroup_locksetup_exit,0xab,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],0x0",write other [TODO]
rdtgroup_locksetup_exit,0xb3,ctx->r13 + 0x10,"MOV dword ptr [R13 + 0x10],0x0",write other [TODO]
rdtgroup_locksetup_exit,0xbb,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],0x0",write other [TODO]
rdtgroup_locksetup_exit,0xca,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_locksetup_exit,0xcf,ctx->rbx + 0x460,"MOV qword ptr [RBX + 0x460],0x0",write other [TODO]
rdtgroup_locksetup_exit,0xe3,,RET,ret
rdtgroup_locksetup_exit,0xeb,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_cbm_overlaps_pseudo_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_cbm_overlaps_pseudo_locked,0x14,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RSI",write stack
rdtgroup_cbm_overlaps_pseudo_locked,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
rdtgroup_cbm_overlaps_pseudo_locked,0x45,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
rdtgroup_cbm_overlaps_pseudo_locked,0x49,0xffffffff815f9ce0,CALL 0xffffffff815f9ce0,direct call
rdtgroup_cbm_overlaps_pseudo_locked,0x5e,,RET,ret
rdtgroup_cbm_overlaps_pseudo_locked,0x5f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_pseudo_locked_in_hierarchy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_pseudo_locked_in_hierarchy,0x34,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
rdtgroup_pseudo_locked_in_hierarchy,0x3a,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
rdtgroup_pseudo_locked_in_hierarchy,0x81,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x30]",write other [TODO]
rdtgroup_pseudo_locked_in_hierarchy,0x85,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_pseudo_locked_in_hierarchy,0x92,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
rdtgroup_pseudo_locked_in_hierarchy,0x97,ctx->rbx,"MOV RBX,qword ptr [RBX]",write other [TODO]
rdtgroup_pseudo_locked_in_hierarchy,0xaf,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_pseudo_locked_in_hierarchy,0xbd,0xffffffff815f9ce0,CALL 0xffffffff815f9ce0,direct call
rdtgroup_pseudo_locked_in_hierarchy,0xc9,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
rdtgroup_pseudo_locked_in_hierarchy,0xec,,RET,ret
rdtgroup_pseudo_locked_in_hierarchy,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_pseudo_lock_create,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_pseudo_lock_create,0x16,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDI",write stack
rdtgroup_pseudo_lock_create,0x1a,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_pseudo_lock_create,0x30,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_pseudo_lock_create,0x3f,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
rdtgroup_pseudo_lock_create,0x44,ctx->r12 + 0x34,"MOV dword ptr [R12 + 0x34],EAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x5e,0xffffffff818025f0,CALL 0xffffffff818025f0,direct call
rdtgroup_pseudo_lock_create,0x78,0xffffffff8105e9b0,CALL 0xffffffff8105e9b0,direct call
rdtgroup_pseudo_lock_create,0x7f,ctx->r12 + 0x3c,"MOV dword ptr [R12 + 0x3c],EDI",write other [TODO]
rdtgroup_pseudo_lock_create,0xca,ctx->r12 + 0x38,"MOV dword ptr [R12 + 0x38],EAX",write other [TODO]
rdtgroup_pseudo_lock_create,0xe8,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_pseudo_lock_create,0xed,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0xfb,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_create,0x105,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x10e,ctx->r12,"MOV qword ptr [R12],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x11b,ctx->rax + 0x4e8,"MOV qword ptr [RAX + 0x4e8],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x126,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x12f,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x138,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x165,,RET,ret
rdtgroup_pseudo_lock_create,0x16b,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
rdtgroup_pseudo_lock_create,0x170,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x198,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
rdtgroup_pseudo_lock_create,0x1ac,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
rdtgroup_pseudo_lock_create,0x1c2,0xffffffff81807400,CALL 0xffffffff81807400,direct call
rdtgroup_pseudo_lock_create,0x1d7,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R15",write other [TODO]
rdtgroup_pseudo_lock_create,0x1db,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x1de,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R14",write other [TODO]
rdtgroup_pseudo_lock_create,0x1e2,ctx->r12 + 0x58,"MOV qword ptr [R12 + 0x58],R15",write other [TODO]
rdtgroup_pseudo_lock_create,0x1ec,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
rdtgroup_pseudo_lock_create,0x1f9,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
rdtgroup_pseudo_lock_create,0x219,ctx->r12 + 0x30,"MOV dword ptr [R12 + 0x30],0x0",write other [TODO]
rdtgroup_pseudo_lock_create,0x245,0xffffffff810cc630,CALL 0xffffffff810cc630,direct call
rdtgroup_pseudo_lock_create,0x261,0xffffffff810cc980,CALL 0xffffffff810cc980,direct call
rdtgroup_pseudo_lock_create,0x269,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
rdtgroup_pseudo_lock_create,0x26e,0xffffffff82000828,CALL 0xffffffff82000828,direct call
rdtgroup_pseudo_lock_create,0x286,0xffffffff811040c0,CALL 0xffffffff811040c0,direct call
rdtgroup_pseudo_lock_create,0x296,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
rdtgroup_pseudo_lock_create,0x2a7,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
rdtgroup_pseudo_lock_create,0x2bb,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
rdtgroup_pseudo_lock_create,0x2e0,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_pseudo_lock_create,0x2ef,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
rdtgroup_pseudo_lock_create,0x30d,0xffffffff818071f0,CALL 0xffffffff818071f0,direct call
rdtgroup_pseudo_lock_create,0x31c,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x320,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
rdtgroup_pseudo_lock_create,0x32d,ctx->r14,"MOV qword ptr [R14],R15",write other [TODO]
rdtgroup_pseudo_lock_create,0x330,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x337,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_create,0x35c,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_pseudo_lock_create,0x373,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_pseudo_lock_create,0x387,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_pseudo_lock_create,0x38f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_create,0x3b0,0xffffffff818071f0,CALL 0xffffffff818071f0,direct call
rdtgroup_pseudo_lock_create,0x3c0,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x3c4,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
rdtgroup_pseudo_lock_create,0x3d1,ctx->r13,"MOV qword ptr [R13],R15",write other [TODO]
rdtgroup_pseudo_lock_create,0x3d5,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x3dc,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_create,0x412,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
rdtgroup_pseudo_lock_create,0x437,0xffffffff814dae60,CALL 0xffffffff814dae60,direct call
rdtgroup_pseudo_lock_create,0x43c,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
rdtgroup_pseudo_lock_create,0x473,0xffffffff814db330,CALL 0xffffffff814db330,direct call
rdtgroup_pseudo_lock_create,0x49e,0xffffffff817f59a0,CALL 0xffffffff817f59a0,direct call
rdtgroup_pseudo_lock_create,0x4ad,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
rdtgroup_pseudo_lock_create,0x4cc,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
rdtgroup_pseudo_lock_create,0x4ed,0xffffffff817f28c0,CALL 0xffffffff817f28c0,direct call
rdtgroup_pseudo_lock_create,0x4f9,0xffffffff814da740,CALL 0xffffffff814da740,direct call
rdtgroup_pseudo_lock_create,0x51d,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_pseudo_lock_create,0x527,ctx->r12 + 0x48,"MOV dword ptr [R12 + 0x48],EBX",write other [TODO]
rdtgroup_pseudo_lock_create,0x530,ctx->rbx + 0x458,"MOV dword ptr [RBX + 0x458],0x3",write other [TODO]
rdtgroup_pseudo_lock_create,0x53d,0xffffffff8105e670,CALL 0xffffffff8105e670,direct call
rdtgroup_pseudo_lock_create,0x551,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_pseudo_lock_create,0x565,0xffffffff8105eb20,CALL 0xffffffff8105eb20,direct call
rdtgroup_pseudo_lock_create,0x579,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_pseudo_lock_create,0x58d,0xffffffff8105e5d0,CALL 0xffffffff8105e5d0,direct call
rdtgroup_pseudo_lock_create,0x5aa,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_pseudo_lock_create,0x5c1,0xffffffff8105e5b0,CALL 0xffffffff8105e5b0,direct call
rdtgroup_pseudo_lock_create,0x5cb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
rdtgroup_pseudo_lock_remove,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdtgroup_pseudo_lock_remove,0x27,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
rdtgroup_pseudo_lock_remove,0x3d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
rdtgroup_pseudo_lock_remove,0x65,0xffffffff818071f0,CALL 0xffffffff818071f0,direct call
rdtgroup_pseudo_lock_remove,0x74,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
rdtgroup_pseudo_lock_remove,0x78,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
rdtgroup_pseudo_lock_remove,0x7b,ctx->r15,"MOV qword ptr [R15],R14",write other [TODO]
rdtgroup_pseudo_lock_remove,0x7e,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R13",write other [TODO]
rdtgroup_pseudo_lock_remove,0x85,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_remove,0x9f,0xffffffff814da740,CALL 0xffffffff814da740,direct call
rdtgroup_pseudo_lock_remove,0xbc,0xffffffff817f28c0,CALL 0xffffffff817f28c0,direct call
rdtgroup_pseudo_lock_remove,0xd4,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0xe2,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_remove,0xec,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0xf5,ctx->r12,"MOV qword ptr [R12],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0x102,ctx->rax + 0x4e8,"MOV qword ptr [RAX + 0x4e8],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0x10d,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0x116,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0x11f,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0x12f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rdtgroup_pseudo_lock_remove,0x134,ctx->rbx + 0x460,"MOV qword ptr [RBX + 0x460],0x0",write other [TODO]
rdtgroup_pseudo_lock_remove,0x14d,,RET,ret
rdtgroup_pseudo_lock_remove,0x151,0xffffffff8105e670,CALL 0xffffffff8105e670,direct call
rdt_pseudo_lock_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_pseudo_lock_init,0x24,0xffffffff8136a2b0,CALL 0xffffffff8136a2b0,direct call
rdt_pseudo_lock_init,0x3d,0xffffffff8343bf48,"MOV dword ptr [0xffffffff8343bf48],EAX",write .data
rdt_pseudo_lock_init,0x43,0xffffffff817fae20,CALL 0xffffffff817fae20,direct call
rdt_pseudo_lock_init,0x48,0xffffffff8343bf40,"MOV qword ptr [0xffffffff8343bf40],RAX",write .data
rdt_pseudo_lock_init,0x57,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],-0x7ef9c420",write other [TODO]
rdt_pseudo_lock_init,0x62,,RET,ret
rdt_pseudo_lock_init,0x70,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],EAX",write stack
rdt_pseudo_lock_init,0x7a,0xffffffff8136a4a0,CALL 0xffffffff8136a4a0,direct call
rdt_pseudo_lock_init,0x83,,RET,ret
rdt_pseudo_lock_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rdt_pseudo_lock_release,0x10,0xffffffff817faaa0,CALL 0xffffffff817faaa0,direct call
rdt_pseudo_lock_release,0x24,0xffffffff8343bf40,"MOV qword ptr [0xffffffff8343bf40],0x0",write .data
rdt_pseudo_lock_release,0x34,0xffffffff8136a4a0,CALL 0xffffffff8136a4a0,direct call
rdt_pseudo_lock_release,0x3a,0xffffffff8343bf48,"MOV dword ptr [0xffffffff8343bf48],0x0",write .data
rdt_pseudo_lock_release,0x44,,RET,ret
sgx_compat_ioctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_compat_ioctl,0x9,0xffffffff810687a0,CALL 0xffffffff810687a0,direct call
sgx_compat_ioctl,0xf,,RET,ret
sgx_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_mmap,0x24,0xffffffff81065a30,CALL 0xffffffff81065a30,direct call
sgx_mmap,0x31,,RET,ret
sgx_mmap,0x39,0xffffffff81065c90,CALL 0xffffffff81065c90,direct call
sgx_mmap,0x42,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],R12",write other [TODO]
sgx_mmap,0x4e,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],-0x7ddf2220",write other [TODO]
sgx_mmap,0x5a,,RET,ret
sgx_get_unmapped_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_get_unmapped_area,0x31,ctx->r9 + 0x18,CALL qword ptr [R9 + 0x18],in-direct call
sgx_get_unmapped_area,0x36,,RET,ret
sgx_get_unmapped_area,0x37,,RET,ret
sgx_get_unmapped_area,0x3f,,RET,ret
sgx_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_open,0x24,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_open,0x32,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],0x0",write other [TODO]
sgx_open,0x48,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],0x0",write other [TODO]
sgx_open,0x57,ctx->rax + 0x490,"MOV dword ptr [RAX + 0x490],0x1",write other [TODO]
sgx_open,0x61,0xffffffff81112440,CALL 0xffffffff81112440,direct call
sgx_open,0x6e,ctx->r12 + 0x4c0,"MOV dword ptr [R12 + 0x4c0],0x0",write other [TODO]
sgx_open,0x82,ctx->r12 + 0x498,"MOV qword ptr [R12 + 0x498],RAX",write other [TODO]
sgx_open,0x8a,ctx->r12 + 0x4a0,"MOV qword ptr [R12 + 0x4a0],RAX",write other [TODO]
sgx_open,0x9a,ctx->r12 + 0x4b0,"MOV qword ptr [R12 + 0x4b0],RAX",write other [TODO]
sgx_open,0xa2,ctx->r12 + 0x4b8,"MOV qword ptr [R12 + 0x4b8],RAX",write other [TODO]
sgx_open,0xaa,0xffffffff81135020,CALL 0xffffffff81135020,direct call
sgx_open,0xb3,ctx->rbx + 0xc8,"MOV qword ptr [RBX + 0xc8],R12",write other [TODO]
sgx_open,0xc2,,RET,ret
sgx_open,0xc6,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
sgx_open,0xc9,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_open,0xd9,,RET,ret
sgx_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_release,0x2b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sgx_release,0x39,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_release,0x6a,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
sgx_release,0x6e,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
sgx_release,0x71,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
sgx_release,0x75,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_release,0x86,0xffffffff81135660,CALL 0xffffffff81135660,direct call
sgx_release,0x93,0xffffffff81319480,CALL 0xffffffff81319480,direct call
sgx_release,0x9b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_release,0xbc,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_release,0xc9,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_release,0xf4,,RET,ret
sgx_release,0xf8,0xffffffff810674b0,CALL 0xffffffff810674b0,direct call
sgx_release,0x105,0xffffffff810674b0,CALL 0xffffffff810674b0,direct call
sgx_release,0x114,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_encl_test_and_clear_young_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_test_and_clear_young_cb,0x1f,,RET,ret
sgx_encl_test_and_clear_young_cb,0x24,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
sgx_encl_test_and_clear_young_cb,0x32,,RET,ret
sgx_mmu_notifier_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_mmu_notifier_release,0x20,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_mmu_notifier_release,0x5c,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_mmu_notifier_release,0x60,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_mmu_notifier_release,0x6d,ctx->r13 - 0x8,"MOV qword ptr [R13 + -0x8],RAX",write other [TODO]
sgx_mmu_notifier_release,0x7c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_mmu_notifier_release,0x8c,0xffffffff81135660,CALL 0xffffffff81135660,direct call
sgx_mmu_notifier_release,0x94,0xffffffff81318ff0,CALL 0xffffffff81318ff0,direct call
sgx_mmu_notifier_release,0x9f,,RET,ret
sgx_mmu_notifier_release,0xa7,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_mmu_notifier_release,0xb7,,RET,ret
__sgx_encl_get_backing,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_encl_get_backing,0x3a,0xffffffff812a4de0,CALL 0xffffffff812a4de0,direct call
__sgx_encl_get_backing,0x62,0xffffffff812a4de0,CALL 0xffffffff812a4de0,direct call
__sgx_encl_get_backing,0x79,ctx->rbx,"MOV qword ptr [RBX],R12",write other [TODO]
__sgx_encl_get_backing,0x7c,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],R14",write other [TODO]
__sgx_encl_get_backing,0x80,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
__sgx_encl_get_backing,0x8e,,RET,ret
__sgx_encl_get_backing,0xf4,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_encl_may_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_may_map,0x29,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
sgx_encl_may_map,0x33,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
sgx_encl_may_map,0x3a,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
sgx_encl_may_map,0x45,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x3",write stack
sgx_encl_may_map,0x4d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
sgx_encl_may_map,0x55,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
sgx_encl_may_map,0x5d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
sgx_encl_may_map,0x65,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
sgx_encl_may_map,0xb0,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_encl_may_map,0xb9,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_encl_may_map,0xc5,0xffffffff81c87290,CALL 0xffffffff81c87290,direct call
sgx_encl_may_map,0xdf,0xffffffff81c87290,CALL 0xffffffff81c87290,direct call
sgx_encl_may_map,0x17a,ctx->rbp - 0x4e,"MOV byte ptr [RBP + -0x4e],DL",write stack
sgx_encl_may_map,0x17d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
sgx_encl_may_map,0x1a3,ctx->rbp - 0x4e,"MOV byte ptr [RBP + -0x4e],DL",write stack
sgx_encl_may_map,0x1a6,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
sgx_encl_may_map,0x1b3,0xffffffff81c86480,CALL 0xffffffff81c86480,direct call
sgx_encl_may_map,0x1b8,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x60]",write other [TODO]
sgx_encl_may_map,0x1bc,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_encl_may_map,0x1c4,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_encl_may_map,0x1c9,0xffffffff82000820,CALL 0xffffffff82000820,direct call
sgx_encl_may_map,0x1d1,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_encl_may_map,0x1da,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_encl_may_map,0x1ed,ctx->rbp - 0x4e,"MOV byte ptr [RBP + -0x4e],0x3f",write stack
sgx_encl_may_map,0x1f1,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
sgx_encl_may_map,0x1fd,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x60]",write other [TODO]
sgx_encl_may_map,0x201,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_encl_may_map,0x209,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_encl_may_map,0x22c,,RET,ret
sgx_encl_may_map,0x235,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_vma_mprotect,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vma_mprotect,0xd,0xffffffff81065a30,CALL 0xffffffff81065a30,direct call
sgx_vma_mprotect,0x13,,RET,ret
sgx_encl_mm_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_mm_add,0x29,0xffffffff81134450,CALL 0xffffffff81134450,direct call
sgx_encl_mm_add,0x64,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_encl_mm_add,0x7e,,RET,ret
sgx_encl_mm_add,0x8e,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_encl_mm_add,0xa4,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_encl_mm_add,0xdd,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R12",write other [TODO]
sgx_encl_mm_add,0xe8,ctx->r15,"MOV qword ptr [R15],R14",write other [TODO]
sgx_encl_mm_add,0xeb,ctx->r15 + 0x30,"MOV qword ptr [R15 + 0x30],-0x7ddf2280",write other [TODO]
sgx_encl_mm_add,0xf3,0xffffffff81319090,CALL 0xffffffff81319090,direct call
sgx_encl_mm_add,0x109,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_encl_mm_add,0x115,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],R13",write other [TODO]
sgx_encl_mm_add,0x11d,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],RAX",write other [TODO]
sgx_encl_mm_add,0x121,ctx->r14 + 0x4b0,"MOV qword ptr [R14 + 0x4b0],RDX",write other [TODO]
sgx_encl_mm_add,0x128,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
sgx_encl_mm_add,0x137,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_encl_mm_add,0x149,,RET,ret
sgx_encl_mm_add,0x154,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_mm_add,0x163,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_encl_mm_add,0x172,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_vma_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vma_open,0x1a,0xffffffff81065c90,CALL 0xffffffff81065c90,direct call
sgx_vma_open,0x23,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],0x0",write other [TODO]
sgx_vma_open,0x30,,RET,ret
sgx_encl_cpumask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_cpumask,0x41,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
sgx_encl_cpumask,0x49,0xffffffff81134450,CALL 0xffffffff81134450,direct call
sgx_encl_cpumask,0x76,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
sgx_encl_cpumask,0x89,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
sgx_encl_cpumask,0x92,0xffffffff810a0c90,CALL 0xffffffff810a0c90,direct call
sgx_encl_cpumask,0xb3,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_encl_cpumask,0xc5,,RET,ret
sgx_encl_alloc_backing,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_alloc_backing,0x1f,0xffffffff81069510,CALL 0xffffffff81069510,direct call
sgx_encl_alloc_backing,0x37,0xffffffff81134450,CALL 0xffffffff81134450,direct call
sgx_encl_alloc_backing,0x80,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],R8D",write stack
sgx_encl_alloc_backing,0x84,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
sgx_encl_alloc_backing,0x88,0xffffffff81345340,CALL 0xffffffff81345340,direct call
sgx_encl_alloc_backing,0x98,0xffffffff810a0c90,CALL 0xffffffff810a0c90,direct call
sgx_encl_alloc_backing,0xb4,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_encl_alloc_backing,0xdc,ctx->gs + 0x2dda0,"MOV qword ptr GS:[0x2dda0],RBX",write other [TODO]
sgx_encl_alloc_backing,0xed,0xffffffff81065920,CALL 0xffffffff81065920,direct call
sgx_encl_alloc_backing,0x10b,ctx->gs + 0x2dda0,"MOV qword ptr GS:[0x2dda0],R15",write other [TODO]
sgx_encl_alloc_backing,0x133,,RET,ret
sgx_encl_alloc_backing,0x160,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_encl_alloc_backing,0x167,0xffffffff81345340,CALL 0xffffffff81345340,direct call
sgx_encl_alloc_backing,0x17d,ctx->rax + 0x13e8,"MOV qword ptr [RAX + 0x13e8],R15",write other [TODO]
sgx_encl_alloc_backing,0x196,ctx->rax + 0x13e8,"MOV qword ptr [RAX + 0x13e8],RBX",write other [TODO]
sgx_encl_alloc_backing,0x1b2,0xffffffff81345340,CALL 0xffffffff81345340,direct call
sgx_encl_alloc_backing,0x1bf,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
sgx_encl_alloc_backing,0x1d0,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
sgx_encl_alloc_backing,0x1f4,ctx->rax + 0x8,CALL qword ptr [RAX + 0x8],in-direct call
sgx_encl_put_backing,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_put_backing,0x54,,RET,ret
sgx_encl_put_backing,0xfd,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_encl_put_backing,0x11a,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_encl_put_backing,0x124,,RET,ret
sgx_encl_test_and_clear_young,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_test_and_clear_young,0x1d,0xffffffff81c6fb50,CALL 0xffffffff81c6fb50,direct call
sgx_encl_test_and_clear_young,0x41,,RET,ret
sgx_encl_test_and_clear_young,0x58,0xffffffff812cac70,CALL 0xffffffff812cac70,direct call
sgx_encl_test_and_clear_young,0x6e,,RET,ret
sgx_encl_page_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_page_alloc,0x28,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_encl_page_alloc,0x3f,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],R13",write other [TODO]
sgx_encl_page_alloc,0x46,ctx->rax,"MOV qword ptr [RAX],R12",write other [TODO]
sgx_encl_page_alloc,0x5b,ctx->rax + 0x8,"MOV byte ptr [RAX + 0x8],DL",write other [TODO]
sgx_encl_page_alloc,0x64,,RET,ret
sgx_zap_enclave_ptes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_zap_enclave_ptes,0x2a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
sgx_zap_enclave_ptes,0x35,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
sgx_zap_enclave_ptes,0x3d,0xffffffff81134450,CALL 0xffffffff81134450,direct call
sgx_zap_enclave_ptes,0x42,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
sgx_zap_enclave_ptes,0x77,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
sgx_zap_enclave_ptes,0x85,0xffffffff81c6fb50,CALL 0xffffffff81c6fb50,direct call
sgx_zap_enclave_ptes,0xad,0xffffffff81113020,CALL 0xffffffff81113020,direct call
sgx_zap_enclave_ptes,0xb6,0xffffffff810a0c90,CALL 0xffffffff810a0c90,direct call
sgx_zap_enclave_ptes,0xd8,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_zap_enclave_ptes,0xf8,,RET,ret
sgx_zap_enclave_ptes,0x138,0xffffffff812c69f0,CALL 0xffffffff812c69f0,direct call
sgx_zap_enclave_ptes,0x142,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
sgx_alloc_va_slot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_alloc_va_slot,0x16,0xffffffff81601d90,CALL 0xffffffff81601d90,direct call
sgx_alloc_va_slot,0x32,,RET,ret
sgx_free_va_slot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_free_va_slot,0x13,,RET,ret
sgx_va_page_full,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_va_page_full,0x12,0xffffffff81601d90,CALL 0xffffffff81601d90,direct call
sgx_va_page_full,0x20,,RET,ret
sgx_encl_free_epc_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_free_epc_page,0x3a,0xffffffff810696b0,CALL 0xffffffff810696b0,direct call
sgx_encl_free_epc_page,0x40,,RET,ret
sgx_encl_free_epc_page,0x59,0xffffffff830c7bfa,"MOV byte ptr [0xffffffff830c7bfa],0x1",write .data
sgx_encl_free_epc_page,0x60,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_encl_eldu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_eldu,0x2e,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RAX",write stack
sgx_encl_eldu,0x39,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
sgx_encl_eldu,0x42,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
sgx_encl_eldu,0x47,0xffffffff81069d20,CALL 0xffffffff81069d20,direct call
sgx_encl_eldu,0x6b,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],R11",write stack
sgx_encl_eldu,0x73,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RDX",write stack
sgx_encl_eldu,0x86,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RCX",write stack
sgx_encl_eldu,0x97,0xffffffff81065920,CALL 0xffffffff81065920,direct call
sgx_encl_eldu,0x9c,ctx->rsp + 0x44,"MOV dword ptr [RSP + 0x44],EAX",write stack
sgx_encl_eldu,0xa7,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_eldu,0xd9,,RET,ret
sgx_encl_eldu,0xea,ctx->rsp + 0x60,"MOV qword ptr [RSP + 0x60],RAX",write stack
sgx_encl_eldu,0x11f,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],RAX",write stack
sgx_encl_eldu,0x155,ctx->rsp + 0x70,"MOV qword ptr [RSP + 0x70],RAX",write stack
sgx_encl_eldu,0x180,ctx->rsp + 0x78,"MOV qword ptr [RSP + 0x78],RAX",write stack
sgx_encl_eldu,0x1e3,ctx->rsp + 0x44,"MOV dword ptr [RSP + 0x44],EAX",write stack
sgx_encl_eldu,0x1fd,ctx->rsp + 0x44,"MOV dword ptr [RSP + 0x44],0xfffffff2",write stack
sgx_encl_eldu,0x213,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],R10",write stack
sgx_encl_eldu,0x21e,ctx->rcx,"MOV qword ptr [RCX],0x0",write other [TODO]
sgx_encl_eldu,0x229,ctx->rcx + 0x78,"MOV qword ptr [RCX + 0x78],0x0",write other [TODO]
sgx_encl_eldu,0x242,0xffffffff81291870,CALL 0xffffffff81291870,direct call
sgx_encl_eldu,0x253,0xffffffff81c7fcd0,CALL 0xffffffff81c7fcd0,direct call
sgx_encl_eldu,0x316,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
sgx_encl_eldu,0x31b,0xffffffff812a5e80,CALL 0xffffffff812a5e80,direct call
sgx_encl_eldu,0x36d,0xffffffff810664d0,CALL 0xffffffff810664d0,direct call
sgx_encl_eldu,0x387,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RCX",write other [TODO]
sgx_encl_eldu,0x38b,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
sgx_encl_eldu,0x395,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
sgx_encl_eldu,0x399,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RCX",write other [TODO]
sgx_encl_eldu,0x3a4,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RCX",write other [TODO]
sgx_encl_eldu,0x3a8,ctx->rbx + 0x498,"MOV qword ptr [RBX + 0x498],RDX",write other [TODO]
sgx_encl_eldu,0x3af,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],R12",write other [TODO]
sgx_encl_eldu,0x512,ctx->rsp + 0x44,"MOV dword ptr [RSP + 0x44],0xfffffff2",write stack
sgx_encl_eldu,0x543,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
sgx_encl_eldu,0x54c,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
sgx_encl_eldu,0x55f,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
sgx_encl_eldu,0x5c0,0xffffffff812a5e80,CALL 0xffffffff812a5e80,direct call
sgx_encl_eldu,0x5fe,0xffffffff81c7fcd0,CALL 0xffffffff81c7fcd0,direct call
sgx_encl_eldu,0x629,0xffffffff82000810,CALL 0xffffffff82000810,direct call
sgx_encl_eldu,0x633,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_encl_eldu,0x63d,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_encl_eldu,0x647,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_encl_eldu,0x65c,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],R10",write stack
sgx_encl_eldu,0x668,0xffffffff830c7bfc,"MOV byte ptr [0xffffffff830c7bfc],0x1",write .data
sgx_encl_eldu,0x66f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_encl_eldu,0x692,0xffffffff82000810,CALL 0xffffffff82000810,direct call
sgx_encl_eldu,0x69c,0xffffffff82000810,CALL 0xffffffff82000810,direct call
sgx_encl_eldu,0x6b8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__sgx_encl_load_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_encl_load_page,0x28,,RET,ret
__sgx_encl_load_page,0x38,0xffffffff81066590,CALL 0xffffffff81066590,direct call
__sgx_encl_load_page,0x4f,0xffffffff810695d0,CALL 0xffffffff810695d0,direct call
__sgx_encl_load_page,0x5b,,RET,ret
__sgx_encl_load_page,0x60,0xffffffff81066590,CALL 0xffffffff81066590,direct call
sgx_encl_load_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_load_page,0x16,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
sgx_encl_load_page,0x2d,0xffffffff81066c60,CALL 0xffffffff81066c60,direct call
sgx_encl_load_page,0x37,,RET,ret
sgx_vma_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vma_access,0x16,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
sgx_vma_access,0x1e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
sgx_vma_access,0x22,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
sgx_vma_access,0x26,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],ECX",write stack
sgx_vma_access,0x29,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],R8D",write stack
sgx_vma_access,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sgx_vma_access,0x3c,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDX",write stack
sgx_vma_access,0x55,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
sgx_vma_access,0x6c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
sgx_vma_access,0x7a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R14",write stack
sgx_vma_access,0x90,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_vma_access,0x9b,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
sgx_vma_access,0xb7,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0xbc,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0xfffffff2",write stack
sgx_vma_access,0xe7,,RET,ret
sgx_vma_access,0xeb,0xffffffff81066c60,CALL 0xffffffff81066c60,direct call
sgx_vma_access,0xf9,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0x151,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0x156,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0xfffffffb",write stack
sgx_vma_access,0x16e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
sgx_vma_access,0x1f9,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0x22d,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0x23f,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
sgx_vma_access,0x247,ctx->rdi + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RDI + RAX*0x1 + -0x8],RDX",write other [TODO]
sgx_vma_access,0x26c,ctx->rsi + ctx->rdx * 0x1,"MOV qword ptr [RSI + RDX*0x1],RDI",write other [TODO]
sgx_vma_access,0x27c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0x289,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
sgx_vma_access,0x291,ctx->rcx + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RCX + RAX*0x1 + -0x8],RSI",write other [TODO]
sgx_vma_access,0x2bf,ctx->rsi + ctx->rax * 0x1,"MOV qword ptr [RSI + RAX*0x1],R8",write other [TODO]
sgx_vma_access,0x2d4,ctx->rdi,"MOV byte ptr [RDI],DL",write other [TODO]
sgx_vma_access,0x2e3,ctx->wordctx->ptrctx->rdi + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDI + RAX*0x1 + -0x2],DX",write other [TODO]
sgx_vma_access,0x2f0,ctx->rcx,"MOV byte ptr [RCX],SIL",write other [TODO]
sgx_vma_access,0x300,ctx->wordctx->ptrctx->rcx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RCX + RAX*0x1 + -0x2],SI",write other [TODO]
sgx_vma_access,0x30d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
sgx_vma_access,0x311,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vma_access,0x322,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
sgx_vma_access,0x32c,ctx->rdi,"MOV dword ptr [RDI],EDX",write other [TODO]
sgx_vma_access,0x332,ctx->rdi + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDI + RAX*0x1 + -0x4],EDX",write other [TODO]
sgx_vma_access,0x33d,ctx->rcx,"MOV dword ptr [RCX],ESI",write other [TODO]
sgx_vma_access,0x343,ctx->rcx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RCX + RAX*0x1 + -0x4],ESI",write other [TODO]
sgx_vma_access,0x34c,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
sgx_vma_access,0x358,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_vma_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vma_fault,0x2a,ctx->rsp + 0x58,"MOV qword ptr [RSP + 0x58],RAX",write stack
FUN_ffffffff81067196,-0x63,0xffffffff81066c60,CALL 0xffffffff81066c60,direct call
FUN_ffffffff81067196,-0x25,0xffffffff812cce20,CALL 0xffffffff812cce20,direct call
FUN_ffffffff81067196,-0xf,0xffffffff81066260,CALL 0xffffffff81066260,direct call
FUN_ffffffff81067196,-0x7,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
FUN_ffffffff81067196,0x7,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
FUN_ffffffff81067196,0x1c,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
FUN_ffffffff81067196,0x3f,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
FUN_ffffffff81067196,0x6d,,RET,ret
FUN_ffffffff81067196,0x290,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
FUN_ffffffff81067196,0x314,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_encl_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_release,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sgx_encl_release,0x49,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
sgx_encl_release,0x51,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
sgx_encl_release,0x55,0xffffffff81c87440,CALL 0xffffffff81c87440,direct call
sgx_encl_release,0x6c,0xffffffff81069630,CALL 0xffffffff81069630,direct call
sgx_encl_release,0x7a,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_release,0x86,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],0x0",write other [TODO]
sgx_encl_release,0x92,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_release,0x97,0xffffffff82000820,CALL 0xffffffff82000820,direct call
sgx_encl_release,0xaf,0xffffffff81c87520,CALL 0xffffffff81c87520,direct call
sgx_encl_release,0xbf,0xffffffff81c884e0,CALL 0xffffffff81c884e0,direct call
sgx_encl_release,0xda,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_release,0xdf,ctx->rbx - 0x430,"MOV qword ptr [RBX + -0x430],0x0",write other [TODO]
sgx_encl_release,0x10f,ctx->rcx,"MOV RCX,qword ptr [R15]",write other [TODO]
sgx_encl_release,0x112,ctx->rdx,"MOV RDX,qword ptr [R15 + 0x8]",write other [TODO]
sgx_encl_release,0x116,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
sgx_encl_release,0x11a,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
sgx_encl_release,0x121,ctx->r15,"MOV qword ptr [R15],R14",write other [TODO]
sgx_encl_release,0x124,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R13",write other [TODO]
sgx_encl_release,0x128,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_release,0x131,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_release,0x148,0xffffffff81366540,CALL 0xffffffff81366540,direct call
sgx_encl_release,0x151,0xffffffff81135770,CALL 0xffffffff81135770,direct call
sgx_encl_release,0x17b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_release,0x19d,,RET,ret
sgx_encl_release,0x1b2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_mmu_notifier_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_mmu_notifier_free,0x33,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_mmu_notifier_free,0x3d,,RET,ret
sgx_mmu_notifier_free,0x3e,0xffffffff810674b0,CALL 0xffffffff810674b0,direct call
sgx_mmu_notifier_free,0x46,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_mmu_notifier_free,0x50,,RET,ret
sgx_mmu_notifier_free,0x56,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_mmu_notifier_free,0x5e,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_mmu_notifier_free,0x68,,RET,ret
sgx_alloc_va_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_alloc_va_page,0x12,0xffffffff81069d20,CALL 0xffffffff81069d20,direct call
sgx_alloc_va_page,0x5b,,RET,ret
sgx_alloc_va_page,0x6f,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_alloc_va_page,0x7b,,RET,ret
sgx_alloc_va_page,0x87,0xffffffff830c7bfb,"MOV byte ptr [0xffffffff830c7bfb],0x1",write .data
sgx_alloc_va_page,0x8e,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_ioc_sgx2_ready,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810677a2,0x6,,RET,ret
__sgx_get_key_hash,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_get_key_hash,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__sgx_get_key_hash,0x27,ctx->rbp - 0x180,"MOV qword ptr [RBP + -0x180],RDI",write stack
__sgx_get_key_hash,0x35,0xffffffff8157fe00,CALL 0xffffffff8157fe00,direct call
__sgx_get_key_hash,0x4a,,RET,ret
__sgx_get_key_hash,0x4b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_enclave_etrack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_enclave_etrack,0x51,0xffffffff81065e60,CALL 0xffffffff81065e60,direct call
sgx_enclave_etrack,0x69,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
sgx_enclave_etrack,0x83,0xffffffff81065e60,CALL 0xffffffff81065e60,direct call
sgx_enclave_etrack,0x9b,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
sgx_enclave_restrict_permissions,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_enclave_restrict_permissions,0x32,ctx->rsp + 0x78,"MOV qword ptr [RSP + 0x78],RAX",write stack
sgx_enclave_restrict_permissions,0x4b,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
sgx_enclave_restrict_permissions,0xb7,0xffffffff81067800,CALL 0xffffffff81067800,direct call
sgx_enclave_restrict_permissions,0xca,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_enclave_restrict_permissions,0xdc,0xffffffff81069cf0,CALL 0xffffffff81069cf0,direct call
sgx_enclave_restrict_permissions,0xe7,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_enclave_restrict_permissions,0xf2,0xffffffff81066ce0,CALL 0xffffffff81066ce0,direct call
sgx_enclave_restrict_permissions,0x11a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_enclave_restrict_permissions,0x11f,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],R12",write other [TODO]
sgx_enclave_restrict_permissions,0x144,,RET,ret
sgx_enclave_restrict_permissions,0x163,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],RAX",write other [TODO]
sgx_enclave_restrict_permissions,0x169,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_enclave_modify_types,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_enclave_modify_types,0x2c,ctx->rsp + 0xb8,"MOV qword ptr [RSP + 0xb8],RAX",write stack
sgx_enclave_modify_types,0x3d,ctx->rsp + 0x28,"MOV dword ptr [RSP + 0x28],EAX",write stack
sgx_enclave_modify_types,0x78,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],RAX",write stack
sgx_enclave_modify_types,0x90,ctx->rsp + 0x2c,"MOV dword ptr [RSP + 0x2c],ESI",write stack
sgx_enclave_modify_types,0xf7,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RDX",write stack
sgx_enclave_modify_types,0xfc,0xffffffff81067800,CALL 0xffffffff81067800,direct call
sgx_enclave_modify_types,0x11f,ctx->wordctx->ptrctx->rdx + 0x9,"MOV word ptr [RDX + 0x9],AX",write other [TODO]
sgx_enclave_modify_types,0x123,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_enclave_modify_types,0x139,0xffffffff81069cf0,CALL 0xffffffff81069cf0,direct call
sgx_enclave_modify_types,0x144,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_enclave_modify_types,0x14f,0xffffffff81066ce0,CALL 0xffffffff81066ce0,direct call
sgx_enclave_modify_types,0x189,ctx->rsp + 0x38,"MOV byte ptr [RSP + 0x38],R8B",write stack
sgx_enclave_modify_types,0x198,ctx->rdx + 0x8,"MOV byte ptr [RDX + 0x8],0x3",write other [TODO]
sgx_enclave_modify_types,0x1a0,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDX",write stack
sgx_enclave_modify_types,0x1a5,0xffffffff81069630,CALL 0xffffffff81069630,direct call
sgx_enclave_modify_types,0x1c0,ctx->rsp + 0x20,"MOV byte ptr [RSP + 0x20],R8B",write stack
sgx_enclave_modify_types,0x1c5,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RDX",write stack
sgx_enclave_modify_types,0x1ca,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_enclave_modify_types,0x1d5,0xffffffff81066340,CALL 0xffffffff81066340,direct call
sgx_enclave_modify_types,0x1dd,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_enclave_modify_types,0x1eb,0xffffffff810695d0,CALL 0xffffffff810695d0,direct call
sgx_enclave_modify_types,0x217,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_enclave_modify_types,0x21c,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],R12",write other [TODO]
sgx_enclave_modify_types,0x244,,RET,ret
sgx_enclave_modify_types,0x267,ctx->rdx + 0x8,"MOV byte ptr [RDX + 0x8],R8B",write other [TODO]
sgx_enclave_modify_types,0x276,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],RAX",write other [TODO]
sgx_enclave_modify_types,0x297,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_encl_grow,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_grow,0x26,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EDX",write other [TODO]
sgx_encl_grow,0x36,,RET,ret
sgx_encl_grow,0x4b,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_encl_grow,0x5c,0xffffffff810676e0,CALL 0xffffffff810676e0,direct call
sgx_encl_grow,0x61,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
sgx_encl_grow,0x7f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sgx_encl_grow,0x83,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_create,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_create,0x31,ctx->rsp + 0xb8,"MOV qword ptr [RSP + 0xb8],RAX",write stack
sgx_encl_create,0x3b,0xffffffff81067cd0,CALL 0xffffffff81067cd0,direct call
sgx_encl_create,0x63,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_encl_create,0x67,ctx->r13 + 0x48,"MOV qword ptr [R13 + 0x48],RDX",write other [TODO]
sgx_encl_create,0x73,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],RDX",write other [TODO]
sgx_encl_create,0x77,ctx->r12 + 0x498,"MOV qword ptr [R12 + 0x498],RAX",write other [TODO]
sgx_encl_create,0x9e,0xffffffff812a21e0,CALL 0xffffffff812a21e0,direct call
sgx_encl_create,0xb2,ctx->r12 + 0x488,"MOV qword ptr [R12 + 0x488],RAX",write other [TODO]
sgx_encl_create,0xc4,0xffffffff81069d20,CALL 0xffffffff81069d20,direct call
sgx_encl_create,0xe0,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],RAX",write other [TODO]
sgx_encl_create,0xef,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],R14",write stack
sgx_encl_create,0xfc,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RSI",write stack
sgx_encl_create,0x104,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],0x0",write stack
sgx_encl_create,0x10d,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],0x0",write stack
sgx_encl_create,0x150,ctx->r12 + 0x68,"MOV qword ptr [R12 + 0x68],R12",write other [TODO]
sgx_encl_create,0x159,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
sgx_encl_create,0x160,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
sgx_encl_create,0x169,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],0x86",write other [TODO]
sgx_encl_create,0x175,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],RAX",write other [TODO]
sgx_encl_create,0x1a9,,RET,ret
sgx_encl_create,0x1be,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_create,0x1c3,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],0x0",write other [TODO]
sgx_encl_create,0x1d4,0xffffffff81366540,CALL 0xffffffff81366540,direct call
sgx_encl_create,0x1d9,ctx->r12 + 0x488,"MOV qword ptr [R12 + 0x488],0x0",write other [TODO]
sgx_encl_create,0x1f4,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_create,0x204,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_encl_create,0x208,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_encl_create,0x215,ctx->r13 + 0x48,"MOV qword ptr [R13 + 0x48],RAX",write other [TODO]
sgx_encl_create,0x21d,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],RAX",write other [TODO]
sgx_encl_create,0x221,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_create,0x22b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_ioc_enclave_add_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_ioc_enclave_add_pages,0x1d,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RSI",write stack
sgx_ioc_enclave_add_pages,0x2b,ctx->rsp + 0x138,"MOV qword ptr [RSP + 0x138],RAX",write stack
sgx_ioc_enclave_add_pages,0x61,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioc_enclave_add_pages,0xd8,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioc_enclave_add_pages,0x147,0xffffffff81c7fcd0,CALL 0xffffffff81c7fcd0,direct call
sgx_ioc_enclave_add_pages,0x15d,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
sgx_ioc_enclave_add_pages,0x16b,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],0x0",write stack
sgx_ioc_enclave_add_pages,0x1ad,ctx->rsp + 0xb8,"MOV qword ptr [RSP + 0xb8],RAX",write stack
sgx_ioc_enclave_add_pages,0x1b5,0xffffffff81605960,CALL 0xffffffff81605960,direct call
sgx_ioc_enclave_add_pages,0x1eb,,RET,ret
sgx_ioc_enclave_add_pages,0x220,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
sgx_ioc_enclave_add_pages,0x22d,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
sgx_ioc_enclave_add_pages,0x232,0xffffffff810662d0,CALL 0xffffffff810662d0,direct call
sgx_ioc_enclave_add_pages,0x250,0xffffffff81069d20,CALL 0xffffffff81069d20,direct call
sgx_ioc_enclave_add_pages,0x26c,0xffffffff81067cd0,CALL 0xffffffff81067cd0,direct call
sgx_ioc_enclave_add_pages,0x271,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],RAX",write stack
sgx_ioc_enclave_add_pages,0x296,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
sgx_ioc_enclave_add_pages,0x2a7,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
sgx_ioc_enclave_add_pages,0x2ac,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_ioc_enclave_add_pages,0x2ba,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
sgx_ioc_enclave_add_pages,0x2d3,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_ioc_enclave_add_pages,0x2d7,ctx->rsi + 0x48,"MOV qword ptr [RSI + 0x48],RDX",write other [TODO]
sgx_ioc_enclave_add_pages,0x2e2,ctx->rsi + 0x50,"MOV qword ptr [RSI + 0x50],RDX",write other [TODO]
sgx_ioc_enclave_add_pages,0x2e6,ctx->r14 + 0x498,"MOV qword ptr [R14 + 0x498],RAX",write other [TODO]
sgx_ioc_enclave_add_pages,0x2f5,0xffffffff82000828,CALL 0xffffffff82000828,direct call
sgx_ioc_enclave_add_pages,0x2ff,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_ioc_enclave_add_pages,0x314,0xffffffff81c892e0,CALL 0xffffffff81c892e0,direct call
sgx_ioc_enclave_add_pages,0x320,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_ioc_enclave_add_pages,0x33a,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_ioc_enclave_add_pages,0x34f,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_ioc_enclave_add_pages,0x353,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_ioc_enclave_add_pages,0x360,ctx->rcx + 0x48,"MOV qword ptr [RCX + 0x48],RAX",write other [TODO]
sgx_ioc_enclave_add_pages,0x368,ctx->rcx + 0x50,"MOV qword ptr [RCX + 0x50],RAX",write other [TODO]
sgx_ioc_enclave_add_pages,0x36c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_ioc_enclave_add_pages,0x376,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_ioc_enclave_add_pages,0x38b,0xffffffff81113020,CALL 0xffffffff81113020,direct call
sgx_ioc_enclave_add_pages,0x393,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_ioc_enclave_add_pages,0x39b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_ioc_enclave_add_pages,0x402,0xffffffff812d2300,CALL 0xffffffff812d2300,direct call
sgx_ioc_enclave_add_pages,0x42c,0xffffffff812c0160,CALL 0xffffffff812c0160,direct call
sgx_ioc_enclave_add_pages,0x459,ctx->rsp + 0x78,"MOV qword ptr [RSP + 0x78],RAX",write stack
sgx_ioc_enclave_add_pages,0x46f,ctx->rsp + 0x60,"MOV qword ptr [RSP + 0x60],RAX",write stack
sgx_ioc_enclave_add_pages,0x47c,ctx->rsp + 0x70,"MOV qword ptr [RSP + 0x70],RAX",write stack
sgx_ioc_enclave_add_pages,0x4ac,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],RAX",write stack
sgx_ioc_enclave_add_pages,0x524,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],R14",write other [TODO]
sgx_ioc_enclave_add_pages,0x529,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],R15",write other [TODO]
sgx_ioc_enclave_add_pages,0x52e,ctx->wordctx->ptrctx->r12 + 0x9,"MOV word ptr [R12 + 0x9],AX",write other [TODO]
sgx_ioc_enclave_add_pages,0x5ae,0xffffffff810695d0,CALL 0xffffffff810695d0,direct call
sgx_ioc_enclave_add_pages,0x5b8,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_ioc_enclave_add_pages,0x5d6,0xffffffff81113020,CALL 0xffffffff81113020,direct call
sgx_ioc_enclave_add_pages,0x5fa,0xffffffff82000828,CALL 0xffffffff82000828,direct call
sgx_ioc_enclave_add_pages,0x608,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_ioc_enclave_add_pages,0x61d,0xffffffff81c892e0,CALL 0xffffffff81c892e0,direct call
sgx_ioc_enclave_add_pages,0x629,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_ioc_enclave_add_pages,0x6a9,0xffffffff82000820,CALL 0xffffffff82000820,direct call
sgx_ioc_enclave_add_pages,0x6c8,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_ioc_enclave_add_pages,0x6d2,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],EDX",write stack
sgx_ioc_enclave_add_pages,0x6d6,0xffffffff81293980,CALL 0xffffffff81293980,direct call
sgx_ioc_enclave_add_pages,0x706,0xffffffff81c88c90,CALL 0xffffffff81c88c90,direct call
sgx_ioc_enclave_add_pages,0x72a,0xffffffff82000810,CALL 0xffffffff82000810,direct call
sgx_ioc_enclave_add_pages,0x77b,0xffffffff830c7c02,"MOV byte ptr [0xffffffff830c7c02],0x1",write .data
sgx_ioc_enclave_add_pages,0x782,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_ioc_enclave_add_pages,0x79a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_encl_shrink,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_shrink,0x1a,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_encl_shrink,0x2c,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_encl_shrink,0x30,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_encl_shrink,0x3d,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],RAX",write other [TODO]
sgx_encl_shrink,0x46,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
sgx_encl_shrink,0x4b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_encl_shrink,0x55,,RET,ret
sgx_encl_shrink,0x56,,RET,ret
sgx_ioctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_ioctl,0x2d,ctx->rsp + 0xf8,"MOV qword ptr [RSP + 0xf8],RAX",write stack
sgx_ioctl,0x7a,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x93,0xffffffff81069110,CALL 0xffffffff81069110,direct call
sgx_ioctl,0xc9,,RET,ret
sgx_ioctl,0xe4,0xffffffff81067fa0,CALL 0xffffffff81067fa0,direct call
sgx_ioctl,0xfd,0xffffffff81067780,CALL 0xffffffff81067780,direct call
sgx_ioctl,0x11a,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
sgx_ioctl,0x11f,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x1a2,0xffffffff810678c0,CALL 0xffffffff810678c0,direct call
sgx_ioctl,0x1b5,0xffffffff81605960,CALL 0xffffffff81605960,direct call
sgx_ioctl,0x1ec,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x20b,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_ioctl,0x230,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x241,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_ioctl,0x25a,0xffffffff81067780,CALL 0xffffffff81067780,direct call
sgx_ioctl,0x27b,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
sgx_ioctl,0x280,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x2d1,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
sgx_ioctl,0x2f6,ctx->rsp + 0x80,"MOV qword ptr [RSP + 0x80],0x7",write stack
sgx_ioctl,0x367,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R10",write stack
sgx_ioctl,0x36c,0xffffffff81069630,CALL 0xffffffff81069630,direct call
sgx_ioctl,0x37c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_ioctl,0x389,0xffffffff81066340,CALL 0xffffffff81066340,direct call
sgx_ioctl,0x391,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_ioctl,0x39f,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],R10",write stack
sgx_ioctl,0x3a4,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_ioctl,0x3ba,ctx->r10 + 0x10,"MOV qword ptr [R10 + 0x10],0x0",write other [TODO]
sgx_ioctl,0x3c6,0xffffffff81c88c90,CALL 0xffffffff81c88c90,direct call
sgx_ioctl,0x3d5,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_ioctl,0x3dd,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_ioctl,0x40b,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
sgx_ioctl,0x410,0xffffffff81069cf0,CALL 0xffffffff81069cf0,direct call
sgx_ioctl,0x418,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_ioctl,0x423,0xffffffff81066ce0,CALL 0xffffffff81066ce0,direct call
sgx_ioctl,0x44a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_ioctl,0x461,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],RAX",write stack
sgx_ioctl,0x466,0xffffffff81605960,CALL 0xffffffff81605960,direct call
sgx_ioctl,0x483,0xffffffff81067780,CALL 0xffffffff81067780,direct call
sgx_ioctl,0x4a4,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
sgx_ioctl,0x4a9,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x516,0xffffffff81067a30,CALL 0xffffffff81067a30,direct call
sgx_ioctl,0x546,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x568,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_ioctl,0x58d,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RDI",write stack
sgx_ioctl,0x5a4,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
sgx_ioctl,0x645,0xffffffff8157f720,CALL 0xffffffff8157f720,direct call
sgx_ioctl,0x672,0xffffffff810677b0,CALL 0xffffffff810677b0,direct call
sgx_ioctl,0x681,0xffffffff815790e0,CALL 0xffffffff815790e0,direct call
sgx_ioctl,0x696,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
sgx_ioctl,0x69b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_ioctl,0x6a0,ctx->rsp + 0x38,"MOV dword ptr [RSP + 0x38],0x32",write stack
sgx_ioctl,0x6b9,ctx->rsp + 0x40,"MOV dword ptr [RSP + 0x40],0x14",write stack
sgx_ioctl,0x6e8,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RCX",write stack
sgx_ioctl,0x6f3,0xffffffff8106a1f0,CALL 0xffffffff8106a1f0,direct call
sgx_ioctl,0x752,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_ioctl,0x778,0xffffffff81154020,CALL 0xffffffff81154020,direct call
sgx_ioctl,0x7b3,0xffffffff81067d70,CALL 0xffffffff81067d70,direct call
sgx_ioctl,0x7c0,0xffffffff82000810,CALL 0xffffffff82000810,direct call
sgx_ioctl,0x841,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_ioctl,0x858,0xffffffff830c7c01,"MOV byte ptr [0xffffffff830c7c01],0x1",write .data
sgx_ioctl,0x85f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_ipi_cb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_ipi_cb,0xa,,RET,ret
__sgx_alloc_epc_page_from_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_alloc_epc_page_from_node,0x27,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__sgx_alloc_epc_page_from_node,0x45,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
__sgx_alloc_epc_page_from_node,0x49,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
__sgx_alloc_epc_page_from_node,0x4e,ctx->rax,"MOV qword ptr [RAX],RAX",write other [TODO]
__sgx_alloc_epc_page_from_node,0x51,ctx->wordctx->ptrctx->rax - 0xc,"MOV word ptr [RAX + -0xc],DX",write other [TODO]
__sgx_alloc_epc_page_from_node,0x55,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RAX",write other [TODO]
__sgx_alloc_epc_page_from_node,0x59,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__sgx_alloc_epc_page_from_node,0x6f,,RET,ret
__sgx_alloc_epc_page_from_node,0x76,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
arch_is_platform_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_is_platform_page,0x13,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
arch_is_platform_page,0x1f,,RET,ret
sgx_total_bytes_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_total_bytes_show,0x30,0xffffffff81417b00,CALL 0xffffffff81417b00,direct call
sgx_total_bytes_show,0x38,,RET,ret
sgx_set_attribute,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_set_attribute,0xf,0xffffffff8138ab40,CALL 0xffffffff8138ab40,direct call
sgx_set_attribute,0x2a,0xffffffff81366540,CALL 0xffffffff81366540,direct call
sgx_set_attribute,0x36,,RET,ret
sgx_set_attribute,0x37,0xffffffff81366540,CALL 0xffffffff81366540,direct call
arch_node_attr_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_node_attr_is_visible,0x19,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
arch_node_attr_is_visible,0x35,,RET,ret
__sgx_encl_ewb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_encl_ewb,0x27,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
__sgx_encl_ewb,0x31,ctx->rsp,"MOV qword ptr [RSP],0x0",write stack
__sgx_encl_ewb,0x39,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],0x0",write stack
__sgx_encl_ewb,0x70,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
__sgx_encl_ewb,0xac,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
__sgx_encl_ewb,0xdd,0xffffffff81291870,CALL 0xffffffff81291870,direct call
__sgx_encl_ewb,0xe6,0xffffffff81291870,CALL 0xffffffff81291870,direct call
__sgx_encl_ewb,0x134,,RET,ret
__sgx_encl_ewb,0x135,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__sgx_encl_ewb,0x13c,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__sgx_encl_ewb,0x143,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_encl_ewb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_encl_ewb,0x1d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
sgx_encl_ewb,0x30,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
sgx_encl_ewb,0x3b,0xffffffff81066490,CALL 0xffffffff81066490,direct call
sgx_encl_ewb,0x49,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
sgx_encl_ewb,0x50,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
sgx_encl_ewb,0x71,0xffffffff810664f0,CALL 0xffffffff810664f0,direct call
sgx_encl_ewb,0x85,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
sgx_encl_ewb,0x89,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
sgx_encl_ewb,0x9a,ctx->rdx + 0x4a0,"MOV qword ptr [RDX + 0x4a0],RBX",write other [TODO]
sgx_encl_ewb,0xa1,ctx->rbx,"MOV qword ptr [RBX],RCX",write other [TODO]
sgx_encl_ewb,0xa4,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
sgx_encl_ewb,0xa8,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
sgx_encl_ewb,0xb5,0xffffffff810691a0,CALL 0xffffffff810691a0,direct call
sgx_encl_ewb,0xe1,0xffffffff810664d0,CALL 0xffffffff810664d0,direct call
sgx_encl_ewb,0xf4,,RET,ret
sgx_encl_ewb,0xf5,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],R15",write other [TODO]
sgx_encl_ewb,0x10e,,RET,ret
sgx_encl_ewb,0x15d,0xffffffff810691a0,CALL 0xffffffff810691a0,direct call
sgx_encl_ewb,0x16f,0xffffffff81065e60,CALL 0xffffffff81065e60,direct call
sgx_encl_ewb,0x187,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
sgx_encl_ewb,0x196,0xffffffff810691a0,CALL 0xffffffff810691a0,direct call
sgx_encl_ewb,0x1c8,0xffffffff830c7c05,"MOV byte ptr [0xffffffff830c7c05],0x1",write .data
sgx_encl_ewb,0x1cf,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_encl_ewb,0x203,0xffffffff830c7c04,"MOV byte ptr [0xffffffff830c7c04],0x1",write .data
sgx_encl_ewb,0x20a,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
current_is_ksgxd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
current_is_ksgxd,0x1d,,RET,ret
__sgx_alloc_epc_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_alloc_epc_page,0x2d,0xffffffff81069030,CALL 0xffffffff81069030,direct call
__sgx_alloc_epc_page,0x49,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__sgx_alloc_epc_page,0x63,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
__sgx_alloc_epc_page,0x84,,RET,ret
__sgx_alloc_epc_page,0x88,0xffffffff81069030,CALL 0xffffffff81069030,direct call
__sgx_alloc_epc_page,0x96,,RET,ret
sgx_mark_page_reclaimable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_mark_page_reclaimable,0x14,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_mark_page_reclaimable,0x29,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],-0x7d1bdc90",write other [TODO]
sgx_mark_page_reclaimable,0x38,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
sgx_mark_page_reclaimable,0x3c,0xffffffff82e42378,"MOV qword ptr [0xffffffff82e42378],RDX",write .data
sgx_mark_page_reclaimable,0x43,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_mark_page_reclaimable,0x46,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_mark_page_reclaimable,0x50,,RET,ret
sgx_unmark_page_reclaimable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_unmark_page_reclaimable,0x14,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_unmark_page_reclaimable,0x34,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_unmark_page_reclaimable,0x38,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_unmark_page_reclaimable,0x45,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
sgx_unmark_page_reclaimable,0x52,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
sgx_unmark_page_reclaimable,0x5d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_unmark_page_reclaimable,0x69,,RET,ret
sgx_unmark_page_reclaimable,0x71,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_free_epc_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_free_epc_page,0x26,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_free_epc_page,0x34,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
sgx_free_epc_page,0x43,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_free_epc_page,0x47,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RDX",write other [TODO]
sgx_free_epc_page,0x50,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RDX",write other [TODO]
sgx_free_epc_page,0x54,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
sgx_free_epc_page,0x61,ctx->wordctx->ptrctx->rbx + 0x4,"MOV word ptr [RBX + 0x4],AX",write other [TODO]
sgx_free_epc_page,0x65,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_free_epc_page,0x78,,RET,ret
sgx_free_epc_page,0x7e,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
sgx_free_epc_page,0x83,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],R12",write other [TODO]
sgx_free_epc_page,0x87,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RDX",write other [TODO]
sgx_free_epc_page,0x8b,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
sgx_reclaim_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_reclaim_pages,0x32,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sgx_reclaim_pages,0x38,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_reclaim_pages,0x52,ctx->rbp + ctx->rax * 0x8 - 0x230,"MOV qword ptr [RBP + RAX*0x8 + -0x230],RBX",write stack
sgx_reclaim_pages,0x7d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
sgx_reclaim_pages,0x81,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_reclaim_pages,0x88,ctx->rbx,"MOV qword ptr [RBX],RBX",write other [TODO]
sgx_reclaim_pages,0x8b,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RBX",write other [TODO]
sgx_reclaim_pages,0xc7,ctx->rbp - 0x260,"MOV dword ptr [RBP + -0x260],R13D",write stack
sgx_reclaim_pages,0xce,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_reclaim_pages,0xf1,ctx->rbp - 0x288,"MOV qword ptr [RBP + -0x288],RSI",write stack
sgx_reclaim_pages,0xf8,ctx->rbp - 0x280,"MOV qword ptr [RBP + -0x280],RAX",write stack
sgx_reclaim_pages,0x106,ctx->rbp - 0x278,"MOV qword ptr [RBP + -0x278],RAX",write stack
sgx_reclaim_pages,0x10d,ctx->rbp - 0x258,"MOV qword ptr [RBP + -0x258],RSI",write stack
sgx_reclaim_pages,0x11b,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
sgx_reclaim_pages,0x122,ctx->rbp - 0x270,"MOV qword ptr [RBP + -0x270],RAX",write stack
sgx_reclaim_pages,0x13f,ctx->rbp - 0x268,"MOV qword ptr [RBP + -0x268],RAX",write stack
sgx_reclaim_pages,0x146,0xffffffff81134450,CALL 0xffffffff81134450,direct call
sgx_reclaim_pages,0x14b,ctx->rbp - 0x25c,"MOV dword ptr [RBP + -0x25c],EAX",write stack
sgx_reclaim_pages,0x189,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
sgx_reclaim_pages,0x19a,0xffffffff81066260,CALL 0xffffffff81066260,direct call
sgx_reclaim_pages,0x1b5,0xffffffff81113020,CALL 0xffffffff81113020,direct call
sgx_reclaim_pages,0x1be,0xffffffff810a0c90,CALL 0xffffffff810a0c90,direct call
sgx_reclaim_pages,0x1f2,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_reclaim_pages,0x20d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_reclaim_pages,0x225,0xffffffff81065f30,CALL 0xffffffff81065f30,direct call
sgx_reclaim_pages,0x23b,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_reclaim_pages,0x247,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
sgx_reclaim_pages,0x265,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
sgx_reclaim_pages,0x269,0xffffffff82e42378,"MOV qword ptr [0xffffffff82e42378],RDX",write .data
sgx_reclaim_pages,0x270,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],-0x7d1bdc90",write other [TODO]
sgx_reclaim_pages,0x278,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_reclaim_pages,0x27b,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
sgx_reclaim_pages,0x2b1,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
sgx_reclaim_pages,0x2f9,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_reclaim_pages,0x32c,0xffffffff81066340,CALL 0xffffffff81066340,direct call
sgx_reclaim_pages,0x334,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_reclaim_pages,0x391,0xffffffff830c7c06,"MOV byte ptr [0xffffffff830c7c06],0x1",write .data
sgx_reclaim_pages,0x398,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_reclaim_pages,0x3a6,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_reclaim_pages,0x3ed,0xffffffff810674b0,CALL 0xffffffff810674b0,direct call
sgx_reclaim_pages,0x405,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_reclaim_pages,0x433,,RET,ret
sgx_reclaim_pages,0x439,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_reclaim_pages,0x44b,ctx->rbp - 0x258,"MOV qword ptr [RBP + -0x258],RAX",write stack
sgx_reclaim_pages,0x466,0xffffffff810696b0,CALL 0xffffffff810696b0,direct call
sgx_reclaim_pages,0x49a,ctx->rbp - 0x250,"MOV qword ptr [RBP + -0x250],R9",write stack
sgx_reclaim_pages,0x4a8,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_reclaim_pages,0x4b7,0xffffffff810692f0,CALL 0xffffffff810692f0,direct call
sgx_reclaim_pages,0x4bc,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],0x0",write other [TODO]
sgx_reclaim_pages,0x4d0,0xffffffff81066130,CALL 0xffffffff81066130,direct call
sgx_reclaim_pages,0x4e9,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_reclaim_pages,0x50f,0xffffffff810674b0,CALL 0xffffffff810674b0,direct call
sgx_reclaim_pages,0x52b,0xffffffff81065f30,CALL 0xffffffff81065f30,direct call
sgx_reclaim_pages,0x53f,0xffffffff810692f0,CALL 0xffffffff810692f0,direct call
sgx_reclaim_pages,0x548,0xffffffff81066520,CALL 0xffffffff81066520,direct call
sgx_reclaim_pages,0x54d,ctx->r13 + 0x60,"MOV qword ptr [R13 + 0x60],0x0",write other [TODO]
sgx_reclaim_pages,0x55c,0xffffffff81066130,CALL 0xffffffff81066130,direct call
sgx_reclaim_pages,0x568,0xffffffff81605660,CALL 0xffffffff81605660,direct call
sgx_reclaim_pages,0x592,0xffffffff81134480,CALL 0xffffffff81134480,direct call
sgx_reclaim_pages,0x5a0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_reclaim_direct,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_reclaim_direct,0x25,0xffffffff81069740,CALL 0xffffffff81069740,direct call
sgx_reclaim_direct,0x2b,,RET,ret
sgx_reclaim_direct,0x2c,,RET,ret
sgx_alloc_epc_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_alloc_epc_page,0x1e,0xffffffff81069530,CALL 0xffffffff81069530,direct call
sgx_alloc_epc_page,0x2e,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
sgx_alloc_epc_page,0x61,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
sgx_alloc_epc_page,0x71,,RET,ret
sgx_alloc_epc_page,0x9f,0xffffffff81069740,CALL 0xffffffff81069740,direct call
sgx_alloc_epc_page,0xa4,0xffffffff82000820,CALL 0xffffffff82000820,direct call
__sgx_sanitize_pages.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_sanitize_pages.constprop.0,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__sgx_sanitize_pages.constprop.0,0x29,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RBX",write stack
__sgx_sanitize_pages.constprop.0,0x2d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
__sgx_sanitize_pages.constprop.0,0x7b,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x7f,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x8c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R14",write stack
__sgx_sanitize_pages.constprop.0,0x94,ctx->r14,"MOV qword ptr [R14],RBX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x97,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x9b,ctx->rax,"MOV qword ptr [RAX],R14",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x9e,0xffffffff82000820,CALL 0xffffffff82000820,direct call
__sgx_sanitize_pages.constprop.0,0xb2,0xffffffff810cc2d0,CALL 0xffffffff810cc2d0,direct call
__sgx_sanitize_pages.constprop.0,0xe8,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__sgx_sanitize_pages.constprop.0,0xf7,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RCX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0xfb,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x102,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],R14",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x106,ctx->r14,"MOV qword ptr [R14],RCX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x10d,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RCX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x111,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],R14",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x115,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__sgx_sanitize_pages.constprop.0,0x141,0xffffffff82e42360,"MOV qword ptr [0xffffffff82e42360],RCX",write .data
__sgx_sanitize_pages.constprop.0,0x148,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],-0x7d1bdca0",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x150,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x153,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x163,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x16a,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
__sgx_sanitize_pages.constprop.0,0x16e,0xffffffff810696b0,CALL 0xffffffff810696b0,direct call
__sgx_sanitize_pages.constprop.0,0x19f,,RET,ret
__sgx_sanitize_pages.constprop.0,0x1a0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ksgxd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ksgxd,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ksgxd,0x1f,0xffffffff8114ebc0,CALL 0xffffffff8114ebc0,direct call
ksgxd,0x24,0xffffffff81069df0,CALL 0xffffffff81069df0,direct call
ksgxd,0x29,0xffffffff81069df0,CALL 0xffffffff81069df0,direct call
ksgxd,0x40,0xffffffff810cc2d0,CALL 0xffffffff810cc2d0,direct call
ksgxd,0x4d,0xffffffff82000828,CALL 0xffffffff82000828,direct call
ksgxd,0x57,0xffffffff82000828,CALL 0xffffffff82000828,direct call
ksgxd,0x5c,0xffffffff810cc2d0,CALL 0xffffffff810cc2d0,direct call
ksgxd,0x7c,0xffffffff811040c0,CALL 0xffffffff811040c0,direct call
ksgxd,0x91,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
ksgxd,0x99,0xffffffff810cc2d0,CALL 0xffffffff810cc2d0,direct call
ksgxd,0xd1,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
ksgxd,0xf2,0xffffffff81069740,CALL 0xffffffff81069740,direct call
ksgxd,0xf7,0xffffffff82000820,CALL 0xffffffff82000820,direct call
ksgxd,0xfc,0xffffffff810cc2d0,CALL 0xffffffff810cc2d0,direct call
ksgxd,0x122,,RET,ret
ksgxd,0x14c,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
ksgxd,0x175,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_memory_failure,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_memory_failure,0x22,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
arch_memory_failure,0x5b,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
arch_memory_failure,0x6c,ctx->wordctx->ptrctx->rbx + 0x6,"MOV word ptr [RBX + 0x6],AX",write other [TODO]
arch_memory_failure,0x79,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
arch_memory_failure,0x86,,RET,ret
arch_memory_failure,0x93,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
arch_memory_failure,0x97,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
arch_memory_failure,0x9e,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
arch_memory_failure,0xa2,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RDX",write other [TODO]
arch_memory_failure,0xaa,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RDX",write other [TODO]
arch_memory_failure,0xae,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
arch_memory_failure,0xb9,0xffffffff810b95a0,CALL 0xffffffff810b95a0,direct call
sgx_update_lepubkeyhash,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_update_lepubkeyhash,0x1d,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
sgx_update_lepubkeyhash,0x3e,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
sgx_update_lepubkeyhash,0x55,,RET,ret
sgx_vepc_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vepc_mmap,0x1e,ctx->rsi + 0x60,"MOV qword ptr [RSI + 0x60],-0x7ddf1f00",write other [TODO]
sgx_vepc_mmap,0x27,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],RAX",write other [TODO]
sgx_vepc_mmap,0x2d,ctx->rsi + 0x78,"MOV qword ptr [RSI + 0x78],RDX",write other [TODO]
sgx_vepc_mmap,0x31,,RET,ret
sgx_vepc_mmap,0x38,,RET,ret
sgx_virt_ecreate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_virt_ecreate,0x52,,RET,ret
sgx_virt_ecreate,0x5e,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
__sgx_virt_einit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sgx_virt_einit,0x85,,RET,ret
sgx_vepc_ioctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vepc_ioctl,0x22,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sgx_vepc_ioctl,0x53,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
sgx_vepc_ioctl,0x5b,0xffffffff81c87440,CALL 0xffffffff81c87440,direct call
sgx_vepc_ioctl,0x9d,0xffffffff82000820,CALL 0xffffffff82000820,direct call
sgx_vepc_ioctl,0xb5,0xffffffff81c87520,CALL 0xffffffff81c87520,direct call
sgx_vepc_ioctl,0xdb,,RET,ret
sgx_vepc_ioctl,0x10a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sgx_virt_einit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8106a4fc,-0x1,,RET,ret
FUN_ffffffff8106a4fc,0x0,0xffffffff8106a300,CALL 0xffffffff8106a300,direct call
FUN_ffffffff8106a4fc,0x13,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
sgx_vepc_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vepc_open,0x20,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
sgx_vepc_open,0x3f,0xffffffff81112440,CALL 0xffffffff81112440,direct call
sgx_vepc_open,0x44,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
sgx_vepc_open,0x4d,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
sgx_vepc_open,0x55,ctx->r12 + 0xc8,"MOV qword ptr [R12 + 0xc8],RBX",write other [TODO]
sgx_vepc_open,0x61,,RET,ret
sgx_vepc_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vepc_fault,0x27,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_vepc_fault,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sgx_vepc_fault,0x37,0xffffffff81112470,CALL 0xffffffff81112470,direct call
sgx_vepc_fault,0x5a,0xffffffff81c87c10,CALL 0xffffffff81c87c10,direct call
sgx_vepc_fault,0x67,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vepc_fault,0x7f,,RET,ret
sgx_vepc_fault,0x85,0xffffffff81069d20,CALL 0xffffffff81069d20,direct call
sgx_vepc_fault,0xa4,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
sgx_vepc_fault,0xa8,0xffffffff81c89150,CALL 0xffffffff81c89150,direct call
sgx_vepc_fault,0xd2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
sgx_vepc_fault,0xf4,0xffffffff812cce20,CALL 0xffffffff812cce20,direct call
sgx_vepc_fault,0x10e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
sgx_vepc_fault,0x112,0xffffffff81c88c90,CALL 0xffffffff81c88c90,direct call
sgx_vepc_fault,0x11b,0xffffffff810696b0,CALL 0xffffffff810696b0,direct call
sgx_vepc_fault,0x123,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vepc_fault,0x13f,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
sgx_vepc_fault,0x142,0xffffffff810696b0,CALL 0xffffffff810696b0,direct call
sgx_vepc_fault,0x14a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vepc_fault,0x174,0xffffffff81113020,CALL 0xffffffff81113020,direct call
sgx_vepc_fault,0x18d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
sgx_vepc_fault,0x191,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
sgx_vepc_fault,0x194,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vepc_fault,0x1be,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
sgx_vepc_fault,0x1c1,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vepc_free_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vepc_free_page,0x46,,RET,ret
sgx_vepc_free_page,0x47,0xffffffff810696b0,CALL 0xffffffff810696b0,direct call
sgx_vepc_free_page,0x54,,RET,ret
sgx_vepc_free_page,0x69,0xffffffff830c7c07,"MOV byte ptr [0xffffffff830c7c07],0x1",write .data
sgx_vepc_free_page,0x70,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
sgx_vepc_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sgx_vepc_release,0x3a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sgx_vepc_release,0x40,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R13",write stack
sgx_vepc_release,0x47,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R13",write stack
sgx_vepc_release,0x4b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
sgx_vepc_release,0x53,0xffffffff81c87440,CALL 0xffffffff81c87440,direct call
sgx_vepc_release,0x60,0xffffffff8106a760,CALL 0xffffffff8106a760,direct call
sgx_vepc_release,0x69,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x48]",write other [TODO]
sgx_vepc_release,0x70,0xffffffff81c88c90,CALL 0xffffffff81c88c90,direct call
sgx_vepc_release,0x88,0xffffffff81c87520,CALL 0xffffffff81c87520,direct call
sgx_vepc_release,0xa8,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
sgx_vepc_release,0xb0,0xffffffff81c87440,CALL 0xffffffff81c87440,direct call
sgx_vepc_release,0xc0,0xffffffff8106a760,CALL 0xffffffff8106a760,direct call
sgx_vepc_release,0xd1,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],R13",write other [TODO]
sgx_vepc_release,0xd5,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
sgx_vepc_release,0xd9,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
sgx_vepc_release,0xdd,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
sgx_vepc_release,0xe0,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x48]",write other [TODO]
sgx_vepc_release,0xe7,0xffffffff81c88c90,CALL 0xffffffff81c88c90,direct call
sgx_vepc_release,0xff,0xffffffff81c87520,CALL 0xffffffff81c87520,direct call
sgx_vepc_release,0x113,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sgx_vepc_release,0x142,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RSI",write other [TODO]
sgx_vepc_release,0x146,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
sgx_vepc_release,0x153,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
sgx_vepc_release,0x15b,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
sgx_vepc_release,0x15f,0xffffffff8106a760,CALL 0xffffffff8106a760,direct call
sgx_vepc_release,0x16c,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],R13",write other [TODO]
sgx_vepc_release,0x170,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R14",write stack
sgx_vepc_release,0x174,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
sgx_vepc_release,0x178,ctx->rax,"MOV qword ptr [RAX],R14",write other [TODO]
sgx_vepc_release,0x1b4,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
sgx_vepc_release,0x1b8,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
sgx_vepc_release,0x1bb,ctx->rax,"MOV qword ptr [RAX],-0x7cbc3ea0",write other [TODO]
sgx_vepc_release,0x1c2,0xffffffff8343c168,"MOV qword ptr [0xffffffff8343c168],RAX",write .data
sgx_vepc_release,0x1d0,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sgx_vepc_release,0x1d8,0xffffffff81c884e0,CALL 0xffffffff81c884e0,direct call
sgx_vepc_release,0x1e0,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
sgx_vepc_release,0x204,,RET,ret
sgx_vepc_release,0x205,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
release_perfctr_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_perfctr_nmi,0x2c,,RET,ret
release_perfctr_nmi,0x49,,RET,ret
release_evntsel_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_evntsel_nmi,0x2c,,RET,ret
release_evntsel_nmi,0x49,,RET,ret
reserve_evntsel_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reserve_evntsel_nmi,0x32,,RET,ret
reserve_perfctr_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reserve_perfctr_nmi,0x32,,RET,ret
vmware_get_tsc_khz,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_get_tsc_khz,0x11,,RET,ret
vmware_sched_clock,0x2d,,RET,ret
vmware_cmd_stealclock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_cmd_stealclock,0x2a,,RET,ret
vmware_steal_clock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_steal_clock,0x40,,RET,ret
vmware_sev_es_hcall_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_sev_es_hcall_prepare,0x2b,ctx->rax + 0x178,"MOV qword ptr [RAX + 0x178],RSI",write other [TODO]
vmware_sev_es_hcall_prepare,0x3f,ctx->rax + 0x318,"MOV qword ptr [RAX + 0x318],RSI",write other [TODO]
vmware_sev_es_hcall_prepare,0x53,ctx->rax + 0x308,"MOV qword ptr [RAX + 0x308],RSI",write other [TODO]
vmware_sev_es_hcall_prepare,0x67,ctx->rax + 0x310,"MOV qword ptr [RAX + 0x310],RSI",write other [TODO]
vmware_sev_es_hcall_prepare,0x7b,ctx->rax + 0x330,"MOV qword ptr [RAX + 0x330],RSI",write other [TODO]
vmware_sev_es_hcall_prepare,0x8a,ctx->rax + 0x338,"MOV qword ptr [RAX + 0x338],RSI",write other [TODO]
vmware_sev_es_hcall_prepare,0x9e,ctx->rax + 0x328,"MOV qword ptr [RAX + 0x328],RDX",write other [TODO]
vmware_sev_es_hcall_prepare,0xa6,,RET,ret
vmware_sev_es_hcall_finish,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_sev_es_hcall_finish,0x1a,,RET,ret
vmware_sev_es_hcall_finish,0x75,ctx->rcx + 0x28,"MOV qword ptr [RCX + 0x28],RSI",write other [TODO]
vmware_sev_es_hcall_finish,0x80,ctx->rcx + 0x58,"MOV qword ptr [RCX + 0x58],RSI",write other [TODO]
vmware_sev_es_hcall_finish,0x8b,ctx->rcx + 0x60,"MOV qword ptr [RCX + 0x60],RSI",write other [TODO]
vmware_sev_es_hcall_finish,0x96,ctx->rcx + 0x68,"MOV qword ptr [RCX + 0x68],RSI",write other [TODO]
vmware_sev_es_hcall_finish,0xa1,ctx->rcx + 0x70,"MOV qword ptr [RCX + 0x70],RSI",write other [TODO]
vmware_sev_es_hcall_finish,0xac,ctx->rcx + 0x20,"MOV qword ptr [RCX + 0x20],RDX",write other [TODO]
vmware_sev_es_hcall_finish,0xb1,,RET,ret
vmware_register_steal_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_register_steal_time,0x2a,,RET,ret
vmware_register_steal_time,0x3c,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
vmware_register_steal_time,0x4a,0xffffffff8106aca0,CALL 0xffffffff8106aca0,direct call
vmware_register_steal_time,0x58,0xffffffff8343c1c0,"MOV byte ptr [0xffffffff8343c1c0],0x0",write .data
vmware_register_steal_time,0x60,,RET,ret
vmware_register_steal_time,0x64,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
vmware_register_steal_time,0x76,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
vmware_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_cpu_online,0x9,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
vmware_cpu_online,0x18,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
vmware_cpu_online,0x21,,RET,ret
vmware_cpu_online,0x22,0xffffffff8106ae90,CALL 0xffffffff8106ae90,direct call
vmware_cpu_down_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_cpu_down_prepare,0x9,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
vmware_cpu_down_prepare,0x1f,0xffffffff8106aca0,CALL 0xffffffff8106aca0,direct call
vmware_cpu_down_prepare,0x24,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
vmware_cpu_down_prepare,0x2d,,RET,ret
vmware_pv_reboot_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_pv_reboot_notify,0xd,,RET,ret
vmware_pv_reboot_notify,0x29,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
vmware_pv_reboot_notify,0x31,,RET,ret
vmware_pv_guest_cpu_reboot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmware_pv_guest_cpu_reboot,0xe,,RET,ret
vmware_pv_guest_cpu_reboot,0x1a,0xffffffff8106aca0,CALL 0xffffffff8106aca0,direct call
vmware_pv_guest_cpu_reboot,0x20,,RET,ret
__sysvec_hyperv_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_hyperv_callback,0x12,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_hyperv_callback,0x2d,ctx->rax,CALL RAX,in-direct call
__sysvec_hyperv_callback,0x46,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_hyperv_callback,0x48,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__sysvec_hyperv_callback,0x55,,RET,ret
hv_get_nmi_reason,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_get_nmi_reason,0xc,,RET,ret
__sysvec_hyperv_stimer0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_hyperv_stimer0,0x12,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_hyperv_stimer0,0x2d,ctx->rax,CALL RAX,in-direct call
__sysvec_hyperv_stimer0,0x34,0xffffffff817b60f0,CALL 0xffffffff817b60f0,direct call
__sysvec_hyperv_stimer0,0x47,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_hyperv_stimer0,0x49,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__sysvec_hyperv_stimer0,0x56,,RET,ret
hv_machine_crash_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_machine_crash_shutdown,0x1a,ctx->rax,CALL RAX,in-direct call
hv_machine_crash_shutdown,0x1f,0xffffffff81079490,CALL 0xffffffff81079490,direct call
hv_machine_crash_shutdown,0x24,0xffffffff81031a30,CALL 0xffffffff81031a30,direct call
hv_machine_crash_shutdown,0x2e,,RET,ret
hv_machine_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_machine_shutdown,0x1e,ctx->rax,CALL RAX,in-direct call
hv_machine_shutdown,0x33,0xffffffff8106c3e0,CALL 0xffffffff8106c3e0,direct call
hv_machine_shutdown,0x42,,RET,ret
hv_machine_shutdown,0x43,0xffffffff81031a30,CALL 0xffffffff81031a30,direct call
hv_machine_shutdown,0x49,,RET,ret
hv_machine_shutdown,0x4f,0xffffffff810a7480,CALL 0xffffffff810a7480,direct call
hv_machine_shutdown,0x54,0xffffffff8106c3e0,CALL 0xffffffff8106c3e0,direct call
hv_nmi_unknown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_nmi_unknown,0x31,,RET,ret
hv_get_tsc_khz,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_get_tsc_khz,0xe,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
hv_get_tsc_khz,0x2d,,RET,ret
hv_setup_vmbus_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_setup_vmbus_handler,0x6,0xffffffff8343c230,"MOV qword ptr [0xffffffff8343c230],RDI",write .data
hv_setup_vmbus_handler,0x11,,RET,ret
hv_remove_vmbus_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_remove_vmbus_handler,0x6,0xffffffff8343c230,"MOV qword ptr [0xffffffff8343c230],0x0",write .data
hv_remove_vmbus_handler,0x15,,RET,ret
hv_setup_stimer0_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_setup_stimer0_handler,0x6,0xffffffff8343c228,"MOV qword ptr [0xffffffff8343c228],RDI",write .data
hv_setup_stimer0_handler,0x11,,RET,ret
hv_remove_stimer0_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_remove_stimer0_handler,0x6,0xffffffff8343c228,"MOV qword ptr [0xffffffff8343c228],0x0",write .data
hv_remove_stimer0_handler,0x15,,RET,ret
hv_setup_kexec_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_setup_kexec_handler,0x6,0xffffffff8343c220,"MOV qword ptr [0xffffffff8343c220],RDI",write .data
hv_setup_kexec_handler,0x11,,RET,ret
hv_remove_kexec_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_remove_kexec_handler,0x6,0xffffffff8343c220,"MOV qword ptr [0xffffffff8343c220],0x0",write .data
hv_remove_kexec_handler,0x15,,RET,ret
hv_setup_crash_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_setup_crash_handler,0x6,0xffffffff8343c218,"MOV qword ptr [0xffffffff8343c218],RDI",write .data
hv_setup_crash_handler,0x11,,RET,ret
hv_remove_crash_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hv_remove_crash_handler,0x6,0xffffffff8343c218,"MOV qword ptr [0xffffffff8343c218],0x0",write .data
hv_remove_crash_handler,0x15,,RET,ret
acrn_x2apic_available,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acrn_x2apic_available,0x18,,RET,ret
__sysvec_acrn_hv_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_acrn_hv_callback,0x1b,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_acrn_hv_callback,0x28,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_acrn_hv_callback,0x3d,ctx->rax,CALL RAX,in-direct call
__sysvec_acrn_hv_callback,0x3f,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__sysvec_acrn_hv_callback,0x4c,,RET,ret
acrn_setup_intr_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acrn_setup_intr_handler,0x6,0xffffffff8343c238,"MOV qword ptr [0xffffffff8343c238],RDI",write .data
acrn_setup_intr_handler,0x11,,RET,ret
acrn_remove_intr_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acrn_remove_intr_handler,0x6,0xffffffff8343c238,"MOV qword ptr [0xffffffff8343c238],0x0",write .data
acrn_remove_intr_handler,0x15,,RET,ret
acrn_get_tsc_khz,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
acrn_get_tsc_khz,0x1b,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x40000010",write stack
acrn_get_tsc_khz,0x26,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
acrn_get_tsc_khz,0x35,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
acrn_get_tsc_khz,0x4e,,RET,ret
acrn_get_tsc_khz,0x4f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
acpi_register_gsi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_register_gsi,0x9,0xffffffff82e42488,CALL qword ptr [0xffffffff82e42488],in-direct call
acpi_register_gsi,0x10,,RET,ret
acpi_unregister_gsi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_unregister_gsi,0x15,ctx->rax,CALL RAX,in-direct call
acpi_unregister_gsi,0x18,,RET,ret
acpi_unregister_gsi,0x19,,RET,ret
acpi_register_gsi_pic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_register_gsi_pic,0x1a,,RET,ret
acpi_register_gsi_pic,0x1d,0xffffffff81c64830,CALL 0xffffffff81c64830,direct call
acpi_register_gsi_pic,0x2a,,RET,ret
acpi_register_lapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_register_lapic,0x2e,0xffffffff810706d0,CALL 0xffffffff810706d0,direct call
acpi_register_lapic,0x4a,ctx->rdx,"MOV dword ptr [RDX],EBX",write other [TODO]
acpi_register_lapic,0x51,,RET,ret
acpi_register_lapic,0x64,ctx->rdx,"MOV dword ptr [RDX],EBX",write other [TODO]
acpi_register_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_register_ioapic,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
acpi_register_ioapic,0x33,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
acpi_register_ioapic,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
acpi_register_ioapic,0x43,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x3",write stack
acpi_register_ioapic,0x4a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],-0x7ddf1620",write stack
acpi_register_ioapic,0x52,0xffffffff816d2b60,CALL 0xffffffff816d2b60,direct call
acpi_register_ioapic,0x65,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
acpi_register_ioapic,0x76,0xffffffff81074f70,CALL 0xffffffff81074f70,direct call
acpi_register_ioapic,0x85,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
acpi_register_ioapic,0xa8,,RET,ret
acpi_register_ioapic,0xb9,0xffffffff816c6e30,CALL 0xffffffff816c6e30,direct call
acpi_register_ioapic,0xdf,0xffffffff816c6600,CALL 0xffffffff816c6600,direct call
acpi_register_ioapic,0xe6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
acpi_unregister_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_unregister_ioapic,0x15,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
acpi_unregister_ioapic,0x1d,0xffffffff810753a0,CALL 0xffffffff810753a0,direct call
acpi_unregister_ioapic,0x2c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
acpi_unregister_ioapic,0x39,,RET,ret
acpi_wakeup_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_wakeup_cpu,0x1e,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],R12D",write other [TODO]
acpi_wakeup_cpu,0x22,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
acpi_wakeup_cpu,0x32,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
acpi_wakeup_cpu,0x54,,RET,ret
acpi_wakeup_cpu,0x66,0xffffffff81280200,CALL 0xffffffff81280200,direct call
acpi_wakeup_cpu,0x6b,0xffffffff8343c268,"MOV qword ptr [0xffffffff8343c268],RAX",write .data
acpi_unregister_gsi_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_unregister_gsi_ioapic,0x15,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
acpi_unregister_gsi_ioapic,0x21,0xffffffff81074c60,CALL 0xffffffff81074c60,direct call
acpi_unregister_gsi_ioapic,0x2c,0xffffffff81074d00,CALL 0xffffffff81074d00,direct call
acpi_unregister_gsi_ioapic,0x38,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
acpi_unregister_gsi_ioapic,0x42,,RET,ret
acpi_register_gsi_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_register_gsi_ioapic,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
acpi_register_gsi_ioapic,0x55,0xffffffff81074c00,CALL 0xffffffff81074c00,direct call
acpi_register_gsi_ioapic,0x61,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
acpi_register_gsi_ioapic,0x72,0xffffffff81074c60,CALL 0xffffffff81074c60,direct call
acpi_register_gsi_ioapic,0x8f,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
acpi_register_gsi_ioapic,0xb8,,RET,ret
acpi_register_gsi_ioapic,0xef,ctx->wordctx->ptrctx->rbp - 0x80,"MOV word ptr [RBP + -0x80],CX",write stack
acpi_register_gsi_ioapic,0x122,ctx->rbp - 0x7c,"MOV byte ptr [RBP + -0x7c],DIL",write stack
acpi_register_gsi_ioapic,0x136,ctx->wordctx->ptrctx->rbp - 0x7e,"MOV word ptr [RBP + -0x7e],CX",write stack
acpi_register_gsi_ioapic,0x13a,ctx->rbp - 0x7b,"MOV byte ptr [RBP + -0x7b],AL",write stack
acpi_register_gsi_ioapic,0x13d,0xffffffff81074ee0,CALL 0xffffffff81074ee0,direct call
acpi_register_gsi_ioapic,0x147,0xffffffff81074840,CALL 0xffffffff81074840,direct call
acpi_register_gsi_ioapic,0x152,ctx->rbp - 0x7a,"MOV byte ptr [RBP + -0x7a],AL",write stack
acpi_register_gsi_ioapic,0x155,0xffffffff81074f30,CALL 0xffffffff81074f30,direct call
acpi_register_gsi_ioapic,0x15e,ctx->rbp - 0x79,"MOV byte ptr [RBP + -0x79],AL",write stack
acpi_register_gsi_ioapic,0x161,0xffffffff810748b0,CALL 0xffffffff810748b0,direct call
acpi_register_gsi_ioapic,0x16b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
acpi_gsi_to_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_gsi_to_irq,0x27,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
acpi_gsi_to_irq,0x31,ctx->rsi,"MOV dword ptr [RSI],R12D",write other [TODO]
acpi_gsi_to_irq,0x53,,RET,ret
acpi_gsi_to_irq,0x5f,0xffffffff81074be0,CALL 0xffffffff81074be0,direct call
acpi_gsi_to_irq,0x82,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],EDX",write stack
acpi_gsi_to_irq,0x87,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],ECX",write stack
acpi_gsi_to_irq,0x8a,0xffffffff82e42488,CALL qword ptr [0xffffffff82e42488],in-direct call
acpi_gsi_to_irq,0x94,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
acpi_gsi_to_irq,0x9d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
acpi_unmap_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_unmap_cpu,0x2c,ctx->wordctx->ptrctx->rcx + ctx->rcx * 0x1 - 0x7d1b3800,"MOV word ptr [RCX + RCX*0x1 + -0x7d1b3800],SI",write other [TODO]
acpi_unmap_cpu,0x34,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1,"MOV word ptr [RDX + RAX*0x1],R8W",write other [TODO]
acpi_unmap_cpu,0x4c,,RET,ret
acpi_map_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_map_cpu,0x22,0xffffffff8106b440,CALL 0xffffffff8106b440,direct call
acpi_map_cpu,0x35,0xffffffff816d2cc0,CALL 0xffffffff816d2cc0,direct call
acpi_map_cpu,0x3d,0xffffffff81729e50,CALL 0xffffffff81729e50,direct call
acpi_map_cpu,0x4c,ctx->wordctx->ptrctx->rbx + ctx->rbx * 0x1 - 0x7d1b3800,"MOV word ptr [RBX + RBX*0x1 + -0x7d1b3800],AX",write other [TODO]
acpi_map_cpu,0x54,0xffffffff81094b80,CALL 0xffffffff81094b80,direct call
acpi_map_cpu,0x59,ctx->r14,"MOV dword ptr [R14],R12D",write other [TODO]
acpi_map_cpu,0x6a,,RET,ret
acpi_isa_irq_to_gsi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_isa_irq_to_gsi,0x22,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
acpi_isa_irq_to_gsi,0x27,,RET,ret
acpi_isa_irq_to_gsi,0x2e,,RET,ret
acpi_ioapic_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_ioapic_registered,0x15,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
acpi_ioapic_registered,0x1d,0xffffffff81075520,CALL 0xffffffff81075520,direct call
acpi_ioapic_registered,0x2c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
acpi_ioapic_registered,0x39,,RET,ret
__acpi_acquire_global_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__acpi_acquire_global_lock,0x34,,RET,ret
__acpi_release_global_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__acpi_release_global_lock,0x20,,RET,ret
x86_default_set_root_pointer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_default_set_root_pointer,0x6,0xffffffff834002d0,"MOV qword ptr [0xffffffff834002d0],RDI",write .data
x86_default_set_root_pointer,0x11,,RET,ret
x86_default_get_root_pointer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_default_get_root_pointer,0x11,,RET,ret
acpi_get_wakeup_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_get_wakeup_address,0x14,,RET,ret
x86_acpi_enter_sleep_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_acpi_enter_sleep_state,0xd,0xffffffff817010ec,CALL 0xffffffff817010ec,direct call
x86_acpi_enter_sleep_state,0x13,,RET,ret
x86_acpi_suspend_lowlevel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_acpi_suspend_lowlevel,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
x86_acpi_suspend_lowlevel,0x42,ctx->rbx + 0x2c,"MOV dword ptr [RBX + 0x2c],0x0",write other [TODO]
x86_acpi_suspend_lowlevel,0x49,ctx->wordctx->ptrctx->rbx,"MOV word ptr [RBX],AX",write other [TODO]
x86_acpi_suspend_lowlevel,0x4c,0xffffffff82e4b878,CALL qword ptr [0xffffffff82e4b878],in-direct call
x86_acpi_suspend_lowlevel,0x52,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
x86_acpi_suspend_lowlevel,0x67,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
x86_acpi_suspend_lowlevel,0x77,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
x86_acpi_suspend_lowlevel,0x83,ctx->rbx + 0x24,"MOV qword ptr [RBX + 0x24],RAX",write other [TODO]
x86_acpi_suspend_lowlevel,0x9a,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],0x12345678",write other [TODO]
x86_acpi_suspend_lowlevel,0xaa,ctx->rbx + 0x30,"MOV dword ptr [RBX + 0x30],EAX",write other [TODO]
x86_acpi_suspend_lowlevel,0xbf,0xffffffff830b8a88,"MOV qword ptr [0xffffffff830b8a88],-0x7cbc2d60",write .data
x86_acpi_suspend_lowlevel,0xca,0xffffffff82e18002,"MOV qword ptr [0xffffffff82e18002],RAX",write .data
x86_acpi_suspend_lowlevel,0xd9,0xffffffff830b8a70,"MOV qword ptr [0xffffffff830b8a70],-0x7ef943a0",write .data
x86_acpi_suspend_lowlevel,0xe4,0xffffffff830b8a78,"MOV qword ptr [0xffffffff830b8a78],RAX",write .data
x86_acpi_suspend_lowlevel,0xf5,0xffffffff82e424f0,"MOV qword ptr [0xffffffff82e424f0],RAX",write .data
x86_acpi_suspend_lowlevel,0x10c,0xffffffff8106bcd0,CALL 0xffffffff8106bcd0,direct call
x86_acpi_suspend_lowlevel,0x131,,RET,ret
x86_acpi_suspend_lowlevel,0x137,0xffffffff82e4b930,CALL qword ptr [0xffffffff82e4b930],in-direct call
x86_acpi_suspend_lowlevel,0x14e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_suspend_lowlevel,0xa,0xffffffff81c65d40,CALL 0xffffffff81c65d40,direct call
do_suspend_lowlevel,0x16,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RSP",write other [TODO]
do_suspend_lowlevel,0x1d,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RBP",write other [TODO]
do_suspend_lowlevel,0x21,ctx->rax + 0x68,"MOV qword ptr [RAX + 0x68],RSI",write other [TODO]
do_suspend_lowlevel,0x25,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],RDI",write other [TODO]
do_suspend_lowlevel,0x29,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RBX",write other [TODO]
do_suspend_lowlevel,0x2d,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RCX",write other [TODO]
do_suspend_lowlevel,0x31,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RDX",write other [TODO]
do_suspend_lowlevel,0x35,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],R8",write other [TODO]
do_suspend_lowlevel,0x39,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],R9",write other [TODO]
do_suspend_lowlevel,0x3d,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],R10",write other [TODO]
do_suspend_lowlevel,0x41,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],R11",write other [TODO]
do_suspend_lowlevel,0x45,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],R12",write other [TODO]
do_suspend_lowlevel,0x49,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],R13",write other [TODO]
do_suspend_lowlevel,0x4d,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R14",write other [TODO]
do_suspend_lowlevel,0x51,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
do_suspend_lowlevel,0x5b,0xffffffff82e424e0,"MOV qword ptr [0xffffffff82e424e0],-0x7ef94290",write .data
do_suspend_lowlevel,0x66,0xffffffff82e424e8,"MOV qword ptr [0xffffffff82e424e8],RSP",write .data
do_suspend_lowlevel,0x6e,0xffffffff82e424c0,"MOV qword ptr [0xffffffff82e424c0],RBP",write .data
do_suspend_lowlevel,0x76,0xffffffff82e424d8,"MOV qword ptr [0xffffffff82e424d8],RBX",write .data
do_suspend_lowlevel,0x7e,0xffffffff82e424d0,"MOV qword ptr [0xffffffff82e424d0],RDI",write .data
do_suspend_lowlevel,0x86,0xffffffff82e424c8,"MOV qword ptr [0xffffffff82e424c8],RSI",write .data
do_suspend_lowlevel,0x99,0xffffffff8106bae0,CALL 0xffffffff8106bae0,direct call
arch_apei_enable_cmcff,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_apei_enable_cmcff,0x24,,RET,ret
arch_apei_enable_cmcff,0x38,,RET,ret
arch_apei_enable_cmcff,0x3b,,RET,ret
arch_apei_report_mem_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_apei_report_mem_error,0x9,0xffffffff810570c0,CALL 0xffffffff810570c0,direct call
arch_apei_report_mem_error,0xf,,RET,ret
arch_apei_report_x86_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_apei_report_x86_error,0x9,0xffffffff810571c0,CALL 0xffffffff810571c0,direct call
arch_apei_report_x86_error,0xf,,RET,ret
cpc_supported_by_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpc_supported_by_cpu,0x1d,,RET,ret
cpc_supported_by_cpu,0x3c,,RET,ret
cpc_supported_by_cpu,0x52,,RET,ret
cpc_ffh_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpc_ffh_supported,0xf,,RET,ret
cpc_read_ffh,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpc_read_ffh,0x15,0xffffffff81646ae0,CALL 0xffffffff81646ae0,direct call
cpc_read_ffh,0x4f,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
cpc_read_ffh,0x5b,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
cpc_read_ffh,0x62,,RET,ret
cpc_write_ffh,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpc_write_ffh,0x2b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
cpc_write_ffh,0x31,0xffffffff81646ae0,CALL 0xffffffff81646ae0,direct call
cpc_write_ffh,0x53,,RET,ret
cpc_write_ffh,0x90,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
cpc_write_ffh,0x94,0xffffffff816467d0,CALL 0xffffffff816467d0,direct call
cpc_write_ffh,0x9b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_freq_invariance_cppc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_freq_invariance_cppc,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
acpi_processor_power_init_bm_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_processor_power_init_bm_check,0x20,ctx->rdi,"MOV byte ptr [RDI],CL",write other [TODO]
acpi_processor_power_init_bm_check,0x3c,ctx->rdx,"MOV byte ptr [RDX],CL",write other [TODO]
acpi_processor_power_init_bm_check,0x6b,ctx->rdx,"MOV byte ptr [RDX],CL",write other [TODO]
acpi_processor_power_init_bm_check,0x85,ctx->rdx,"MOV byte ptr [RDX],AL",write other [TODO]
acpi_processor_power_init_bm_check,0x88,,RET,ret
acpi_processor_ffh_cstate_probe_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_processor_ffh_cstate_probe_cpu,0x2a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
acpi_processor_ffh_cstate_probe_cpu,0x30,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x5",write stack
acpi_processor_ffh_cstate_probe_cpu,0x37,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
acpi_processor_ffh_cstate_probe_cpu,0x3e,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
acpi_processor_ffh_cstate_probe_cpu,0x96,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
acpi_processor_ffh_cstate_probe_cpu,0xb1,,RET,ret
acpi_processor_ffh_cstate_probe_cpu,0xbb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
acpi_processor_ffh_cstate_probe_cpu,0xc2538f,ctx->wordctx->ptrctx->rax + ctx->rax * 0x1 - 0x7cbc2d50,"MOV word ptr [RAX + RAX*0x1 + -0x7cbc2d50],0x1",write other [TODO]
acpi_processor_ffh_cstate_probe_cpu,0xc253a4,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
acpi_processor_ffh_cstate_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_processor_ffh_cstate_probe,0x58,ctx->r12 + ctx->rax * 0x8,"MOV dword ptr [R12 + RAX*0x8],0x0",write other [TODO]
acpi_processor_ffh_cstate_probe,0x64,ctx->r12 + ctx->rax * 0x8 + 0x4,"MOV dword ptr [R12 + RAX*0x8 + 0x4],0x0",write other [TODO]
acpi_processor_ffh_cstate_probe,0x86,0xffffffff810c6ba0,CALL 0xffffffff810c6ba0,direct call
acpi_processor_ffh_cstate_probe,0x96,ctx->r12 + ctx->rdx * 0x8,"MOV dword ptr [R12 + RDX*0x8],ECX",write other [TODO]
acpi_processor_ffh_cstate_probe,0x9e,ctx->r12 + ctx->rdx * 0x8 + 0x4,"MOV dword ptr [R12 + RDX*0x8 + 0x4],0x1",write other [TODO]
acpi_processor_ffh_cstate_probe,0xb5,ctx->rbx + 0x10,"MOV byte ptr [RBX + 0x10],0x1",write other [TODO]
acpi_processor_ffh_cstate_probe,0xc1,,RET,ret
acpi_processor_ffh_cstate_probe,0xd9,0xffffffff8106c1a0,CALL 0xffffffff8106c1a0,direct call
crash_nmi_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crash_nmi_callback,0x18,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
crash_nmi_callback,0x1e,0xffffffff8343d2e0,CALL qword ptr [0xffffffff8343d2e0],in-direct call
crash_nmi_callback,0x2b,0xffffffff82e4b970,CALL qword ptr [0xffffffff82e4b970],in-direct call
crash_nmi_callback,0x3a,,RET,ret
machine_real_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_real_restart,0xc,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
machine_real_restart,0x19,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
machine_real_restart,0x25,0xffffffff81041470,CALL 0xffffffff81041470,direct call
machine_real_restart,0x31,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
machine_real_restart,0x36,0xffffffff810351b0,CALL 0xffffffff810351b0,direct call
native_machine_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_machine_shutdown,0x9,0xffffffff81074970,CALL 0xffffffff81074970,direct call
native_machine_shutdown,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_machine_shutdown,0x19,0xffffffff82e425b8,CALL qword ptr [0xffffffff82e425b8],in-direct call
native_machine_shutdown,0x1f,0xffffffff810704e0,CALL 0xffffffff810704e0,direct call
native_machine_shutdown,0x24,0xffffffff81074e90,CALL 0xffffffff81074e90,direct call
native_machine_shutdown,0x29,0xffffffff8107e6d0,CALL 0xffffffff8107e6d0,direct call
native_machine_shutdown,0x2e,0xffffffff826ba480,CALL qword ptr [0xffffffff826ba480],in-direct call
native_machine_shutdown,0x35,,RET,ret
native_machine_power_off,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_machine_power_off,0x9,0xffffffff810d4820,CALL 0xffffffff810d4820,direct call
native_machine_power_off,0x1c,0xffffffff810d57f0,CALL 0xffffffff810d57f0,direct call
native_machine_power_off,0x26,0xffffffff810491f0,CALL 0xffffffff810491f0,direct call
native_machine_power_off,0x2c,,RET,ret
native_machine_power_off,0x2d,0xffffffff826bba38,CALL qword ptr [0xffffffff826bba38],in-direct call
native_machine_halt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_machine_halt,0x9,0xffffffff826bba38,CALL qword ptr [0xffffffff826bba38],in-direct call
native_machine_halt,0x14,0xffffffff810491f0,CALL 0xffffffff810491f0,direct call
native_machine_halt,0x1b,0xffffffff81042890,CALL 0xffffffff81042890,direct call
cr4_clear_bits.constprop.0,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cr4_clear_bits.constprop.0,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cr4_clear_bits.constprop.0,0x1b,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_clear_bits.constprop.0,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cr4_clear_bits.constprop.0,0x30,,RET,ret
vmxoff_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vmxoff_nmi,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
vmxoff_nmi,0x20,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x1",write stack
vmxoff_nmi,0x2b,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
vmxoff_nmi,0x3a,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
vmxoff_nmi,0x56,,RET,ret
vmxoff_nmi,0x62,0xffffffff8106c480,CALL 0xffffffff8106c480,direct call
vmxoff_nmi,0x69,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mach_reboot_fixups,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mach_reboot_fixups,0xa,,RET,ret
machine_power_off,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_power_off,0x9,0xffffffff826bba30,CALL qword ptr [0xffffffff826bba30],in-direct call
machine_power_off,0x10,,RET,ret
machine_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_shutdown,0x9,0xffffffff826bba38,CALL qword ptr [0xffffffff826bba38],in-direct call
machine_shutdown,0x10,,RET,ret
machine_emergency_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_emergency_restart,0x6,0xffffffff8343d2e8,"MOV dword ptr [0xffffffff8343d2e8],0x1",write .data
machine_emergency_restart,0x13,0xffffffff826bba48,CALL qword ptr [0xffffffff826bba48],in-direct call
machine_emergency_restart,0x1a,,RET,ret
machine_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_restart,0x9,0xffffffff826bba20,CALL qword ptr [0xffffffff826bba20],in-direct call
machine_restart,0x10,,RET,ret
machine_halt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_halt,0x9,0xffffffff826bba28,CALL qword ptr [0xffffffff826bba28],in-direct call
machine_halt,0x10,,RET,ret
machine_crash_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_crash_shutdown,0x9,0xffffffff826bba40,CALL qword ptr [0xffffffff826bba40],in-direct call
machine_crash_shutdown,0x10,,RET,ret
nmi_shootdown_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_shootdown_cpus,0xa,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
nmi_shootdown_cpus,0x17,0xffffffff82e42550,"MOV dword ptr [0xffffffff82e42550],EAX",write .data
nmi_shootdown_cpus,0x2a,0xffffffff8343d2e0,"MOV qword ptr [0xffffffff8343d2e0],RDI",write .data
nmi_shootdown_cpus,0x36,0xffffffff8343d2dc,"MOV dword ptr [0xffffffff8343d2dc],EAX",write .data
nmi_shootdown_cpus,0x3c,0xffffffff8103a810,CALL 0xffffffff8103a810,direct call
nmi_shootdown_cpus,0x4a,,RET,ret
nmi_shootdown_cpus,0x53,0xffffffff81070d80,CALL 0xffffffff81070d80,direct call
nmi_shootdown_cpus,0x58,0xffffffff8343d2d8,"MOV dword ptr [0xffffffff8343d2d8],0x1",write .data
nmi_shootdown_cpus,0x7c,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
nmi_shootdown_cpus,0x92,,RET,ret
native_machine_emergency_restart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_machine_emergency_restart,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
native_machine_emergency_restart,0x3c,0xffffffff810491f0,CALL 0xffffffff810491f0,direct call
native_machine_emergency_restart,0x5e,ctx->wordctx->ptrctx->rdx + 0x472,"MOV word ptr [RDX + 0x472],AX",write other [TODO]
native_machine_emergency_restart,0x65,0xffffffff81a24c10,CALL 0xffffffff81a24c10,direct call
native_machine_emergency_restart,0x8d,0xffffffff81036f80,CALL 0xffffffff81036f80,direct call
native_machine_emergency_restart,0x98,0xffffffff82e6c230,"MOV dword ptr [0xffffffff82e6c230],EAX",write .data
native_machine_emergency_restart,0xb0,0xffffffff8343d2c8,"MOV byte ptr [0xffffffff8343d2c8],0x1",write .data
native_machine_emergency_restart,0xc7,ctx->edx,"MOV EDX,R13D",write other [TODO]
native_machine_emergency_restart,0xe7,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_machine_emergency_restart,0xee,ctx->edx,"MOV EDX,R13D",write other [TODO]
native_machine_emergency_restart,0xfa,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_machine_emergency_restart,0x101,0xffffffff8106c530,CALL 0xffffffff8106c530,direct call
native_machine_emergency_restart,0x11e,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_machine_emergency_restart,0x133,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_machine_emergency_restart,0x142,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_machine_emergency_restart,0x170,0xffffffff81a24730,CALL 0xffffffff81a24730,direct call
native_machine_emergency_restart,0x181,0xffffffff8106c390,CALL 0xffffffff8106c390,direct call
native_machine_emergency_restart,0x186,0xffffffff816c7420,CALL 0xffffffff816c7420,direct call
native_machine_emergency_restart,0x19f,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_machine_emergency_restart,0x1a5,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x1",write stack
native_machine_emergency_restart,0x1b4,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
native_machine_emergency_restart,0x1c3,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
native_machine_emergency_restart,0x1e2,0xffffffff8106c600,CALL 0xffffffff8106c600,direct call
native_machine_emergency_restart,0x1ef,0xffffffff8106c480,CALL 0xffffffff8106c480,direct call
run_crash_ipi_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
run_crash_ipi_callback,0xf,,RET,ret
run_crash_ipi_callback,0x19,0xffffffff8106c350,CALL 0xffffffff8106c350,direct call
run_crash_ipi_callback,0x1f,,RET,ret
nmi_panic_self_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_panic_self_stop,0x20,0xffffffff8106c350,CALL 0xffffffff8106c350,direct call
native_stop_other_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_stop_other_cpus,0x44,,RET,ret
native_stop_other_cpus,0x4d,0xffffffff81070d80,CALL 0xffffffff81070d80,direct call
native_stop_other_cpus,0x70,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_stop_other_cpus,0xbb,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_stop_other_cpus,0xcb,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_stop_other_cpus,0xd4,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_stop_other_cpus,0xda,0xffffffff810704b0,CALL 0xffffffff810704b0,direct call
native_stop_other_cpus,0xee,0xffffffff81054420,CALL 0xffffffff81054420,direct call
native_stop_other_cpus,0xfc,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
native_stop_other_cpus,0x106,,RET,ret
native_stop_other_cpus,0x107,,RET,ret
native_stop_other_cpus,0x111,0xffffffff8103a810,CALL 0xffffffff8103a810,direct call
native_stop_other_cpus,0x128,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_stop_other_cpus,0x132,0xffffffff81070d80,CALL 0xffffffff81070d80,direct call
cr4_clear_bits.constprop.0,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cr4_clear_bits.constprop.0,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cr4_clear_bits.constprop.0,0x1b,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_clear_bits.constprop.0,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cr4_clear_bits.constprop.0,0x30,,RET,ret
__sysvec_reboot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_reboot,0x1d,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__sysvec_reboot,0x2a,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_reboot,0x2c,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x1",write stack
__sysvec_reboot,0x3b,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
__sysvec_reboot,0x4a,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
__sysvec_reboot,0x58,0xffffffff81042890,CALL 0xffffffff81042890,direct call
__sysvec_reboot,0x68,0xffffffff8106ca30,CALL 0xffffffff8106ca30,direct call
smp_stop_nmi_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
smp_stop_nmi_callback,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
smp_stop_nmi_callback,0x42,,RET,ret
smp_stop_nmi_callback,0x43,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x1",write stack
smp_stop_nmi_callback,0x52,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
smp_stop_nmi_callback,0x61,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
smp_stop_nmi_callback,0x6f,0xffffffff81042890,CALL 0xffffffff81042890,direct call
smp_stop_nmi_callback,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
smp_stop_nmi_callback,0x84,0xffffffff8106ca30,CALL 0xffffffff8106ca30,direct call
__sysvec_call_function_single,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_call_function_single,0x17,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_call_function_single,0x22,0xffffffff8116ea90,CALL 0xffffffff8116ea90,direct call
__sysvec_call_function_single,0x2a,,RET,ret
__sysvec_call_function,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_call_function,0x17,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_call_function,0x22,0xffffffff8116ea90,CALL 0xffffffff8116ea90,direct call
__sysvec_call_function,0x2a,,RET,ret
cpu_smt_mask,0x12,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
cpu_smt_mask,0x16,,RET,ret
cpu_cpu_mask,0x12,ctx->rax,"MOVSXD RAX,dword ptr [RDX + RAX*0x1]",write other [TODO]
cpu_cpu_mask,0x1e,,RET,ret
x86_core_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_core_flags,0x1d,,RET,ret
x86_smt_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_smt_flags,0x1f,,RET,ret
cpu_coregroup_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_coregroup_mask,0x1b,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
cpu_coregroup_mask,0x20,,RET,ret
cpu_clustergroup_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_clustergroup_mask,0x1b,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
cpu_clustergroup_mask,0x20,,RET,ret
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
cpumask_weight,0x1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpumask_weight,0xa,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
cpumask_weight,0x10,,RET,ret
cond_wakeup_cpu0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cond_wakeup_cpu0,0x1a,,RET,ret
cond_wakeup_cpu0,0x1f,0xffffffff810002c0,CALL 0xffffffff810002c0,direct call
cond_wakeup_cpu0,0x25,,RET,ret
wakeup_cpu0_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wakeup_cpu0_nmi,0x17,,RET,ret
wakeup_cpu0_nmi,0x32,,RET,ret
x86_cluster_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_cluster_flags,0x1d,,RET,ret
topology_sane.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_sane.isra.0,0x3a,,RET,ret
topology_sane.isra.0,0x59,0xffffffff830c7c08,"MOV byte ptr [0xffffffff830c7c08],0x1",write .data
topology_sane.isra.0,0x60,ctx->rbp - 0x1,"MOV byte ptr [RBP + -0x1],AL",write stack
topology_sane.isra.0,0x63,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
match_smt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
match_smt,0x35,,RET,ret
match_smt,0x70,0xffffffff8106ce90,CALL 0xffffffff8106ce90,direct call
match_smt,0x76,,RET,ret
match_smt,0x103,0xffffffff8106ce90,CALL 0xffffffff8106ce90,direct call
match_smt,0x109,,RET,ret
topology_phys_to_logical_die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_phys_to_logical_die,0x10,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
topology_phys_to_logical_die,0x42,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
topology_phys_to_logical_die,0x8e,,RET,ret
topology_phys_to_logical_die,0x9a,,RET,ret
topology_phys_to_logical_pkg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_phys_to_logical_pkg,0x6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
topology_phys_to_logical_pkg,0x53,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
topology_phys_to_logical_pkg,0x6b,,RET,ret
topology_phys_to_logical_pkg,0x77,,RET,ret
arch_update_cpu_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_update_cpu_topology,0xd,0xffffffff8343d2f0,"MOV byte ptr [0xffffffff8343d2f0],0x0",write .data
arch_update_cpu_topology,0x18,,RET,ret
topology_is_primary_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_is_primary_thread,0x1e,0xffffffff810706a0,CALL 0xffffffff810706a0,direct call
topology_is_primary_thread,0x24,,RET,ret
topology_smt_supported,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_smt_supported,0x14,,RET,ret
topology_update_package_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_update_package_map,0x14,0xffffffff8106d0b0,CALL 0xffffffff8106d0b0,direct call
topology_update_package_map,0x28,0xffffffff83117be8,"MOV dword ptr [0xffffffff83117be8],EAX",write .data
topology_update_package_map,0x46,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 + 0x104,"MOV word ptr [RDX + RAX*0x1 + 0x104],BX",write other [TODO]
topology_update_package_map,0x56,,RET,ret
topology_update_die_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
topology_update_die_map,0x17,0xffffffff8106d010,CALL 0xffffffff8106d010,direct call
topology_update_die_map,0x2b,0xffffffff83117be4,"MOV dword ptr [0xffffffff83117be4],EAX",write .data
topology_update_die_map,0x49,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 + 0x10a,"MOV word ptr [RDX + RAX*0x1 + 0x10a],BX",write other [TODO]
topology_update_die_map,0x59,,RET,ret
smp_store_cpu_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
smp_store_cpu_info,0x3a,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
smp_store_cpu_info,0x3d,ctx->wordctx->ptrctx->r12 + 0x10c,"MOV word ptr [R12 + 0x10c],AX",write other [TODO]
smp_store_cpu_info,0x49,0xffffffff8104c620,CALL 0xffffffff8104c620,direct call
smp_store_cpu_info,0x5c,,RET,ret
set_cpu_sibling_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_cpu_sibling_map,0x1c,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDI",write stack
set_cpu_sibling_map,0x21,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
set_cpu_sibling_map,0x4d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
set_cpu_sibling_map,0x5e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
set_cpu_sibling_map,0x79,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
set_cpu_sibling_map,0x84,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
set_cpu_sibling_map,0x9e,0xffffffff8104cca0,CALL 0xffffffff8104cca0,direct call
set_cpu_sibling_map,0x123,0xffffffff8106ce90,CALL 0xffffffff8106ce90,direct call
set_cpu_sibling_map,0x157,ctx->rax,"MOV RAX,qword ptr [RSI + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x18e,ctx->rax,"MOV RAX,qword ptr [RSI + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x1c5,ctx->rax,"MOV RAX,qword ptr [RCX + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x1d2,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
set_cpu_sibling_map,0x1e2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
set_cpu_sibling_map,0x229,ctx->rcx,"MOV RCX,qword ptr [RBP + -0x50]",write other [TODO]
set_cpu_sibling_map,0x2e0,0xffffffff8106ce90,CALL 0xffffffff8106ce90,direct call
set_cpu_sibling_map,0x2f8,0xffffffff8106cf00,CALL 0xffffffff8106cf00,direct call
set_cpu_sibling_map,0x342,0xffffffff8343d2fc,"MOV byte ptr [0xffffffff8343d2fc],0x1",write .data
set_cpu_sibling_map,0x361,0xffffffff8106cde0,CALL 0xffffffff8106cde0,direct call
set_cpu_sibling_map,0x383,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
set_cpu_sibling_map,0x3b3,ctx->esi,"MOV ESI,ECX",write other [TODO]
set_cpu_sibling_map,0x3b9,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
set_cpu_sibling_map,0x3c8,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R12D",write stack
set_cpu_sibling_map,0x3e7,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
set_cpu_sibling_map,0x40d,ctx->esi,"MOV ESI,ECX",write other [TODO]
set_cpu_sibling_map,0x40f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
set_cpu_sibling_map,0x48c,ctx->wordctx->ptrctx->r15 + 0x100,"MOV word ptr [R15 + 0x100],AX",write other [TODO]
set_cpu_sibling_map,0x4ac,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x4c4,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x4dc,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x4f4,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x50c,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
set_cpu_sibling_map,0x51a,ctx->wordctx->ptrctx->r15 + 0x100,"MOV word ptr [R15 + 0x100],AX",write other [TODO]
set_cpu_sibling_map,0x530,,RET,ret
set_cpu_sibling_map,0x539,ctx->rcx,"MOV RCX,qword ptr [RBP + -0x48]",write other [TODO]
set_cpu_sibling_map,0x53d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
set_cpu_sibling_map,0x541,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
set_cpu_sibling_map,0x547,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
set_cpu_sibling_map,0x54f,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
set_cpu_sibling_map,0x587,0xffffffff83117be0,"MOV dword ptr [0xffffffff83117be0],EAX",write .data
set_cpu_sibling_map,0x598,0xffffffff8106cf00,CALL 0xffffffff8106cf00,direct call
start_secondary,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
start_secondary,0x17,0xffffffff8104b780,CALL 0xffffffff8104b780,direct call
start_secondary,0x1c,0xffffffff8104cb80,CALL 0xffffffff8104cb80,direct call
start_secondary,0x28,0xffffffff8113d710,CALL 0xffffffff8113d710,direct call
start_secondary,0x2d,0xffffffff82e3cd38,CALL qword ptr [0xffffffff82e3cd38],in-direct call
start_secondary,0x3a,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
start_secondary,0x3d,0xffffffff81070550,CALL 0xffffffff81070550,direct call
start_secondary,0x45,0xffffffff8106d260,CALL 0xffffffff8106d260,direct call
start_secondary,0x51,0xffffffff8106d2c0,CALL 0xffffffff8106d2c0,direct call
start_secondary,0x56,0xffffffff8104e350,CALL 0xffffffff8104e350,direct call
start_secondary,0x5b,0xffffffff81001d30,CALL 0xffffffff81001d30,direct call
start_secondary,0x64,ctx->rcx,"MOV RCX,qword ptr [0xffffffff82e180f0]",write other [TODO]
start_secondary,0x7a,ctx->rdx + ctx->rax * 0x1 + 0xe8,"MOV qword ptr [RDX + RAX*0x1 + 0xe8],RCX",write other [TODO]
start_secondary,0x8a,0xffffffff810a7d70,CALL 0xffffffff810a7d70,direct call
start_secondary,0x9e,0xffffffff8343d300,"MOV dword ptr [0xffffffff8343d300],0x0",write .data
start_secondary,0xa8,0xffffffff8106ef10,CALL 0xffffffff8106ef10,direct call
start_secondary,0xad,0xffffffff81042060,CALL 0xffffffff81042060,direct call
start_secondary,0xb2,0xffffffff81072800,CALL 0xffffffff81072800,direct call
start_secondary,0xc3,0xffffffff810a85a0,CALL 0xffffffff810a85a0,direct call
start_secondary,0xc8,0xffffffff81072a60,CALL 0xffffffff81072a60,direct call
start_secondary,0xcd,0xffffffff81072820,CALL 0xffffffff81072820,direct call
start_secondary,0xd9,0xffffffff810d6850,CALL 0xffffffff810d6850,direct call
start_secondary,0xde,0xffffffff826ba490,CALL qword ptr [0xffffffff826ba490],in-direct call
start_secondary,0xe4,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
start_secondary,0xea,0xffffffff82e3cd30,CALL qword ptr [0xffffffff82e3cd30],in-direct call
start_secondary,0xf8,0xffffffff810fd850,CALL 0xffffffff810fd850,direct call
start_secondary,0x10f,0xffffffff81634010,CALL 0xffffffff81634010,direct call
wakeup_secondary_cpu_via_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wakeup_secondary_cpu_via_nmi,0x22,ctx->rax + 0x80,CALL qword ptr [RAX + 0x80],in-direct call
wakeup_secondary_cpu_via_nmi,0x31,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
wakeup_secondary_cpu_via_nmi,0x3c,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
wakeup_secondary_cpu_via_nmi,0x41,0xffffffff81070020,CALL 0xffffffff81070020,direct call
wakeup_secondary_cpu_via_nmi,0x59,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
wakeup_secondary_cpu_via_nmi,0x68,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
wakeup_secondary_cpu_via_nmi,0x8e,,RET,ret
wakeup_secondary_cpu_via_nmi,0xc23d82,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
common_cpu_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
common_cpu_up,0x14,0xffffffff8103f150,CALL 0xffffffff8103f150,direct call
common_cpu_up,0x2b,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],RBX",write other [TODO]
common_cpu_up,0x48,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],RCX",write other [TODO]
common_cpu_up,0x4c,0xffffffff81039cc0,CALL 0xffffffff81039cc0,direct call
common_cpu_up,0x5d,0xffffffff830b8a78,"MOV qword ptr [0xffffffff830b8a78],RDX",write .data
common_cpu_up,0x6a,,RET,ret
native_cpu_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_cpu_up,0x23,ctx->rax + 0xc8,CALL qword ptr [RAX + 0xc8],in-direct call
native_cpu_up,0x56,ctx->rax + 0x98,CALL qword ptr [RAX + 0x98],in-direct call
native_cpu_up,0x78,0xffffffff81058890,CALL 0xffffffff81058890,direct call
native_cpu_up,0x80,0xffffffff810d67f0,CALL 0xffffffff810d67f0,direct call
native_cpu_up,0xd2,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],0x0",write other [TODO]
native_cpu_up,0xda,0xffffffff8106da80,CALL 0xffffffff8106da80,direct call
native_cpu_up,0xed,ctx->rdx,"MOV RDX,qword ptr [0xffffffff826cbfc0]",write other [TODO]
native_cpu_up,0xff,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ECX",write stack
native_cpu_up,0x107,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
native_cpu_up,0x110,0xffffffff830b8a70,"MOV qword ptr [0xffffffff830b8a70],-0x7ef92760",write .data
native_cpu_up,0x11b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
native_cpu_up,0x131,ctx->r15 + 0x14d8,"MOV qword ptr [R15 + 0x14d8],RDX",write other [TODO]
native_cpu_up,0x140,0xffffffff830b8a88,"MOV qword ptr [0xffffffff830b8a88],RDX",write .data
native_cpu_up,0x147,0xffffffff82e18002,"MOV qword ptr [0xffffffff82e18002],RAX",write .data
native_cpu_up,0x14e,0xffffffff8103cf00,CALL 0xffffffff8103cf00,direct call
native_cpu_up,0x1c7,0xffffffff81c8cd20,CALL 0xffffffff81c8cd20,direct call
native_cpu_up,0x1e2,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0x1ff,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
native_cpu_up,0x211,0xffffffff81041470,CALL 0xffffffff81041470,direct call
native_cpu_up,0x220,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
native_cpu_up,0x23b,ctx->wordctx->ptrctx->rax + 0x469,"MOV word ptr [RAX + 0x469],DX",write other [TODO]
native_cpu_up,0x250,ctx->wordctx->ptrctx->rdx + 0x467,"MOV word ptr [RDX + 0x467],AX",write other [TODO]
native_cpu_up,0x25e,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
native_cpu_up,0x26d,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_cpu_up,0x2a3,ctx->rax,CALL RAX,in-direct call
native_cpu_up,0x2cf,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
native_cpu_up,0x30a,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
native_cpu_up,0x32a,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_cpu_up,0x333,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_cpu_up,0x33c,0xffffffff8106eda0,CALL 0xffffffff8106eda0,direct call
native_cpu_up,0x34a,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
native_cpu_up,0x35c,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
native_cpu_up,0x361,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
native_cpu_up,0x382,0xffffffff8103ab30,CALL 0xffffffff8103ab30,direct call
native_cpu_up,0x3ca,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
native_cpu_up,0x3d1,0xffffffff81c8cd20,CALL 0xffffffff81c8cd20,direct call
native_cpu_up,0x3d9,0xffffffff8343d2f4,"MOV dword ptr [0xffffffff8343d2f4],EAX",write .data
native_cpu_up,0x3eb,0xffffffff8106cde0,CALL 0xffffffff8106cde0,direct call
native_cpu_up,0x3f2,0xffffffff81c8cd20,CALL 0xffffffff81c8cd20,direct call
native_cpu_up,0x3fa,0xffffffff8343d2f8,"MOV dword ptr [0xffffffff8343d2f8],EAX",write .data
native_cpu_up,0x420,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
native_cpu_up,0x42c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
native_cpu_up,0x430,0xffffffff81041470,CALL 0xffffffff81041470,direct call
native_cpu_up,0x440,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
native_cpu_up,0x44c,ctx->rax + 0x467,"MOV dword ptr [RAX + 0x467],0x0",write other [TODO]
native_cpu_up,0x487,0xffffffff8103a810,CALL 0xffffffff8103a810,direct call
native_cpu_up,0x497,0xffffffff8343d300,"MOV dword ptr [0xffffffff8343d300],0x1",write .data
native_cpu_up,0x4bb,0xffffffff8106d9c0,CALL 0xffffffff8106d9c0,direct call
native_cpu_up,0x4f0,0xffffffff82000810,CALL 0xffffffff82000810,direct call
native_cpu_up,0x52a,0xffffffff81070020,CALL 0xffffffff81070020,direct call
native_cpu_up,0x545,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
native_cpu_up,0x554,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_cpu_up,0x56b,ctx->rax + 0x80,CALL qword ptr [RAX + 0x80],in-direct call
native_cpu_up,0x57d,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
native_cpu_up,0x586,0xffffffff81c8a4c0,CALL 0xffffffff81c8a4c0,direct call
native_cpu_up,0x59f,ctx->rax + 0x80,CALL qword ptr [RAX + 0x80],in-direct call
native_cpu_up,0x5b1,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
native_cpu_up,0x5c0,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x1",write stack
native_cpu_up,0x5ce,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
native_cpu_up,0x5ea,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
native_cpu_up,0x5f9,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_cpu_up,0x60e,ctx->rax + 0x80,CALL qword ptr [RAX + 0x80],in-direct call
native_cpu_up,0x629,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_cpu_up,0x63f,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
native_cpu_up,0x648,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
native_cpu_up,0x654,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_cpu_up,0x66d,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
native_cpu_up,0x67c,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_cpu_up,0x68b,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
native_cpu_up,0x69a,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
native_cpu_up,0x6cd,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_cpu_up,0x6f1,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_cpu_up,0x746,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x2",write stack
native_cpu_up,0x7fe,0xffffffff82e42650,"MOV dword ptr [0xffffffff82e42650],R15D",write .data
native_cpu_up,0x805,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
native_cpu_up,0x808,0xffffffff81c8cd20,CALL 0xffffffff81c8cd20,direct call
native_cpu_up,0x823,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0xc23c74,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
native_cpu_up,0xc23c77,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0xc23c8b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0xc23cac,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0xc23cc6,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0xc23ce7,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_up,0xc23cf8,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_disable_smp_support,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_disable_smp_support,0x9,0xffffffff81074880,CALL 0xffffffff81074880,direct call
arch_disable_smp_support,0xf,,RET,ret
arch_thaw_secondary_cpus_begin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_thaw_secondary_cpus_begin,0x9,0xffffffff810588d0,CALL 0xffffffff810588d0,direct call
arch_thaw_secondary_cpus_begin,0xf,,RET,ret
arch_thaw_secondary_cpus_end,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_thaw_secondary_cpus_end,0x9,0xffffffff81058900,CALL 0xffffffff81058900,direct call
arch_thaw_secondary_cpus_end,0xf,,RET,ret
cpu_disable_common,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_disable_common,0x26,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
cpu_disable_common,0x34,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ECX",write stack
cpu_disable_common,0x4c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
cpu_disable_common,0x50,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
cpu_disable_common,0x54,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpu_disable_common,0x62,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpu_disable_common,0x67,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpu_disable_common,0x90,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpu_disable_common,0x95,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpu_disable_common,0xc2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpu_disable_common,0xc7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpu_disable_common,0xf3,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpu_disable_common,0xf8,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpu_disable_common,0x11e,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpu_disable_common,0x152,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
cpu_disable_common,0x17e,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
cpu_disable_common,0x1a3,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
cpu_disable_common,0x1cf,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
cpu_disable_common,0x1f4,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
cpu_disable_common,0x201,ctx->wordctx->ptrctx->rax + 0x106,"MOV word ptr [RAX + 0x106],DX",write other [TODO]
cpu_disable_common,0x208,ctx->wordctx->ptrctx->rax + 0x100,"MOV word ptr [RAX + 0x100],CX",write other [TODO]
cpu_disable_common,0x231,0xffffffff8106cde0,CALL 0xffffffff8106cde0,direct call
cpu_disable_common,0x240,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpu_disable_common,0x250,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpu_disable_common,0x260,0xffffffff83117be0,"MOV dword ptr [0xffffffff83117be0],R13D",write .data
cpu_disable_common,0x267,0xffffffff81072800,CALL 0xffffffff81072800,direct call
cpu_disable_common,0x273,0xffffffff810a85a0,CALL 0xffffffff810a85a0,direct call
cpu_disable_common,0x29e,0xffffffff81094c80,CALL 0xffffffff81094c80,direct call
cpu_disable_common,0x2a3,0xffffffff81072820,CALL 0xffffffff81072820,direct call
cpu_disable_common,0x2a8,0xffffffff81039be0,CALL 0xffffffff81039be0,direct call
cpu_disable_common,0x2ad,0xffffffff81072ad0,CALL 0xffffffff81072ad0,direct call
cpu_disable_common,0x2c0,,RET,ret
cpu_disable_common,0x321,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
cpu_disable_common,0x329,0xffffffff8106cde0,CALL 0xffffffff8106cde0,direct call
cpu_disable_common,0x33f,ctx->rax + ctx->r15 * 0x1 + 0x10e,"MOV byte ptr [RAX + R15*0x1 + 0x10e],0x0",write other [TODO]
cpu_disable_common,0x395,ctx->rcx,"MOV RCX,qword ptr [RBP + -0x30]",write other [TODO]
cpu_disable_common,0x39d,0xffffffff8106cde0,CALL 0xffffffff8106cde0,direct call
native_cpu_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_cpu_disable,0xb,0xffffffff81072c00,CALL 0xffffffff81072c00,direct call
native_cpu_disable,0x17,0xffffffff8106e360,CALL 0xffffffff8106e360,direct call
native_cpu_disable,0x1c,0xffffffff810702c0,CALL 0xffffffff810702c0,direct call
native_cpu_disable,0x29,,RET,ret
common_cpu_die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
common_cpu_die,0x13,0xffffffff810d6880,CALL 0xffffffff810d6880,direct call
common_cpu_die,0x34,,RET,ret
common_cpu_die,0xc230d4,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
native_cpu_die,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_cpu_die,0x13,0xffffffff810d6880,CALL 0xffffffff810d6880,direct call
native_cpu_die,0x32,,RET,ret
native_cpu_die,0xc230be,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
play_dead_common,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
play_dead_common,0x9,0xffffffff810e77e0,CALL 0xffffffff810e77e0,direct call
play_dead_common,0xe,0xffffffff810d6980,CALL 0xffffffff810d6980,direct call
play_dead_common,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
play_dead_common,0x1a,,RET,ret
hlt_play_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hlt_play_dead,0x3a,0xffffffff82e4b908,CALL qword ptr [0xffffffff82e4b908],in-direct call
native_play_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_play_dead,0xc,0xffffffff8106e7e0,CALL 0xffffffff8106e7e0,direct call
native_play_dead,0x16,0xffffffff810491f0,CALL 0xffffffff810491f0,direct call
native_play_dead,0xab,0xffffffff82e4b908,CALL qword ptr [0xffffffff82e4b908],in-direct call
native_play_dead,0xec,0xffffffff810002c0,CALL 0xffffffff810002c0,direct call
native_play_dead,0xf5,0xffffffff81a0ae20,CALL 0xffffffff81a0ae20,direct call
native_play_dead,0x102,,RET,ret
native_play_dead,0x103,0xffffffff8106e800,CALL 0xffffffff8106e800,direct call
cpumask_weight,0x1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpumask_weight,0xa,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
cpumask_weight,0x10,,RET,ret
paravirt_write_msr.constprop.0,0xd,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
paravirt_write_msr.constprop.0,0x14,,RET,ret
check_tsc_warp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_tsc_warp,0x21,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x0",write stack
check_tsc_warp,0x2e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
check_tsc_warp,0x4c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
check_tsc_warp,0x54,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
check_tsc_warp,0x5b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
check_tsc_warp,0x71,ctx->rdi,"MOV RDI,R15",write other [TODO]
check_tsc_warp,0x7a,0xffffffff8343d330,"MOV qword ptr [0xffffffff8343d330],RBX",write .data
check_tsc_warp,0x81,0xffffffff82e4bae0,CALL qword ptr [0xffffffff82e4bae0],in-direct call
check_tsc_warp,0xa5,ctx->rdi,"MOV RDI,R15",write other [TODO]
check_tsc_warp,0xa8,0xffffffff82e4bad8,CALL qword ptr [0xffffffff82e4bad8],in-direct call
check_tsc_warp,0xc1,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
check_tsc_warp,0xc6,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
check_tsc_warp,0xee,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
check_tsc_warp,0xf2,0xffffffff8343d328,"MOV qword ptr [0xffffffff8343d328],RAX",write .data
check_tsc_warp,0x10e,ctx->rdi,"MOV RDI,R15",write other [TODO]
check_tsc_warp,0x111,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
check_tsc_warp,0x114,0xffffffff8343d324,"MOV dword ptr [0xffffffff8343d324],EAX",write .data
check_tsc_warp,0x11a,0xffffffff82e4bae0,CALL qword ptr [0xffffffff82e4bae0],in-direct call
check_tsc_warp,0x13d,,RET,ret
check_tsc_warp,0x140,ctx->rdi,"MOV RDI,R15",write other [TODO]
check_tsc_warp,0x143,0xffffffff82e4bad8,CALL qword ptr [0xffffffff82e4bad8],in-direct call
check_tsc_warp,0x158,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
mark_tsc_async_resets,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mark_tsc_async_resets,0x12,,RET,ret
tsc_verify_tsc_adjust,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsc_verify_tsc_adjust,0x35,,RET,ret
tsc_verify_tsc_adjust,0x39,0xffffffff810401d0,CALL 0xffffffff810401d0,direct call
tsc_verify_tsc_adjust,0x6a,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
tsc_verify_tsc_adjust,0x6e,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
tsc_verify_tsc_adjust,0x89,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
tsc_verify_tsc_adjust,0xaa,,RET,ret
tsc_sync_check_timer_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsc_sync_check_timer_fn,0xb,0xffffffff8106eb30,CALL 0xffffffff8106eb30,direct call
tsc_sync_check_timer_fn,0x17,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
tsc_sync_check_timer_fn,0x2a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
tsc_sync_check_timer_fn,0x2f,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
tsc_sync_check_timer_fn,0x4d,0xffffffff81153a80,CALL 0xffffffff81153a80,direct call
tsc_sync_check_timer_fn,0x53,,RET,ret
tsc_sync_check_timer_fn,0x54,ctx->esi,"MOV ESI,EDX",write other [TODO]
tsc_sync_check_timer_fn,0x5d,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
tsc_store_and_check_tsc_adjust,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tsc_store_and_check_tsc_adjust,0x24,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDI",write stack
tsc_store_and_check_tsc_adjust,0x58,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
tsc_store_and_check_tsc_adjust,0x5e,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
tsc_store_and_check_tsc_adjust,0x65,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
tsc_store_and_check_tsc_adjust,0x70,ctx->r13 + 0x18,"MOV byte ptr [R13 + 0x18],0x0",write other [TODO]
tsc_store_and_check_tsc_adjust,0x82,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
tsc_store_and_check_tsc_adjust,0x88,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],R15",write other [TODO]
tsc_store_and_check_tsc_adjust,0xa7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
tsc_store_and_check_tsc_adjust,0xb9,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
tsc_store_and_check_tsc_adjust,0x109,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RDX",write other [TODO]
tsc_store_and_check_tsc_adjust,0x118,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
check_tsc_sync_source,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_tsc_sync_source,0x10,0xffffffff810411f0,CALL 0xffffffff810411f0,direct call
check_tsc_sync_source,0x2f,0xffffffff8343d33c,"MOV dword ptr [0xffffffff8343d33c],0x3",write .data
check_tsc_sync_source,0x73,0xffffffff8106e960,CALL 0xffffffff8106e960,direct call
check_tsc_sync_source,0x83,0xffffffff8106e9a0,CALL 0xffffffff8106e9a0,direct call
check_tsc_sync_source,0xaa,0xffffffff8343d33c,"MOV dword ptr [0xffffffff8343d33c],0x0",write .data
check_tsc_sync_source,0xb9,0xffffffff8343d348,"MOV dword ptr [0xffffffff8343d348],0x0",write .data
check_tsc_sync_source,0xc3,0xffffffff8343d320,"MOV dword ptr [0xffffffff8343d320],0x0",write .data
check_tsc_sync_source,0xcd,0xffffffff8343d324,"MOV dword ptr [0xffffffff8343d324],0x0",write .data
check_tsc_sync_source,0xd7,0xffffffff8343d328,"MOV qword ptr [0xffffffff8343d328],0x0",write .data
check_tsc_sync_source,0xe2,0xffffffff8343d330,"MOV qword ptr [0xffffffff8343d330],0x0",write .data
check_tsc_sync_source,0x108,,RET,ret
check_tsc_sync_source,0x109,0xffffffff8343d33c,"MOV dword ptr [0xffffffff8343d33c],0x1",write .data
check_tsc_sync_source,0x118,0xffffffff8343d340,"MOV dword ptr [0xffffffff8343d340],0x0",write .data
check_tsc_sync_source,0x128,,RET,ret
check_tsc_sync_target,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_tsc_sync_target,0x27,0xffffffff810411f0,CALL 0xffffffff810411f0,direct call
check_tsc_sync_target,0x38,,RET,ret
check_tsc_sync_target,0x3b,0xffffffff8106ec50,CALL 0xffffffff8106ec50,direct call
check_tsc_sync_target,0x8b,0xffffffff8106e960,CALL 0xffffffff8106e960,direct call
check_tsc_sync_target,0x9b,0xffffffff8106e9a0,CALL 0xffffffff8106e9a0,direct call
check_tsc_sync_target,0xc6,0xffffffff8343d344,"MOV dword ptr [0xffffffff8343d344],0x0",write .data
check_tsc_sync_target,0xe6,,RET,ret
check_tsc_sync_target,0xf6,,RET,ret
read_apic_id,0x10,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
read_apic_id,0x1c,ctx->rax + 0xe8,CALL qword ptr [RAX + 0xe8],in-direct call
read_apic_id,0x23,,RET,ret
__setup_APIC_LVTT,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__setup_APIC_LVTT,0x43,ctx->rax,CALL RAX,in-direct call
__setup_APIC_LVTT,0x51,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
__setup_APIC_LVTT,0x68,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
__setup_APIC_LVTT,0x81,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
__setup_APIC_LVTT,0x88,,RET,ret
__setup_APIC_LVTT,0xa2,ctx->rax,CALL RAX,in-direct call
__setup_APIC_LVTT,0xab,,RET,ret
__setup_APIC_LVTT,0xb6,ctx->rax,CALL RAX,in-direct call
lapic_next_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_next_event,0x17,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_next_event,0x1d,,RET,ret
lapic_timer_broadcast,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_timer_broadcast,0x15,ctx->rax + 0x38,CALL qword ptr [RAX + 0x38],in-direct call
lapic_timer_broadcast,0x19,,RET,ret
x86_msi_msg_get_destid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_msi_msg_get_destid,0x1e,,RET,ret
__lapic_update_tsc_freq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__lapic_update_tsc_freq,0x23,,RET,ret
__lapic_update_tsc_freq,0x2f,0xffffffff81164ae0,CALL 0xffffffff81164ae0,direct call
__lapic_update_tsc_freq,0x35,,RET,ret
setup_APIC_timer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_APIC_timer,0x2b,0xffffffff82e4aae0,"MOV dword ptr [0xffffffff82e4aae0],0x96",write .data
setup_APIC_timer,0x4e,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
setup_APIC_timer,0x64,ctx->r8 + 0xf8,"MOV qword ptr [R8 + 0xf8],RAX",write other [TODO]
setup_APIC_timer,0x6e,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
setup_APIC_timer,0x96,ctx->r8 + 0xb0,"MOV qword ptr [R8 + 0xb0],RAX",write other [TODO]
setup_APIC_timer,0xc0,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],-0x7ef906a0",write other [TODO]
setup_APIC_timer,0xcf,ctx->r8 + 0x98,"MOV qword ptr [R8 + 0x98],-0x7da671b9",write other [TODO]
setup_APIC_timer,0xda,0xffffffff811645d0,CALL 0xffffffff811645d0,direct call
setup_APIC_timer,0xe0,,RET,ret
setup_APIC_timer,0xe4,0xffffffff81164180,CALL 0xffffffff81164180,direct call
setup_APIC_timer,0xea,,RET,ret
lapic_timer_shutdown.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_timer_shutdown.part.0,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_timer_shutdown.part.0,0x2b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_timer_shutdown.part.0,0x3c,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_timer_shutdown.part.0,0x40,,RET,ret
lapic_timer_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_timer_shutdown,0xf,0xffffffff8106f290,CALL 0xffffffff8106f290,direct call
lapic_timer_shutdown,0x17,,RET,ret
lapic_timer_shutdown,0x1a,,RET,ret
lapic_timer_set_oneshot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_timer_set_oneshot,0xd,,RET,ret
lapic_timer_set_oneshot,0x22,0xffffffff8106f040,CALL 0xffffffff8106f040,direct call
lapic_timer_set_oneshot,0x2a,,RET,ret
set_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_multi,0x15,,RET,ret
setup_local_APIC,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_local_APIC,0x23,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
setup_local_APIC,0x45,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_local_APIC,0x59,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_local_APIC,0x63,ctx->rax + 0xa0,CALL qword ptr [RAX + 0xa0],in-direct call
setup_local_APIC,0x7e,ctx->rax + 0xb0,CALL qword ptr [RAX + 0xb0],in-direct call
setup_local_APIC,0x90,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_local_APIC,0xa6,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_local_APIC,0xc2,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_local_APIC,0xc5,ctx->r14 - 0x4,"MOV dword ptr [R14 + -0x4],EAX",write other [TODO]
setup_local_APIC,0xea,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_local_APIC,0xed,ctx->r14 - 0x4,"MOV dword ptr [R14 + -0x4],EAX",write other [TODO]
setup_local_APIC,0x104,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
setup_local_APIC,0x124,ctx->rax,CALL qword ptr [RAX],in-direct call
setup_local_APIC,0x132,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
setup_local_APIC,0x159,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
setup_local_APIC,0x172,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_local_APIC,0x188,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_local_APIC,0x18b,0xffffffff81007540,CALL 0xffffffff81007540,direct call
setup_local_APIC,0x19c,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_local_APIC,0x1d4,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_local_APIC,0x23f,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_local_APIC,0x264,0xffffffff81074880,CALL 0xffffffff81074880,direct call
setup_local_APIC,0x2ab,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_local_APIC,0xc22727,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
setup_APIC_eilvt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_APIC_eilvt,0x48,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
setup_APIC_eilvt,0xb5,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
setup_APIC_eilvt,0xc8,,RET,ret
setup_APIC_eilvt,0x119,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
setup_APIC_eilvt,0xc224e3,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
lapic_timer_set_periodic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_timer_set_periodic,0xd,,RET,ret
lapic_timer_set_periodic,0x1f,0xffffffff8106f040,CALL 0xffffffff8106f040,direct call
lapic_timer_set_periodic,0x27,,RET,ret
handle_spurious_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
handle_spurious_interrupt,0x39,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
handle_spurious_interrupt,0xc223bd,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__spurious_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__spurious_interrupt,0xd,0xffffffff8106f780,CALL 0xffffffff8106f780,direct call
__spurious_interrupt,0x13,,RET,ret
__sysvec_spurious_apic_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_spurious_apic_interrupt,0xe,0xffffffff8106f780,CALL 0xffffffff8106f780,direct call
__sysvec_spurious_apic_interrupt,0x14,,RET,ret
__sysvec_apic_timer_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_apic_timer_interrupt,0x1d,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_apic_timer_interrupt,0x2a,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_apic_timer_interrupt,0x51,ctx->rbx,CALL qword ptr [RBX],in-direct call
__sysvec_apic_timer_interrupt,0x55,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],R12",write other [TODO]
__sysvec_apic_timer_interrupt,0x61,,RET,ret
lapic_next_deadline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_next_deadline,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
lapic_next_deadline,0x30,,RET,ret
__x2apic_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x2apic_enable,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__x2apic_enable,0x22,,RET,ret
__x2apic_enable,0x35,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__x2apic_enable,0x4d,,RET,ret
__x2apic_disable.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x2apic_disable.part.0,0x16,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
__x2apic_disable.part.0,0x27,,RET,ret
__x2apic_disable.part.0,0x41,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__x2apic_disable.part.0,0x56,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__x2apic_disable.part.0,0x6f,,RET,ret
x2apic_hw_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_hw_locked,0x9,0xffffffff8104c520,CALL 0xffffffff8104c520,direct call
x2apic_hw_locked,0x1d,,RET,ret
x2apic_hw_locked,0x23,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
x2apic_hw_locked,0x2d,,RET,ret
lapic_setup_esr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_setup_esr,0x22,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_setup_esr,0x3a,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_setup_esr,0x49,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_setup_esr,0x60,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_setup_esr,0x71,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_setup_esr,0x80,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_setup_esr,0x9b,,RET,ret
lapic_setup_esr,0xa8,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_setup_esr,0xbf,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_setup_esr,0xc22195,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__sysvec_error_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_error_interrupt,0x1d,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
__sysvec_error_interrupt,0x35,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
__sysvec_error_interrupt,0x44,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
__sysvec_error_interrupt,0x57,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_error_interrupt,0x9f,,RET,ret
__sysvec_error_interrupt,0xc220fe,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__sysvec_error_interrupt,0xc22112,ctx->rsi,"MOV RSI,qword ptr [-0x7ddf1a00 + RAX*0x8]",write other [TODO]
__sysvec_error_interrupt,0xc2211a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
lapic_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_resume,0xf,,RET,ret
lapic_resume,0x19,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
lapic_resume,0x22,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
lapic_resume,0x28,0xffffffff810749d0,CALL 0xffffffff810749d0,direct call
lapic_resume,0x34,ctx->rax + 0x20,CALL qword ptr [RAX + 0x20],in-direct call
lapic_resume,0x5e,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_resume,0x7b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x90,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0xa5,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0xba,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0xcf,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0xe4,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0xf9,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x10e,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x129,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x144,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x161,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x176,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x18b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x1a0,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x1b1,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x1c0,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_resume,0x1d5,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x1e6,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
lapic_resume,0x1f5,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_resume,0x1fe,0xffffffff817e97c0,CALL 0xffffffff817e97c0,direct call
lapic_resume,0x20c,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
lapic_resume,0x218,,RET,ret
lapic_resume,0x219,0xffffffff8106f9a0,CALL 0xffffffff8106f9a0,direct call
lapic_resume,0x22b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
lapic_resume,0x24f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_apic_wait_icr_idle,0x19,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_apic_wait_icr_idle,0x22,,RET,ret
native_safe_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_safe_apic_wait_icr_idle,0x1f,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
native_safe_apic_wait_icr_idle,0x35,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_safe_apic_wait_icr_idle,0x49,,RET,ret
native_apic_icr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_apic_icr_write,0xf,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_apic_icr_write,0x18,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_apic_icr_write,0x2d,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
native_apic_icr_write,0x3f,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
native_apic_icr_write,0x47,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
native_apic_icr_write,0x51,,RET,ret
native_apic_icr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_apic_icr_read,0x16,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_apic_icr_read,0x2b,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_apic_icr_read,0x38,,RET,ret
lapic_get_maxlvt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_get_maxlvt,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_get_maxlvt,0x1f,,RET,ret
lapic_update_tsc_freq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_update_tsc_freq,0x1d,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
lapic_update_tsc_freq,0x23,,RET,ret
setup_secondary_APIC_clock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_secondary_APIC_clock,0x9,0xffffffff8106f1a0,CALL 0xffffffff8106f1a0,direct call
setup_secondary_APIC_clock,0xe,0xffffffff81042a20,CALL 0xffffffff81042a20,direct call
setup_secondary_APIC_clock,0x14,,RET,ret
clear_local_APIC,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_local_APIC,0x30,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0x53,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x62,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0x78,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x87,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0x9d,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0xac,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0xc2,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0xd9,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0xef,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x109,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x11d,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x131,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x153,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x164,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x173,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0x17a,,RET,ret
clear_local_APIC,0x17b,,RET,ret
clear_local_APIC,0x181,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0x197,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x1ac,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
clear_local_APIC,0x1c7,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x1db,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x1ef,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x203,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
clear_local_APIC,0x21e,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
apic_soft_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_soft_disable,0x9,0xffffffff81070090,CALL 0xffffffff81070090,direct call
apic_soft_disable,0x1a,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
apic_soft_disable,0x2e,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
apic_soft_disable,0x32,,RET,ret
lapic_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_suspend,0x11,,RET,ret
lapic_suspend,0x25,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x3d,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x45,0xffffffff8343e3e4,"MOV dword ptr [0xffffffff8343e3e4],EAX",write .data
lapic_suspend,0x52,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x5a,0xffffffff8343e3e8,"MOV dword ptr [0xffffffff8343e3e8],EAX",write .data
lapic_suspend,0x67,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x6f,0xffffffff8343e3ec,"MOV dword ptr [0xffffffff8343e3ec],EAX",write .data
lapic_suspend,0x7c,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x84,0xffffffff8343e3f0,"MOV dword ptr [0xffffffff8343e3f0],EAX",write .data
lapic_suspend,0x91,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x99,0xffffffff8343e3f4,"MOV dword ptr [0xffffffff8343e3f4],EAX",write .data
lapic_suspend,0xa6,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0xaf,0xffffffff8343e3f8,"MOV dword ptr [0xffffffff8343e3f8],EAX",write .data
lapic_suspend,0xc3,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0xc6,0xffffffff8343e3fc,"MOV dword ptr [0xffffffff8343e3fc],EAX",write .data
lapic_suspend,0xd8,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0xe0,0xffffffff8343e400,"MOV dword ptr [0xffffffff8343e400],EAX",write .data
lapic_suspend,0xed,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0xf5,0xffffffff8343e404,"MOV dword ptr [0xffffffff8343e404],EAX",write .data
lapic_suspend,0x102,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x10a,0xffffffff8343e408,"MOV dword ptr [0xffffffff8343e408],EAX",write .data
lapic_suspend,0x117,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x11f,0xffffffff8343e40c,"MOV dword ptr [0xffffffff8343e40c],EAX",write .data
lapic_suspend,0x12c,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x12f,0xffffffff8343e410,"MOV dword ptr [0xffffffff8343e410],EAX",write .data
lapic_suspend,0x147,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x14a,0xffffffff8343e414,"MOV dword ptr [0xffffffff8343e414],EAX",write .data
lapic_suspend,0x162,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
lapic_suspend,0x165,0xffffffff8343e418,"MOV dword ptr [0xffffffff8343e418],EAX",write .data
lapic_suspend,0x16b,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
lapic_suspend,0x174,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
lapic_suspend,0x17a,0xffffffff810749d0,CALL 0xffffffff810749d0,direct call
lapic_suspend,0x193,0xffffffff810702c0,CALL 0xffffffff810702c0,direct call
lapic_suspend,0x198,0xffffffff817e9790,CALL 0xffffffff817e9790,direct call
lapic_suspend,0x1a2,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
lapic_suspend,0x1ae,,RET,ret
disable_local_APIC,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disable_local_APIC,0x1d,0xffffffff810702c0,CALL 0xffffffff810702c0,direct call
disable_local_APIC,0x23,,RET,ret
disable_local_APIC,0x24,,RET,ret
lapic_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_shutdown,0x2a,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
lapic_shutdown,0x33,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
lapic_shutdown,0x4d,0xffffffff810702c0,CALL 0xffffffff810702c0,direct call
lapic_shutdown,0x57,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
lapic_shutdown,0x62,,RET,ret
lapic_shutdown,0x63,,RET,ret
apic_ap_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_ap_setup,0x9,0xffffffff8106f350,CALL 0xffffffff8106f350,direct call
apic_ap_setup,0xe,0xffffffff8106fa90,CALL 0xffffffff8106fa90,direct call
apic_ap_setup,0x14,0xffffffff8343e3e0,"MOV dword ptr [0xffffffff8343e3e0],0x1",write .data
apic_ap_setup,0x1e,,RET,ret
x2apic_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_setup,0x19,0xffffffff8104c520,CALL 0xffffffff8104c520,direct call
x2apic_setup,0x46,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
disconnect_bsp_APIC,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disconnect_bsp_APIC,0x18,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
disconnect_bsp_APIC,0x31,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
disconnect_bsp_APIC,0x44,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
disconnect_bsp_APIC,0x60,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
disconnect_bsp_APIC,0x6f,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
disconnect_bsp_APIC,0x8b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
disconnect_bsp_APIC,0x93,,RET,ret
disconnect_bsp_APIC,0xa5,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
arch_match_cpu_phys_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_match_cpu_phys_id,0x1b,,RET,ret
apic_id_is_primary_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_id_is_primary_thread,0x2d,,RET,ret
generic_processor_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_processor_info,0x4a,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
generic_processor_info,0x7b,0xffffffff82e42a00,"MOV dword ptr [0xffffffff82e42a00],R12D",write .data
generic_processor_info,0xc7,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],R12W",write other [TODO]
generic_processor_info,0xdf,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],R12W",write other [TODO]
generic_processor_info,0x173,0xffffffff8343e430,"MOV dword ptr [0xffffffff8343e430],R8D",write .data
generic_processor_info,0x192,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],R12W",write other [TODO]
generic_processor_info,0x1c6,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
generic_processor_info,0x1d2,ctx->rax + 0xe8,CALL qword ptr [RAX + 0xe8],in-direct call
generic_processor_info,0x203, - 0x7d1bd600 + ctx->r14 * 0x4,"MOV dword ptr [-0x7d1bd600 + R14*0x4],R12D",write other [TODO]
generic_processor_info,0x20e,0xffffffff82e4aa00,"MOV dword ptr [0xffffffff82e4aa00],EAX",write .data
generic_processor_info,0x222, - 0x7d1bd600 + ctx->r14 * 0x4,"MOV dword ptr [-0x7d1bd600 + R14*0x4],R12D",write other [TODO]
generic_processor_info,0x22c,0xffffffff82e4aa00,"MOV dword ptr [0xffffffff82e4aa00],EAX",write .data
generic_processor_info,0x263,0xffffffff830c7c0a,"MOV byte ptr [0xffffffff830c7c0a],0x1",write .data
generic_processor_info,0x26a,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
generic_processor_info,0xc215ff,ctx->esi,"MOV ESI,R14D",write other [TODO]
generic_processor_info,0xc21615,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
generic_processor_info,0xc21633,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R8D",write stack
generic_processor_info,0xc21637,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
generic_processor_info,0xc2164b,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R8D",write stack
generic_processor_info,0xc2165c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
hard_smp_processor_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hard_smp_processor_id,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
hard_smp_processor_id,0x21,ctx->rax + 0xe8,CALL qword ptr [RAX + 0xe8],in-direct call
hard_smp_processor_id,0x28,,RET,ret
__irq_msi_compose_msg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__irq_msi_compose_msg,0x11,ctx->rsi,"MOV qword ptr [RSI],0x0",write other [TODO]
__irq_msi_compose_msg,0x18,ctx->wordctx->ptrctx->rsi + 0x2,"MOV word ptr [RSI + 0x2],DX",write other [TODO]
__irq_msi_compose_msg,0x23,ctx->rsi + 0x8,"MOV dword ptr [RSI + 0x8],0x0",write other [TODO]
__irq_msi_compose_msg,0x3f,ctx->rax,"MOV byte ptr [RAX],DL",write other [TODO]
__irq_msi_compose_msg,0x51,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
__irq_msi_compose_msg,0x56,ctx->rax + 0x8,"MOV byte ptr [RAX + 0x8],DL",write other [TODO]
__irq_msi_compose_msg,0x68,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],EDX",write other [TODO]
__irq_msi_compose_msg,0x6c,,RET,ret
__irq_msi_compose_msg,0x94,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
__irq_msi_compose_msg,0x97,,RET,ret
apic_is_clustered_box,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_is_clustered_box,0x15,,RET,ret
apic_is_clustered_box,0x21,0xffffffff81a22d90,CALL 0xffffffff81a22d90,direct call
apic_is_clustered_box,0x2d,0xffffffff8343e3cc,"MOV dword ptr [0xffffffff8343e3cc],0x1",write .data
apic_is_clustered_box,0x37,,RET,ret
default_cpu_present_to_apicid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_cpu_present_to_apicid,0x30,ctx->eax,"MOVZX EAX,word ptr [RDX + RAX*0x1]",write other [TODO]
default_cpu_present_to_apicid,0x34,,RET,ret
default_cpu_present_to_apicid,0x3b,,RET,ret
apic_default_calc_apicid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_default_calc_apicid,0x1a,ctx->eax,"MOVZX EAX,word ptr [RDX + RAX*0x1]",write other [TODO]
apic_default_calc_apicid,0x1f,,RET,ret
apic_flat_calc_apicid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_flat_calc_apicid,0x13,,RET,ret
default_check_apicid_used,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_check_apicid_used,0x14,,RET,ret
default_ioapic_phys_id_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_ioapic_phys_id_map,0x14,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
default_ioapic_phys_id_map,0x1b,,RET,ret
default_check_phys_apicid_present,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_check_phys_apicid_present,0x1a,,RET,ret
default_apic_id_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_apic_id_valid,0x15,,RET,ret
noop_init_apic_ldr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_init_apic_ldr,0xa,,RET,ret
noop_send_IPI,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_send_IPI,0xa,,RET,ret
noop_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_send_IPI_mask,0xa,,RET,ret
noop_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_send_IPI_allbutself,0xa,,RET,ret
noop_apic_icr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_apic_icr_write,0xa,,RET,ret
noop_wakeup_secondary_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_wakeup_secondary_cpu,0xf,,RET,ret
noop_safe_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_safe_apic_wait_icr_idle,0xc,,RET,ret
noop_apic_icr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_apic_icr_read,0xc,,RET,ret
noop_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_phys_pkg_id,0xc,,RET,ret
noop_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_get_apic_id,0xc,,RET,ret
noop_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_probe,0xc,,RET,ret
noop_apic_id_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_apic_id_registered,0x14,,RET,ret
noop_apic_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_apic_read,0x24,,RET,ret
noop_apic_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_apic_write,0x22,,RET,ret
physid_set_mask_of_physid,0x10,ctx->rsi,"MOV qword ptr [RSI],0x0",write other [TODO]
physid_set_mask_of_physid,0x17,ctx->rsi + 0xff8,"MOV qword ptr [RSI + 0xff8],0x0",write other [TODO]
physid_set_mask_of_physid,0x36,,RET,ret
noop_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_send_IPI_mask_allbutself,0xa,,RET,ret
noop_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_send_IPI_all,0xa,,RET,ret
noop_send_IPI_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_send_IPI_self,0xa,,RET,ret
noop_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
noop_apic_wait_icr_idle,0xa,,RET,ret
apic_smt_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_smt_update,0x25,0xffffffff8127f9f0,CALL 0xffffffff8127f9f0,direct call
apic_smt_update,0x2b,,RET,ret
apic_smt_update,0x2c,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
apic_smt_update,0x40,0xffffffff815f9ae0,CALL 0xffffffff815f9ae0,direct call
apic_smt_update,0x50,0xffffffff8127f930,CALL 0xffffffff8127f930,direct call
apic_smt_update,0x56,,RET,ret
apic_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_send_IPI_allbutself,0x22,,RET,ret
apic_send_IPI_allbutself,0x33,ctx->rax + 0x40,CALL qword ptr [RAX + 0x40],in-direct call
apic_send_IPI_allbutself,0x37,,RET,ret
native_smp_send_reschedule,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_smp_send_reschedule,0x21,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
native_smp_send_reschedule,0x25,,RET,ret
native_smp_send_reschedule,0x2f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
native_send_call_func_single_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_send_call_func_single_ipi,0x15,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
native_send_call_func_single_ipi,0x19,,RET,ret
native_send_call_func_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_send_call_func_ipi,0x5d,ctx->rax + 0x38,CALL qword ptr [RAX + 0x38],in-direct call
native_send_call_func_ipi,0x64,,RET,ret
__default_send_IPI_shortcut,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__default_send_IPI_shortcut,0x24,0xffffffffff5fd300,"MOV dword ptr [0xffffffffff5fd300],EDI",write .data
__default_send_IPI_shortcut,0x2c,,RET,ret
__default_send_IPI_shortcut,0x34,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],EDI",write stack
__default_send_IPI_shortcut,0x37,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
__default_send_IPI_dest_field,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__default_send_IPI_dest_field,0x28,0xffffffffff5fd310,"MOV dword ptr [0xffffffffff5fd310],EDI",write .data
__default_send_IPI_dest_field,0x3c,0xffffffffff5fd300,"MOV dword ptr [0xffffffffff5fd300],EAX",write .data
__default_send_IPI_dest_field,0x48,,RET,ret
__default_send_IPI_dest_field,0x50,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],ESI",write stack
__default_send_IPI_dest_field,0x53,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EDI",write stack
__default_send_IPI_dest_field,0x56,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
default_send_IPI_single_phys,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_single_phys,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
default_send_IPI_single_phys,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
default_send_IPI_single_phys,0x31,0xffffffff81070f20,CALL 0xffffffff81070f20,direct call
default_send_IPI_single_phys,0x3b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
default_send_IPI_single_phys,0x46,,RET,ret
default_send_IPI_mask_sequence_phys,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_mask_sequence_phys,0x18,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
default_send_IPI_mask_sequence_phys,0x21,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
default_send_IPI_mask_sequence_phys,0x44,0xffffffff81070f20,CALL 0xffffffff81070f20,direct call
default_send_IPI_mask_sequence_phys,0x4d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
default_send_IPI_mask_sequence_phys,0x56,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
default_send_IPI_mask_sequence_phys,0x5e,ctx->eax,"MOV EAX,dword ptr [0xffffffff8311b690]",write other [TODO]
default_send_IPI_mask_sequence_phys,0x72,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
default_send_IPI_mask_sequence_phys,0x82,,RET,ret
default_send_IPI_mask_allbutself_phys,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_mask_allbutself_phys,0x24,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
default_send_IPI_mask_allbutself_phys,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
default_send_IPI_mask_allbutself_phys,0x2e,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
default_send_IPI_mask_allbutself_phys,0x3b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
default_send_IPI_mask_allbutself_phys,0x5f,0xffffffff81070f20,CALL 0xffffffff81070f20,direct call
default_send_IPI_mask_allbutself_phys,0x64,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
default_send_IPI_mask_allbutself_phys,0x73,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
default_send_IPI_mask_allbutself_phys,0x78,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
default_send_IPI_mask_allbutself_phys,0x8f,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
default_send_IPI_mask_allbutself_phys,0xa3,,RET,ret
default_send_IPI_single,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_single,0x33,ctx->rax + 0x38,CALL qword ptr [RAX + 0x38],in-direct call
default_send_IPI_single,0x37,,RET,ret
default_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_allbutself,0x24,0xffffffffff5fd300,"MOV dword ptr [0xffffffffff5fd300],EDI",write .data
default_send_IPI_allbutself,0x2c,,RET,ret
default_send_IPI_allbutself,0x34,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
default_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_all,0x24,0xffffffffff5fd300,"MOV dword ptr [0xffffffffff5fd300],EDI",write .data
default_send_IPI_all,0x2c,,RET,ret
default_send_IPI_all,0x34,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
default_send_IPI_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_send_IPI_self,0x24,0xffffffffff5fd300,"MOV dword ptr [0xffffffffff5fd300],EDI",write .data
default_send_IPI_self,0x2c,,RET,ret
default_send_IPI_self,0x34,ctx->rax + 0x28,CALL qword ptr [RAX + 0x28],in-direct call
x86_vector_select,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_vector_select,0x1d,ctx->rax + 0x98,CALL qword ptr [RAX + 0x98],in-direct call
x86_vector_select,0x3d,,RET,ret
x86_vector_select,0x5a,0xffffffff81800a50,CALL 0xffffffff81800a50,direct call
x86_vector_select,0x76,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
x86_vector_select,0x8e,0xffffffff81c81230,CALL 0xffffffff81c81230,direct call
x86_vector_select,0x9f,0xffffffff81800a50,CALL 0xffffffff81800a50,direct call
x86_vector_select,0xbb,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
x86_vector_select,0xcf,0xffffffff81c81230,CALL 0xffffffff81c81230,direct call
irqd_cfg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irqd_cfg,0x1f,,RET,ret
irqd_cfg,0x23,,RET,ret
apic_retrigger_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_retrigger_irq,0x2b,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
apic_retrigger_irq,0x40,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
apic_retrigger_irq,0x4d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
apic_retrigger_irq,0x5b,,RET,ret
x86_vector_msi_compose_msg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_vector_msi_compose_msg,0x20,0xffffffff81070980,CALL 0xffffffff81070980,direct call
x86_vector_msi_compose_msg,0x26,,RET,ret
__send_cleanup_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__send_cleanup_vector,0x14,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__send_cleanup_vector,0x43,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RDX",write other [TODO]
__send_cleanup_vector,0x4c,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RCX",write other [TODO]
__send_cleanup_vector,0x50,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
__send_cleanup_vector,0x58,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
__send_cleanup_vector,0x63,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
__send_cleanup_vector,0x6d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__send_cleanup_vector,0x77,,RET,ret
__send_cleanup_vector,0x78,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0x0",write other [TODO]
apic_ack_edge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_ack_edge,0x46,ctx->rax,CALL qword ptr [RAX],in-direct call
apic_ack_edge,0x4d,,RET,ret
apic_ack_edge,0x5a,0xffffffff810713e0,CALL 0xffffffff810713e0,direct call
apic_ack_edge,0x64,0xffffffff8112d4a0,CALL 0xffffffff8112d4a0,direct call
free_moved_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_moved_vector,0x3c,0xffffffff81131430,CALL 0xffffffff81131430,direct call
free_moved_vector,0x54,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
free_moved_vector,0x68,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
free_moved_vector,0x70,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
free_moved_vector,0x74,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],0x0",write other [TODO]
free_moved_vector,0x7c,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],0x0",write other [TODO]
free_moved_vector,0x88,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0x0",write other [TODO]
free_moved_vector,0x97,,RET,ret
__sysvec_irq_move_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_irq_move_cleanup,0x2b,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_irq_move_cleanup,0x34,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__sysvec_irq_move_cleanup,0x55,ctx->rax + 0x58,CALL qword ptr [RAX + 0x58],in-direct call
__sysvec_irq_move_cleanup,0x83,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
__sysvec_irq_move_cleanup,0x8f,0xffffffff810714e0,CALL 0xffffffff810714e0,direct call
__sysvec_irq_move_cleanup,0xa0,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__sysvec_irq_move_cleanup,0xab,,RET,ret
apic_update_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_update_vector,0x44,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0x0",write other [TODO]
apic_update_vector,0x71,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
apic_update_vector,0x77,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
apic_update_vector,0x83,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],R13D",write other [TODO]
apic_update_vector,0x91,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],R12D",write other [TODO]
apic_update_vector,0xa7,ctx->rdx,"MOV RDX,qword ptr [RSI + RDX*0x1]",write other [TODO]
apic_update_vector,0xbf,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],R14",write other [TODO]
apic_update_vector,0xcd,,RET,ret
apic_update_vector,0x132,0xffffffff81131430,CALL 0xffffffff81131430,direct call
apic_update_irq_cfg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_update_irq_cfg,0x35,ctx->r14 + 0x4,"MOV dword ptr [R14 + 0x4],R12D",write other [TODO]
apic_update_irq_cfg,0x43,ctx->rax + 0x70,CALL qword ptr [RAX + 0x70],in-direct call
apic_update_irq_cfg,0x46,ctx->r14,"MOV dword ptr [R14],EAX",write other [TODO]
apic_update_irq_cfg,0x85,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
apic_update_irq_cfg,0x9a,,RET,ret
vector_assign_managed_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vector_assign_managed_shutdown,0x6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
vector_assign_managed_shutdown,0x1b,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
vector_assign_managed_shutdown,0x2a,0xffffffff810717e0,CALL 0xffffffff810717e0,direct call
vector_assign_managed_shutdown,0x34,,RET,ret
reserve_irq_vector_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reserve_irq_vector_locked,0x32,0xffffffff81131210,CALL 0xffffffff81131210,direct call
reserve_irq_vector_locked,0x50,0xffffffff810718d0,CALL 0xffffffff810718d0,direct call
reserve_irq_vector_locked,0x59,,RET,ret
assign_managed_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
assign_managed_vector,0x1d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
assign_managed_vector,0x45,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
assign_managed_vector,0x55,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
assign_managed_vector,0x74,0xffffffff81131020,CALL 0xffffffff81131020,direct call
assign_managed_vector,0x91,0xffffffff81071680,CALL 0xffffffff81071680,direct call
assign_managed_vector,0xa2,0xffffffff810717e0,CALL 0xffffffff810717e0,direct call
assign_managed_vector,0xc2,,RET,ret
assign_managed_vector,0x130,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
assign_vector_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
assign_vector_locked,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
assign_vector_locked,0x57,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],ECX",write stack
assign_vector_locked,0x84,0xffffffff811312e0,CALL 0xffffffff811312e0,direct call
assign_vector_locked,0xa1,0xffffffff81071680,CALL 0xffffffff81071680,direct call
assign_vector_locked,0xb2,0xffffffff810717e0,CALL 0xffffffff810717e0,direct call
assign_vector_locked,0xd8,,RET,ret
assign_vector_locked,0x161,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
assign_irq_vector_any_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
assign_irq_vector_any_locked,0x6,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
assign_irq_vector_any_locked,0x3c,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
assign_irq_vector_any_locked,0x4b,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
assign_irq_vector_any_locked,0x5b,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
assign_irq_vector_any_locked,0x6b,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
assign_irq_vector_any_locked,0x7a,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
assign_irq_vector_any_locked,0x8e,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
assign_irq_vector_any_locked,0xa1,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
assign_irq_vector_any_locked,0xac,,RET,ret
assign_irq_vector_any_locked,0xb7,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
assign_irq_vector_any_locked,0xc6,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
assign_irq_vector_any_locked,0xd7,,RET,ret
x86_vector_activate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_vector_activate,0x47,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_activate,0x9f,0xffffffff81071c60,CALL 0xffffffff81071c60,direct call
x86_vector_activate,0xb8,ctx->rbx + 0x30,"MOV byte ptr [RBX + 0x30],AL",write other [TODO]
x86_vector_activate,0xcb,ctx->rbx + 0x30,"MOV byte ptr [RBX + 0x30],DL",write other [TODO]
x86_vector_activate,0xdb,ctx->edx,"MOV EDX,dword ptr [0xffffffff8311b690]",write other [TODO]
x86_vector_activate,0xe1,0xffffffff815f9d40,CALL 0xffffffff815f9d40,direct call
x86_vector_activate,0xf5,0xffffffff810718d0,CALL 0xffffffff810718d0,direct call
x86_vector_activate,0x176,0xffffffff81071c60,CALL 0xffffffff81071c60,direct call
x86_vector_activate,0x192,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
x86_vector_activate,0x198,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
x86_vector_activate,0x1aa,ctx->rsi,"MOV RSI,RBX",write other [TODO]
x86_vector_activate,0x1ad,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
x86_vector_activate,0x1c5,0xffffffff810719b0,CALL 0xffffffff810719b0,direct call
apic_set_affinity,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_set_affinity,0x25,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
apic_set_affinity,0x34,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
apic_set_affinity,0x41,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
apic_set_affinity,0x5e,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
apic_set_affinity,0x6d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
apic_set_affinity,0x7a,,RET,ret
apic_set_affinity,0x7b,0xffffffff810719b0,CALL 0xffffffff810719b0,direct call
clear_irq_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_irq_vector,0x46,,RET,ret
clear_irq_vector,0x74,ctx->rax,"MOV qword ptr [RAX],-0x1",write other [TODO]
clear_irq_vector,0x81,0xffffffff81131430,CALL 0xffffffff81131430,direct call
clear_irq_vector,0x89,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],0x0",write other [TODO]
clear_irq_vector,0xb0,ctx->rax,"MOV qword ptr [RAX],-0x1",write other [TODO]
clear_irq_vector,0xba,0xffffffff81131430,CALL 0xffffffff81131430,direct call
clear_irq_vector,0xc7,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0x0",write other [TODO]
clear_irq_vector,0xdb,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
clear_irq_vector,0xe3,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
clear_irq_vector,0xe7,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],0x0",write other [TODO]
clear_irq_vector,0xef,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],0x0",write other [TODO]
clear_irq_vector,0x101,,RET,ret
x86_vector_deactivate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_vector_deactivate,0x43,,RET,ret
x86_vector_deactivate,0x4b,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_deactivate,0x56,0xffffffff81071fe0,CALL 0xffffffff81071fe0,direct call
x86_vector_deactivate,0x64,0xffffffff810718d0,CALL 0xffffffff810718d0,direct call
x86_vector_deactivate,0x73,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_deactivate,0x7e,,RET,ret
x86_vector_deactivate,0xd5,0xffffffff81071910,CALL 0xffffffff81071910,direct call
x86_vector_free_irqs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_vector_free_irqs,0x2e,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
x86_vector_free_irqs,0x49,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_free_irqs,0x54,0xffffffff81071fe0,CALL 0xffffffff81071fe0,direct call
x86_vector_free_irqs,0x9a,0xffffffff81129fb0,CALL 0xffffffff81129fb0,direct call
x86_vector_free_irqs,0xa9,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_free_irqs,0xb1,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_vector_free_irqs,0xd1,,RET,ret
x86_vector_free_irqs,0x141,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
x86_vector_free_irqs,0x145,0xffffffff81131280,CALL 0xffffffff81131280,direct call
x86_vector_free_irqs,0x166,0xffffffff81130dc0,CALL 0xffffffff81130dc0,direct call
x86_vector_alloc_irqs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_vector_alloc_irqs,0x1c,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],ESI",write stack
x86_vector_alloc_irqs,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
x86_vector_alloc_irqs,0x23,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EAX",write stack
x86_vector_alloc_irqs,0x61,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],R15D",write stack
x86_vector_alloc_irqs,0x65,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],ECX",write stack
x86_vector_alloc_irqs,0x78,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EBX",write other [TODO]
x86_vector_alloc_irqs,0x7c,ctx->r13 + 0x10,"MOV dword ptr [R13 + 0x10],0x0",write other [TODO]
x86_vector_alloc_irqs,0x84,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_alloc_irqs,0xab,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
x86_vector_alloc_irqs,0xaf,0xffffffff810717e0,CALL 0xffffffff810717e0,direct call
x86_vector_alloc_irqs,0xbf,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_alloc_irqs,0xdf,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
x86_vector_alloc_irqs,0xe2,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
x86_vector_alloc_irqs,0x116,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
x86_vector_alloc_irqs,0x127,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
x86_vector_alloc_irqs,0x12f,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],0x0",write other [TODO]
x86_vector_alloc_irqs,0x137,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],R12D",write other [TODO]
x86_vector_alloc_irqs,0x13b,ctx->r15 + 0x30,"MOV qword ptr [R15 + 0x30],RAX",write other [TODO]
x86_vector_alloc_irqs,0x142,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
x86_vector_alloc_irqs,0x14a,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],-0x7d1b5480",write other [TODO]
x86_vector_alloc_irqs,0x19c,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
x86_vector_alloc_irqs,0x1a6,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_alloc_irqs,0x1ab,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
x86_vector_alloc_irqs,0x1c3,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
x86_vector_alloc_irqs,0x1c7,0xffffffff815f9b70,CALL 0xffffffff815f9b70,direct call
x86_vector_alloc_irqs,0x1d6,0xffffffff81071af0,CALL 0xffffffff81071af0,direct call
x86_vector_alloc_irqs,0x1e6,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
x86_vector_alloc_irqs,0x1e9,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_alloc_irqs,0x1fb,ctx->r15 + 0x30,"MOV qword ptr [R15 + 0x30],0x0",write other [TODO]
x86_vector_alloc_irqs,0x209,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ECX",write stack
x86_vector_alloc_irqs,0x20c,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x86_vector_alloc_irqs,0x214,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],ECX",write stack
x86_vector_alloc_irqs,0x220,0xffffffff81072240,CALL 0xffffffff81072240,direct call
x86_vector_alloc_irqs,0x236,,RET,ret
x86_vector_alloc_irqs,0x288,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_alloc_irqs,0x290,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
x86_vector_alloc_irqs,0x294,0xffffffff81071910,CALL 0xffffffff81071910,direct call
x86_vector_alloc_irqs,0x2a4,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_alloc_irqs,0x2bc,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
x86_vector_alloc_irqs,0x2c6,0xffffffff81071fe0,CALL 0xffffffff81071fe0,direct call
x86_vector_alloc_irqs,0x2d6,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_alloc_irqs,0x309,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RSI",write stack
x86_vector_alloc_irqs,0x30d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
x86_vector_alloc_irqs,0x311,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
x86_vector_alloc_irqs,0x325,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
x86_vector_alloc_irqs,0x32d,0xffffffff81130ef0,CALL 0xffffffff81130ef0,direct call
x86_vector_alloc_irqs,0x33d,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
x86_vector_alloc_irqs,0x340,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
x86_vector_alloc_irqs,0x418,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0xffffffda",write stack
x86_vector_alloc_irqs,0x424,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0xfffffffa",write stack
x86_vector_alloc_irqs,0x430,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0xfffffff4",write stack
lock_vector_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lock_vector_lock,0x10,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
lock_vector_lock,0x16,,RET,ret
unlock_vector_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unlock_vector_lock,0x10,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
unlock_vector_lock,0x16,,RET,ret
init_irq_alloc_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_irq_alloc_info,0xf,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
init_irq_alloc_info,0x1a,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],0x0",write other [TODO]
init_irq_alloc_info,0x35,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],RSI",write other [TODO]
init_irq_alloc_info,0x3a,,RET,ret
copy_irq_alloc_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_irq_alloc_info,0x14,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
copy_irq_alloc_info,0x1b,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDX",write other [TODO]
copy_irq_alloc_info,0x23,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RDX",write other [TODO]
copy_irq_alloc_info,0x2b,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RDX",write other [TODO]
copy_irq_alloc_info,0x33,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RDX",write other [TODO]
copy_irq_alloc_info,0x3b,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],RDX",write other [TODO]
copy_irq_alloc_info,0x43,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],RDX",write other [TODO]
copy_irq_alloc_info,0x4b,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RDX",write other [TODO]
copy_irq_alloc_info,0x53,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],RAX",write other [TODO]
copy_irq_alloc_info,0x58,,RET,ret
copy_irq_alloc_info,0x59,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
copy_irq_alloc_info,0x67,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],0x0",write other [TODO]
copy_irq_alloc_info,0x80,,RET,ret
irq_cfg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_cfg,0x9,0xffffffff81127280,CALL 0xffffffff81127280,direct call
irq_cfg,0x24,,RET,ret
x86_fwspec_is_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_fwspec_is_ioapic,0xd,,RET,ret
x86_fwspec_is_ioapic,0x30,,RET,ret
x86_fwspec_is_ioapic,0x31,0xffffffff81800a50,CALL 0xffffffff81800a50,direct call
x86_fwspec_is_ioapic,0x4d,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
x86_fwspec_is_ioapic,0x62,0xffffffff81c81230,CALL 0xffffffff81c81230,direct call
x86_fwspec_is_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_fwspec_is_hpet,0xd,,RET,ret
x86_fwspec_is_hpet,0x30,,RET,ret
x86_fwspec_is_hpet,0x31,0xffffffff81800a50,CALL 0xffffffff81800a50,direct call
x86_fwspec_is_hpet,0x4d,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
x86_fwspec_is_hpet,0x62,0xffffffff81c81230,CALL 0xffffffff81c81230,direct call
lapic_assign_legacy_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_assign_legacy_vector,0x17,0xffffffff81130d10,CALL 0xffffffff81130d10,direct call
lapic_assign_legacy_vector,0x1d,,RET,ret
lapic_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_online,0x21,0xffffffff81130c10,CALL 0xffffffff81130c10,direct call
lapic_online,0x2a,0xffffffff81122a90,CALL 0xffffffff81122a90,direct call
lapic_online,0x37,ctx->gs + ctx->r12,"MOV qword ptr GS:[R12],RAX",write other [TODO]
lapic_online,0x68,,RET,ret
lapic_offline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_offline,0x10,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
lapic_offline,0x1c,0xffffffff81130ca0,CALL 0xffffffff81130ca0,direct call
lapic_offline,0x28,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
lapic_offline,0x2e,,RET,ret
apic_ack_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_ack_irq,0x22,ctx->rax,CALL qword ptr [RAX],in-direct call
apic_ack_irq,0x25,,RET,ret
apic_ack_irq,0x26,0xffffffff8112d4a0,CALL 0xffffffff8112d4a0,direct call
send_cleanup_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_cleanup_vector,0xb,,RET,ret
send_cleanup_vector,0x10,0xffffffff810713e0,CALL 0xffffffff810713e0,direct call
send_cleanup_vector,0x16,,RET,ret
irq_complete_move,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_complete_move,0xb,,RET,ret
irq_complete_move,0x1c,0xffffffff810713e0,CALL 0xffffffff810713e0,direct call
irq_complete_move,0x22,,RET,ret
irq_force_complete_move,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_force_complete_move,0x16,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
irq_force_complete_move,0x2a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
irq_force_complete_move,0x5f,0xffffffff810714e0,CALL 0xffffffff810714e0,direct call
irq_force_complete_move,0x6b,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
irq_force_complete_move,0x74,,RET,ret
lapic_can_unplug_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lapic_can_unplug_cpu,0x1e,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
lapic_can_unplug_cpu,0x2a,0xffffffff81131540,CALL 0xffffffff81131540,direct call
lapic_can_unplug_cpu,0x3e,0xffffffff81131500,CALL 0xffffffff81131500,direct call
lapic_can_unplug_cpu,0x56,0xffffffff81131530,CALL 0xffffffff81131530,direct call
lapic_can_unplug_cpu,0x6e,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
lapic_can_unplug_cpu,0x7d,,RET,ret
lapic_can_unplug_cpu,0xc1f1f5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
nmi_raise_cpu_backtrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_raise_cpu_backtrace,0x15,ctx->rax + 0x38,CALL qword ptr [RAX + 0x38],in-direct call
nmi_raise_cpu_backtrace,0x19,,RET,ret
nmi_cpu_backtrace_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_cpu_backtrace_handler,0xc,0xffffffff81c7b300,CALL 0xffffffff81c7b300,direct call
nmi_cpu_backtrace_handler,0x15,,RET,ret
hw_nmi_get_sample_period,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_nmi_get_sample_period,0x1e,,RET,ret
arch_trigger_cpumask_backtrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_trigger_cpumask_backtrace,0x14,0xffffffff81c7b3a0,CALL 0xffffffff81c7b3a0,direct call
arch_trigger_cpumask_backtrace,0x1a,,RET,ret
__ioapic_read_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ioapic_read_entry,0x19,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
__ioapic_read_entry,0x28,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
__ioapic_read_entry,0x40,,RET,ret
ioapic_read_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_read_entry,0x1c,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
ioapic_read_entry,0x2a,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
ioapic_read_entry,0x3c,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ioapic_read_entry,0x4b,,RET,ret
__ioapic_write_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ioapic_write_entry,0x45,ctx->rax,"MOV dword ptr [RAX],R9D",write other [TODO]
__ioapic_write_entry,0x48,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R8D",write other [TODO]
__ioapic_write_entry,0x60,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
__ioapic_write_entry,0x62,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
__ioapic_write_entry,0x66,,RET,ret
ioapic_mask_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_mask_entry,0x19,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
ioapic_mask_entry,0x4f,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
ioapic_mask_entry,0x57,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R8D",write other [TODO]
ioapic_mask_entry,0x6f,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
ioapic_mask_entry,0x73,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
ioapic_mask_entry,0x7d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ioapic_mask_entry,0x86,,RET,ret
io_apic_sync,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
io_apic_sync,0x39,,RET,ret
ioapic_irq_get_chip_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_irq_get_chip_state,0x17,ctx->rdx,"MOV byte ptr [RDX],0x0",write other [TODO]
ioapic_irq_get_chip_state,0x24,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
ioapic_irq_get_chip_state,0x44,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
ioapic_irq_get_chip_state,0x53,ctx->r12,"MOV byte ptr [R12],0x1",write other [TODO]
ioapic_irq_get_chip_state,0x5f,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
ioapic_irq_get_chip_state,0x6c,,RET,ret
mask_lapic_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mask_lapic_irq,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
mask_lapic_irq,0x2b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
mask_lapic_irq,0x2f,,RET,ret
unmask_lapic_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unmask_lapic_irq,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
unmask_lapic_irq,0x2b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
unmask_lapic_irq,0x2f,,RET,ret
ack_lapic_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ack_lapic_irq,0x17,ctx->rax,CALL qword ptr [RAX],in-direct call
ack_lapic_irq,0x1a,,RET,ret
mp_irqdomain_deactivate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_irqdomain_deactivate,0xf,0xffffffff81072e10,CALL 0xffffffff81072e10,direct call
mp_irqdomain_deactivate,0x15,,RET,ret
irq_is_level,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_is_level,0x81,,RET,ret
irq_is_level,0x90,,RET,ret
irq_is_level,0xab,,RET,ret
irq_is_level,0xc1efb8,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
irq_is_level,0xc1efcf,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
startup_ioapic_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
startup_ioapic_irq,0x21,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
startup_ioapic_irq,0x3b,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
startup_ioapic_irq,0x48,ctx->rax + 0x40,CALL qword ptr [RAX + 0x40],in-direct call
startup_ioapic_irq,0x98,ctx->rax,"MOV dword ptr [RAX],R8D",write other [TODO]
startup_ioapic_irq,0x9b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDI",write other [TODO]
startup_ioapic_irq,0xb0,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
startup_ioapic_irq,0xc0,,RET,ret
mp_check_pin_attr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_check_pin_attr,0x14,0xffffffff81127280,CALL 0xffffffff81127280,direct call
mp_check_pin_attr,0x61,,RET,ret
mp_check_pin_attr,0x7c,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
mp_check_pin_attr,0x94,0xffffffff81128710,CALL 0xffffffff81128710,direct call
mp_check_pin_attr,0xa7,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],CL",write other [TODO]
mp_check_pin_attr,0xb2,ctx->rbx + 0x11,"MOV byte ptr [RBX + 0x11],AL",write other [TODO]
mp_check_pin_attr,0xc2,ctx->rbx + 0x19,"MOV byte ptr [RBX + 0x19],DL",write other [TODO]
mp_check_pin_attr,0xcc,ctx->rbx + 0x11,"MOV byte ptr [RBX + 0x11],AL",write other [TODO]
mp_check_pin_attr,0xde,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
mp_irqdomain_create,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_irqdomain_create,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mp_irqdomain_create,0x3e,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],ECX",write stack
mp_irqdomain_create,0x6b,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R13",write stack
mp_irqdomain_create,0x77,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x1",write stack
mp_irqdomain_create,0x83,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EAX",write stack
mp_irqdomain_create,0x86,0xffffffff8112a160,CALL 0xffffffff8112a160,direct call
mp_irqdomain_create,0xb1,0xffffffff8112a540,CALL 0xffffffff8112a540,direct call
mp_irqdomain_create,0xb6,ctx->r14 + 0x38,"MOV qword ptr [R14 + 0x38],RAX",write other [TODO]
mp_irqdomain_create,0xc3,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],R15",write other [TODO]
mp_irqdomain_create,0xf6,,RET,ret
mp_irqdomain_create,0x109,0xffffffff83442d04,"MOV dword ptr [0xffffffff83442d04],EAX",write .data
mp_irqdomain_create,0x11f,0xffffffff8112a7f0,CALL 0xffffffff8112a7f0,direct call
mp_irqdomain_create,0x146,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EAX",write stack
mp_irqdomain_create,0x14c,0xffffffff81129fe0,CALL 0xffffffff81129fe0,direct call
mp_irqdomain_create,0x166,0xffffffff81129fe0,CALL 0xffffffff81129fe0,direct call
mp_irqdomain_create,0x16d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mp_irqdomain_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_irqdomain_free,0x1f,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
mp_irqdomain_free,0x6e,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
mp_irqdomain_free,0x72,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
mp_irqdomain_free,0x7f,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
mp_irqdomain_free,0x86,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],RAX",write other [TODO]
mp_irqdomain_free,0x8a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mp_irqdomain_free,0x9b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mp_irqdomain_free,0xab,0xffffffff8112b470,CALL 0xffffffff8112b470,direct call
mp_irqdomain_free,0xb8,,RET,ret
find_irq_entry.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_irq_entry.constprop.0,0x5f,,RET,ret
find_irq_entry.constprop.0,0x6a,,RET,ret
__add_pin_to_irq_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__add_pin_to_irq_node,0x44,,RET,ret
__add_pin_to_irq_node,0x59,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
__add_pin_to_irq_node,0x6b,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
__add_pin_to_irq_node,0x6f,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],R13D",write other [TODO]
__add_pin_to_irq_node,0x73,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
__add_pin_to_irq_node,0x77,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
__add_pin_to_irq_node,0x7a,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
__add_pin_to_irq_node,0x7e,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__add_pin_to_irq_node,0x8b,,RET,ret
alloc_isa_irq_from_domain.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_isa_irq_from_domain.constprop.0,0x24,0xffffffff81127280,CALL 0xffffffff81127280,direct call
alloc_isa_irq_from_domain.constprop.0,0x4c,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R10D",write stack
alloc_isa_irq_from_domain.constprop.0,0x50,0xffffffff810731a0,CALL 0xffffffff810731a0,direct call
alloc_isa_irq_from_domain.constprop.0,0x66,0xffffffff81073560,CALL 0xffffffff81073560,direct call
alloc_isa_irq_from_domain.constprop.0,0x87,,RET,ret
alloc_isa_irq_from_domain.constprop.0,0xa5,0xffffffff8112b510,CALL 0xffffffff8112b510,direct call
alloc_isa_irq_from_domain.constprop.0,0xb9,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
alloc_isa_irq_from_domain.constprop.0,0xc2,ctx->rax + 0x1a,"MOV byte ptr [RAX + 0x1a],0x1",write other [TODO]
alloc_ioapic_saved_registers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_ioapic_saved_registers,0x28,,RET,ret
alloc_ioapic_saved_registers,0x40,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
alloc_ioapic_saved_registers,0x45,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
alloc_ioapic_saved_registers,0x56,,RET,ret
eoi_ioapic_pin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
eoi_ioapic_pin,0x22,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
eoi_ioapic_pin,0x2a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
eoi_ioapic_pin,0x51,ctx->rax - 0x800fc0,"MOV dword ptr [RAX + -0x800fc0],EBX",write other [TODO]
eoi_ioapic_pin,0x82,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
eoi_ioapic_pin,0x90,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
eoi_ioapic_pin,0xa2,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
eoi_ioapic_pin,0xb1,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
eoi_ioapic_pin,0xc9,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
eoi_ioapic_pin,0xdc,,RET,ret
ioapic_ir_ack_level,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_ir_ack_level,0xf,0xffffffff81072b00,CALL 0xffffffff81072b00,direct call
ioapic_ir_ack_level,0x1d,0xffffffff81073730,CALL 0xffffffff81073730,direct call
ioapic_ir_ack_level,0x27,,RET,ret
save_ioapic_entries,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
save_ioapic_entries,0x24,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
save_ioapic_entries,0x5b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
save_ioapic_entries,0x5f,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
save_ioapic_entries,0x6f,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
save_ioapic_entries,0x81,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
save_ioapic_entries,0x8a,ctx->rcx,"MOV qword ptr [RCX],R12",write other [TODO]
save_ioapic_entries,0xb4,,RET,ret
save_ioapic_entries,0xb5,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0xfffffff4",write stack
save_ioapic_entries,0xbe,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
mask_ioapic_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mask_ioapic_irq,0x15,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mask_ioapic_irq,0x60,ctx->rax,"MOV dword ptr [RAX],R8D",write other [TODO]
mask_ioapic_irq,0x63,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDI",write other [TODO]
mask_ioapic_irq,0xa4,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mask_ioapic_irq,0xae,,RET,ret
unmask_ioapic_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unmask_ioapic_irq,0x15,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
unmask_ioapic_irq,0x5f,ctx->rax,"MOV dword ptr [RAX],EDI",write other [TODO]
unmask_ioapic_irq,0x61,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],ESI",write other [TODO]
unmask_ioapic_irq,0x76,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unmask_ioapic_irq,0x80,,RET,ret
ioapic_ack_level,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_ack_level,0x18,0xffffffff81071320,CALL 0xffffffff81071320,direct call
ioapic_ack_level,0x23,0xffffffff81072b50,CALL 0xffffffff81072b50,direct call
ioapic_ack_level,0x51,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
ioapic_ack_level,0x65,ctx->rax,CALL qword ptr [RAX],in-direct call
ioapic_ack_level,0x7c,,RET,ret
ioapic_ack_level,0x8c,0xffffffff81073730,CALL 0xffffffff81073730,direct call
ioapic_ack_level,0xa2,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
ioapic_ack_level,0xc7,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
ioapic_ack_level,0xdc,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ioapic_ack_level,0xf7,0xffffffff81073910,CALL 0xffffffff81073910,direct call
ioapic_ack_level,0x10b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ioapic_ack_level,0x113,0xffffffff8112d3c0,CALL 0xffffffff8112d3c0,direct call
ioapic_ack_level,0x12d,0xffffffff810739c0,CALL 0xffffffff810739c0,direct call
ioapic_configure_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_configure_entry,0x1f,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
ioapic_configure_entry,0x25,0xffffffff81128490,CALL 0xffffffff81128490,direct call
ioapic_configure_entry,0x31,ctx->rbx + 0x10,"MOV byte ptr [RBX + 0x10],AL",write other [TODO]
ioapic_configure_entry,0x57,ctx->rbx + 0x11,"MOV byte ptr [RBX + 0x11],AL",write other [TODO]
ioapic_configure_entry,0x67,ctx->wordctx->ptrctx->rbx + 0x16,"MOV word ptr [RBX + 0x16],AX",write other [TODO]
ioapic_configure_entry,0xae,ctx->rax,"MOV dword ptr [RAX],R9D",write other [TODO]
ioapic_configure_entry,0xb1,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R8D",write other [TODO]
ioapic_configure_entry,0xca,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
ioapic_configure_entry,0xcc,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],ESI",write other [TODO]
ioapic_configure_entry,0xeb,,RET,ret
ioapic_configure_entry,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ioapic_set_affinity,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_set_affinity,0x1d,ctx->rax + 0x50,CALL qword ptr [RAX + 0x50],in-direct call
ioapic_set_affinity,0x2a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
ioapic_set_affinity,0x47,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ioapic_set_affinity,0x56,,RET,ret
ioapic_set_affinity,0x5a,0xffffffff81073b90,CALL 0xffffffff81073b90,direct call
mp_irqdomain_activate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_irqdomain_activate,0x17,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mp_irqdomain_activate,0x22,0xffffffff81073b90,CALL 0xffffffff81073b90,direct call
mp_irqdomain_activate,0x31,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mp_irqdomain_activate,0x3d,,RET,ret
__acpi_get_override_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__acpi_get_override_irq,0x6b,0xffffffff810734f0,CALL 0xffffffff810734f0,direct call
__acpi_get_override_irq,0x7b,0xffffffff81073000,CALL 0xffffffff81073000,direct call
__acpi_get_override_irq,0x82,ctx->r12,"MOV byte ptr [R12],AL",write other [TODO]
__acpi_get_override_irq,0xb5,ctx->rbx,"MOV byte ptr [RBX],DL",write other [TODO]
__acpi_get_override_irq,0xc2,,RET,ret
__acpi_get_override_irq,0xc1e2f0,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mp_map_pin_to_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_map_pin_to_irq,0x19,ctx->rbp - 0x90,"MOV dword ptr [RBP + -0x90],EDI",write stack
mp_map_pin_to_irq,0x1f,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],ECX",write stack
mp_map_pin_to_irq,0x25,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],R8D",write stack
mp_map_pin_to_irq,0x35,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
mp_map_pin_to_irq,0x7d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mp_map_pin_to_irq,0xa3,0xffffffff8112a320,CALL 0xffffffff8112a320,direct call
mp_map_pin_to_irq,0xc4,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mp_map_pin_to_irq,0xed,,RET,ret
mp_map_pin_to_irq,0x118,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mp_map_pin_to_irq,0x128,ctx->rbp - 0x89,"MOV byte ptr [RBP + -0x89],0x0",write stack
mp_map_pin_to_irq,0x136,0xffffffff81072880,CALL 0xffffffff81072880,direct call
mp_map_pin_to_irq,0x143,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x1",write stack
mp_map_pin_to_irq,0x155,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EAX",write stack
mp_map_pin_to_irq,0x15e,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],DL",write stack
mp_map_pin_to_irq,0x161,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
mp_map_pin_to_irq,0x184,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0xffffffff",write stack
mp_map_pin_to_irq,0x18b,0xffffffff81073d40,CALL 0xffffffff81073d40,direct call
mp_map_pin_to_irq,0x1a8,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],AL",write stack
mp_map_pin_to_irq,0x1c4,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],AL",write stack
mp_map_pin_to_irq,0x1d6,0xffffffff810735f0,CALL 0xffffffff810735f0,direct call
mp_map_pin_to_irq,0x1ea,0xffffffff81127280,CALL 0xffffffff81127280,direct call
mp_map_pin_to_irq,0x208,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ESI",write stack
mp_map_pin_to_irq,0x217,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],DL",write stack
mp_map_pin_to_irq,0x22a,0xffffffff8112a320,CALL 0xffffffff8112a320,direct call
mp_map_pin_to_irq,0x244,0xffffffff810731a0,CALL 0xffffffff810731a0,direct call
mp_map_pin_to_irq,0x279,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
mp_map_pin_to_irq,0x2bc,0xffffffff8112b510,CALL 0xffffffff8112b510,direct call
mp_map_pin_to_irq,0x339,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
IO_APIC_get_PCI_irq_vector,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
IO_APIC_get_PCI_irq_vector,0x23,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
mp_irqdomain_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_irqdomain_alloc,0x16,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EDX",write stack
mp_irqdomain_alloc,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mp_irqdomain_alloc,0x43,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
mp_irqdomain_alloc,0x63,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
mp_irqdomain_alloc,0x67,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ESI",write stack
mp_irqdomain_alloc,0x6a,0xffffffff8112a320,CALL 0xffffffff8112a320,direct call
mp_irqdomain_alloc,0x90,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
mp_irqdomain_alloc,0xad,0xffffffff8112b130,CALL 0xffffffff8112b130,direct call
mp_irqdomain_alloc,0xbe,ctx->r15,"MOV qword ptr [R15],R15",write other [TODO]
mp_irqdomain_alloc,0xc8,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],R15",write other [TODO]
mp_irqdomain_alloc,0xd0,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
mp_irqdomain_alloc,0xe6,ctx->r14 + 0x30,"MOV qword ptr [R14 + 0x30],R15",write other [TODO]
mp_irqdomain_alloc,0xf1,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],RAX",write other [TODO]
mp_irqdomain_alloc,0x119,ctx->r15 + 0x18,"MOV byte ptr [R15 + 0x18],DL",write other [TODO]
mp_irqdomain_alloc,0x11d,ctx->r15 + 0x19,"MOV byte ptr [R15 + 0x19],AL",write other [TODO]
mp_irqdomain_alloc,0x12d,0xffffffff81073560,CALL 0xffffffff81073560,direct call
mp_irqdomain_alloc,0x147,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],0x0",write other [TODO]
mp_irqdomain_alloc,0x14f,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R10D",write stack
mp_irqdomain_alloc,0x160,ctx->r15 + 0x11,"MOV byte ptr [R15 + 0x11],AL",write other [TODO]
mp_irqdomain_alloc,0x169,ctx->r15 + 0x12,"MOV byte ptr [R15 + 0x12],AL",write other [TODO]
mp_irqdomain_alloc,0x17f,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
mp_irqdomain_alloc,0x19b,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R10D",write stack
mp_irqdomain_alloc,0x19f,0xffffffff81128710,CALL 0xffffffff81128710,direct call
mp_irqdomain_alloc,0x1a4,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
mp_irqdomain_alloc,0x1ad,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
mp_irqdomain_alloc,0x1c6,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
mp_irqdomain_alloc,0x1d2,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
mp_irqdomain_alloc,0x20a,,RET,ret
mp_irqdomain_alloc,0x216,0xffffffff81073d40,CALL 0xffffffff81073d40,direct call
mp_irqdomain_alloc,0x224,ctx->wordctx->ptrctx->r15 + 0x18,"MOV word ptr [R15 + 0x18],CX",write other [TODO]
mp_irqdomain_alloc,0x247,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
mp_irqdomain_alloc,0x271,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
mp_irqdomain_alloc,0x274,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mp_irqdomain_alloc,0x28d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mp_irqdomain_alloc,0xc1dd2e,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R10D",write stack
mp_irqdomain_alloc,0xc1dd50,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
clear_IO_APIC_pin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_IO_APIC_pin,0x1e,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
clear_IO_APIC_pin,0x2b,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
clear_IO_APIC_pin,0x3d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
clear_IO_APIC_pin,0xc5,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
clear_IO_APIC_pin,0xd5,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
clear_IO_APIC_pin,0xe4,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
clear_IO_APIC_pin,0xf0,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
clear_IO_APIC_pin,0x128,ctx->rax - 0x800fc0,"MOV dword ptr [RAX + -0x800fc0],R14D",write other [TODO]
clear_IO_APIC_pin,0x139,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
clear_IO_APIC_pin,0x143,0xffffffff81072e10,CALL 0xffffffff81072e10,direct call
clear_IO_APIC_pin,0x14f,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
clear_IO_APIC_pin,0x15c,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
clear_IO_APIC_pin,0x16e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
clear_IO_APIC_pin,0x19a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
clear_IO_APIC_pin,0x1aa,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
clear_IO_APIC_pin,0x1b9,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
clear_IO_APIC_pin,0x1c5,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
clear_IO_APIC_pin,0x1d2,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
clear_IO_APIC_pin,0x1e4,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
clear_IO_APIC_pin,0x20e,0xffffffff81072d00,CALL 0xffffffff81072d00,direct call
clear_IO_APIC_pin,0x22c,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
clear_IO_APIC_pin,0x239,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
mpc_ioapic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mpc_ioapic_id,0x19,,RET,ret
mpc_ioapic_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mpc_ioapic_addr,0x18,,RET,ret
disable_ioapic_support,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disable_ioapic_support,0x6,0xffffffff836746cc,"MOV dword ptr [0xffffffff836746cc],0x1",write .data
disable_ioapic_support,0x10,0xffffffff836746c8,"MOV dword ptr [0xffffffff836746c8],0xffffffff",write .data
disable_ioapic_support,0x1a,0xffffffff8343e484,"MOV dword ptr [0xffffffff8343e484],0x1",write .data
disable_ioapic_support,0x28,,RET,ret
mp_save_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_io_apic_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_io_apic_read,0x31,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
native_io_apic_read,0x37,,RET,ret
clear_IO_APIC,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_IO_APIC,0x34,0xffffffff810745f0,CALL 0xffffffff810745f0,direct call
clear_IO_APIC,0x56,,RET,ret
clear_IO_APIC,0x57,,RET,ret
mask_ioapic_entries,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mask_ioapic_entries,0x6c,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mask_ioapic_entries,0x7f,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
mask_ioapic_entries,0x8e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mask_ioapic_entries,0xb4,,RET,ret
mask_ioapic_entries,0xb5,,RET,ret
restore_ioapic_entries,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restore_ioapic_entries,0x51,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
restore_ioapic_entries,0x64,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
restore_ioapic_entries,0x73,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
restore_ioapic_entries,0x9b,,RET,ret
restore_ioapic_entries,0x9e,,RET,ret
ioapic_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_resume,0x33,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
ioapic_resume,0x3f,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
ioapic_resume,0x81,ctx->rdx,"MOV dword ptr [RDX],ECX",write other [TODO]
ioapic_resume,0x83,ctx->rdx + 0x10,"MOV dword ptr [RDX + 0x10],EAX",write other [TODO]
ioapic_resume,0x97,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ioapic_resume,0xa1,0xffffffff81074a90,CALL 0xffffffff81074a90,direct call
ioapic_resume,0xac,,RET,ret
acpi_get_override_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
acpi_get_override_irq,0x6,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
acpi_get_override_irq,0xc,ctx->rsi,"MOV dword ptr [RSI],0x0",write other [TODO]
acpi_get_override_irq,0x15,0xffffffff81073d40,CALL 0xffffffff81073d40,direct call
acpi_get_override_irq,0x1b,,RET,ret
ioapic_set_alloc_attr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_set_alloc_attr,0x2a,0xffffffff81072840,CALL 0xffffffff81072840,direct call
ioapic_set_alloc_attr,0x37,ctx->r13 + 0x34,"MOV dword ptr [R13 + 0x34],R14D",write other [TODO]
ioapic_set_alloc_attr,0x3b,ctx->r13,"MOV dword ptr [R13],0x1",write other [TODO]
ioapic_set_alloc_attr,0x48,ctx->r13 + 0x38,"MOV byte ptr [R13 + 0x38],BL",write other [TODO]
ioapic_set_alloc_attr,0x54,,RET,ret
mp_map_gsi_to_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_map_gsi_to_irq,0x60,0xffffffff810734f0,CALL 0xffffffff810734f0,direct call
mp_map_gsi_to_irq,0x7f,0xffffffff81073e30,CALL 0xffffffff81073e30,direct call
mp_unmap_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_unmap_irq,0xf,0xffffffff81127280,CALL 0xffffffff81127280,direct call
mp_unmap_irq,0x33,,RET,ret
mp_unmap_irq,0x3b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
mp_unmap_irq,0x4d,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
mp_unmap_irq,0x56,,RET,ret
mp_unmap_irq,0x5f,0xffffffff8112bb30,CALL 0xffffffff8112bb30,direct call
ioapic_zap_locks,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioapic_zap_locks,0x6,0xffffffff83442d08,"MOV dword ptr [0xffffffff83442d08],0x0",write .data
ioapic_zap_locks,0x14,,RET,ret
native_restore_boot_irq_mode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_restore_boot_irq_mode,0x1e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
native_restore_boot_irq_mode,0x39,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
native_restore_boot_irq_mode,0x45,ctx->rax + 0xe8,CALL qword ptr [RAX + 0xe8],in-direct call
native_restore_boot_irq_mode,0x4d,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
native_restore_boot_irq_mode,0x5b,ctx->rbp - 0x29,"MOV byte ptr [RBP + -0x29],AL",write stack
native_restore_boot_irq_mode,0x71,ctx->wordctx->ptrctx->rbp - 0x2c,"MOV word ptr [RBP + -0x2c],CX",write stack
native_restore_boot_irq_mode,0x75,ctx->rbp - 0x2f,"MOV byte ptr [RBP + -0x2f],0x7",write stack
native_restore_boot_irq_mode,0x79,ctx->rbp - 0x2a,"MOV byte ptr [RBP + -0x2a],AL",write stack
native_restore_boot_irq_mode,0x80,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
native_restore_boot_irq_mode,0x91,0xffffffff81072da0,CALL 0xffffffff81072da0,direct call
native_restore_boot_irq_mode,0xa0,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
native_restore_boot_irq_mode,0xd7,,RET,ret
native_restore_boot_irq_mode,0xef,0xffffffff810705d0,CALL 0xffffffff810705d0,direct call
native_restore_boot_irq_mode,0xf6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
restore_boot_irq_mode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restore_boot_irq_mode,0xc,ctx->eax,"MOV EAX,dword ptr [RAX]",write other [TODO]
restore_boot_irq_mode,0x16,0xffffffff826ba448,CALL qword ptr [0xffffffff826ba448],in-direct call
restore_boot_irq_mode,0x1d,,RET,ret
restore_boot_irq_mode,0x1e,,RET,ret
arch_dynirq_lower_bound,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_dynirq_lower_bound,0x1f,,RET,ret
arch_dynirq_lower_bound,0x27,,RET,ret
mp_find_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_find_ioapic,0x3e,,RET,ret
mp_find_ioapic_pin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_find_ioapic_pin,0x27,,RET,ret
mp_register_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_register_ioapic,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mp_register_ioapic,0x29,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EAX",write stack
mp_register_ioapic,0x96,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R8",write stack
mp_register_ioapic,0x9e,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],R9D",write stack
mp_register_ioapic,0xaa,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],EBX",write other [TODO]
mp_register_ioapic,0xad,ctx->rax + 0x10,"MOV byte ptr [RAX + 0x10],0x2",write other [TODO]
mp_register_ioapic,0xb1,ctx->rax + 0x13,"MOV byte ptr [RAX + 0x13],0x1",write other [TODO]
mp_register_ioapic,0xbc,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
mp_register_ioapic,0xbf,0xffffffff81086700,CALL 0xffffffff81086700,direct call
mp_register_ioapic,0xdb,0xffffffff81002290,CALL 0xffffffff81002290,direct call
mp_register_ioapic,0xe8,0xffffffff82e4bad0,CALL qword ptr [0xffffffff82e4bad0],in-direct call
mp_register_ioapic,0xf3,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
mp_register_ioapic,0x103,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
mp_register_ioapic,0x111,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EAX",write stack
mp_register_ioapic,0x114,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
mp_register_ioapic,0x136,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
mp_register_ioapic,0x141,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
mp_register_ioapic,0x149,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
mp_register_ioapic,0x151,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
mp_register_ioapic,0x2f5,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R8",write stack
mp_register_ioapic,0x2f9,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],R9D",write stack
mp_register_ioapic,0x2fd,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mp_register_ioapic,0x30a,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
mp_register_ioapic,0x31a,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EAX",write stack
mp_register_ioapic,0x31d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mp_register_ioapic,0x358,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R8",write stack
mp_register_ioapic,0x35c,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],R9D",write stack
mp_register_ioapic,0x360,0xffffffff81601d90,CALL 0xffffffff81601d90,direct call
mp_register_ioapic,0x380,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mp_register_ioapic,0x388,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
mp_register_ioapic,0x3ad,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
mp_register_ioapic,0x3af,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EBX",write other [TODO]
mp_register_ioapic,0x3b7,0xffffffff826ba440,CALL qword ptr [0xffffffff826ba440],in-direct call
mp_register_ioapic,0x3ca,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mp_register_ioapic,0x417,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mp_register_ioapic,0xc1d27c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mp_register_ioapic,0xc1d293,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mp_unregister_ioapic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_unregister_ioapic,0x74,0xffffffff81074c60,CALL 0xffffffff81074c60,direct call
mp_unregister_ioapic,0x7f,0xffffffff81127280,CALL 0xffffffff81127280,direct call
mp_unregister_ioapic,0xc1,ctx->rax - 0x7cbbf700,"MOV dword ptr [RAX + -0x7cbbf700],0x0",write other [TODO]
mp_unregister_ioapic,0xd4,0xffffffff8112b330,CALL 0xffffffff8112b330,direct call
mp_unregister_ioapic,0xe5, - 0x7cbbf6c8 + ctx->rax * 0x8,"MOV qword ptr [-0x7cbbf6c8 + RAX*0x8],0x0",write other [TODO]
mp_unregister_ioapic,0x102,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mp_unregister_ioapic,0x10b,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
mp_unregister_ioapic,0x118,0xffffffff810ac800,CALL 0xffffffff810ac800,direct call
mp_unregister_ioapic,0x129,0xffffffff82e4bad0,CALL qword ptr [0xffffffff82e4bad0],in-direct call
mp_unregister_ioapic,0x155,0xffffffff81129fe0,CALL 0xffffffff81129fe0,direct call
mp_unregister_ioapic,0x165,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mp_ioapic_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_ioapic_registered,0x37,,RET,ret
mp_ioapic_registered,0x3b,,RET,ret
mp_irqdomain_ioapic_idx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mp_irqdomain_ioapic_idx,0xd,,RET,ret
dmar_msi_compose_msg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dmar_msi_compose_msg,0xe,0xffffffff81071320,CALL 0xffffffff81071320,direct call
dmar_msi_compose_msg,0x1e,0xffffffff81070980,CALL 0xffffffff81070980,direct call
dmar_msi_compose_msg,0x28,,RET,ret
dmar_msi_write_msg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dmar_msi_write_msg,0xc,0xffffffff817d5fd0,CALL 0xffffffff817d5fd0,direct call
dmar_msi_write_msg,0x12,,RET,ret
dmar_msi_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dmar_msi_init,0x29,0xffffffff8112aba0,CALL 0xffffffff8112aba0,direct call
dmar_msi_init,0x31,,RET,ret
pci_msi_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pci_msi_prepare,0x17,0xffffffff81072840,CALL 0xffffffff81072840,direct call
pci_msi_prepare,0x27,ctx->rbx,"MOV dword ptr [RBX],0x4",write other [TODO]
pci_msi_prepare,0x33,,RET,ret
pci_msi_prepare,0x3a,ctx->rbx,"MOV dword ptr [RBX],0x3",write other [TODO]
pci_msi_prepare,0x44,,RET,ret
msi_set_affinity,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
msi_set_affinity,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
msi_set_affinity,0x2d,0xffffffff81071320,CALL 0xffffffff81071320,direct call
msi_set_affinity,0x32,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
msi_set_affinity,0x49,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
msi_set_affinity,0x57,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
msi_set_affinity,0x5e,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
msi_set_affinity,0x66,ctx->rax + 0x50,CALL qword ptr [RAX + 0x50],in-direct call
msi_set_affinity,0xcf,0xffffffff81072800,CALL 0xffffffff81072800,direct call
msi_set_affinity,0xf0,ctx->gs + 0x1efe0 + ctx->rcx * 0x8,"MOV qword ptr GS:[0x1efe0 + RCX*0x8],-0x2",write other [TODO]
msi_set_affinity,0x101,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EDX",write stack
msi_set_affinity,0x10e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
msi_set_affinity,0x116,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
msi_set_affinity,0x11e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
msi_set_affinity,0x126,0xffffffff81070980,CALL 0xffffffff81070980,direct call
msi_set_affinity,0x137,ctx->rax + 0xc0,CALL qword ptr [RAX + 0xc0],in-direct call
msi_set_affinity,0x146,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
msi_set_affinity,0x14e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
msi_set_affinity,0x156,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
msi_set_affinity,0x15e,0xffffffff81070980,CALL 0xffffffff81070980,direct call
msi_set_affinity,0x16f,ctx->rax + 0xc0,CALL qword ptr [RAX + 0xc0],in-direct call
msi_set_affinity,0x175,0xffffffff81072820,CALL 0xffffffff81072820,direct call
msi_set_affinity,0x190,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
msi_set_affinity,0x1a0,ctx->rax + 0x58,CALL qword ptr [RAX + 0x58],in-direct call
msi_set_affinity,0x1b0,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
msi_set_affinity,0x1b8,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
msi_set_affinity,0x1c0,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
msi_set_affinity,0x1c8,0xffffffff81070980,CALL 0xffffffff81070980,direct call
msi_set_affinity,0x1d9,ctx->rax + 0xc0,CALL qword ptr [RAX + 0xc0],in-direct call
msi_set_affinity,0x1ff,,RET,ret
msi_set_affinity,0x200,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_create_remap_msi_irq_domain,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_create_remap_msi_irq_domain,0x23,0xffffffff8112a7f0,CALL 0xffffffff8112a7f0,direct call
arch_create_remap_msi_irq_domain,0x3d,0xffffffff81683720,CALL 0xffffffff81683720,direct call
arch_create_remap_msi_irq_domain,0x50,,RET,ret
arch_create_remap_msi_irq_domain,0x5c,,RET,ret
arch_create_remap_msi_irq_domain,0x60,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
arch_create_remap_msi_irq_domain,0x64,0xffffffff81129fe0,CALL 0xffffffff81129fe0,direct call
arch_create_remap_msi_irq_domain,0x76,,RET,ret
dmar_alloc_hwirq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dmar_alloc_hwirq,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
dmar_alloc_hwirq,0x33,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
dmar_alloc_hwirq,0x49,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
dmar_alloc_hwirq,0x64,0xffffffff81072840,CALL 0xffffffff81072840,direct call
dmar_alloc_hwirq,0x82,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],0x5",write stack
dmar_alloc_hwirq,0x89,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],EBX",write stack
dmar_alloc_hwirq,0x8c,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RBX",write stack
dmar_alloc_hwirq,0x90,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R14",write stack
dmar_alloc_hwirq,0x94,0xffffffff8112b510,CALL 0xffffffff8112b510,direct call
dmar_alloc_hwirq,0xb5,,RET,ret
dmar_alloc_hwirq,0xc6,0xffffffff8112a7f0,CALL 0xffffffff8112a7f0,direct call
dmar_alloc_hwirq,0xe8,0xffffffff8112eb30,CALL 0xffffffff8112eb30,direct call
dmar_alloc_hwirq,0xed,0xffffffff83442d10,"MOV qword ptr [0xffffffff83442d10],RAX",write .data
dmar_alloc_hwirq,0x100,0xffffffff81129fe0,CALL 0xffffffff81129fe0,direct call
dmar_alloc_hwirq,0x111,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
dmar_free_hwirq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dmar_free_hwirq,0xe,0xffffffff8112bb30,CALL 0xffffffff8112bb30,direct call
dmar_free_hwirq,0x14,,RET,ret
arch_restore_msi_irqs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_restore_msi_irqs,0x9,0xffffffff81c62a70,CALL 0xffffffff81c62a70,direct call
arch_restore_msi_irqs,0xf,,RET,ret
native_apic_mem_write,0x2,ctx->rdi - 0xa03000,"MOV dword ptr [RDI + -0xa03000],ESI",write other [TODO]
native_apic_mem_write,0x8,,RET,ret
native_apic_mem_read,0x8,,RET,ret
numachip1_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip1_set_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip1_set_apic_id,0xf,,RET,ret
numachip_apic_id_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_apic_id_valid,0xf,,RET,ret
numachip_apic_id_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_apic_id_registered,0xf,,RET,ret
numachip_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_phys_pkg_id,0x10,,RET,ret
numachip2_apic_icr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip2_apic_icr_write,0x1a,ctx->rax,"MOV dword ptr [RAX],EDI",write other [TODO]
numachip2_apic_icr_write,0x1d,,RET,ret
numachip_wakeup_secondary,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_wakeup_secondary,0x17,0xffffffff83117f48,CALL qword ptr [0xffffffff83117f48],in-direct call
numachip_wakeup_secondary,0x2d,0xffffffff83117f48,CALL qword ptr [0xffffffff83117f48],in-direct call
numachip_wakeup_secondary,0x39,,RET,ret
numachip_send_IPI_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_send_IPI_self,0x17,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
numachip_send_IPI_self,0x1b,,RET,ret
numachip_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_apic_wait_icr_idle,0xa,,RET,ret
numachip_safe_apic_wait_icr_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_safe_apic_wait_icr_idle,0xc,,RET,ret
numachip1_apic_icr_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip1_apic_icr_write,0x21,ctx->rax,"MOV dword ptr [RAX],EDI",write other [TODO]
numachip1_apic_icr_write,0x24,,RET,ret
numachip1_acpi_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip1_acpi_madt_oem_check,0x1f,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
numachip1_acpi_madt_oem_check,0x3a,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
numachip1_acpi_madt_oem_check,0x43,0xffffffff83117f50,"MOV byte ptr [0xffffffff83117f50],0x1",write .data
numachip1_acpi_madt_oem_check,0x58,,RET,ret
numachip2_acpi_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip2_acpi_madt_oem_check,0x1f,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
numachip2_acpi_madt_oem_check,0x3a,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
numachip2_acpi_madt_oem_check,0x43,0xffffffff83117f50,"MOV byte ptr [0xffffffff83117f50],0x2",write .data
numachip2_acpi_madt_oem_check,0x58,,RET,ret
numachip_send_IPI_one,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_send_IPI_one,0x4e,0xffffffff83117f48,CALL qword ptr [0xffffffff83117f48],in-direct call
numachip_send_IPI_one,0x59,,RET,ret
numachip_send_IPI_one,0x5a,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
numachip_send_IPI_one,0x63,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
numachip_send_IPI_one,0x6b,0xffffffff81070f20,CALL 0xffffffff81070f20,direct call
numachip_send_IPI_one,0x75,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
numachip_send_IPI_one,0x84,0xffffffff82000810,CALL 0xffffffff82000810,direct call
numachip_send_IPI_one,0x8b,0xffffffff82000810,CALL 0xffffffff82000810,direct call
numachip_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_send_IPI_mask_allbutself,0x10,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
numachip_send_IPI_mask_allbutself,0x30,0xffffffff81075c70,CALL 0xffffffff81075c70,direct call
numachip_send_IPI_mask_allbutself,0x35,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
numachip_send_IPI_mask_allbutself,0x41,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
numachip_send_IPI_mask_allbutself,0x5d,,RET,ret
numachip2_set_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip2_set_apic_id,0xf,,RET,ret
numachip_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_send_IPI_mask,0x1b,0xffffffff81075c70,CALL 0xffffffff81075c70,direct call
numachip_send_IPI_mask,0x23,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
numachip_send_IPI_mask,0x2c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
numachip_send_IPI_mask,0x44,,RET,ret
numachip_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_send_IPI_all,0x12,0xffffffff81075d80,CALL 0xffffffff81075d80,direct call
numachip_send_IPI_all,0x18,,RET,ret
numachip_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip_send_IPI_allbutself,0x25,0xffffffff81075c70,CALL 0xffffffff81075c70,direct call
numachip_send_IPI_allbutself,0x2d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
numachip_send_IPI_allbutself,0x3a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
numachip_send_IPI_allbutself,0x52,,RET,ret
numachip2_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numachip2_get_apic_id,0x12,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
numachip2_get_apic_id,0x2c,,RET,ret
fixup_cpu_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fixup_cpu_id,0x11,ctx->wordctx->ptrctx->gs + 0x19022,"MOV word ptr GS:[0x19022],SI",write other [TODO]
fixup_cpu_id,0x32,ctx->wordctx->ptrctx->r12 + 0x102,"MOV word ptr [R12 + 0x102],AX",write other [TODO]
fixup_cpu_id,0x3f,,RET,ret
fixup_cpu_id,0x45,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_apic_msr_eoi_write,0xb,,RET,ret
native_apic_msr_read,0x15,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_apic_msr_read,0x1c,,RET,ret
native_apic_msr_read,0x22,,RET,ret
native_x2apic_wait_icr_idle,0x0,,RET,ret
native_safe_x2apic_wait_icr_idle,0x2,,RET,ret
uv_is_untracked_pat_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_is_untracked_pat_range,0x32,,RET,ret
uv_is_untracked_pat_range,0x3e,,RET,ret
uv_get_hubless_system,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_get_hubless_system,0x10,,RET,ret
is_uv_system,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_uv_system,0x17,,RET,ret
is_uv_hubbed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_uv_hubbed,0x12,,RET,ret
uv_apic_id_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_apic_id_valid,0xf,,RET,ret
uv_apic_id_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_apic_id_registered,0xf,,RET,ret
uv_init_apic_ldr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_init_apic_ldr,0xa,,RET,ret
x2apic_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_get_apic_id,0xc,,RET,ret
set_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_apic_id,0xc,,RET,ret
uv_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_phys_pkg_id,0x18,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
uv_phys_pkg_id,0x24,,RET,ret
uv_send_IPI_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_send_IPI_self,0x17,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
uv_send_IPI_self,0x1b,,RET,ret
uv_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_probe,0x1a,,RET,ret
uv_get_archtype,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_get_archtype,0x21,0xffffffff81c85810,CALL 0xffffffff81c85810,direct call
uv_get_archtype,0x29,,RET,ret
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
proc_hubbed_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_hubless_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_archtype_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_uv_calc_apicid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apic_uv_calc_apicid,0x9,0xffffffff81070ab0,CALL 0xffffffff81070ab0,direct call
apic_uv_calc_apicid,0xf,,RET,ret
native_apic_msr_write,0x15,,RET,ret
native_apic_msr_write,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_apic_msr_write,0x2e,,RET,ret
uv_set_vga_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_set_vga_state,0x11,,RET,ret
uv_set_vga_state,0x2e,0xffffffff8109a7c0,CALL 0xffffffff8109a7c0,direct call
uv_set_vga_state,0x34,,RET,ret
native_x2apic_icr_write,0x1b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_x2apic_icr_write,0x22,,RET,ret
native_x2apic_icr_read,0x9,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_x2apic_icr_read,0x10,,RET,ret
uv_send_IPI_one,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_send_IPI_one,0x9c,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
uv_send_IPI_one,0xa0,,RET,ret
uv_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_send_IPI_allbutself,0x25,0xffffffff81076270,CALL 0xffffffff81076270,direct call
uv_send_IPI_allbutself,0x2d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_send_IPI_allbutself,0x3a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
uv_send_IPI_allbutself,0x52,,RET,ret
uv_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_send_IPI_mask_allbutself,0x10,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_send_IPI_mask_allbutself,0x30,0xffffffff81076270,CALL 0xffffffff81076270,direct call
uv_send_IPI_mask_allbutself,0x35,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_send_IPI_mask_allbutself,0x41,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
uv_send_IPI_mask_allbutself,0x5d,,RET,ret
uv_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_send_IPI_mask,0x1b,0xffffffff81076270,CALL 0xffffffff81076270,direct call
uv_send_IPI_mask,0x23,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_send_IPI_mask,0x2c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
uv_send_IPI_mask,0x44,,RET,ret
uv_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_send_IPI_all,0x12,0xffffffff810763e0,CALL 0xffffffff810763e0,direct call
uv_send_IPI_all,0x18,,RET,ret
uv_wakeup_secondary,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_wakeup_secondary,0x87,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
uv_wakeup_secondary,0xba,ctx->rax,"MOV qword ptr [RAX],RDI",write other [TODO]
uv_wakeup_secondary,0xc0,,RET,ret
get_uv_system_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_uv_system_type,0x10,,RET,ret
uv_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_cpu_init,0x2f,,RET,ret
native_apic_msr_eoi_write,0xb,,RET,ret
native_apic_msr_read,0x15,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_apic_msr_read,0x1c,,RET,ret
native_apic_msr_read,0x22,,RET,ret
native_x2apic_wait_icr_idle,0x0,,RET,ret
native_safe_x2apic_wait_icr_idle,0x2,,RET,ret
init_x2apic_ldr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_x2apic_ldr,0xa,,RET,ret
x2apic_apic_id_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_apic_id_valid,0x22,,RET,ret
x2apic_apic_id_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_apic_id_registered,0xf,,RET,ret
x2apic_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_get_apic_id,0xc,,RET,ret
x2apic_set_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_set_apic_id,0xc,,RET,ret
x2apic_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_phys_pkg_id,0x10,,RET,ret
x2apic_send_IPI_self,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_self,0x17,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
x2apic_send_IPI_self,0x1b,,RET,ret
native_apic_msr_write,0x15,,RET,ret
native_apic_msr_write,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_apic_msr_write,0x2e,,RET,ret
x2apic_phys_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_acpi_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_acpi_madt_oem_check,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
x2apic_acpi_madt_oem_check,0x4e,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
native_x2apic_icr_read,0x9,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_x2apic_icr_read,0x10,,RET,ret
native_x2apic_icr_write,0x1b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_x2apic_icr_write,0x22,,RET,ret
x2apic_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_all,0x2a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x2apic_send_IPI_all,0x31,,RET,ret
x2apic_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_allbutself,0x2a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x2apic_send_IPI_allbutself,0x31,,RET,ret
x2apic_send_IPI,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI,0x45,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
x2apic_send_IPI,0x4c,,RET,ret
__x2apic_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x2apic_send_IPI_mask,0x22,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__x2apic_send_IPI_mask,0x28,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__x2apic_send_IPI_mask,0x2c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__x2apic_send_IPI_mask,0x45,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__x2apic_send_IPI_mask,0x56,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__x2apic_send_IPI_mask,0x8c,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__x2apic_send_IPI_mask,0x92,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__x2apic_send_IPI_mask,0x9f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__x2apic_send_IPI_mask,0xa4,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__x2apic_send_IPI_mask,0xbc,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__x2apic_send_IPI_mask,0xd0,,RET,ret
x2apic_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_mask_allbutself,0xe,0xffffffff810768c0,CALL 0xffffffff810768c0,direct call
x2apic_send_IPI_mask_allbutself,0x14,,RET,ret
x2apic_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_mask,0xe,0xffffffff810768c0,CALL 0xffffffff810768c0,direct call
x2apic_send_IPI_mask,0x14,,RET,ret
__x2apic_send_IPI_dest,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x2apic_send_IPI_dest,0x2d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__x2apic_send_IPI_dest,0x34,,RET,ret
__x2apic_send_IPI_shorthand,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x2apic_send_IPI_shorthand,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
__x2apic_send_IPI_shorthand,0x2e,,RET,ret
native_apic_msr_eoi_write,0xb,,RET,ret
native_apic_msr_read,0x15,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_apic_msr_read,0x1c,,RET,ret
native_apic_msr_read,0x22,,RET,ret
native_x2apic_wait_icr_idle,0x0,,RET,ret
native_safe_x2apic_wait_icr_idle,0x2,,RET,ret
x2apic_calc_apicid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_calc_apicid,0x16,,RET,ret
x2apic_dead_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_dead_cpu,0x17,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
x2apic_dead_cpu,0x3c,0xffffffff81c682a0,CALL 0xffffffff81c682a0,direct call
x2apic_dead_cpu,0x44,,RET,ret
x2apic_send_IPI_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_all,0xe,0xffffffff81076a20,CALL 0xffffffff81076a20,direct call
x2apic_send_IPI_all,0x14,,RET,ret
x2apic_send_IPI_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_allbutself,0xe,0xffffffff81076a20,CALL 0xffffffff81076a20,direct call
x2apic_send_IPI_allbutself,0x14,,RET,ret
x2apic_send_IPI,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI,0x21,0xffffffff810769e0,CALL 0xffffffff810769e0,direct call
x2apic_send_IPI,0x27,,RET,ret
native_apic_msr_write,0x15,,RET,ret
native_apic_msr_write,0x27,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_apic_msr_write,0x2e,,RET,ret
x2apic_prepare_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_prepare_cpu,0x4e,0xffffffff81c68270,CALL 0xffffffff81c68270,direct call
x2apic_prepare_cpu,0x5d,,RET,ret
x2apic_prepare_cpu,0x70,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
x2apic_prepare_cpu,0x89,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
x2apic_prepare_cpu,0x8e,0xffffffff83442e48,"MOV qword ptr [0xffffffff83442e48],RAX",write .data
x2apic_prepare_cpu,0x9a,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],R12D",write other [TODO]
x2apic_acpi_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_acpi_madt_oem_check,0x17,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
x2apic_acpi_madt_oem_check,0x3f,,RET,ret
x2apic_acpi_madt_oem_check,0x49,0xffffffff82e4b928,CALL qword ptr [0xffffffff82e4b928],in-direct call
x2apic_acpi_madt_oem_check,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x2apic_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x2apic_send_IPI_mask,0x19,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ESI",write stack
__x2apic_send_IPI_mask,0x22,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__x2apic_send_IPI_mask,0x28,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__x2apic_send_IPI_mask,0x2c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__x2apic_send_IPI_mask,0x52,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
__x2apic_send_IPI_mask,0x6d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__x2apic_send_IPI_mask,0x7f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__x2apic_send_IPI_mask,0xbb,ctx->edx,"MOV EDX,ESI",write other [TODO]
__x2apic_send_IPI_mask,0xc5,0xffffffff81601f50,CALL 0xffffffff81601f50,direct call
__x2apic_send_IPI_mask,0xe4,0xffffffff810769e0,CALL 0xffffffff810769e0,direct call
__x2apic_send_IPI_mask,0xf2,ctx->ecx,"MOV ECX,dword ptr [0xffffffff8311b690]",write other [TODO]
__x2apic_send_IPI_mask,0xf8,0xffffffff815f9c30,CALL 0xffffffff815f9c30,direct call
__x2apic_send_IPI_mask,0x117,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__x2apic_send_IPI_mask,0x12b,,RET,ret
x2apic_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_mask_allbutself,0xe,0xffffffff81076ce0,CALL 0xffffffff81076ce0,direct call
x2apic_send_IPI_mask_allbutself,0x14,,RET,ret
x2apic_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_send_IPI_mask,0xe,0xffffffff81076ce0,CALL 0xffffffff81076ce0,direct call
x2apic_send_IPI_mask,0x14,,RET,ret
init_x2apic_ldr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_x2apic_ldr,0x20,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
init_x2apic_ldr,0x35,ctx->rdx + ctx->rax * 0x4,"MOV dword ptr [RDX + RAX*0x4],EBX",write other [TODO]
init_x2apic_ldr,0x47,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
init_x2apic_ldr,0x77,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
init_x2apic_ldr,0x8d,0xffffffff83442e48,"MOV qword ptr [0xffffffff83442e48],0x0",write .data
init_x2apic_ldr,0x98,ctx->rdx,"MOV dword ptr [RDX],EBX",write other [TODO]
init_x2apic_ldr,0x9d,ctx->gs + 0x199f8,"MOV qword ptr GS:[0x199f8],R12",write other [TODO]
init_x2apic_ldr,0xb8,,RET,ret
x2apic_cluster_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x2apic_cluster_probe,0x11,,RET,ret
x2apic_cluster_probe,0x30,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
x2apic_cluster_probe,0x35,0xffffffff83117f58,"MOV qword ptr [0xffffffff83117f58],RAX",write .data
x2apic_cluster_probe,0x63,0xffffffff810a7280,CALL 0xffffffff810a7280,direct call
x2apic_cluster_probe,0x70,0xffffffff81076e50,CALL 0xffffffff81076e50,direct call
x2apic_cluster_probe,0x7f,,RET,ret
native_x2apic_icr_write,0x1b,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_x2apic_icr_write,0x22,,RET,ret
native_x2apic_icr_read,0x9,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_x2apic_icr_read,0x10,,RET,ret
native_apic_mem_write,0x2,ctx->rdi - 0xa03000,"MOV dword ptr [RDI + -0xa03000],ESI",write other [TODO]
native_apic_mem_write,0x8,,RET,ret
native_apic_mem_read,0x8,,RET,ret
flat_acpi_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_acpi_madt_oem_check,0xf,,RET,ret
flat_init_apic_ldr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_init_apic_ldr,0x22,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
flat_init_apic_ldr,0x31,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
flat_init_apic_ldr,0x51,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
flat_init_apic_ldr,0x59,,RET,ret
flat_get_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_get_apic_id,0xf,,RET,ret
set_apic_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_apic_id,0xf,,RET,ret
flat_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_phys_pkg_id,0x10,,RET,ret
flat_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_probe,0xf,,RET,ret
physflat_init_apic_ldr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
physflat_init_apic_ldr,0xa,,RET,ret
default_inquire_remote_apic,0x9,,RET,ret
default_inquire_remote_apic,0xe,0xffffffff81c915f1,CALL 0xffffffff81c915f1,direct call
default_inquire_remote_apic,0x14,,RET,ret
flat_apic_id_registered,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_apic_id_registered,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
flat_apic_id_registered,0x2d,,RET,ret
_flat_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_flat_send_IPI_mask,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
_flat_send_IPI_mask,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
_flat_send_IPI_mask,0x1e,0xffffffff81070f20,CALL 0xffffffff81070f20,direct call
_flat_send_IPI_mask,0x28,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
_flat_send_IPI_mask,0x33,,RET,ret
flat_send_IPI_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_send_IPI_mask_allbutself,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
flat_send_IPI_mask_allbutself,0x1f,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
flat_send_IPI_mask_allbutself,0x3a,0xffffffff81077120,CALL 0xffffffff81077120,direct call
flat_send_IPI_mask_allbutself,0x4f,,RET,ret
flat_send_IPI_mask_allbutself,0x50,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
flat_send_IPI_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flat_send_IPI_mask,0xc,0xffffffff81077120,CALL 0xffffffff81077120,direct call
flat_send_IPI_mask,0x12,,RET,ret
physflat_acpi_madt_oem_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
physflat_acpi_madt_oem_check,0x43,,RET,ret
physflat_acpi_madt_oem_check,0xc1b271,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
physflat_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
physflat_probe,0x13,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
physflat_probe,0x23,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
physflat_probe,0x33,,RET,ret
physflat_probe,0x34,0xffffffff81080c80,CALL 0xffffffff81080c80,direct call
physflat_probe,0x3d,,RET,ret
physflat_probe,0x43,,RET,ret
ftrace_verify_code,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
ftrace_verify_code,0x27,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
ftrace_verify_code,0x38,0xffffffff8353b100,"MOV qword ptr [0xffffffff8353b100],RBX",write .data
ftrace_verify_code,0x5a,,RET,ret
ftrace_verify_code,0x71,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
addr_from_call,0x21,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
addr_from_call,0x27,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
addr_from_call,0x59,,RET,ret
addr_from_call,0x60,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ftrace_arch_code_modify_prepare,0xb,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
ftrace_arch_code_modify_prepare,0x11,0xffffffff83442e58,"MOV dword ptr [0xffffffff83442e58],0x1",write .data
ftrace_arch_code_modify_prepare,0x1b,,RET,ret
ftrace_arch_code_modify_post_process,0x4,0xffffffff8103f9d0,CALL 0xffffffff8103f9d0,direct call
ftrace_arch_code_modify_post_process,0x10,0xffffffff83442e58,"MOV dword ptr [0xffffffff83442e58],0x0",write .data
ftrace_arch_code_modify_post_process,0x1a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
ftrace_arch_code_modify_post_process,0x20,,RET,ret
ftrace_make_nop,0x18,ctx->rsi,"MOV byte ptr [RSI],0xe8",write other [TODO]
ftrace_make_nop,0x22,ctx->rsi + 0x1,"MOV dword ptr [RSI + 0x1],EAX",write other [TODO]
ftrace_make_nop,0x3d,,RET,ret
ftrace_make_nop,0x45,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],EAX",write stack
ftrace_make_nop,0x48,0xffffffff830c7c10,"MOV byte ptr [0xffffffff830c7c10],0x1",write .data
ftrace_make_nop,0x4f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
ftrace_make_nop,0x5b,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82207928]",write other [TODO]
ftrace_make_nop,0x69,0xffffffff81d04740,CALL 0xffffffff81d04740,direct call
ftrace_make_nop,0x6f,,RET,ret
ftrace_make_call,0x15,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],ESI",write other [TODO]
ftrace_make_call,0x18,ctx->rsi,"MOV RSI,qword ptr [0xffffffff82207928]",write other [TODO]
ftrace_make_call,0x1f,ctx->rdx,"MOV byte ptr [RDX],0xe8",write other [TODO]
ftrace_make_call,0x2c,0xffffffff81d04740,CALL 0xffffffff81d04740,direct call
ftrace_make_call,0x32,,RET,ret
ftrace_update_ftrace_func,0x32,ctx->r12 + 0x1,"MOV dword ptr [R12 + 0x1],EDX",write other [TODO]
ftrace_update_ftrace_func,0x3c,ctx->r12,"MOV byte ptr [R12],0xe8",write other [TODO]
ftrace_update_ftrace_func,0x41,0xffffffff81d04600,CALL 0xffffffff81d04600,direct call
ftrace_update_ftrace_func,0x4d,ctx->r12,"MOV byte ptr [R12],0xe8",write other [TODO]
ftrace_update_ftrace_func,0x6e,ctx->r12 + 0x1,"MOV dword ptr [R12 + 0x1],EBX",write other [TODO]
ftrace_update_ftrace_func,0x73,0xffffffff81d04600,CALL 0xffffffff81d04600,direct call
ftrace_update_ftrace_func,0x7e,,RET,ret
ftrace_replace_code,0x17,0xffffffff811b8f00,CALL 0xffffffff811b8f00,direct call
ftrace_replace_code,0x3f,0xffffffff811b88e0,CALL 0xffffffff811b88e0,direct call
ftrace_replace_code,0x47,ctx->rbx,"MOV byte ptr [RBX],0xe8",write other [TODO]
ftrace_replace_code,0x58,ctx->rbx + 0x1,"MOV dword ptr [RBX + 0x1],EAX",write other [TODO]
ftrace_replace_code,0x5e,0xffffffff81077280,CALL 0xffffffff81077280,direct call
ftrace_replace_code,0x6a,0xffffffff811b8f40,CALL 0xffffffff811b8f40,direct call
ftrace_replace_code,0x7a,0xffffffff811b8f90,CALL 0xffffffff811b8f90,direct call
ftrace_replace_code,0x88,0xffffffff811b8750,CALL 0xffffffff811b8750,direct call
ftrace_replace_code,0x92,ctx->rsi,"MOV RSI,qword ptr [0xffffffff82207928]",write other [TODO]
ftrace_replace_code,0x9c,0xffffffff81077280,CALL 0xffffffff81077280,direct call
ftrace_replace_code,0xaa,0xffffffff81ca01cc,CALL 0xffffffff81ca01cc,direct call
ftrace_replace_code,0xb9,,RET,ret
ftrace_replace_code,0xba,0xffffffff811b8f00,CALL 0xffffffff811b8f00,direct call
ftrace_replace_code,0xdf,0xffffffff811b8f40,CALL 0xffffffff811b8f40,direct call
ftrace_replace_code,0xef,0xffffffff811b8f90,CALL 0xffffffff811b8f90,direct call
ftrace_replace_code,0xfc,0xffffffff811b8750,CALL 0xffffffff811b8750,direct call
ftrace_replace_code,0x10b,ctx->rsi,"MOV RSI,qword ptr [0xffffffff82207928]",write other [TODO]
ftrace_replace_code,0x11c,0xffffffff81d04530,CALL 0xffffffff81d04530,direct call
ftrace_replace_code,0x126,0xffffffff811b8730,CALL 0xffffffff811b8730,direct call
ftrace_replace_code,0x12e,0xffffffff811b8f40,CALL 0xffffffff811b8f40,direct call
ftrace_replace_code,0x13b,0xffffffff8103f9d0,CALL 0xffffffff8103f9d0,direct call
ftrace_replace_code,0x14a,,RET,ret
ftrace_replace_code,0x14e,0xffffffff811b8800,CALL 0xffffffff811b8800,direct call
ftrace_replace_code,0x15d,ctx->r13,"MOV byte ptr [R13],0xe8",write other [TODO]
ftrace_replace_code,0x169,ctx->r13 + 0x1,"MOV dword ptr [R13 + 0x1],EAX",write other [TODO]
arch_ftrace_update_code,0x4,0xffffffff811b8fc0,CALL 0xffffffff811b8fc0,direct call
arch_ftrace_update_code,0xa,,RET,ret
set_ftrace_ops_ro,0x52,0xffffffff81090650,CALL 0xffffffff81090650,direct call
set_ftrace_ops_ro,0x6d,,RET,ret
arch_ftrace_update_trampoline,0x21,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_ftrace_update_trampoline,0x68,0xffffffff811be500,CALL 0xffffffff811be500,direct call
arch_ftrace_update_trampoline,0x77,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
arch_ftrace_update_trampoline,0x9f,ctx->rcx,"MOV byte ptr [RCX],0xe8",write other [TODO]
arch_ftrace_update_trampoline,0xa2,ctx->rcx + 0x1,"MOV dword ptr [RCX + 0x1],EAX",write other [TODO]
arch_ftrace_update_trampoline,0xa7,0xffffffff81d04600,CALL 0xffffffff81d04600,direct call
arch_ftrace_update_trampoline,0xb3,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
arch_ftrace_update_trampoline,0xd9,,RET,ret
arch_ftrace_update_trampoline,0xe2,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x15",write stack
arch_ftrace_update_trampoline,0xe6,ctx->wordctx->ptrctx->rbp - 0x33,"MOV word ptr [RBP + -0x33],CX",write stack
arch_ftrace_update_trampoline,0xea,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
arch_ftrace_update_trampoline,0xf4,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],-0x7ef88393",write stack
arch_ftrace_update_trampoline,0x10a,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],-0x7ef8837c",write stack
arch_ftrace_update_trampoline,0x11f,0xffffffff8107c340,CALL 0xffffffff8107c340,direct call
arch_ftrace_update_trampoline,0x133,ctx->rsi,"MOV RSI,R14",write other [TODO]
arch_ftrace_update_trampoline,0x139,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
arch_ftrace_update_trampoline,0x14b,ctx->wordctx->ptrctx->rbx + ctx->r12 * 0x1,"MOV word ptr [RBX + R12*0x1],DX",write other [TODO]
arch_ftrace_update_trampoline,0x16b,ctx->rsi,"MOV RSI,qword ptr [0xffffffff82207910]",write other [TODO]
arch_ftrace_update_trampoline,0x177,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
arch_ftrace_update_trampoline,0x189,ctx->rdx,"MOV qword ptr [RDX],R15",write other [TODO]
arch_ftrace_update_trampoline,0x19c,ctx->wordctx->ptrctx->rbp - 0x36,"MOV word ptr [RBP + -0x36],CX",write stack
arch_ftrace_update_trampoline,0x1a6,ctx->rbp - 0x3a,"MOV dword ptr [RBP + -0x3a],EAX",write stack
arch_ftrace_update_trampoline,0x1a9,ctx->rbp - 0x34,"MOV byte ptr [RBP + -0x34],CL",write stack
arch_ftrace_update_trampoline,0x1b7,0xffffffff81148d60,CALL 0xffffffff81148d60,direct call
arch_ftrace_update_trampoline,0x1bc,ctx->r15 + 0x90,"MOV qword ptr [R15 + 0x90],0x0",write other [TODO]
arch_ftrace_update_trampoline,0x1cc,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],-0x7ef882c2",write stack
arch_ftrace_update_trampoline,0x1e2,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],-0x7ef88252",write stack
arch_ftrace_update_trampoline,0x1ea,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x7ef88200",write stack
arch_ftrace_update_trampoline,0x20e,ctx->rbp - 0x37,"MOV dword ptr [RBP + -0x37],EAX",write stack
arch_ftrace_update_trampoline,0x214,ctx->r12,"MOV dword ptr [R12],EAX",write other [TODO]
arch_ftrace_update_trampoline,0x21c,ctx->wordctx->ptrctx->r12 + 0x4,"MOV word ptr [R12 + 0x4],AX",write other [TODO]
arch_ftrace_update_trampoline,0x226,ctx->r12 + 0x6,"MOV byte ptr [R12 + 0x6],AL",write other [TODO]
arch_ftrace_update_trampoline,0x22b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
arch_ftrace_update_trampoline,0x23e,0xffffffff811be500,CALL 0xffffffff811be500,direct call
arch_ftrace_update_trampoline,0x25b,ctx->rcx,"MOV byte ptr [RCX],0xe8",write other [TODO]
arch_ftrace_update_trampoline,0x25e,ctx->rcx + 0x1,"MOV dword ptr [RCX + 0x1],EAX",write other [TODO]
arch_ftrace_update_trampoline,0x267,ctx->r12,"MOV dword ptr [R12],EAX",write other [TODO]
arch_ftrace_update_trampoline,0x272,ctx->r12 + 0x4,"MOV byte ptr [R12 + 0x4],AL",write other [TODO]
arch_ftrace_update_trampoline,0x277,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
arch_ftrace_update_trampoline,0x287,0xffffffff812e9690,CALL 0xffffffff812e9690,direct call
arch_ftrace_update_trampoline,0x2b7,0xffffffff81090650,CALL 0xffffffff81090650,direct call
arch_ftrace_update_trampoline,0x2c2,0xffffffff810905d0,CALL 0xffffffff810905d0,direct call
arch_ftrace_update_trampoline,0x2c7,ctx->r15 + 0x90,"MOV qword ptr [R15 + 0x90],RBX",write other [TODO]
arch_ftrace_update_trampoline,0x2ce,ctx->r15 + 0x98,"MOV qword ptr [R15 + 0x98],R13",write other [TODO]
arch_ftrace_update_trampoline,0x2e8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_ftrace_trampoline_func,0x45,0xffffffff81077300,CALL 0xffffffff81077300,direct call
arch_ftrace_trampoline_func,0x4b,,RET,ret
arch_ftrace_trampoline_func,0x6f,0xffffffff81077300,CALL 0xffffffff81077300,direct call
arch_ftrace_trampoline_func,0x75,,RET,ret
arch_ftrace_trampoline_func,0x84,,RET,ret
arch_ftrace_trampoline_free,0x18,,RET,ret
arch_ftrace_trampoline_free,0x20,0xffffffff81148d60,CALL 0xffffffff81148d60,direct call
arch_ftrace_trampoline_free,0x25,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],0x0",write other [TODO]
arch_ftrace_trampoline_free,0x35,,RET,ret
arch_ftrace_trampoline_free,0x36,,RET,ret
prepare_ftrace_return,0x87,ctx->rdx + 0x13c8,"MOV qword ptr [RDX + 0x13c8],RAX",write other [TODO]
prepare_ftrace_return,0xa1,0xffffffff811ddb70,CALL 0xffffffff811ddb70,direct call
prepare_ftrace_return,0xc7,,RET,ret
prepare_ftrace_return,0xc8,ctx->rbx,"MOV qword ptr [RBX],-0x7ef88180",write other [TODO]
prepare_ftrace_return,0xe5,0xffffffff82000818,CALL 0xffffffff82000818,direct call
ftrace_graph_func,0xd,0xffffffff81077ab0,CALL 0xffffffff81077ab0,direct call
ftrace_graph_func,0x13,,RET,ret
ftrace_stub,0x0,,RET,ret
ftrace_stub_graph,0x0,,RET,ret
__fentry__,0x0,,RET,ret
ftrace_caller,0x18,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
ftrace_caller,0x1d,ctx->rsp + 0x58,"MOV qword ptr [RSP + 0x58],RCX",write stack
ftrace_caller,0x22,ctx->rsp + 0x60,"MOV qword ptr [RSP + 0x60],RDX",write stack
ftrace_caller,0x27,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],RSI",write stack
ftrace_caller,0x2c,ctx->rsp + 0x70,"MOV qword ptr [RSP + 0x70],RDI",write stack
ftrace_caller,0x31,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],R8",write stack
ftrace_caller,0x36,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R9",write stack
ftrace_caller,0x3b,ctx->rsp + 0x78,"MOV qword ptr [RSP + 0x78],0x0",write stack
ftrace_caller,0x4c,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDX",write stack
ftrace_caller,0x61,ctx->rsp + 0x80,"MOV qword ptr [RSP + 0x80],RDI",write stack
ftrace_caller,0x75,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RCX",write stack
ftrace_caller_op_ptr,0xb,ctx->rsp + 0x88,"MOV qword ptr [RSP + 0x88],0x0",write stack
ftrace_call,0x0,0xffffffff81077bc0,CALL 0xffffffff81077bc0,direct call
ftrace_call,0xd,ctx->rsp + 0xd0,"MOV qword ptr [RSP + 0xd0],RAX",write stack
ftrace_caller_end,0x0,,RET,ret
ftrace_regs_caller,0x19,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
ftrace_regs_caller,0x1e,ctx->rsp + 0x58,"MOV qword ptr [RSP + 0x58],RCX",write stack
ftrace_regs_caller,0x23,ctx->rsp + 0x60,"MOV qword ptr [RSP + 0x60],RDX",write stack
ftrace_regs_caller,0x28,ctx->rsp + 0x68,"MOV qword ptr [RSP + 0x68],RSI",write stack
ftrace_regs_caller,0x2d,ctx->rsp + 0x70,"MOV qword ptr [RSP + 0x70],RDI",write stack
ftrace_regs_caller,0x32,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],R8",write stack
ftrace_regs_caller,0x37,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R9",write stack
ftrace_regs_caller,0x3c,ctx->rsp + 0x78,"MOV qword ptr [RSP + 0x78],0x0",write stack
ftrace_regs_caller,0x4d,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDX",write stack
ftrace_regs_caller,0x62,ctx->rsp + 0x80,"MOV qword ptr [RSP + 0x80],RDI",write stack
ftrace_regs_caller_op_ptr,0x7,ctx->rsp,"MOV qword ptr [RSP],R15",write stack
ftrace_regs_caller_op_ptr,0xb,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],R14",write stack
ftrace_regs_caller_op_ptr,0x10,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],R13",write stack
ftrace_regs_caller_op_ptr,0x15,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],R12",write stack
ftrace_regs_caller_op_ptr,0x1a,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],R11",write stack
ftrace_regs_caller_op_ptr,0x1f,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],R10",write stack
ftrace_regs_caller_op_ptr,0x24,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RBX",write stack
ftrace_regs_caller_op_ptr,0x31,ctx->rsp + 0x90,"MOV qword ptr [RSP + 0x90],RCX",write stack
ftrace_regs_caller_op_ptr,0x40,ctx->rsp + 0xa0,"MOV qword ptr [RSP + 0xa0],RCX",write stack
ftrace_regs_caller_op_ptr,0x4f,ctx->rsp + 0x88,"MOV qword ptr [RSP + 0x88],RCX",write stack
ftrace_regs_caller_op_ptr,0x5f,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RCX",write stack
ftrace_regs_call,0x0,0xffffffff81077bc0,CALL 0xffffffff81077bc0,direct call
ftrace_regs_call,0xd,ctx->rsp + 0xd0,"MOV qword ptr [RSP + 0xd0],RAX",write stack
ftrace_regs_call,0x1d,ctx->rsp + 0xd8,"MOV qword ptr [RSP + 0xd8],RAX",write stack
ftrace_regs_call,0x47,ctx->rsp + 0xc8,"MOV qword ptr [RSP + 0xc8],RAX",write stack
ftrace_regs_caller_jmp,0x3b,ctx->rsp + 0xc8,"MOV qword ptr [RSP + 0xc8],RDI",write stack
ftrace_regs_caller_jmp,0x43,ctx->rsp + 0xd0,"MOV qword ptr [RSP + 0xd0],RAX",write stack
ftrace_regs_caller_jmp,0x7b,,RET,ret
ftrace_regs_caller_end,0x0,,RET,ret
return_to_handler,0x4,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
return_to_handler,0x8,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
return_to_handler,0x10,0xffffffff811ddc90,CALL 0xffffffff811ddc90,direct call
return_to_handler,0x25,0xffffffff81077eab,CALL 0xffffffff81077eab,direct call
FUN_ffffffff81077eab,0x0,ctx->rsp,"MOV qword ptr [RSP],RDI",write stack
FUN_ffffffff81077eab,0x4,,RET,ret
trace_clock_x86_tsc,0xc,,RET,ret
arch_rethook_trampoline,0x2c,0xffffffff81077f70,CALL 0xffffffff81077f70,direct call
arch_rethook_trampoline,0x51,,RET,ret
arch_rethook_fixup_return,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_rethook_fixup_return,0x6,ctx->rdi + 0xa8,"MOV qword ptr [RDI + 0xa8],RSI",write other [TODO]
arch_rethook_fixup_return,0x11,,RET,ret
arch_rethook_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_rethook_prepare,0x13,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RDX",write other [TODO]
arch_rethook_prepare,0x1e,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],RDX",write other [TODO]
arch_rethook_prepare,0x22,ctx->rax,"MOV qword ptr [RAX],-0x7ef88140",write other [TODO]
arch_rethook_prepare,0x2a,,RET,ret
arch_rethook_trampoline_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_rethook_trampoline_callback,0x15,ctx->rdi + 0x88,"MOV qword ptr [RDI + 0x88],0x10",write other [TODO]
arch_rethook_trampoline_callback,0x23,ctx->rdi + 0x78,"MOV qword ptr [RDI + 0x78],-0x1",write other [TODO]
arch_rethook_trampoline_callback,0x2f,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],-0x7ef88140",write other [TODO]
arch_rethook_trampoline_callback,0x3a,0xffffffff8120a150,CALL 0xffffffff8120a150,direct call
arch_rethook_trampoline_callback,0x46,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],RAX",write other [TODO]
arch_rethook_trampoline_callback,0x52,,RET,ret
arch_crash_save_vmcoreinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_crash_save_vmcoreinfo,0x27,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
arch_crash_save_vmcoreinfo,0x41,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0x7e,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0x64,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0x4c,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0x39,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0x21,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0xb,0xffffffff811719d0,CALL 0xffffffff811719d0,direct call
FUN_ffffffff810780a5,-0x1,,RET,ret
mem_region_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mem_region_callback,0x1a,0xffffffff81087480,CALL 0xffffffff81087480,direct call
mem_region_callback,0x20,,RET,ret
alloc_pgt_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_pgt_page,0xb,0xffffffff811723a0,CALL 0xffffffff811723a0,direct call
alloc_pgt_page,0x31,0xffffffff81c89670,CALL 0xffffffff81c89670,direct call
alloc_pgt_page,0x3a,,RET,ret
kexec_mark_range.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kexec_mark_range.isra.0,0x35,0xffffffff810907a0,CALL 0xffffffff810907a0,direct call
kexec_mark_range.isra.0,0x3b,,RET,ret
kexec_mark_range.isra.0,0x3c,0xffffffff81090810,CALL 0xffffffff81090810,direct call
kexec_mark_range.isra.0,0x42,,RET,ret
kexec_mark_range.isra.0,0x43,,RET,ret
kexec_mark_crashkres,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kexec_mark_crashkres,0x21,0xffffffff81078120,CALL 0xffffffff81078120,direct call
kexec_mark_crashkres,0x51,0xffffffff81078120,CALL 0xffffffff81078120,direct call
kexec_mark_crashkres,0x67,0xffffffff81078120,CALL 0xffffffff81078120,direct call
kexec_mark_crashkres,0x70,,RET,ret
machine_kexec_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_kexec_prepare,0x2d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
machine_kexec_prepare,0x37,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDI",write stack
machine_kexec_prepare,0x46,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
machine_kexec_prepare,0x4e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
machine_kexec_prepare,0x59,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],-0x7ef87f20",write stack
machine_kexec_prepare,0x61,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x1e3",write stack
machine_kexec_prepare,0x69,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x63",write stack
machine_kexec_prepare,0x71,0xffffffff81c89670,CALL 0xffffffff81c89670,direct call
machine_kexec_prepare,0x7b,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
machine_kexec_prepare,0x9d,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],0x1",write stack
machine_kexec_prepare,0xe1,0xffffffff81087480,CALL 0xffffffff81087480,direct call
machine_kexec_prepare,0x14f,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
machine_kexec_prepare,0x153,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R13",write stack
machine_kexec_prepare,0x157,0xffffffff810ad0a0,CALL 0xffffffff810ad0a0,direct call
machine_kexec_prepare,0x183,0xffffffff810ad0a0,CALL 0xffffffff810ad0a0,direct call
machine_kexec_prepare,0x56a,0xffffffff81087480,CALL 0xffffffff81087480,direct call
machine_kexec_prepare,0x5b1,0xffffffff81087480,CALL 0xffffffff81087480,direct call
FUN_ffffffff810787d7,0x2d,0xffffffff82e4ba68,CALL qword ptr [0xffffffff82e4ba68],in-direct call
FUN_ffffffff810787d7,0x39,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
machine_kexec_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_kexec_cleanup,0x16,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
machine_kexec_cleanup,0x24,ctx->rbx + 0x280,"MOV qword ptr [RBX + 0x280],0x0",write other [TODO]
machine_kexec_cleanup,0x2f,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
machine_kexec_cleanup,0x3d,ctx->rbx + 0x288,"MOV qword ptr [RBX + 0x288],0x0",write other [TODO]
machine_kexec_cleanup,0x48,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
machine_kexec_cleanup,0x56,ctx->rbx + 0x290,"MOV qword ptr [RBX + 0x290],0x0",write other [TODO]
machine_kexec_cleanup,0x61,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
machine_kexec_cleanup,0x66,ctx->rbx + 0x298,"MOV qword ptr [RBX + 0x298],0x0",write other [TODO]
machine_kexec_cleanup,0x76,,RET,ret
machine_kexec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
machine_kexec,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
machine_kexec,0x38,0xffffffff8311c108,"MOV dword ptr [0xffffffff8311c108],0x0",write .data
machine_kexec,0x42,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
machine_kexec,0x52,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
machine_kexec,0x5e,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
machine_kexec,0x6c,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
machine_kexec,0x7a,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
machine_kexec,0x88,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
machine_kexec,0x8e,0xffffffff8104b7d0,CALL 0xffffffff8104b7d0,direct call
machine_kexec,0xd3,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
machine_kexec,0x106,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
machine_kexec,0x10a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
machine_kexec,0x137,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
machine_kexec,0x156,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
machine_kexec,0x16b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
machine_kexec,0x173,ctx->wordctx->ptrctx->rbp - 0x4a,"MOV word ptr [RBP + -0x4a],AX",write stack
machine_kexec,0x184,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
machine_kexec,0x1a8,0xffffffff81079000,CALL 0xffffffff81079000,direct call
machine_kexec,0x1ad,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
machine_kexec,0x1bd,0xffffffff8311c108,"MOV dword ptr [0xffffffff8311c108],R13D",write .data
machine_kexec,0x1dd,,RET,ret
machine_kexec,0x1de,0xffffffff81c65d40,CALL 0xffffffff81c65d40,direct call
machine_kexec,0x1e8,0xffffffff81c65ec0,CALL 0xffffffff81c65ec0,direct call
machine_kexec,0x1ef,0xffffffff81074970,CALL 0xffffffff81074970,direct call
machine_kexec,0x1f4,0xffffffff81074e90,CALL 0xffffffff81074e90,direct call
machine_kexec,0x21d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_kexec_kernel_image_load,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kexec_kernel_image_load,0x47,ctx->rax,CALL RAX,in-direct call
arch_kexec_kernel_image_load,0x4b,,RET,ret
arch_kexec_kernel_image_load,0x53,,RET,ret
arch_kexec_apply_relocations_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kexec_apply_relocations_add,0x22,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
arch_kexec_apply_relocations_add,0x2d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
arch_kexec_apply_relocations_add,0x37,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RBX",write stack
arch_kexec_apply_relocations_add,0x44,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
arch_kexec_apply_relocations_add,0x59,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RSI",write stack
arch_kexec_apply_relocations_add,0x5d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_kexec_apply_relocations_add,0x9e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
arch_kexec_apply_relocations_add,0x138,ctx->r14,"MOV dword ptr [R14],EDX",write other [TODO]
arch_kexec_apply_relocations_add,0x16e,ctx->r14,"MOV qword ptr [R14],RDX",write other [TODO]
arch_kexec_apply_relocations_add,0x176,ctx->r14,"MOV dword ptr [R14],EDX",write other [TODO]
arch_kexec_apply_relocations_add,0x185,ctx->r14,"MOV dword ptr [R14],EDX",write other [TODO]
arch_kexec_apply_relocations_add,0xc1990c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_kexec_apply_relocations_add,0xc19925,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_kexec_apply_relocations_add,0xc1993b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_kimage_file_post_load_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kimage_file_post_load_cleanup,0x15,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
arch_kimage_file_post_load_cleanup,0x1d,ctx->r12 + 0x2f8,"MOV qword ptr [R12 + 0x2f8],0x0",write other [TODO]
arch_kimage_file_post_load_cleanup,0x29,ctx->r12 + 0x300,"MOV qword ptr [R12 + 0x300],0x0",write other [TODO]
arch_kimage_file_post_load_cleanup,0x35,0xffffffff81173dc0,CALL 0xffffffff81173dc0,direct call
arch_kimage_file_post_load_cleanup,0x3f,,RET,ret
arch_kexec_protect_crashkres,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kexec_protect_crashkres,0xe,0xffffffff81078170,CALL 0xffffffff81078170,direct call
arch_kexec_protect_crashkres,0x14,,RET,ret
arch_kexec_unprotect_crashkres,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kexec_unprotect_crashkres,0xb,0xffffffff81078170,CALL 0xffffffff81078170,direct call
arch_kexec_unprotect_crashkres,0x11,,RET,ret
arch_kexec_post_alloc_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kexec_post_alloc_pages,0x18,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
arch_kexec_post_alloc_pages,0x2d,0xffffffff81090010,CALL 0xffffffff81090010,direct call
arch_kexec_post_alloc_pages,0x37,,RET,ret
arch_kexec_pre_free_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_kexec_pre_free_pages,0x18,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
arch_kexec_pre_free_pages,0x27,0xffffffff81090070,CALL 0xffffffff81090070,direct call
arch_kexec_pre_free_pages,0x31,,RET,ret
relocate_kernel,0xf,ctx->r11 + 0x800,"MOV qword ptr [R11 + 0x800],RSP",write other [TODO]
relocate_kernel,0x19,ctx->r11 + 0x808,"MOV qword ptr [R11 + 0x808],RAX",write other [TODO]
relocate_kernel,0x23,ctx->r11 + 0x810,"MOV qword ptr [R11 + 0x810],RAX",write other [TODO]
relocate_kernel,0x2d,ctx->r11 + 0x818,"MOV qword ptr [R11 + 0x818],RAX",write other [TODO]
relocate_kernel,0x48,ctx->r11 + 0x820,"MOV qword ptr [R11 + 0x820],R9",write other [TODO]
relocate_kernel,0x4f,ctx->r11 + 0x828,"MOV qword ptr [R11 + 0x828],R10",write other [TODO]
relocate_kernel,0x56,ctx->r11 + 0x830,"MOV qword ptr [R11 + 0x830],RDI",write other [TODO]
relocate_kernel,0x71,,RET,ret
swap_pages,0x56,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
swap_pages,0x64,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
swap_pages,0x72,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
swap_pages,0x7e,,RET,ret
get_nr_ram_ranges_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_nr_ram_ranges_callback,0xf,,RET,ret
prepare_elf64_ram_headers_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prepare_elf64_ram_headers_callback,0x1c,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
prepare_elf64_ram_headers_callback,0x24,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
prepare_elf64_ram_headers_callback,0x2b,ctx->rsi + 0x4,"MOV dword ptr [RSI + 0x4],EDX",write other [TODO]
prepare_elf64_ram_headers_callback,0x2e,,RET,ret
cr4_clear_bits.constprop.0,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cr4_clear_bits.constprop.0,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cr4_clear_bits.constprop.0,0x1b,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_clear_bits.constprop.0,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cr4_clear_bits.constprop.0,0x30,,RET,ret
add_e820_entry.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
add_e820_entry.isra.0,0x23,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
add_e820_entry.isra.0,0x2a,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
add_e820_entry.isra.0,0x31,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
add_e820_entry.isra.0,0x3c,,RET,ret
memmap_entry_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memmap_entry_callback,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
memmap_entry_callback,0x29,ctx->rbp - 0x1c,"MOV qword ptr [RBP + -0x1c],RDX",write stack
memmap_entry_callback,0x34,ctx->rbp - 0x14,"MOV qword ptr [RBP + -0x14],RAX",write stack
memmap_entry_callback,0x3f,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
memmap_entry_callback,0x42,0xffffffff81079270,CALL 0xffffffff81079270,direct call
memmap_entry_callback,0x59,,RET,ret
memmap_entry_callback,0x5a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kdump_nmi_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kdump_nmi_callback,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
kdump_nmi_callback,0x26,0xffffffff811730c0,CALL 0xffffffff811730c0,direct call
kdump_nmi_callback,0x2b,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kdump_nmi_callback,0x3c,ctx->rax,CALL RAX,in-direct call
kdump_nmi_callback,0x3e,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kdump_nmi_callback,0x43,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x1",write stack
kdump_nmi_callback,0x52,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],0x0",write stack
kdump_nmi_callback,0x61,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
kdump_nmi_callback,0x7c,0xffffffff81018c00,CALL 0xffffffff81018c00,direct call
kdump_nmi_callback,0x81,0xffffffff810704b0,CALL 0xffffffff810704b0,direct call
kdump_nmi_callback,0x9a,,RET,ret
kdump_nmi_callback,0xbc,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kdump_nmi_callback,0xca,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
kdump_nmi_callback,0xe3,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kdump_nmi_callback,0xfa,0xffffffff81079230,CALL 0xffffffff81079230,direct call
kdump_nmi_callback,0x104,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kdump_nmi_shootdown_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kdump_nmi_shootdown_cpus,0x10,0xffffffff8106c600,CALL 0xffffffff8106c600,direct call
kdump_nmi_shootdown_cpus,0x15,0xffffffff810704b0,CALL 0xffffffff810704b0,direct call
kdump_nmi_shootdown_cpus,0x1b,,RET,ret
crash_smp_send_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crash_smp_send_stop,0x1f,ctx->rax,CALL RAX,in-direct call
crash_smp_send_stop,0x22,0xffffffff83442e68,"MOV dword ptr [0xffffffff83442e68],0x1",write .data
crash_smp_send_stop,0x2c,,RET,ret
crash_smp_send_stop,0x2d,,RET,ret
crash_smp_send_stop,0x30,0xffffffff82e425b8,CALL qword ptr [0xffffffff82e425b8],in-direct call
crash_smp_send_stop,0x37,0xffffffff83442e68,"MOV dword ptr [0xffffffff83442e68],0x1",write .data
crash_smp_send_stop,0x41,,RET,ret
native_machine_crash_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_machine_crash_shutdown,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
native_machine_crash_shutdown,0x22,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_machine_crash_shutdown,0x42,ctx->rax,CALL RAX,in-direct call
native_machine_crash_shutdown,0x44,0xffffffff83442e68,"MOV dword ptr [0xffffffff83442e68],0x1",write .data
native_machine_crash_shutdown,0x4e,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
native_machine_crash_shutdown,0x5f,ctx->rax,CALL RAX,in-direct call
native_machine_crash_shutdown,0x61,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
native_machine_crash_shutdown,0x66,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],0x1",write stack
native_machine_crash_shutdown,0x75,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0x0",write stack
native_machine_crash_shutdown,0x84,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
native_machine_crash_shutdown,0xa3,0xffffffff81018c00,CALL 0xffffffff81018c00,direct call
native_machine_crash_shutdown,0xa8,0xffffffff81074d70,CALL 0xffffffff81074d70,direct call
native_machine_crash_shutdown,0xad,0xffffffff81074970,CALL 0xffffffff81074970,direct call
native_machine_crash_shutdown,0xb2,0xffffffff810704e0,CALL 0xffffffff810704e0,direct call
native_machine_crash_shutdown,0xb7,0xffffffff81074e90,CALL 0xffffffff81074e90,direct call
native_machine_crash_shutdown,0xbc,0xffffffff8107e6d0,CALL 0xffffffff8107e6d0,direct call
native_machine_crash_shutdown,0xcb,0xffffffff811730c0,CALL 0xffffffff811730c0,direct call
native_machine_crash_shutdown,0xeb,,RET,ret
native_machine_crash_shutdown,0x10d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_machine_crash_shutdown,0x11b,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
native_machine_crash_shutdown,0x134,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
native_machine_crash_shutdown,0x14e,0xffffffff81079230,CALL 0xffffffff81079230,direct call
native_machine_crash_shutdown,0x15a,0xffffffff82e425b8,CALL qword ptr [0xffffffff82e425b8],in-direct call
native_machine_crash_shutdown,0x165,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
crash_setup_memmap_entries,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crash_setup_memmap_entries,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
crash_setup_memmap_entries,0x30,0xffffffff812ea7c0,CALL 0xffffffff812ea7c0,direct call
crash_setup_memmap_entries,0x57,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
crash_setup_memmap_entries,0x61,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x0",write stack
crash_setup_memmap_entries,0x6b,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x1",write stack
crash_setup_memmap_entries,0x72,0xffffffff810ad0a0,CALL 0xffffffff810ad0a0,direct call
crash_setup_memmap_entries,0x93,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x3",write stack
crash_setup_memmap_entries,0x9a,0xffffffff810ad0a0,CALL 0xffffffff810ad0a0,direct call
crash_setup_memmap_entries,0xbb,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x4",write stack
crash_setup_memmap_entries,0xc2,0xffffffff810ad0a0,CALL 0xffffffff810ad0a0,direct call
crash_setup_memmap_entries,0xe5,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x2",write stack
crash_setup_memmap_entries,0xec,0xffffffff810ad0a0,CALL 0xffffffff810ad0a0,direct call
crash_setup_memmap_entries,0x113,ctx->r13 + 0x4,"MOV dword ptr [R13 + 0x4],0x1",write other [TODO]
crash_setup_memmap_entries,0x123,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
crash_setup_memmap_entries,0x131,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
crash_setup_memmap_entries,0x139,0xffffffff81174d70,CALL 0xffffffff81174d70,direct call
crash_setup_memmap_entries,0x16a,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],RAX",write stack
crash_setup_memmap_entries,0x17d,ctx->rbp - 0x44,"MOV qword ptr [RBP + -0x44],RDX",write stack
crash_setup_memmap_entries,0x181,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x1",write stack
crash_setup_memmap_entries,0x188,0xffffffff81079270,CALL 0xffffffff81079270,direct call
crash_setup_memmap_entries,0x199,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
crash_setup_memmap_entries,0x1be,,RET,ret
crash_setup_memmap_entries,0x1d1,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x1",write stack
crash_setup_memmap_entries,0x1db,ctx->rbp - 0x44,"MOV qword ptr [RBP + -0x44],RDX",write stack
crash_setup_memmap_entries,0x1df,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],RAX",write stack
crash_setup_memmap_entries,0x1e3,0xffffffff81079270,CALL 0xffffffff81079270,direct call
crash_setup_memmap_entries,0x1f5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
crash_load_segments,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crash_load_segments,0x37,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
crash_load_segments,0x3d,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RBX",write stack
crash_load_segments,0x41,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],0x0",write stack
crash_load_segments,0x54,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],-0x1",write stack
crash_load_segments,0x5c,0xffffffff810add40,CALL 0xffffffff810add40,direct call
crash_load_segments,0x6f,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EAX",write stack
crash_load_segments,0x7a,0xffffffff812ea7c0,CALL 0xffffffff812ea7c0,direct call
crash_load_segments,0xa1,ctx->r14 + 0x4,"MOV dword ptr [R14 + 0x4],0x0",write other [TODO]
crash_load_segments,0xa9,ctx->r14,"MOV dword ptr [R14],EAX",write other [TODO]
crash_load_segments,0xac,0xffffffff810add40,CALL 0xffffffff810add40,direct call
crash_load_segments,0xbb,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
crash_load_segments,0xe2,,RET,ret
crash_load_segments,0xed,0xffffffff81174d70,CALL 0xffffffff81174d70,direct call
crash_load_segments,0x10a,0xffffffff81174d70,CALL 0xffffffff81174d70,direct call
crash_load_segments,0x135,0xffffffff81174ef0,CALL 0xffffffff81174ef0,direct call
crash_load_segments,0x140,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
crash_load_segments,0x156,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x1000",write stack
crash_load_segments,0x15e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x0",write stack
crash_load_segments,0x166,ctx->rbx + 0x2f8,"MOV qword ptr [RBX + 0x2f8],RAX",write other [TODO]
crash_load_segments,0x171,ctx->rbx + 0x300,"MOV qword ptr [RBX + 0x300],RAX",write other [TODO]
crash_load_segments,0x178,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
crash_load_segments,0x17c,0xffffffff81173f40,CALL 0xffffffff81173f40,direct call
crash_load_segments,0x18c,ctx->rbx + 0x308,"MOV qword ptr [RBX + 0x308],RDX",write other [TODO]
crash_load_segments,0x1c4,0xffffffff81174d70,CALL 0xffffffff81174d70,direct call
crash_load_segments,0x1eb,0xffffffff812e9b60,CALL 0xffffffff812e9b60,direct call
crash_load_segments,0x1f5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
bzImage64_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bzImage64_probe,0xc1,,RET,ret
bzImage64_probe,0xc18b12,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_probe,0xc18b28,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_probe,0xc18b3e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_probe,0xc18b54,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_probe,0xc18b6a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_probe,0xc18b80,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81079a90,0x5,,RET,ret
bzImage64_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bzImage64_cleanup,0x15,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
bzImage64_cleanup,0x1a,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
bzImage64_cleanup,0x28,,RET,ret
bzImage64_cleanup,0x2b,,RET,ret
bzImage64_load,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bzImage64_load,0x2f,ctx->rbp - 0x158,"MOV qword ptr [RBP + -0x158],RCX",write stack
bzImage64_load,0x3b,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],R8",write stack
bzImage64_load,0x42,ctx->rbp - 0x160,"MOV qword ptr [RBP + -0x160],R9",write stack
bzImage64_load,0x52,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
bzImage64_load,0x58,ctx->rbp - 0x148,"MOV qword ptr [RBP + -0x148],R12",write stack
bzImage64_load,0x5f,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],R12",write stack
bzImage64_load,0x75,ctx->rbp - 0x110,"MOV qword ptr [RBP + -0x110],-0x1",write stack
bzImage64_load,0x83,ctx->rbp - 0x108,"MOV byte ptr [RBP + -0x108],0x1",write stack
bzImage64_load,0x94,ctx->rbp - 0xcf,"MOV qword ptr [RBP + -0xcf],RAX",write stack
bzImage64_load,0xa5,ctx->rbp - 0xc7,"MOV qword ptr [RBP + -0xc7],RAX",write stack
bzImage64_load,0x104,0xffffffff81174060,CALL 0xffffffff81174060,direct call
bzImage64_load,0x119,0xffffffff81a25870,CALL 0xffffffff81a25870,direct call
bzImage64_load,0x122,ctx->rbp - 0x178,"MOV dword ptr [RBP + -0x178],EAX",write stack
bzImage64_load,0x135,ctx->rbp - 0x188,"MOV qword ptr [RBP + -0x188],RSI",write stack
bzImage64_load,0x140,ctx->rbp - 0x174,"MOV dword ptr [RBP + -0x174],EAX",write stack
bzImage64_load,0x149,ctx->rbp - 0x170,"MOV qword ptr [RBP + -0x170],RSI",write stack
bzImage64_load,0x15c,ctx->rbp - 0x180,"MOV qword ptr [RBP + -0x180],RAX",write stack
bzImage64_load,0x163,ctx->rbp - 0x138,"MOV qword ptr [RBP + -0x138],RDI",write stack
bzImage64_load,0x16a,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
bzImage64_load,0x1a8,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
bzImage64_load,0x1bb,ctx->rbp - 0x140,"MOV qword ptr [RBP + -0x140],R13",write stack
bzImage64_load,0x1c2,ctx->rbp - 0x120,"MOV qword ptr [RBP + -0x120],0x10",write stack
bzImage64_load,0x1cd,ctx->rbp - 0x128,"MOV qword ptr [RBP + -0x128],RAX",write stack
bzImage64_load,0x1d4,ctx->rbp - 0x118,"MOV qword ptr [RBP + -0x118],0x3000",write stack
bzImage64_load,0x1df,0xffffffff81173f40,CALL 0xffffffff81173f40,direct call
bzImage64_load,0x1f3,ctx->rbp - 0x168,"MOV qword ptr [RBP + -0x168],RAX",write stack
bzImage64_load,0x20d,ctx->rbp - 0x118,"MOV qword ptr [RBP + -0x118],0x100000",write stack
bzImage64_load,0x218,ctx->rbp - 0x140,"MOV qword ptr [RBP + -0x140],RAX",write stack
bzImage64_load,0x226,ctx->rbp - 0x138,"MOV qword ptr [RBP + -0x138],RBX",write stack
bzImage64_load,0x22d,ctx->rbp - 0x130,"MOV qword ptr [RBP + -0x130],0x0",write stack
bzImage64_load,0x242,ctx->rbp - 0x128,"MOV qword ptr [RBP + -0x128],RAX",write stack
bzImage64_load,0x250,ctx->rbp - 0x120,"MOV qword ptr [RBP + -0x120],RAX",write stack
bzImage64_load,0x257,0xffffffff81173f40,CALL 0xffffffff81173f40,direct call
bzImage64_load,0x280,ctx->rbp - 0x140,"MOV qword ptr [RBP + -0x140],RAX",write stack
bzImage64_load,0x295,ctx->rbp - 0x120,"MOV qword ptr [RBP + -0x120],0x1000",write stack
bzImage64_load,0x2a0,ctx->rbp - 0x128,"MOV qword ptr [RBP + -0x128],RAX",write stack
bzImage64_load,0x2a7,ctx->rbp - 0x138,"MOV qword ptr [RBP + -0x138],RAX",write stack
bzImage64_load,0x2ae,ctx->rbp - 0x118,"MOV qword ptr [RBP + -0x118],0x1000000",write stack
bzImage64_load,0x2b9,ctx->rbp - 0x130,"MOV qword ptr [RBP + -0x130],0x0",write stack
bzImage64_load,0x2c4,0xffffffff81173f40,CALL 0xffffffff81173f40,direct call
bzImage64_load,0x2e4,ctx->r13 + 0x218,"MOV dword ptr [R13 + 0x218],R14D",write other [TODO]
bzImage64_load,0x2ef,ctx->r13 + 0xc0,"MOV dword ptr [R13 + 0xc0],R14D",write other [TODO]
bzImage64_load,0x2f6,ctx->r13 + 0x21c,"MOV dword ptr [R13 + 0x21c],EAX",write other [TODO]
bzImage64_load,0x301,ctx->r13 + 0xc4,"MOV dword ptr [R13 + 0xc4],EAX",write other [TODO]
bzImage64_load,0x32f,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
bzImage64_load,0x338,ctx->r15 + ctx->rax * 0x1 - 0x1,"MOV byte ptr [R15 + RAX*0x1 + -0x1],0x0",write other [TODO]
bzImage64_load,0x350,ctx->r13 + 0x228,"MOV dword ptr [R13 + 0x228],EAX",write other [TODO]
bzImage64_load,0x35d,ctx->r13 + 0xc8,"MOV dword ptr [R13 + 0xc8],EAX",write other [TODO]
bzImage64_load,0x37b,ctx->wordctx->ptrctx->r13 + 0x210,"MOV word ptr [R13 + 0x210],DI",write other [TODO]
bzImage64_load,0x38d,0xffffffff81174470,CALL 0xffffffff81174470,direct call
bzImage64_load,0x3ae,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
bzImage64_load,0x3b9,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
bzImage64_load,0x3c0,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
bzImage64_load,0x3c4,0xffffffff81174420,CALL 0xffffffff81174420,direct call
bzImage64_load,0x3ee,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
bzImage64_load,0x3f5,0xffffffff81174470,CALL 0xffffffff81174470,direct call
bzImage64_load,0x43f,0xffffffff81079800,CALL 0xffffffff81079800,direct call
bzImage64_load,0x4a0,ctx->rbp - 0x198,"MOV qword ptr [RBP + -0x198],R9",write stack
bzImage64_load,0x4a7,ctx->rbp - 0x190,"MOV qword ptr [RBP + -0x190],R8",write stack
bzImage64_load,0x4ae,ctx->rbp - 0x168,"MOV qword ptr [RBP + -0x168],R10",write stack
bzImage64_load,0x4b5,0xffffffff830c7c11,"MOV byte ptr [0xffffffff830c7c11],0x1",write .data
bzImage64_load,0x4bc,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
bzImage64_load,0x588,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
bzImage64_load,0x5c9,ctx->r13 + 0x1e0,"MOV dword ptr [R13 + 0x1e0],0x0",write other [TODO]
bzImage64_load,0x5d4,ctx->r13 + 0x40,"MOV qword ptr [R13 + 0x40],0x0",write other [TODO]
bzImage64_load,0x5dc,ctx->r13 + 0x23c,"MOV dword ptr [R13 + 0x23c],EAX",write other [TODO]
bzImage64_load,0x5ea,ctx->r13 + 0x48,"MOV qword ptr [R13 + 0x48],0x0",write other [TODO]
bzImage64_load,0x5f2,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
bzImage64_load,0x5fd,ctx->wordctx->ptrctx->r13 + 0x2,"MOV word ptr [R13 + 0x2],SI",write other [TODO]
bzImage64_load,0x602,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
bzImage64_load,0x60d,ctx->r13 + 0x50,"MOV dword ptr [R13 + 0x50],0x0",write other [TODO]
bzImage64_load,0x615,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
bzImage64_load,0x620,ctx->r13 + 0x80,"MOV qword ptr [R13 + 0x80],0x0",write other [TODO]
bzImage64_load,0x62b,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
bzImage64_load,0x636,ctx->r13 + 0x88,"MOV qword ptr [R13 + 0x88],0x0",write other [TODO]
bzImage64_load,0x641,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],RAX",write other [TODO]
bzImage64_load,0x64c,ctx->r13 + 0x90,"MOV qword ptr [R13 + 0x90],0x0",write other [TODO]
bzImage64_load,0x657,ctx->r13 + 0x28,"MOV qword ptr [R13 + 0x28],RAX",write other [TODO]
bzImage64_load,0x662,ctx->r13 + 0x98,"MOV qword ptr [R13 + 0x98],0x0",write other [TODO]
bzImage64_load,0x66d,ctx->r13 + 0x30,"MOV qword ptr [R13 + 0x30],RAX",write other [TODO]
bzImage64_load,0x678,ctx->r13 + 0x38,"MOV qword ptr [R13 + 0x38],RAX",write other [TODO]
bzImage64_load,0x683,ctx->r13 + 0x70,"MOV qword ptr [R13 + 0x70],RAX",write other [TODO]
bzImage64_load,0x69c,0xffffffff81079600,CALL 0xffffffff81079600,direct call
bzImage64_load,0x705,ctx->wordctx->ptrctx->r13 + 0x2,"MOV word ptr [R13 + 0x2],DX",write other [TODO]
bzImage64_load,0x70a,ctx->r13 + 0x1e0,"MOV dword ptr [R13 + 0x1e0],EDX",write other [TODO]
bzImage64_load,0x71f,ctx->wordctx->ptrctx->r13 + 0x2,"MOV word ptr [R13 + 0x2],CX",write other [TODO]
bzImage64_load,0x729,ctx->r13 + 0x1e0,"MOV dword ptr [R13 + 0x1e0],0xffffffff",write other [TODO]
bzImage64_load,0x761,ctx->r13 + 0x1ec,"MOV byte ptr [R13 + 0x1ec],AL",write other [TODO]
bzImage64_load,0x76f,ctx->r13 + 0x1c0,"MOV qword ptr [R13 + 0x1c0],RAX",write other [TODO]
bzImage64_load,0x77c,ctx->r13 + 0x1d8,"MOV dword ptr [R13 + 0x1d8],EAX",write other [TODO]
bzImage64_load,0x789,ctx->r13 + 0x1cc,"MOV dword ptr [R13 + 0x1cc],EAX",write other [TODO]
bzImage64_load,0x790,0xffffffff81a25890,CALL 0xffffffff81a25890,direct call
bzImage64_load,0x79c,ctx->r13 + 0x1c8,"MOV dword ptr [R13 + 0x1c8],EAX",write other [TODO]
bzImage64_load,0x7c4,0xffffffff81a258b0,CALL 0xffffffff81a258b0,direct call
bzImage64_load,0x7c9,ctx->r13 + 0x1d0,"MOV dword ptr [R13 + 0x1d0],EBX",write other [TODO]
bzImage64_load,0x7d4,ctx->r13 + 0x1dc,"MOV dword ptr [R13 + 0x1dc],EBX",write other [TODO]
bzImage64_load,0x7db,ctx->r13 + 0x1d4,"MOV dword ptr [R13 + 0x1d4],R14D",write other [TODO]
bzImage64_load,0x805,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
bzImage64_load,0x810,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RCX",write other [TODO]
bzImage64_load,0x81b,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
bzImage64_load,0x81f,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RCX",write other [TODO]
bzImage64_load,0x82a,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
bzImage64_load,0x82d,ctx->r13 + 0x250,"MOV qword ptr [R13 + 0x250],RDX",write other [TODO]
bzImage64_load,0x834,0xffffffff817b5ee0,CALL 0xffffffff817b5ee0,direct call
bzImage64_load,0x862,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
bzImage64_load,0x86c,0xffffffff817b6f20,CALL 0xffffffff817b6f20,direct call
bzImage64_load,0x882,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
bzImage64_load,0x886,ctx->r13 + 0x250,"MOV qword ptr [R13 + 0x250],R15",write other [TODO]
bzImage64_load,0x8a7,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
bzImage64_load,0x8b1,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
bzImage64_load,0x8ba,ctx->r13 + 0x290,"MOV qword ptr [R13 + 0x290],RDX",write other [TODO]
bzImage64_load,0x8c8,ctx->r13 + 0x1e9,"MOV byte ptr [R13 + 0x1e9],AL",write other [TODO]
bzImage64_load,0x8d6,ctx->r13 + 0x298,"MOV qword ptr [R13 + 0x298],RDX",write other [TODO]
bzImage64_load,0x8e4,ctx->r13 + 0x2a0,"MOV qword ptr [R13 + 0x2a0],RDX",write other [TODO]
bzImage64_load,0x8f2,ctx->r13 + 0x2a8,"MOV qword ptr [R13 + 0x2a8],RDX",write other [TODO]
bzImage64_load,0x900,ctx->r13 + 0x2b0,"MOV qword ptr [R13 + 0x2b0],RDX",write other [TODO]
bzImage64_load,0x90e,ctx->r13 + 0x2b8,"MOV qword ptr [R13 + 0x2b8],RDX",write other [TODO]
bzImage64_load,0x91c,ctx->r13 + 0x2c0,"MOV qword ptr [R13 + 0x2c0],RDX",write other [TODO]
bzImage64_load,0x92a,ctx->r13 + 0x2c8,"MOV qword ptr [R13 + 0x2c8],RDX",write other [TODO]
bzImage64_load,0x936,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
bzImage64_load,0x944,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
bzImage64_load,0x96c,ctx->r13 + 0x1e8,"MOV byte ptr [R13 + 0x1e8],DL",write other [TODO]
bzImage64_load,0x990,ctx->r13 + 0x2d0,"MOV byte ptr [R13 + 0x2d0],AL",write other [TODO]
bzImage64_load,0x9a9,ctx->r8 + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [R8 + RCX*0x1 + -0x8],RDI",write other [TODO]
bzImage64_load,0x9b3,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
bzImage64_load,0x9c0,ctx->r13 + 0x2d0,"MOV dword ptr [R13 + 0x2d0],ECX",write other [TODO]
bzImage64_load,0x9cb,ctx->r8 + ctx->rax * 0x1 - 0x4,"MOV dword ptr [R8 + RAX*0x1 + -0x4],ECX",write other [TODO]
bzImage64_load,0xc18a9c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_load,0xc18ab4,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bzImage64_load,0xc18acc,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__copy_oldmem_page.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__copy_oldmem_page.part.0,0x2b,0xffffffff81089c70,CALL 0xffffffff81089c70,direct call
__copy_oldmem_page.part.0,0x4f,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__copy_oldmem_page.part.0,0x5d,0xffffffff815feb30,CALL 0xffffffff815feb30,direct call
__copy_oldmem_page.part.0,0x68,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
__copy_oldmem_page.part.0,0x6f,ctx->rax,"MOV RAX,R13",write other [TODO]
__copy_oldmem_page.part.0,0x79,,RET,ret
__copy_oldmem_page.part.0,0x7a,0xffffffff81089c90,CALL 0xffffffff81089c90,direct call
copy_oldmem_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_oldmem_page,0x11,0xffffffff8107a500,CALL 0xffffffff8107a500,direct call
copy_oldmem_page,0x17,,RET,ret
copy_oldmem_page,0x1a,,RET,ret
copy_oldmem_page_encrypted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_oldmem_page_encrypted,0x14,0xffffffff8107a500,CALL 0xffffffff8107a500,direct call
copy_oldmem_page_encrypted,0x1a,,RET,ret
copy_oldmem_page_encrypted,0x1d,,RET,ret
elfcorehdr_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
elfcorehdr_read,0x2c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
elfcorehdr_read,0x32,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
elfcorehdr_read,0x3a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
elfcorehdr_read,0x40,0xffffffff815fc820,CALL 0xffffffff815fc820,direct call
elfcorehdr_read,0x4a,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
elfcorehdr_read,0x5c,0xffffffff814119a0,CALL 0xffffffff814119a0,direct call
elfcorehdr_read,0x79,,RET,ret
elfcorehdr_read,0x7a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
synthesize_reljump,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
synthesize_reljump,0xb,ctx->rdi,"MOV byte ptr [RDI],0xe9",write other [TODO]
synthesize_reljump,0xe,ctx->rdi + 0x1,"MOV dword ptr [RDI + 0x1],EDX",write other [TODO]
synthesize_reljump,0x15,,RET,ret
synthesize_relcall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
synthesize_relcall,0xb,ctx->rdi,"MOV byte ptr [RDI],0xe8",write other [TODO]
synthesize_relcall,0xe,ctx->rdi + 0x1,"MOV dword ptr [RDI + 0x1],EDX",write other [TODO]
synthesize_relcall,0x15,,RET,ret
kprobe_emulate_ifmodifiers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_ifmodifiers,0x29,ctx->rsi + 0x98,"MOV qword ptr [RSI + 0x98],RAX",write other [TODO]
kprobe_emulate_ifmodifiers,0x30,ctx->rsi + 0x90,"MOV qword ptr [RSI + 0x90],RDX",write other [TODO]
kprobe_emulate_ifmodifiers,0x48,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
kprobe_emulate_ifmodifiers,0x4f,,RET,ret
kprobe_emulate_ifmodifiers,0x80,ctx->rsi + 0x98,"MOV qword ptr [RSI + 0x98],RCX",write other [TODO]
kprobe_emulate_ifmodifiers,0x87,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],RDX",write other [TODO]
kprobe_emulate_ret,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_ret,0x17,ctx->rsi + 0x98,"MOV qword ptr [RSI + 0x98],RAX",write other [TODO]
kprobe_emulate_ret,0x1f,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RDX",write other [TODO]
kprobe_emulate_ret,0x26,,RET,ret
kprobe_emulate_call,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_call,0x2f,ctx->rsi + 0x98,"MOV qword ptr [RSI + 0x98],RDI",write other [TODO]
kprobe_emulate_call,0x36,ctx->rcx - 0x8,"MOV qword ptr [RCX + -0x8],RAX",write other [TODO]
kprobe_emulate_call,0x3b,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RDX",write other [TODO]
kprobe_emulate_call,0x42,,RET,ret
kprobe_emulate_jmp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_jmp,0x1d,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
kprobe_emulate_jmp,0x25,,RET,ret
kprobe_emulate_jcc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_jcc,0x53,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDI",write other [TODO]
kprobe_emulate_jcc,0x5b,,RET,ret
kprobe_emulate_jcc,0x8a,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDI",write other [TODO]
kprobe_emulate_jcc,0x92,,RET,ret
kprobe_emulate_loop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_loop,0x35,ctx->wordctx->ptrctx->rdx + 0x58,"MOV word ptr [RDX + 0x58],SI",write other [TODO]
kprobe_emulate_loop,0x63,ctx->rdx + 0x80,"MOV qword ptr [RDX + 0x80],RCX",write other [TODO]
kprobe_emulate_loop,0x6b,,RET,ret
kprobe_emulate_loop,0x74,ctx->rdx + 0x58,"MOV dword ptr [RDX + 0x58],ESI",write other [TODO]
kprobe_emulate_loop,0xd8,ctx->rdx + 0x80,"MOV qword ptr [RDX + 0x80],RCX",write other [TODO]
kprobe_emulate_loop,0xdf,,RET,ret
kprobe_emulate_loop,0xf6,ctx->rdx + 0x58,"MOV qword ptr [RDX + 0x58],RSI",write other [TODO]
resume_singlestep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resume_singlestep,0x2f,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
resume_singlestep,0x36,,RET,ret
kprobe_emulate_call_indirect,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_call_indirect,0x37,ctx->rsi + 0x98,"MOV qword ptr [RSI + 0x98],RDI",write other [TODO]
kprobe_emulate_call_indirect,0x3e,ctx->rdx - 0x8,"MOV qword ptr [RDX + -0x8],RAX",write other [TODO]
kprobe_emulate_call_indirect,0x43,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RCX",write other [TODO]
kprobe_emulate_call_indirect,0x4a,,RET,ret
kprobe_emulate_jmp_indirect,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_emulate_jmp_indirect,0x22,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
kprobe_emulate_jmp_indirect,0x29,,RET,ret
kprobe_emulate_jmp_indirect,0x2d,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
kprobe_emulate_jmp_indirect,0x34,,RET,ret
kprobe_fault_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_fault_handler,0x30,,RET,ret
kprobe_fault_handler,0x45,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],RDX",write other [TODO]
kprobe_fault_handler,0x5d,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
kprobe_fault_handler,0x6f,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],RDX",write other [TODO]
kprobe_fault_handler,0x7b,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
kprobe_fault_handler,0x82,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
kprobe_fault_handler,0x8a,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
__recover_probed_insn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__recover_probed_insn,0x19,0xffffffff8119ea20,CALL 0xffffffff8119ea20,direct call
__recover_probed_insn,0x24,0xffffffff811b85e0,CALL 0xffffffff811b85e0,direct call
__recover_probed_insn,0x41,,RET,ret
__recover_probed_insn,0x4d,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
__recover_probed_insn,0x61,ctx->rbx,"MOV byte ptr [RBX],AL",write other [TODO]
__recover_probed_insn,0x71,,RET,ret
__recover_probed_insn,0x80,,RET,ret
__recover_probed_insn,0x8a,ctx->rbx,"MOV dword ptr [RBX],EDX",write other [TODO]
__recover_probed_insn,0x90,ctx->rbx + 0x4,"MOV byte ptr [RBX + 0x4],AL",write other [TODO]
kprobe_post_process,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_post_process,0xc,ctx->rdx,"MOV qword ptr [RDX],0x8",write other [TODO]
kprobe_post_process,0x21,ctx->rax,CALL RAX,in-direct call
kprobe_post_process,0x24,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
kprobe_post_process,0x30,,RET,ret
kprobe_post_process,0x35,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],RAX",write other [TODO]
kprobe_post_process,0x41,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
kprobe_post_process,0x48,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
kprobe_post_process,0x50,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RAX",write other [TODO]
kprobe_post_process,0x54,,RET,ret
can_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
can_probe,0x28,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
can_probe,0x2e,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
can_probe,0x39,0xffffffff811702b0,CALL 0xffffffff811702b0,direct call
can_probe,0x69,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
can_probe,0x8b,0xffffffff8107bb70,CALL 0xffffffff8107bb70,direct call
can_probe,0x9f,0xffffffff8107ab00,CALL 0xffffffff8107ab00,direct call
can_probe,0xc8,,RET,ret
can_probe,0xd3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
setup_singlestep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_singlestep,0x1e,0xffffffff8107b890,CALL 0xffffffff8107b890,direct call
setup_singlestep,0x3d,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
setup_singlestep,0x44,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],R14",write other [TODO]
setup_singlestep,0x4c,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
setup_singlestep,0x54,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
setup_singlestep,0x5c,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
setup_singlestep,0x6d,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
setup_singlestep,0x71,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
setup_singlestep,0x7a,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
setup_singlestep,0x8c,ctx->rax,CALL RAX,in-direct call
setup_singlestep,0x94,ctx->rbx,"MOV qword ptr [RBX],0x8",write other [TODO]
setup_singlestep,0xac,ctx->rax,CALL RAX,in-direct call
setup_singlestep,0xae,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
setup_singlestep,0xc2,,RET,ret
setup_singlestep,0xd4,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RAX",write other [TODO]
setup_singlestep,0xe3,,RET,ret
setup_singlestep,0xe8,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],RAX",write other [TODO]
setup_singlestep,0xf4,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
setup_singlestep,0xfb,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
setup_singlestep,0x103,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
setup_singlestep,0x10f,,RET,ret
reenter_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reenter_kprobe,0x31,0xffffffff8119f2c0,CALL 0xffffffff8119f2c0,direct call
reenter_kprobe,0x44,0xffffffff8107ace0,CALL 0xffffffff8107ace0,direct call
reenter_kprobe,0x55,,RET,ret
kprobe_int3_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_int3_handler,0x10,,RET,ret
kprobe_int3_handler,0x3e,0xffffffff8119ea20,CALL 0xffffffff8119ea20,direct call
kprobe_int3_handler,0x64,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],R13",write other [TODO]
kprobe_int3_handler,0x71,ctx->r14,"MOV qword ptr [R14],0x1",write other [TODO]
kprobe_int3_handler,0x78,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
kprobe_int3_handler,0x7c,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
kprobe_int3_handler,0x93,ctx->rax,CALL RAX,in-direct call
kprobe_int3_handler,0xa2,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
kprobe_int3_handler,0xb8,,RET,ret
kprobe_int3_handler,0xc2,0xffffffff8107adf0,CALL 0xffffffff8107adf0,direct call
kprobe_int3_handler,0xdc,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],R15",write other [TODO]
kprobe_int3_handler,0xf3,,RET,ret
kprobe_int3_handler,0x13d,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RDX",write other [TODO]
kprobe_int3_handler,0x14b,ctx->r14,"MOV qword ptr [R14],0x8",write other [TODO]
kprobe_int3_handler,0x164,ctx->rax,CALL RAX,in-direct call
kprobe_int3_handler,0x176,0xffffffff8107ace0,CALL 0xffffffff8107ace0,direct call
kprobe_int3_handler,0x18a,,RET,ret
kprobe_int3_handler,0x18f,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],RAX",write other [TODO]
kprobe_int3_handler,0x19b,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
kprobe_int3_handler,0x1a2,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
kprobe_int3_handler,0x1aa,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
can_boost,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
can_boost,0x16,0xffffffff810cac40,CALL 0xffffffff810cac40,direct call
can_boost,0x2a,,RET,ret
can_boost,0x50,0xffffffff81c8a7a0,CALL 0xffffffff81c8a7a0,direct call
can_boost,0xb0,,RET,ret
can_boost,0xcd,,RET,ret
recover_probed_instruction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
recover_probed_instruction,0x12,0xffffffff8107bb70,CALL 0xffffffff8107bb70,direct call
recover_probed_instruction,0x20,,RET,ret
recover_probed_instruction,0x27,0xffffffff8107ab00,CALL 0xffffffff8107ab00,direct call
recover_probed_instruction,0x30,,RET,ret
arch_adjust_kprobe_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_adjust_kprobe_addr,0x14,,RET,ret
__copy_instruction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__copy_instruction,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__copy_instruction,0x35,0xffffffff8107bb70,CALL 0xffffffff8107bb70,direct call
__copy_instruction,0x60,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
__copy_instruction,0x7e,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
__copy_instruction,0xae,0xffffffff81c8c600,CALL 0xffffffff81c8c600,direct call
__copy_instruction,0xfe,ctx->r13 + ctx->rax * 0x1,"MOV dword ptr [R13 + RAX*0x1],EBX",write other [TODO]
__copy_instruction,0x147,0xffffffff8107ab00,CALL 0xffffffff8107ab00,direct call
arch_copy_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_copy_kprobe,0x32,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
arch_copy_kprobe,0x38,0xffffffff8107b180,CALL 0xffffffff8107b180,direct call
arch_copy_kprobe,0x67,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef85780",write other [TODO]
arch_copy_kprobe,0x6f,ctx->rbx + 0x62,"MOV byte ptr [RBX + 0x62],AL",write other [TODO]
arch_copy_kprobe,0x79,ctx->rbx + 0x63,"MOV byte ptr [RBX + 0x63],AL",write other [TODO]
arch_copy_kprobe,0x80,ctx->rbx + 0x64,"MOV dword ptr [RBX + 0x64],EAX",write other [TODO]
arch_copy_kprobe,0x90,ctx->rbx + 0x61,"MOV byte ptr [RBX + 0x61],R8B",write other [TODO]
arch_copy_kprobe,0x9c,ctx->rbp + ctx->r8 * 0x1 - 0x27,"MOV byte ptr [RBP + R8*0x1 + -0x27],0xcc",write stack
arch_copy_kprobe,0xac,ctx->rbx + 0x70,"MOV dword ptr [RBX + 0x70],R8D",write other [TODO]
arch_copy_kprobe,0xbb,ctx->rbx + 0x50,"MOV byte ptr [RBX + 0x50],AL",write other [TODO]
arch_copy_kprobe,0xc3,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_copy_kprobe,0xd3,0xffffffff8103f810,CALL 0xffffffff8103f810,direct call
arch_copy_kprobe,0xf8,,RET,ret
arch_copy_kprobe,0xfc,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef85820",write other [TODO]
arch_copy_kprobe,0x104,ctx->rbx + 0x62,"MOV byte ptr [RBX + 0x62],AL",write other [TODO]
arch_copy_kprobe,0x10b,ctx->rbx + 0x64,"MOV dword ptr [RBX + 0x64],EAX",write other [TODO]
arch_copy_kprobe,0x113,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef85960",write other [TODO]
arch_copy_kprobe,0x11b,ctx->rbx + 0x62,"MOV byte ptr [RBX + 0x62],AL",write other [TODO]
arch_copy_kprobe,0x123,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef858d0",write other [TODO]
arch_copy_kprobe,0x134,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef85850",write other [TODO]
arch_copy_kprobe,0x14b,ctx->rbx + 0x64,"MOV dword ptr [RBX + 0x64],EAX",write other [TODO]
arch_copy_kprobe,0x157,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef858a0",write other [TODO]
arch_copy_kprobe,0x165,ctx->rbx + 0x64,"MOV dword ptr [RBX + 0x64],EAX",write other [TODO]
arch_copy_kprobe,0x193,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RDX",write other [TODO]
arch_copy_kprobe,0x1b3,ctx->rbx + 0x62,"MOV byte ptr [RBX + 0x62],AL",write other [TODO]
arch_copy_kprobe,0x206,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],-0x7ef85820",write other [TODO]
arch_copy_kprobe,0x20e,ctx->rbx + 0x62,"MOV byte ptr [RBX + 0x62],AL",write other [TODO]
arch_copy_kprobe,0x230,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
alloc_insn_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_insn_page,0x10,0xffffffff8107c340,CALL 0xffffffff8107c340,direct call
alloc_insn_page,0x20,0xffffffff812e9690,CALL 0xffffffff812e9690,direct call
alloc_insn_page,0x3a,0xffffffff81090650,CALL 0xffffffff81090650,direct call
alloc_insn_page,0x47,0xffffffff810905d0,CALL 0xffffffff810905d0,direct call
alloc_insn_page,0x54,,RET,ret
arch_prepare_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prepare_kprobe,0x18,0xffffffff8103f1d0,CALL 0xffffffff8103f1d0,direct call
arch_prepare_kprobe,0x25,0xffffffff8107ac00,CALL 0xffffffff8107ac00,direct call
arch_prepare_kprobe,0x2e,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
arch_prepare_kprobe,0x3d,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],0x0",write other [TODO]
arch_prepare_kprobe,0x45,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],0x0",write other [TODO]
arch_prepare_kprobe,0x4d,ctx->rbx + 0x70,"MOV qword ptr [RBX + 0x70],0x0",write other [TODO]
arch_prepare_kprobe,0x55,0xffffffff811a0670,CALL 0xffffffff811a0670,direct call
arch_prepare_kprobe,0x5a,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
arch_prepare_kprobe,0x66,0xffffffff8107b2e0,CALL 0xffffffff8107b2e0,direct call
arch_prepare_kprobe,0x74,,RET,ret
arch_prepare_kprobe,0x82,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
arch_prepare_kprobe,0x85,0xffffffff811a0830,CALL 0xffffffff811a0830,direct call
arch_prepare_kprobe,0x8a,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
arch_prepare_kprobe,0x9a,,RET,ret
arch_arm_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_arm_kprobe,0x27,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
arch_arm_kprobe,0x2d,ctx->rbp - 0x11,"MOV byte ptr [RBP + -0x11],0xcc",write stack
arch_arm_kprobe,0x31,0xffffffff8103f810,CALL 0xffffffff8103f810,direct call
arch_arm_kprobe,0x36,0xffffffff8103f9a0,CALL 0xffffffff8103f9a0,direct call
arch_arm_kprobe,0x52,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_arm_kprobe,0x6b,,RET,ret
arch_arm_kprobe,0x6c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_disarm_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_disarm_kprobe,0x36,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
arch_disarm_kprobe,0x3c,ctx->rbp - 0x19,"MOV byte ptr [RBP + -0x19],0xcc",write stack
arch_disarm_kprobe,0x40,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_disarm_kprobe,0x51,0xffffffff8103f810,CALL 0xffffffff8103f810,direct call
arch_disarm_kprobe,0x56,0xffffffff8103f9a0,CALL 0xffffffff8103f9a0,direct call
arch_disarm_kprobe,0x72,,RET,ret
arch_disarm_kprobe,0x73,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_remove_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_remove_kprobe,0x22,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_remove_kprobe,0x39,0xffffffff811a0830,CALL 0xffffffff811a0830,direct call
arch_remove_kprobe,0x3e,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
arch_remove_kprobe,0x4b,,RET,ret
arch_trampoline_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_trampoline_kprobe,0xc,,RET,ret
copy_optimized_instructions,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_optimized_instructions,0x1f,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RDI",write stack
copy_optimized_instructions,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
copy_optimized_instructions,0x52,0xffffffff8107b180,CALL 0xffffffff8107b180,direct call
copy_optimized_instructions,0x68,0xffffffff8107b020,CALL 0xffffffff8107b020,direct call
copy_optimized_instructions,0x88,0xffffffff811b8700,CALL 0xffffffff811b8700,direct call
copy_optimized_instructions,0x97,0xffffffff8103f1d0,CALL 0xffffffff8103f1d0,direct call
copy_optimized_instructions,0xa6,0xffffffff8127ffc0,CALL 0xffffffff8127ffc0,direct call
copy_optimized_instructions,0xb5,0xffffffff81263080,CALL 0xffffffff81263080,direct call
copy_optimized_instructions,0xec,,RET,ret
copy_optimized_instructions,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
setup_detour_execution,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
setup_detour_execution,0x12,,RET,ret
setup_detour_execution,0x27,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
setup_detour_execution,0x38,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
setup_detour_execution,0x44,,RET,ret
optimized_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
optimized_callback,0x36,ctx->rsi + 0x88,"MOV qword ptr [RSI + 0x88],0x10",write other [TODO]
optimized_callback,0x51,ctx->rsi + 0x78,"MOV qword ptr [RSI + 0x78],-0x1",write other [TODO]
optimized_callback,0x59,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RDX",write other [TODO]
optimized_callback,0x60,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],RDI",write other [TODO]
optimized_callback,0x68,ctx->rax,"MOV qword ptr [RAX],0x1",write other [TODO]
optimized_callback,0x6f,0xffffffff8119eb20,CALL 0xffffffff8119eb20,direct call
optimized_callback,0x74,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
optimized_callback,0x8a,,RET,ret
optimized_callback,0x8b,0xffffffff8119f2c0,CALL 0xffffffff8119f2c0,direct call
optimized_callback,0x92,,RET,ret
optimized_callback,0x93,0xffffffff82000810,CALL 0xffffffff82000810,direct call
optimized_callback,0x99,,RET,ret
can_optimize,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
can_optimize,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
can_optimize,0x33,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],0x0",write stack
can_optimize,0x3e,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
can_optimize,0x49,0xffffffff811702b0,CALL 0xffffffff811702b0,direct call
can_optimize,0x9f,0xffffffff810cac40,CALL 0xffffffff810cac40,direct call
can_optimize,0xb4,0xffffffff8107b120,CALL 0xffffffff8107b120,direct call
can_optimize,0xd2,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
can_optimize,0xeb,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RBX",write stack
can_optimize,0xf2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
can_optimize,0x15c,,RET,ret
can_optimize,0x1d6,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
can_optimize,0x1e5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__recover_optprobed_insn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__recover_optprobed_insn,0x22,0xffffffff8119ea20,CALL 0xffffffff8119ea20,direct call
__recover_optprobed_insn,0x5e,,RET,ret
__recover_optprobed_insn,0x6a,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
__recover_optprobed_insn,0x97,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
__recover_optprobed_insn,0xa5,ctx->r15,"MOV byte ptr [R15],AL",write other [TODO]
__recover_optprobed_insn,0xae,ctx->r15 + 0x1,"MOV dword ptr [R15 + 0x1],EAX",write other [TODO]
arch_check_optimized_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_check_optimized_kprobe,0x28,0xffffffff8119ea20,CALL 0xffffffff8119ea20,direct call
arch_check_optimized_kprobe,0x4e,,RET,ret
arch_check_optimized_kprobe,0x58,,RET,ret
arch_check_optimized_kprobe,0x5b,,RET,ret
arch_within_optimized_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_within_optimized_kprobe,0x2a,,RET,ret
arch_remove_optimized_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_remove_optimized_kprobe,0x44,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_remove_optimized_kprobe,0x58,0xffffffff811a0830,CALL 0xffffffff811a0830,direct call
arch_remove_optimized_kprobe,0x5d,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],0x0",write other [TODO]
arch_remove_optimized_kprobe,0x68,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],0x0",write other [TODO]
arch_remove_optimized_kprobe,0x77,,RET,ret
arch_prepare_optimized_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prepare_optimized_kprobe,0x1d,0xffffffff8107b980,CALL 0xffffffff8107b980,direct call
arch_prepare_optimized_kprobe,0x44,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
arch_prepare_optimized_kprobe,0x5c,0xffffffff811a0670,CALL 0xffffffff811a0670,direct call
arch_prepare_optimized_kprobe,0x61,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],RAX",write other [TODO]
arch_prepare_optimized_kprobe,0x7b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
arch_prepare_optimized_kprobe,0xb0,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
arch_prepare_optimized_kprobe,0xc2,0xffffffff8107b790,CALL 0xffffffff8107b790,direct call
arch_prepare_optimized_kprobe,0xd4,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],RAX",write other [TODO]
arch_prepare_optimized_kprobe,0x108,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],CX",write other [TODO]
arch_prepare_optimized_kprobe,0x10b,ctx->rax + 0x2,"MOV byte ptr [RAX + 0x2],0xca",write other [TODO]
arch_prepare_optimized_kprobe,0x12f,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
arch_prepare_optimized_kprobe,0x140,ctx->rax + 0x2,"MOV qword ptr [RAX + 0x2],RBX",write other [TODO]
arch_prepare_optimized_kprobe,0x144,0xffffffff8107a680,CALL 0xffffffff8107a680,direct call
arch_prepare_optimized_kprobe,0x165,0xffffffff8107a660,CALL 0xffffffff8107a660,direct call
arch_prepare_optimized_kprobe,0x177,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_prepare_optimized_kprobe,0x185,0xffffffff8103f810,CALL 0xffffffff8103f810,direct call
arch_prepare_optimized_kprobe,0x190,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
arch_prepare_optimized_kprobe,0x1a6,,RET,ret
arch_prepare_optimized_kprobe,0x1b9,0xffffffff811a0830,CALL 0xffffffff811a0830,direct call
arch_prepare_optimized_kprobe,0x1be,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],0x0",write other [TODO]
arch_prepare_optimized_kprobe,0x1c9,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],0x0",write other [TODO]
arch_optimize_kprobes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_optimize_kprobes,0x20,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
arch_optimize_kprobes,0x62,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
arch_optimize_kprobes,0x65,ctx->rbp - 0x2d,"MOV byte ptr [RBP + -0x2d],0xe9",write stack
arch_optimize_kprobes,0x69,ctx->rbx + 0x90,"MOV dword ptr [RBX + 0x90],EDX",write other [TODO]
arch_optimize_kprobes,0x74,0xffffffff81d04600,CALL 0xffffffff81d04600,direct call
arch_optimize_kprobes,0x87,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
arch_optimize_kprobes,0x8b,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
arch_optimize_kprobes,0x8e,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],R12",write other [TODO]
arch_optimize_kprobes,0x95,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],R12",write other [TODO]
arch_optimize_kprobes,0xd1,,RET,ret
arch_optimize_kprobes,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_unoptimize_kprobe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_unoptimize_kprobe,0x29,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
arch_unoptimize_kprobe,0x2f,ctx->rbp - 0x22,"MOV dword ptr [RBP + -0x22],0xcc",write stack
arch_unoptimize_kprobe,0x36,ctx->rbp - 0x1e,"MOV byte ptr [RBP + -0x1e],0x0",write stack
arch_unoptimize_kprobe,0x3c,ctx->rbp - 0x1d,"MOV dword ptr [RBP + -0x1d],EAX",write stack
arch_unoptimize_kprobe,0x43,ctx->rbp - 0x19,"MOV byte ptr [RBP + -0x19],AL",write stack
arch_unoptimize_kprobe,0x4f,ctx->rbp - 0x21,"MOV dword ptr [RBP + -0x21],EAX",write stack
arch_unoptimize_kprobe,0x52,0xffffffff8103f810,CALL 0xffffffff8103f810,direct call
arch_unoptimize_kprobe,0x57,0xffffffff8103f9a0,CALL 0xffffffff8103f9a0,direct call
arch_unoptimize_kprobe,0x69,0xffffffff8103f810,CALL 0xffffffff8103f810,direct call
arch_unoptimize_kprobe,0x6e,0xffffffff8103f9a0,CALL 0xffffffff8103f9a0,direct call
arch_unoptimize_kprobe,0x8b,0xffffffff81274fa0,CALL 0xffffffff81274fa0,direct call
arch_unoptimize_kprobe,0xa7,,RET,ret
arch_unoptimize_kprobe,0xa8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_unoptimize_kprobes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_unoptimize_kprobes,0x35,0xffffffff8107c020,CALL 0xffffffff8107c020,direct call
arch_unoptimize_kprobes,0x48,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
arch_unoptimize_kprobes,0x4c,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
arch_unoptimize_kprobes,0x52,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R12",write other [TODO]
arch_unoptimize_kprobes,0x56,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
arch_unoptimize_kprobes,0x5d,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],R15",write other [TODO]
arch_unoptimize_kprobes,0x67,ctx->r15,"MOV qword ptr [R15],R12",write other [TODO]
arch_unoptimize_kprobes,0x8b,,RET,ret
kprobe_ftrace_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kprobe_ftrace_handler,0x91,ctx->rdx + 0x13c8,"MOV qword ptr [RDX + 0x13c8],RAX",write other [TODO]
kprobe_ftrace_handler,0xa2,0xffffffff8119ea20,CALL 0xffffffff8119ea20,direct call
kprobe_ftrace_handler,0xe8,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],R12",write other [TODO]
kprobe_ftrace_handler,0xf0,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],R14",write other [TODO]
kprobe_ftrace_handler,0xf7,ctx->r15,"MOV qword ptr [R15],0x1",write other [TODO]
kprobe_ftrace_handler,0x108,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
kprobe_ftrace_handler,0x112,ctx->rax,CALL RAX,in-direct call
kprobe_ftrace_handler,0x125,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
kprobe_ftrace_handler,0x134,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RCX",write other [TODO]
kprobe_ftrace_handler,0x13b,ctx->gs + 0x1ff38,"MOV qword ptr GS:[0x1ff38],0x0",write other [TODO]
kprobe_ftrace_handler,0x16e,,RET,ret
kprobe_ftrace_handler,0x172,0xffffffff8119f2c0,CALL 0xffffffff8119f2c0,direct call
kprobe_ftrace_handler,0x190,0xffffffff82000818,CALL 0xffffffff82000818,direct call
kprobe_ftrace_handler,0x197,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
kprobe_ftrace_handler,0x1a3,ctx->r15,"MOV qword ptr [R15],0x8",write other [TODO]
kprobe_ftrace_handler,0x1aa,ctx->r12 + 0x48,CALL qword ptr [R12 + 0x48],in-direct call
arch_prepare_kprobe_ftrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prepare_kprobe_ftrace,0xc,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],0x0",write other [TODO]
arch_prepare_kprobe_ftrace,0x18,,RET,ret
module_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
module_alloc,0x7d,0xffffffff812e9e60,CALL 0xffffffff812e9e60,direct call
module_alloc,0x90,,RET,ret
module_alloc,0x98,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
module_alloc,0xae,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
module_alloc,0xb7,,RET,ret
module_alloc,0xb8,0xffffffff817b7020,CALL 0xffffffff817b7020,direct call
module_alloc,0xca,0xffffffff83442e70,"MOV qword ptr [0xffffffff83442e70],RAX",write .data
apply_relocate_add,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apply_relocate_add,0x1e,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R8",write stack
apply_relocate_add,0x2b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
apply_relocate_add,0x32,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],-0x7e2fc410",write stack
apply_relocate_add,0x3a,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
apply_relocate_add,0x49,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
apply_relocate_add,0x4e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],-0x7efc07f0",write stack
apply_relocate_add,0xb3,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
apply_relocate_add,0xe1,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
apply_relocate_add,0xe5,ctx->rax,CALL RAX,in-direct call
apply_relocate_add,0x15f,ctx->rax,CALL RAX,in-direct call
apply_relocate_add,0x170,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
apply_relocate_add,0x178,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R10",write stack
apply_relocate_add,0x184,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
apply_relocate_add,0x195,ctx->rax,CALL RAX,in-direct call
apply_relocate_add,0x1b4,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R10",write stack
apply_relocate_add,0x1c1,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
apply_relocate_add,0x1d2,ctx->rax,CALL RAX,in-direct call
apply_relocate_add,0xc16222,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
module_finalize,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
module_finalize,0x1a,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDI",write stack
module_finalize,0x1e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
module_finalize,0x2b,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
module_finalize,0x3a,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
module_finalize,0x47,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
module_finalize,0x58,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
module_finalize,0x63,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
module_finalize,0x6b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
module_finalize,0x8b,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0xa4,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
module_finalize,0xa8,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0xc1,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
module_finalize,0xc5,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0xde,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
module_finalize,0xe2,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0xf7,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0x10c,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0x121,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
module_finalize,0x134,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
module_finalize,0x152,0xffffffff8103f610,CALL 0xffffffff8103f610,direct call
module_finalize,0x179,0xffffffff8103ef50,CALL 0xffffffff8103ef50,direct call
module_finalize,0x18e,0xffffffff8103ef60,CALL 0xffffffff8103ef60,direct call
module_finalize,0x1a7,0xffffffff8103f2e0,CALL 0xffffffff8103f2e0,direct call
module_finalize,0x1c0,0xffffffff8103ef70,CALL 0xffffffff8103ef70,direct call
module_finalize,0x1ef,0xffffffff8103ef80,CALL 0xffffffff8103ef80,direct call
module_finalize,0x204,,RET,ret
module_arch_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
module_arch_cleanup,0x9,0xffffffff8103f0d0,CALL 0xffffffff8103f0d0,direct call
module_arch_cleanup,0xf,,RET,ret
kgdb_hw_overflow_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_hw_overflow_handler,0x42,,RET,ret
kgdb_nmi_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_nmi_handler,0x25,,RET,ret
kgdb_nmi_handler,0x28,,RET,ret
kgdb_nmi_handler,0x36,,RET,ret
kgdb_nmi_handler,0x48,0xffffffff811a2980,CALL 0xffffffff811a2980,direct call
kgdb_nmi_handler,0x56,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
kgdb_nmi_handler,0x5b,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
kgdb_nmi_handler,0x6a,,RET,ret
kgdb_correct_hw_break,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_correct_hw_break,0x60,ctx->r13 + 0x110,"MOV qword ptr [R13 + 0x110],RCX",write other [TODO]
kgdb_correct_hw_break,0x6e,ctx->r13 + 0x118,"MOV qword ptr [R13 + 0x118],RAX",write other [TODO]
kgdb_correct_hw_break,0x78,ctx->r13 + 0x160,"MOV qword ptr [R13 + 0x160],RCX",write other [TODO]
kgdb_correct_hw_break,0x7f,ctx->r13 + 0x10c,"MOV dword ptr [R13 + 0x10c],EAX",write other [TODO]
kgdb_correct_hw_break,0x86,ctx->r13 + 0x170,"MOV byte ptr [R13 + 0x170],DL",write other [TODO]
kgdb_correct_hw_break,0x8d,ctx->r13 + 0x171,"MOV byte ptr [R13 + 0x171],AL",write other [TODO]
kgdb_correct_hw_break,0x94,0xffffffff8103faf0,CALL 0xffffffff8103faf0,direct call
kgdb_correct_hw_break,0xca,,RET,ret
kgdb_correct_hw_break,0xd2,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
kgdb_correct_hw_break,0xe1,0xffffffff8103fa80,CALL 0xffffffff8103fa80,direct call
kgdb_correct_hw_break,0xf0,0xffffffff83443280,"MOV qword ptr [0xffffffff83443280],RAX",write .data
kgdb_correct_hw_break,0xfa,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
kgdb_correct_hw_break,0x109,0xffffffff8103fa00,CALL 0xffffffff8103fa00,direct call
kgdb_correct_hw_break,0x116,,RET,ret
kgdb_disable_hw_debug,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_disable_hw_debug,0x1f,0xffffffff82e4b870,CALL qword ptr [0xffffffff82e4b870],in-direct call
kgdb_disable_hw_debug,0x5e,0xffffffff8103fc10,CALL 0xffffffff8103fc10,direct call
kgdb_disable_hw_debug,0x81,,RET,ret
kgdb_disable_hw_debug,0x8b,0xffffffff8103fa80,CALL 0xffffffff8103fa80,direct call
kgdb_arch_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_init,0x12,0xffffffff810d2de0,CALL 0xffffffff810d2de0,direct call
kgdb_arch_init,0x26,,RET,ret
kgdb_arch_init,0x30,0xffffffff8103a810,CALL 0xffffffff8103a810,direct call
kgdb_arch_init,0x48,0xffffffff8103a810,CALL 0xffffffff8103a810,direct call
kgdb_arch_init,0x5d,0xffffffff8103ab30,CALL 0xffffffff8103ab30,direct call
kgdb_arch_init,0x69,0xffffffff810d2c20,CALL 0xffffffff810d2c20,direct call
kgdb_arch_init,0x76,,RET,ret
hw_break_release_slot.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hw_break_release_slot.part.0,0x32,0xffffffff81279d20,CALL 0xffffffff81279d20,direct call
hw_break_release_slot.part.0,0x3e,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
hw_break_release_slot.part.0,0x4e,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
hw_break_release_slot.part.0,0x64,,RET,ret
hw_break_release_slot.part.0,0x6e,,RET,ret
kgdb_remove_all_hw_break,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_remove_hw_break,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_remove_hw_break,0x45,0xffffffff8107cb40,CALL 0xffffffff8107cb40,direct call
kgdb_remove_hw_break,0x5b,ctx->rbx - 0x7cbbcd60,"MOV dword ptr [RBX + -0x7cbbcd60],0x0",write other [TODO]
kgdb_remove_hw_break,0x69,,RET,ret
kgdb_set_hw_break,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_set_hw_break,0x3d,,RET,ret
kgdb_set_hw_break,0x5c,ctx->rax - 0x7cbbcd4c,"MOV dword ptr [RAX + -0x7cbbcd4c],0x80",write other [TODO]
kgdb_set_hw_break,0x79,ctx->r14 - 0x7cbbcd50,"MOV dword ptr [R14 + -0x7cbbcd50],EAX",write other [TODO]
kgdb_set_hw_break,0x80,ctx->r14 - 0x7cbbcd58,"MOV qword ptr [R14 + -0x7cbbcd58],RDI",write other [TODO]
kgdb_set_hw_break,0xaa,0xffffffff81279cb0,CALL 0xffffffff81279cb0,direct call
kgdb_set_hw_break,0xba,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
kgdb_set_hw_break,0xca,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
kgdb_set_hw_break,0xe3,ctx->r13 - 0x7cbbcd60,"MOV dword ptr [R13 + -0x7cbbcd60],0x1",write other [TODO]
kgdb_set_hw_break,0xf3,,RET,ret
kgdb_set_hw_break,0x100,ctx->rdx - 0x7cbbcd4c,"MOV dword ptr [RDX + -0x7cbbcd4c],EAX",write other [TODO]
kgdb_set_hw_break,0x16e,0xffffffff81279d20,CALL 0xffffffff81279d20,direct call
kgdb_set_hw_break,0x176,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
kgdb_set_hw_break,0x186,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
kgdb_set_hw_break,0x19a,ctx->r13 - 0x7cbbcd58,"MOV qword ptr [R13 + -0x7cbbcd58],0x0",write other [TODO]
dbg_set_reg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dbg_set_reg,0x35,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
dbg_set_reg,0x3d,,RET,ret
dbg_set_reg,0x40,,RET,ret
dbg_get_reg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dbg_get_reg,0x40,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
dbg_get_reg,0x58,,RET,ret
dbg_get_reg,0x5d,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
dbg_get_reg,0x67,,RET,ret
dbg_get_reg,0x6a,,RET,ret
sleeping_thread_to_gdb_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sleeping_thread_to_gdb_regs,0x5,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0xc,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x14,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x1c,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x24,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x2c,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x40,ctx->rdi + 0x40,"MOV qword ptr [RDI + 0x40],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x48,ctx->rdi + 0x48,"MOV qword ptr [RDI + 0x48],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x50,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],RAX",write other [TODO]
sleeping_thread_to_gdb_regs,0x58,ctx->rdi + 0x50,"MOV qword ptr [RDI + 0x50],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x60,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x68,ctx->rdi + 0x60,"MOV qword ptr [RDI + 0x60],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x70,ctx->rdi + 0x68,"MOV qword ptr [RDI + 0x68],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x78,ctx->rdi + 0x70,"MOV qword ptr [RDI + 0x70],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x80,ctx->rdi + 0x78,"MOV qword ptr [RDI + 0x78],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x88,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],0x0",write other [TODO]
sleeping_thread_to_gdb_regs,0x9a,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RAX",write other [TODO]
sleeping_thread_to_gdb_regs,0x9e,,RET,ret
kgdb_roundup_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_roundup_cpus,0xe,0xffffffff81070d80,CALL 0xffffffff81070d80,direct call
kgdb_roundup_cpus,0x14,,RET,ret
kgdb_arch_handle_exception,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_handle_exception,0x1f,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
kgdb_arch_handle_exception,0x46,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
kgdb_arch_handle_exception,0x4a,0xffffffff811a3760,CALL 0xffffffff811a3760,direct call
kgdb_arch_handle_exception,0x57,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RAX",write other [TODO]
kgdb_arch_handle_exception,0x6a,0xffffffff82fba77c,"MOV dword ptr [0xffffffff82fba77c],0xffffffff",write .data
kgdb_arch_handle_exception,0x77,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],RAX",write other [TODO]
kgdb_arch_handle_exception,0x9e,,RET,ret
kgdb_arch_handle_exception,0xae,ctx->r12 + 0x90,"MOV qword ptr [R12 + 0x90],RAX",write other [TODO]
kgdb_arch_handle_exception,0xbd,0xffffffff82fba77c,"MOV dword ptr [0xffffffff82fba77c],EAX",write .data
kgdb_arch_handle_exception,0xc5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__kgdb_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__kgdb_notify,0x2f,0xffffffff811a2ee0,CALL 0xffffffff811a2ee0,direct call
__kgdb_notify,0x40,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
__kgdb_notify,0x45,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
__kgdb_notify,0x54,,RET,ret
kgdb_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_notify,0xd,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
kgdb_notify,0x16,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
kgdb_notify,0x1c,0xffffffff8107d0e0,CALL 0xffffffff8107d0e0,direct call
kgdb_notify,0x29,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
kgdb_notify,0x37,,RET,ret
kgdb_ll_trap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_ll_trap,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
kgdb_ll_trap,0x22,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
kgdb_ll_trap,0x26,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
kgdb_ll_trap,0x2a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RCX",write stack
kgdb_ll_trap,0x2e,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],R8D",write stack
kgdb_ll_trap,0x32,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],R9D",write stack
kgdb_ll_trap,0x41,0xffffffff8107d0e0,CALL 0xffffffff8107d0e0,direct call
kgdb_ll_trap,0x56,,RET,ret
kgdb_ll_trap,0x57,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kgdb_arch_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_exit,0x1a,0xffffffff81278c50,CALL 0xffffffff81278c50,direct call
kgdb_arch_exit,0x1f,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],0x0",write other [TODO]
kgdb_arch_exit,0x40,0xffffffff8103ab30,CALL 0xffffffff8103ab30,direct call
kgdb_arch_exit,0x4e,0xffffffff8103ab30,CALL 0xffffffff8103ab30,direct call
kgdb_arch_exit,0x5a,0xffffffff810d2c20,CALL 0xffffffff810d2c20,direct call
kgdb_arch_exit,0x64,,RET,ret
kgdb_arch_late,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_late,0x37,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
kgdb_arch_late,0x40,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],-0x7ef83540",write stack
kgdb_arch_late,0x52,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
kgdb_arch_late,0x59,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x1",write stack
kgdb_arch_late,0x64,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x1",write stack
kgdb_arch_late,0x6c,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],0x2",write stack
kgdb_arch_late,0x73,ctx->rbp - 0x78,"MOV byte ptr [RBP + -0x78],0x5",write stack
kgdb_arch_late,0xb8,0xffffffff81278cc0,CALL 0xffffffff81278cc0,direct call
kgdb_arch_late,0xbd,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
kgdb_arch_late,0xe3,ctx->rdx + 0x1e8,"MOV qword ptr [RDX + 0x1e8],0x1",write other [TODO]
kgdb_arch_late,0xf1,ctx->rdx + 0x3c0,"MOV qword ptr [RDX + 0x3c0],-0x7ef837c0",write other [TODO]
kgdb_arch_late,0x109,ctx->rdx + 0x388,"MOV qword ptr [RDX + 0x388],0x0",write other [TODO]
kgdb_arch_late,0x117,0xffffffff81279c40,CALL 0xffffffff81279c40,direct call
kgdb_arch_late,0x11f,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
kgdb_arch_late,0x12f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
kgdb_skipexception,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_skipexception,0xc,,RET,ret
kgdb_skipexception,0x20,0xffffffff811a2d20,CALL 0xffffffff811a2d20,direct call
kgdb_skipexception,0x30,,RET,ret
kgdb_arch_pc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_pc,0x1c,,RET,ret
kgdb_arch_set_pc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_set_pc,0x6,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],RSI",write other [TODO]
kgdb_arch_set_pc,0x11,,RET,ret
kgdb_arch_set_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_set_breakpoint,0x18,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],0x0",write other [TODO]
kgdb_arch_set_breakpoint,0x22,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
kgdb_arch_set_breakpoint,0x35,,RET,ret
kgdb_arch_set_breakpoint,0x45,0xffffffff8128d180,CALL 0xffffffff8128d180,direct call
kgdb_arch_set_breakpoint,0x55,0xffffffff81112470,CALL 0xffffffff81112470,direct call
kgdb_arch_set_breakpoint,0x6d,0xffffffff8103f830,CALL 0xffffffff8103f830,direct call
kgdb_arch_set_breakpoint,0x75,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],0x5",write other [TODO]
kgdb_arch_set_breakpoint,0x80,,RET,ret
kgdb_arch_remove_breakpoint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kgdb_arch_remove_breakpoint,0x24,0xffffffff8128d180,CALL 0xffffffff8128d180,direct call
kgdb_arch_remove_breakpoint,0x2d,,RET,ret
kgdb_arch_remove_breakpoint,0x35,0xffffffff81112470,CALL 0xffffffff81112470,direct call
kgdb_arch_remove_breakpoint,0x49,0xffffffff8103f830,CALL 0xffffffff8103f830,direct call
kgdb_arch_remove_breakpoint,0x54,,RET,ret
early_vga_write,0x71,0xffffffff83443320,"MOV dword ptr [0xffffffff83443320],ECX",write .data
early_vga_write,0x83,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],R8W",write other [TODO]
early_vga_write,0x9c,0xffffffff83443320,"MOV dword ptr [0xffffffff83443320],R12D",write .data
early_vga_write,0xe4,0xffffffff83443320,"MOV dword ptr [0xffffffff83443320],EAX",write .data
early_vga_write,0xf7,,RET,ret
early_vga_write,0x147,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],AX",write other [TODO]
early_vga_write,0x186,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],R11W",write other [TODO]
early_vga_write,0x1a2,0xffffffff82e4b598,"MOV dword ptr [0xffffffff82e4b598],EAX",write .data
early_vga_write,0x1ad,0xffffffff83443320,"MOV dword ptr [0xffffffff83443320],R12D",write .data
early_vga_write,0x1bc,0xffffffff83443320,"MOV dword ptr [0xffffffff83443320],R12D",write .data
early_vga_write,0x1c3,0xffffffff82e4b598,"MOV dword ptr [0xffffffff82e4b598],EAX",write .data
early_vga_write,0x1ce,,RET,ret
io_serial_in,0x7,,RET,ret
io_serial_out,0x6,,RET,ret
mem32_serial_out,0x7,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
mem32_serial_out,0x9,,RET,ret
mem32_serial_in,0x9,,RET,ret
early_serial_putc.isra.0,0x24,0xffffffff82e4b500,CALL qword ptr [0xffffffff82e4b500],in-direct call
early_serial_putc.isra.0,0x3b,0xffffffff82e4b4f8,CALL qword ptr [0xffffffff82e4b4f8],in-direct call
early_serial_putc.isra.0,0x45,,RET,ret
early_serial_write,0x24,0xffffffff8107d740,CALL 0xffffffff8107d740,direct call
early_serial_write,0x3e,0xffffffff8107d740,CALL 0xffffffff8107d740,direct call
early_serial_write,0x49,,RET,ret
early_serial_write,0x4a,,RET,ret
is_hpet_enabled,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_hpet_enabled,0x26,,RET,ret
hpet_restart_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_restart_counter,0x20,ctx->rcx + 0x10,"MOV dword ptr [RCX + 0x10],EAX",write other [TODO]
hpet_restart_counter,0x2c,ctx->rax + 0xf0,"MOV dword ptr [RAX + 0xf0],EDX",write other [TODO]
hpet_restart_counter,0x39,ctx->rax + 0xf4,"MOV dword ptr [RAX + 0xf4],EDX",write other [TODO]
hpet_restart_counter,0x56,ctx->rsi + 0x10,"MOV dword ptr [RSI + 0x10],EAX",write other [TODO]
hpet_restart_counter,0x5a,,RET,ret
hpet_clkevt_set_state_oneshot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_clkevt_set_state_oneshot,0x31,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_clkevt_set_state_oneshot,0x36,,RET,ret
hpet_clkevt_set_state_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_clkevt_set_state_shutdown,0x2b,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_clkevt_set_state_shutdown,0x30,,RET,ret
hpet_clkevt_set_next_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_clkevt_set_next_event,0x2d,ctx->rax,"MOV dword ptr [RAX],EDI",write other [TODO]
hpet_clkevt_set_next_event,0x54,,RET,ret
hpet_msi_unmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_msi_unmask,0x3f,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_msi_unmask,0x42,,RET,ret
hpet_msi_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_msi_mask,0x3f,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_msi_mask,0x42,,RET,ret
hpet_resume_counter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_resume_counter,0x9,0xffffffff8103e130,CALL 0xffffffff8103e130,direct call
hpet_resume_counter,0xe,0xffffffff8107d810,CALL 0xffffffff8107d810,direct call
hpet_resume_counter,0x14,,RET,ret
hpet_clkevt_set_state_periodic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_clkevt_set_state_periodic,0x29,ctx->rsi + 0x10,"MOV dword ptr [RSI + 0x10],EAX",write other [TODO]
hpet_clkevt_set_state_periodic,0x6f,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
hpet_clkevt_set_state_periodic,0x7e,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_clkevt_set_state_periodic,0x85,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
hpet_clkevt_set_state_periodic,0x91,ctx->rbx,"MOV dword ptr [RBX],R12D",write other [TODO]
hpet_clkevt_set_state_periodic,0xab,ctx->rsi + 0x10,"MOV dword ptr [RSI + 0x10],EAX",write other [TODO]
hpet_cpuhp_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_cpuhp_dead,0x33,0xffffffff81126260,CALL 0xffffffff81126260,direct call
hpet_cpuhp_dead,0x38,ctx->r13 + 0x10c,"MOV dword ptr [R13 + 0x10c],0x0",write other [TODO]
hpet_cpuhp_dead,0x4b,ctx->rax + ctx->rbx * 0x1,"MOV qword ptr [RAX + RBX*0x1],0x0",write other [TODO]
hpet_cpuhp_dead,0x5b,,RET,ret
hpet_msi_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_msi_free,0x12,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
hpet_msi_free,0x18,,RET,ret
hpet_msi_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_msi_init,0x26,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
hpet_msi_init,0x4b,0xffffffff8112aba0,CALL 0xffffffff8112aba0,direct call
hpet_msi_init,0x5e,,RET,ret
hpet_rtc_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_rtc_interrupt,0x1d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
hpet_rtc_interrupt,0x62,0xffffffff83443368,"MOV dword ptr [0xffffffff83443368],EAX",write .data
hpet_rtc_interrupt,0x68,ctx->rdi + 0x128,"MOV dword ptr [RDI + 0x128],EAX",write other [TODO]
hpet_rtc_interrupt,0xa4,0xffffffff8111d2e0,CALL 0xffffffff8111d2e0,direct call
hpet_rtc_interrupt,0x2d3,ctx->rsi + 0x120,"MOV dword ptr [RSI + 0x120],EAX",write other [TODO]
hpet_msi_interrupt_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_msi_interrupt_handler,0x18,ctx->rax,CALL RAX,in-direct call
hpet_rtc_timer_init.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_rtc_timer_init.part.0,0x2d,0xffffffff83443364,"MOV dword ptr [0xffffffff83443364],EAX",write .data
hpet_rtc_timer_init.part.0,0x4c,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
hpet_rtc_timer_init.part.0,0x55,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
hpet_rtc_timer_init.part.0,0x73,ctx->rsi + 0x128,"MOV dword ptr [RSI + 0x128],EAX",write other [TODO]
hpet_rtc_timer_init.part.0,0x79,0xffffffff83443368,"MOV dword ptr [0xffffffff83443368],EAX",write .data
hpet_rtc_timer_init.part.0,0x9d,ctx->rdi + 0x120,"MOV dword ptr [RDI + 0x120],EAX",write other [TODO]
hpet_rtc_timer_init.part.0,0xa8,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
hpet_rtc_timer_init.part.0,0xb4,,RET,ret
read_hpet,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
read_hpet,0x26,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
read_hpet,0x2f,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
read_hpet,0x6f,0xffffffff82e06004,"MOV dword ptr [0xffffffff82e06004],EAX",write .data
read_hpet,0x80,0xffffffff82e4bae0,CALL qword ptr [0xffffffff82e4bae0],in-direct call
read_hpet,0x8b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
read_hpet,0x99,,RET,ret
read_hpet,0x9f,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
read_hpet,0xc6,,RET,ret
read_hpet,0xd8,,RET,ret
hpet_msi_write_msg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_msi_write_msg,0x29,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
hpet_msi_write_msg,0x42,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
hpet_msi_write_msg,0x45,,RET,ret
hpet_cpuhp_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_cpuhp_online,0x50,ctx->r12 + 0x10c,"MOV dword ptr [R12 + 0x10c],0x1",write other [TODO]
hpet_cpuhp_online,0x65,ctx->r12 + 0x104,"MOV dword ptr [R12 + 0x104],EDI",write other [TODO]
hpet_cpuhp_online,0x96,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],R12",write other [TODO]
hpet_cpuhp_online,0xa7,0xffffffff81125610,CALL 0xffffffff81125610,direct call
hpet_cpuhp_online,0xb8,0xffffffff81126230,CALL 0xffffffff81126230,direct call
hpet_cpuhp_online,0xeb,0xffffffff81124910,CALL 0xffffffff81124910,direct call
hpet_cpuhp_online,0xf8,0xffffffff81124c30,CALL 0xffffffff81124c30,direct call
hpet_cpuhp_online,0x10a,ctx->r12 + 0xa0,"MOV dword ptr [R12 + 0xa0],0x6e",write other [TODO]
hpet_cpuhp_online,0x116,ctx->r12 + 0x98,"MOV qword ptr [R12 + 0x98],RBX",write other [TODO]
hpet_cpuhp_online,0x11e,ctx->r12 + 0xa4,"MOV dword ptr [R12 + 0xa4],EAX",write other [TODO]
hpet_cpuhp_online,0x12e,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],-0x7ef82790",write other [TODO]
hpet_cpuhp_online,0x137,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],-0x7ef82710",write other [TODO]
hpet_cpuhp_online,0x145,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],-0x7ef82750",write other [TODO]
hpet_cpuhp_online,0x155,ctx->r12 + 0x3c,"MOV dword ptr [R12 + 0x3c],0x2",write other [TODO]
hpet_cpuhp_online,0x170,ctx->r12 + 0xb0,"MOV qword ptr [R12 + 0xb0],RAX",write other [TODO]
hpet_cpuhp_online,0x196,ctx->r12 + 0x68,"MOV qword ptr [R12 + 0x68],-0x7ef81ca0",write other [TODO]
hpet_cpuhp_online,0x19f,0xffffffff811645d0,CALL 0xffffffff811645d0,direct call
hpet_cpuhp_online,0x1aa,,RET,ret
hpet_cpuhp_online,0x1b8,ctx->r12 + 0x3c,"MOV dword ptr [R12 + 0x3c],0x3",write other [TODO]
hpet_cpuhp_online,0x1c1,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],-0x7ef825f0",write other [TODO]
hpet_cpuhp_online,0x1f1,,RET,ret
hpet_clkevt_legacy_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_clkevt_legacy_resume,0x1c,ctx->rcx + 0x10,"MOV dword ptr [RCX + 0x10],EAX",write other [TODO]
hpet_clkevt_legacy_resume,0x26,0xffffffff834433c0,"MOV byte ptr [0xffffffff834433c0],0x1",write .data
hpet_clkevt_legacy_resume,0x35,,RET,ret
hpet_clkevt_msi_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_clkevt_msi_resume,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
hpet_clkevt_msi_resume,0x28,0xffffffff81127280,CALL 0xffffffff81127280,direct call
hpet_clkevt_msi_resume,0x37,0xffffffff81128490,CALL 0xffffffff81128490,direct call
hpet_clkevt_msi_resume,0x54,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_clkevt_msi_resume,0x6e,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_clkevt_msi_resume,0xa7,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
hpet_clkevt_msi_resume,0xc2,,RET,ret
hpet_clkevt_msi_resume,0xc3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
hpet_rtc_dropped_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_rtc_dropped_irq,0x26,,RET,ret
hpet_unregister_irq_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_unregister_irq_handler,0x25,0xffffffff83443350,"MOV qword ptr [0xffffffff83443350],0x0",write .data
hpet_unregister_irq_handler,0x30,0xffffffff834433a8,"MOV qword ptr [0xffffffff834433a8],0x0",write .data
hpet_unregister_irq_handler,0x3c,,RET,ret
hpet_rtc_timer_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_rtc_timer_init,0x27,0xffffffff8107df30,CALL 0xffffffff8107df30,direct call
hpet_rtc_timer_init,0x2d,,RET,ret
hpet_rtc_timer_init,0x2e,,RET,ret
hpet_set_alarm_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_set_alarm_time,0x37,0xffffffff83443388,"MOV dword ptr [0xffffffff83443388],EDI",write .data
hpet_set_alarm_time,0x3d,0xffffffff83443384,"MOV dword ptr [0xffffffff83443384],ESI",write .data
hpet_set_alarm_time,0x43,0xffffffff83443380,"MOV dword ptr [0xffffffff83443380],EDX",write .data
hpet_set_alarm_time,0x4a,,RET,ret
hpet_register_irq_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_register_irq_handler,0x34,0xffffffff83443350,"MOV qword ptr [0xffffffff83443350],RDI",write .data
hpet_register_irq_handler,0x3e,,RET,ret
hpet_register_irq_handler,0x45,,RET,ret
hpet_set_periodic_freq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_set_periodic_freq,0x37,0xffffffff83443358,"MOV qword ptr [0xffffffff83443358],RAX",write .data
hpet_set_periodic_freq,0x44,,RET,ret
hpet_set_periodic_freq,0x51,0xffffffff83443358,"MOV qword ptr [0xffffffff83443358],0x0",write .data
hpet_set_periodic_freq,0x6f,0xffffffff83443360,"MOV dword ptr [0xffffffff83443360],EAX",write .data
hpet_set_periodic_freq,0x7a,,RET,ret
hpet_mask_rtc_irq_bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_mask_rtc_irq_bit,0x39,,RET,ret
hpet_mask_rtc_irq_bit,0x51,ctx->rcx + 0x120,"MOV dword ptr [RCX + 0x120],EDX",write other [TODO]
hpet_mask_rtc_irq_bit,0x58,,RET,ret
hpet_set_rtc_irq_bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_set_rtc_irq_bit,0x33,0xffffffff834433a8,"MOV qword ptr [0xffffffff834433a8],RDX",write .data
hpet_set_rtc_irq_bit,0x40,0xffffffff834433a4,"MOV dword ptr [0xffffffff834433a4],0xffffffff",write .data
hpet_set_rtc_irq_bit,0x54,,RET,ret
hpet_set_rtc_irq_bit,0x55,,RET,ret
hpet_set_rtc_irq_bit,0x5a,0xffffffff8107df30,CALL 0xffffffff8107df30,direct call
hpet_set_rtc_irq_bit,0x65,,RET,ret
hpet_readl,0xb,,RET,ret
hpet_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hpet_disable,0x31,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
hpet_disable,0x65,ctx->rax,"MOV dword ptr [RAX],ESI",write other [TODO]
hpet_disable,0x86,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EAX",write other [TODO]
hpet_disable,0x8a,,RET,ret
amd_nb_num,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_nb_num,0x11,,RET,ret
amd_nb_has_feature,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_nb_has_feature,0x1c,,RET,ret
node_to_amd_nb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
node_to_amd_nb,0x29,,RET,ret
__amd_smn_rw,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__amd_smn_rw,0x4c,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
__amd_smn_rw,0x5c,0xffffffff81669050,CALL 0xffffffff81669050,direct call
__amd_smn_rw,0x7b,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
__amd_smn_rw,0xb0,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_smn_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_smn_read,0xe,0xffffffff8107e7d0,CALL 0xffffffff8107e7d0,direct call
amd_smn_read,0x14,,RET,ret
amd_smn_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_smn_write,0x15,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],EDX",write stack
amd_smn_write,0x1c,0xffffffff8107e7d0,CALL 0xffffffff8107e7d0,direct call
amd_smn_write,0x22,,RET,ret
__fix_erratum_688,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__fix_erratum_688,0x13,0xffffffff81647150,CALL 0xffffffff81647150,direct call
__fix_erratum_688,0x22,0xffffffff81647150,CALL 0xffffffff81647150,direct call
__fix_erratum_688,0x28,,RET,ret
amd_flush_garts,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_flush_garts,0x1b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
amd_flush_garts,0x4f,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
amd_flush_garts,0x90,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_flush_garts,0xd6,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_flush_garts,0xfd,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
amd_get_mmconfig_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_mmconfig_range,0x2a,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
amd_get_mmconfig_range,0x3e,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],0x200",write other [TODO]
amd_get_mmconfig_range,0x50,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
amd_get_mmconfig_range,0x63,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
amd_get_mmconfig_range,0x6f,,RET,ret
amd_get_mmconfig_range,0x77,,RET,ret
amd_get_subcaches,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_get_subcaches,0x2b,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
amd_get_subcaches,0x6e,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_get_subcaches,0xa8,,RET,ret
amd_get_subcaches,0xa9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_set_subcaches,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
amd_set_subcaches,0x35,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
amd_set_subcaches,0x96,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_set_subcaches,0xad,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_set_subcaches,0xec,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_set_subcaches,0xfe,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_set_subcaches,0x130,,RET,ret
amd_set_subcaches,0x141,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_set_subcaches,0x156,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_set_subcaches,0x177,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
amd_set_subcaches,0x18e,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
amd_set_subcaches,0x197,0xffffffff81669050,CALL 0xffffffff81669050,direct call
amd_set_subcaches,0x1ac,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__raw_callee_save___kvm_vcpu_is_preempted,0x12,,RET,ret
paravirt_write_msr,0xa,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
paravirt_write_msr,0x11,,RET,ret
kvm_io_delay,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_io_delay,0xa,,RET,ret
kvm_steal_clock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_steal_clock,0x2f,,RET,ret
kvm_sev_hc_page_enc_status,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_sev_hc_page_enc_status,0x2b,,RET,ret
kvm_sev_es_hcall_finish,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_sev_es_hcall_finish,0xf,,RET,ret
kvm_sev_es_hcall_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_sev_es_hcall_prepare,0x22,ctx->rdi + 0x318,"MOV qword ptr [RDI + 0x318],RDX",write other [TODO]
kvm_sev_es_hcall_prepare,0x36,ctx->rdi + 0x308,"MOV qword ptr [RDI + 0x308],RDX",write other [TODO]
kvm_sev_es_hcall_prepare,0x4a,ctx->rdi + 0x310,"MOV qword ptr [RDI + 0x310],RDX",write other [TODO]
kvm_sev_es_hcall_prepare,0x59,ctx->rdi + 0x330,"MOV qword ptr [RDI + 0x330],RDX",write other [TODO]
kvm_sev_es_hcall_prepare,0x61,,RET,ret
kvm_async_pf_task_wait_schedule,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_async_pf_task_wait_schedule,0x37,ctx->rsp + 0x58,"MOV qword ptr [RSP + 0x58],RAX",write stack
kvm_async_pf_task_wait_schedule,0x51,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
kvm_async_pf_task_wait_schedule,0x5b,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
kvm_async_pf_task_wait_schedule,0x60,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
kvm_async_pf_task_wait_schedule,0x65,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
kvm_async_pf_task_wait_schedule,0x98,ctx->rsp + 0x48,"MOV dword ptr [RSP + 0x48],EBX",write stack
kvm_async_pf_task_wait_schedule,0xad,ctx->rsp + 0x4c,"MOV dword ptr [RSP + 0x4c],EAX",write stack
kvm_async_pf_task_wait_schedule,0xb1,0xffffffff81103ab0,CALL 0xffffffff81103ab0,direct call
kvm_async_pf_task_wait_schedule,0xc9,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
kvm_async_pf_task_wait_schedule,0xd3,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
kvm_async_pf_task_wait_schedule,0xd7,ctx->rcx - 0x7cbbcba0,"MOV qword ptr [RCX + -0x7cbbcba0],RBX",write other [TODO]
kvm_async_pf_task_wait_schedule,0xe1,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RDX",write stack
kvm_async_pf_task_wait_schedule,0xe6,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kvm_async_pf_task_wait_schedule,0xed,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
kvm_async_pf_task_wait_schedule,0xf3,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
kvm_async_pf_task_wait_schedule,0xf8,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
kvm_async_pf_task_wait_schedule,0x10d,0xffffffff81103ad0,CALL 0xffffffff81103ad0,direct call
kvm_async_pf_task_wait_schedule,0x124,0xffffffff81103b40,CALL 0xffffffff81103b40,direct call
kvm_async_pf_task_wait_schedule,0x12f,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
kvm_async_pf_task_wait_schedule,0x137,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
kvm_async_pf_task_wait_schedule,0x148,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
kvm_async_pf_task_wait_schedule,0x14f,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RAX",write other [TODO]
kvm_async_pf_task_wait_schedule,0x153,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kvm_async_pf_task_wait_schedule,0x15b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
kvm_async_pf_task_wait_schedule,0x17e,,RET,ret
kvm_async_pf_task_wait_schedule,0x17f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
kvm_guest_apic_eoi_write,0x28,ctx->rax + 0x8,CALL qword ptr [RAX + 0x8],in-direct call
kvm_guest_apic_eoi_write,0x2c,,RET,ret
kvm_guest_apic_eoi_write,0x2d,,RET,ret
kvm_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_wait,0x17,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
kvm_wait,0x22,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
kvm_wait,0x30,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
kvm_wait,0x37,,RET,ret
kvm_wait,0x40,0xffffffff82e4b970,CALL qword ptr [0xffffffff82e4b970],in-direct call
kvm_wait,0x47,,RET,ret
kvm_wait,0x48,,RET,ret
kvm_wait,0x49,0xffffffff82e4b968,CALL qword ptr [0xffffffff82e4b968],in-direct call
kvm_wait,0x50,,RET,ret
kvm_pv_reboot_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_pv_reboot_notify,0xd,,RET,ret
kvm_pv_reboot_notify,0x29,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
kvm_pv_reboot_notify,0x31,,RET,ret
kvm_kick_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8107f0fc,0x12,,RET,ret
apf_task_wake_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apf_task_wake_all,0x13,ctx->rdi,"MOV RDI,R12",write other [TODO]
apf_task_wake_all,0x16,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
apf_task_wake_all,0x47,ctx->rdx,"MOV qword ptr [RDX],RBX",write other [TODO]
apf_task_wake_all,0x4f,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
apf_task_wake_all,0x53,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
apf_task_wake_all,0x5a,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
apf_task_wake_all,0x79,0xffffffff81107380,CALL 0xffffffff81107380,direct call
apf_task_wake_all,0x83,ctx->rdi,"MOV RDI,R12",write other [TODO]
apf_task_wake_all,0x8a,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
apf_task_wake_all,0xa0,,RET,ret
kvm_async_pf_task_wake,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_async_pf_task_wake,0x3c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
kvm_async_pf_task_wake,0x65,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
kvm_async_pf_task_wake,0x6d,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
kvm_async_pf_task_wake,0x71,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
kvm_async_pf_task_wake,0x78,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
kvm_async_pf_task_wake,0x97,0xffffffff81107380,CALL 0xffffffff81107380,direct call
kvm_async_pf_task_wake,0x9f,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kvm_async_pf_task_wake,0xa7,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
kvm_async_pf_task_wake,0xb6,,RET,ret
kvm_async_pf_task_wake,0xbf,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kvm_async_pf_task_wake,0xd5,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
kvm_async_pf_task_wake,0xf4,ctx->r12 + 0x28,"MOV dword ptr [R12 + 0x28],EBX",write other [TODO]
kvm_async_pf_task_wake,0x10c,ctx->r12 + 0x2c,"MOV dword ptr [R12 + 0x2c],EAX",write other [TODO]
kvm_async_pf_task_wake,0x115,0xffffffff81103ab0,CALL 0xffffffff81103ab0,direct call
kvm_async_pf_task_wake,0x12c,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
kvm_async_pf_task_wake,0x135,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R12",write other [TODO]
kvm_async_pf_task_wake,0x139,ctx->rcx - 0x7cbbcba0,"MOV qword ptr [RCX + -0x7cbbcba0],R12",write other [TODO]
kvm_async_pf_task_wake,0x140,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RDX",write other [TODO]
kvm_async_pf_task_wake,0x14d,0xffffffff8107f110,CALL 0xffffffff8107f110,direct call
kvm_async_pf_task_wake,0x15c,,RET,ret
__kvm_cpuid_base,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__kvm_cpuid_base,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__kvm_cpuid_base,0x60,,RET,ret
__kvm_cpuid_base,0x7d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R12D",write stack
__kvm_cpuid_base,0x8b,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
__kvm_cpuid_base,0x95,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
__kvm_cpuid_base,0xbd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kvm_para_available,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_para_available,0x15,,RET,ret
kvm_para_available,0x1a,0xffffffff8107f320,CALL 0xffffffff8107f320,direct call
kvm_para_available,0x22,0xffffffff82e4b720,"MOV dword ptr [0xffffffff82e4b720],EAX",write .data
kvm_para_available,0x2b,,RET,ret
kvm_arch_para_hints,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_arch_para_hints,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
kvm_arch_para_hints,0x2a,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
kvm_arch_para_hints,0x39,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],EAX",write stack
kvm_arch_para_hints,0x44,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
kvm_arch_para_hints,0x5d,,RET,ret
kvm_arch_para_hints,0x5e,0xffffffff8107f320,CALL 0xffffffff8107f320,direct call
kvm_arch_para_hints,0x63,0xffffffff82e4b720,"MOV dword ptr [0xffffffff82e4b720],EAX",write .data
kvm_arch_para_hints,0x6b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kvm_flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_flush_tlb_multi,0x38,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
kvm_flush_tlb_multi,0x6e,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
kvm_flush_tlb_multi,0x7a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
kvm_flush_tlb_multi,0x90,0xffffffff8108c890,CALL 0xffffffff8108c890,direct call
kvm_flush_tlb_multi,0x9b,,RET,ret
kvm_smp_send_call_func_ipi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_smp_send_call_func_ipi,0xf,0xffffffff81070e20,CALL 0xffffffff81070e20,direct call
kvm_smp_send_call_func_ipi,0x1b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
kvm_smp_send_call_func_ipi,0x27,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
kvm_smp_send_call_func_ipi,0x39,0xffffffff810e62f0,CALL 0xffffffff810e62f0,direct call
kvm_smp_send_call_func_ipi,0x45,0xffffffff82e4baf8,CALL qword ptr [0xffffffff82e4baf8],in-direct call
FUN_ffffffff8107f5ad,0xf,,RET,ret
kvm_disable_host_haltpoll,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_disable_host_haltpoll,0x13,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_disable_host_haltpoll,0x1a,,RET,ret
kvm_enable_host_haltpoll,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_enable_host_haltpoll,0x15,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_enable_host_haltpoll,0x1c,,RET,ret
__send_ipi_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__send_ipi_mask,0x2f,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
__send_ipi_mask,0x36,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],0x0",write stack
__send_ipi_mask,0x3f,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],0x0",write stack
__send_ipi_mask,0x48,ctx->rsi,"MOV RSI,RBX",write other [TODO]
__send_ipi_mask,0x4b,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
__send_ipi_mask,0x59,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__send_ipi_mask,0x5f,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
__send_ipi_mask,0x64,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__send_ipi_mask,0x85,ctx->rsp + 0x18,"MOV dword ptr [RSP + 0x18],EAX",write stack
__send_ipi_mask,0x89,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RDI",write stack
__send_ipi_mask,0x8e,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
FUN_ffffffff8107f7f5,-0x129,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RDX",write stack
FUN_ffffffff8107f7f5,-0x124,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
FUN_ffffffff8107f7f5,-0x110,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
FUN_ffffffff8107f7f5,-0x104,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
FUN_ffffffff8107f7f5,-0x60,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],0x0",write stack
FUN_ffffffff8107f7f5,-0x52,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],0x0",write stack
FUN_ffffffff8107f7f5,0x32,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],R9",write stack
FUN_ffffffff8107f7f5,0x37,ctx->rsp + 0x1c,"MOV dword ptr [RSP + 0x1c],R10D",write stack
FUN_ffffffff8107f7f5,0x3c,0xffffffff830c7c15,"MOV byte ptr [0xffffffff830c7c15],0x1",write .data
FUN_ffffffff8107f7f5,0x43,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
FUN_ffffffff8107f87b,-0x87,,RET,ret
FUN_ffffffff8107f87b,-0x2d,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
FUN_ffffffff8107f87b,0x31,0xffffffff830c7c14,"MOV byte ptr [0xffffffff830c7c14],0x1",write .data
FUN_ffffffff8107f87b,0x38,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
FUN_ffffffff8107f87b,0x44,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kvm_send_ipi_mask_allbutself,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_send_ipi_mask_allbutself,0x38,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
kvm_send_ipi_mask_allbutself,0x48,0xffffffff8107f600,CALL 0xffffffff8107f600,direct call
kvm_send_ipi_mask_allbutself,0x51,,RET,ret
kvm_send_ipi_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_send_ipi_mask,0x9,0xffffffff8107f600,CALL 0xffffffff8107f600,direct call
kvm_send_ipi_mask,0xf,,RET,ret
__sysvec_kvm_asyncpf_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sysvec_kvm_asyncpf_interrupt,0x1b,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RDI",write other [TODO]
__sysvec_kvm_asyncpf_interrupt,0x28,ctx->rax,CALL qword ptr [RAX],in-direct call
__sysvec_kvm_asyncpf_interrupt,0x3c,ctx->gs + 0x30b68,"MOV qword ptr GS:[0x30b68],RBX",write other [TODO]
__sysvec_kvm_asyncpf_interrupt,0x49,,RET,ret
__sysvec_kvm_asyncpf_interrupt,0x51,0xffffffff8107f1c0,CALL 0xffffffff8107f1c0,direct call
__sysvec_kvm_asyncpf_interrupt,0x62,ctx->gs + 0x330c4,"MOV dword ptr GS:[0x330c4],0x0",write other [TODO]
__sysvec_kvm_asyncpf_interrupt,0x6d,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_arch_para_features,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_arch_para_features,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
kvm_arch_para_features,0x2a,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],0x0",write stack
kvm_arch_para_features,0x39,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],EAX",write stack
kvm_arch_para_features,0x44,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
kvm_arch_para_features,0x5d,,RET,ret
kvm_arch_para_features,0x5e,0xffffffff8107f320,CALL 0xffffffff8107f320,direct call
kvm_arch_para_features,0x63,0xffffffff82e4b720,"MOV dword ptr [0xffffffff82e4b720],EAX",write .data
kvm_arch_para_features,0x6b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kvm_guest_cpu_offline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_guest_cpu_offline,0x20,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_guest_cpu_offline,0x26,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
kvm_guest_cpu_offline,0x33,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
kvm_guest_cpu_offline,0x4e,0xffffffff81080140,CALL 0xffffffff81080140,direct call
kvm_guest_cpu_offline,0x58,,RET,ret
kvm_guest_cpu_offline,0x63,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_guest_cpu_offline,0x69,ctx->gs + 0x33100,"MOV dword ptr GS:[0x33100],0x0",write other [TODO]
kvm_guest_cpu_offline,0x7a,0xffffffff8107f110,CALL 0xffffffff8107f110,direct call
kvm_guest_cpu_offline,0x7f,0xffffffff81080140,CALL 0xffffffff81080140,direct call
kvm_guest_cpu_offline,0x89,,RET,ret
kvm_guest_cpu_offline,0xb0,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_guest_cpu_offline,0xc2,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_crash_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_crash_shutdown,0x13,0xffffffff8107fa30,CALL 0xffffffff8107fa30,direct call
kvm_crash_shutdown,0x1b,0xffffffff81079490,CALL 0xffffffff81079490,direct call
kvm_crash_shutdown,0x25,,RET,ret
kvm_cpu_down_prepare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_cpu_down_prepare,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
kvm_cpu_down_prepare,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
kvm_cpu_down_prepare,0x1b,0xffffffff8107fa30,CALL 0xffffffff8107fa30,direct call
kvm_cpu_down_prepare,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
kvm_cpu_down_prepare,0x32,,RET,ret
kvm_pv_guest_cpu_reboot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_pv_guest_cpu_reboot,0xe,0xffffffff8107fa30,CALL 0xffffffff8107fa30,direct call
kvm_pv_guest_cpu_reboot,0x14,,RET,ret
kvm_suspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_suspend,0xb,0xffffffff8107fa30,CALL 0xffffffff8107fa30,direct call
kvm_suspend,0x10,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
kvm_suspend,0x26,0xffffffff83444460,"MOV dword ptr [0xffffffff83444460],EAX",write .data
kvm_suspend,0x2f,,RET,ret
kvm_suspend,0x35,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
kvm_suspend,0x41,0xffffffff83444460,"MOV dword ptr [0xffffffff83444460],EAX",write .data
kvm_suspend,0x4a,,RET,ret
kvm_guest_cpu_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_guest_cpu_init,0xd,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
kvm_guest_cpu_init,0x25,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
kvm_guest_cpu_init,0x3d,,RET,ret
kvm_guest_cpu_init,0x5b,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
kvm_guest_cpu_init,0x71,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_guest_cpu_init,0x81,,RET,ret
kvm_guest_cpu_init,0x82,ctx->gs + 0x33040,"MOV qword ptr GS:[0x33040],0x0",write other [TODO]
kvm_guest_cpu_init,0x9d,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
kvm_guest_cpu_init,0xb3,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_guest_cpu_init,0xd0,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
kvm_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_cpu_online,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
kvm_cpu_online,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
kvm_cpu_online,0x19,0xffffffff8107fbe0,CALL 0xffffffff8107fbe0,direct call
kvm_cpu_online,0x23,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
kvm_cpu_online,0x30,,RET,ret
kvm_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kvm_resume,0x10,0xffffffff8107fd70,CALL 0xffffffff8107fd70,direct call
kvm_resume,0x15,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
kvm_resume,0x2a,,RET,ret
kvm_resume,0x35,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_resume,0x3c,,RET,ret
arch_haltpoll_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_haltpoll_enable,0xe,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
arch_haltpoll_enable,0x49,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
arch_haltpoll_enable,0x53,,RET,ret
arch_haltpoll_enable,0xc12c63,0xffffffff830c7c13,"MOV byte ptr [0xffffffff830c7c13],0x1",write .data
arch_haltpoll_enable,0xc12c6a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_haltpoll_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_haltpoll_disable,0xe,0xffffffff8107f9c0,CALL 0xffffffff8107f9c0,direct call
arch_haltpoll_disable,0x29,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
arch_haltpoll_disable,0x33,,RET,ret
kvm_set_wallclock,0x5,,RET,ret
kvm_cs_enable,0x9,0xffffffff83115910,"MOV dword ptr [0xffffffff83115910],EAX",write .data
kvm_cs_enable,0x11,,RET,ret
kvm_save_sched_clock_state,0x0,,RET,ret
kvmclock_setup_percpu,0x3e,ctx->rsi + ctx->rdx * 0x1,"MOV qword ptr [RSI + RDX*0x1],RCX",write other [TODO]
kvmclock_setup_percpu,0x44,,RET,ret
kvmclock_setup_percpu,0x5d,ctx->rsi + ctx->rdx * 0x1,"MOV qword ptr [RSI + RDX*0x1],RAX",write other [TODO]
kvmclock_setup_percpu,0x6b,,RET,ret
kvm_get_tsc_khz,0x1c,0xffffffff81080910,CALL 0xffffffff81080910,direct call
kvm_get_tsc_khz,0x22,,RET,ret
kvm_register_clock,0x1b,,RET,ret
kvm_register_clock,0x1c,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
kvm_register_clock,0x3a,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_register_clock,0x46,,RET,ret
kvm_restore_sched_clock_state,0xb,0xffffffff8107ff70,CALL 0xffffffff8107ff70,direct call
kvm_restore_sched_clock_state,0x11,,RET,ret
kvm_setup_secondary_clock,0xb,0xffffffff8107ff70,CALL 0xffffffff8107ff70,direct call
kvm_setup_secondary_clock,0x11,,RET,ret
kvm_get_wallclock,0x10,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
kvm_get_wallclock,0x24,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
kvm_get_wallclock,0x43,0xffffffff81080a60,CALL 0xffffffff81080a60,direct call
kvm_get_wallclock,0x56,,RET,ret
kvm_get_wallclock,0x57,0xffffffff82000810,CALL 0xffffffff82000810,direct call
kvm_get_wallclock,0x61,,RET,ret
kvm_clock_get_cycles,0x13,0xffffffff81080990,CALL 0xffffffff81080990,direct call
kvm_clock_get_cycles,0x22,,RET,ret
kvm_clock_get_cycles,0x23,0xffffffff82000818,CALL 0xffffffff82000818,direct call
kvm_clock_get_cycles,0x29,,RET,ret
kvm_sched_clock_read,0x13,0xffffffff81080990,CALL 0xffffffff81080990,direct call
kvm_sched_clock_read,0x29,,RET,ret
kvm_sched_clock_read,0x2a,0xffffffff82000818,CALL 0xffffffff82000818,direct call
kvm_sched_clock_read,0x37,,RET,ret
kvm_check_and_clear_guest_paused,0x1c,,RET,ret
kvm_check_and_clear_guest_paused,0x21,ctx->rax + 0x1d,"MOV byte ptr [RAX + 0x1d],DL",write other [TODO]
kvm_check_and_clear_guest_paused,0x27,0xffffffff81080940,CALL 0xffffffff81080940,direct call
kvm_check_and_clear_guest_paused,0x32,,RET,ret
kvmclock_disable,0xe,,RET,ret
native_read_cr0,0x3,,RET,ret
__native_read_cr3,0x3,,RET,ret
native_write_cr3,0x3,,RET,ret
native_wbinvd,0x2,,RET,ret
native_cpuid,0x15,ctx->r8,"MOV dword ptr [R8],EAX",write other [TODO]
native_cpuid,0x18,ctx->rsi,"MOV dword ptr [RSI],EBX",write other [TODO]
native_cpuid,0x1e,ctx->rdi,"MOV dword ptr [RDI],ECX",write other [TODO]
native_cpuid,0x20,ctx->r9,"MOV dword ptr [R9],EDX",write other [TODO]
native_cpuid,0x24,,RET,ret
native_load_sp0,0x0,ctx->gs + 0x6004,"MOV qword ptr GS:[0x6004],RDI",write other [TODO]
native_load_sp0,0x8,,RET,ret
native_set_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_set_pte,0x6,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
native_set_pte,0xd,,RET,ret
native_set_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_set_pmd,0x6,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
native_set_pmd,0xd,,RET,ret
native_set_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_set_pud,0x6,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
native_set_pud,0xd,,RET,ret
FUN_ffffffff81080215,0x0,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
FUN_ffffffff81080215,0x3,,RET,ret
native_set_pgd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_set_pgd,0x6,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
native_set_pgd,0xd,,RET,ret
__ptep_modify_prot_start,0x5,,RET,ret
__ptep_modify_prot_commit,0xa,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__ptep_modify_prot_commit,0x11,,RET,ret
native_load_gdt,0x3,,RET,ret
native_load_idt,0x3,,RET,ret
native_store_tr,0x3,,RET,ret
native_load_tls,0x14,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RDX",write other [TODO]
native_load_tls,0x1c,ctx->rax + 0x68,"MOV qword ptr [RAX + 0x68],RDX",write other [TODO]
native_load_tls,0x24,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],RDX",write other [TODO]
native_load_tls,0x28,,RET,ret
__paravirt_pgd_alloc,0x2,,RET,ret
native_tss_invalidate_io_bitmap,0x0,ctx->wordctx->ptrctx->gs + 0x6066,"MOV word ptr GS:[0x6066],0x4088",write other [TODO]
native_tss_invalidate_io_bitmap,0xa,,RET,ret
_paravirt_ident_64,0x3,,RET,ret
native_steal_clock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_steal_clock,0xc,,RET,ret
native_read_pmc,0x1e,,RET,ret
native_write_msr_safe,0xa,,RET,ret
native_read_msr_safe,0xc,ctx->rsi,"MOV dword ptr [RSI],EDI",write other [TODO]
native_read_msr_safe,0x22,,RET,ret
native_read_msr,0x1e,,RET,ret
native_write_idt_entry,0xe,ctx->rdi + ctx->rsi * 0x1,"MOV qword ptr [RDI + RSI*0x1],RAX",write other [TODO]
native_write_idt_entry,0x12,ctx->rdi + ctx->rsi * 0x1 + 0x8,"MOV qword ptr [RDI + RSI*0x1 + 0x8],RDX",write other [TODO]
native_write_idt_entry,0x17,,RET,ret
native_write_ldt_entry,0x6,ctx->rdi + ctx->rsi * 0x8,"MOV qword ptr [RDI + RSI*0x8],RAX",write other [TODO]
native_write_ldt_entry,0xa,,RET,ret
native_write_gdt_entry,0x24,ctx->rsi,"MOV qword ptr [RSI],RCX",write other [TODO]
native_write_gdt_entry,0x2c,ctx->rsi + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RSI + RAX*0x1 + -0x8],RCX",write other [TODO]
native_write_gdt_entry,0x57,ctx->rcx + ctx->rdi * 0x1,"MOV qword ptr [RCX + RDI*0x1],R8",write other [TODO]
native_write_gdt_entry,0x5f,,RET,ret
native_load_gs_index,0x5,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_load_gs_index,0xe,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
native_load_gs_index,0x14,0xffffffff81e01130,CALL 0xffffffff81e01130,direct call
native_load_gs_index,0x1e,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
native_load_gs_index,0x29,,RET,ret
native_load_tr_desc,0x13,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
native_load_tr_desc,0x28,0xffffffff81d03730,CALL 0xffffffff81d03730,direct call
native_load_tr_desc,0x4f,,RET,ret
native_load_tr_desc,0x53,0xffffffff8104b6b0,CALL 0xffffffff8104b6b0,direct call
native_load_tr_desc,0x63,0xffffffff8104b6f0,CALL 0xffffffff8104b6f0,direct call
native_load_tr_desc,0x6a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
native_write_msr,0x8,,RET,ret
tlb_remove_page,0xe,0xffffffff812d7e90,CALL 0xffffffff812d7e90,direct call
tlb_remove_page,0x1c,,RET,ret
tlb_remove_page,0x20,0xffffffff812d81d0,CALL 0xffffffff812d81d0,direct call
tlb_remove_page,0x2a,,RET,ret
native_set_ldt,0x11,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
native_set_ldt,0x2e,,RET,ret
native_set_ldt,0x39,ctx->wordctx->ptrctx->rbp - 0x16,"MOV word ptr [RBP + -0x16],DI",write stack
native_set_ldt,0x41,ctx->wordctx->ptrctx->rbp - 0x18,"MOV word ptr [RBP + -0x18],AX",write stack
native_set_ldt,0x4f,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],0x0",write stack
native_set_ldt,0x5a,ctx->rbp - 0x14,"MOV byte ptr [RBP + -0x14],SIL",write stack
native_set_ldt,0x65,ctx->wordctx->ptrctx->rbp - 0x13,"MOV word ptr [RBP + -0x13],AX",write stack
native_set_ldt,0x74,ctx->rbp - 0x10,"MOV dword ptr [RBP + -0x10],EDI",write stack
native_set_ldt,0x85,ctx->rbp - 0x11,"MOV byte ptr [RBP + -0x11],AL",write stack
native_set_ldt,0x97,0xffffffff82e4b8d0,CALL qword ptr [0xffffffff82e4b8d0],in-direct call
native_set_ldt,0xaa,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
paravirt_patch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_patch,0x29,ctx->rsi,"MOV byte ptr [RSI],0xe8",write other [TODO]
paravirt_patch,0x35,ctx->rsi + 0x1,"MOV dword ptr [RSI + 0x1],EAX",write other [TODO]
paravirt_patch,0x3c,,RET,ret
paravirt_set_sched_clock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_set_sched_clock,0x1a,0xffffffff81262af0,CALL 0xffffffff81262af0,direct call
paravirt_set_sched_clock,0x20,,RET,ret
paravirt_disable_iospace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_disable_iospace,0x17,0xffffffff810adb70,CALL 0xffffffff810adb70,direct call
paravirt_disable_iospace,0x1d,,RET,ret
paravirt_enter_lazy_mmu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_enter_lazy_mmu,0x14,ctx->gs + 0x1ff58,"MOV dword ptr GS:[0x1ff58],0x1",write other [TODO]
paravirt_enter_lazy_mmu,0x20,,RET,ret
paravirt_leave_lazy_mmu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_leave_lazy_mmu,0x15,ctx->gs + 0x1ff58,"MOV dword ptr GS:[0x1ff58],0x0",write other [TODO]
paravirt_leave_lazy_mmu,0x21,,RET,ret
paravirt_flush_lazy_mmu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_flush_lazy_mmu,0x34,,RET,ret
paravirt_flush_lazy_mmu,0x35,0xffffffff82e4bac0,CALL qword ptr [0xffffffff82e4bac0],in-direct call
paravirt_flush_lazy_mmu,0x3b,0xffffffff82e4bab8,CALL qword ptr [0xffffffff82e4bab8],in-direct call
paravirt_flush_lazy_mmu,0x43,0xffffffff82000810,CALL 0xffffffff82000810,direct call
paravirt_flush_lazy_mmu,0x49,,RET,ret
paravirt_start_context_switch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_start_context_switch,0x32,ctx->gs + 0x1ff58,"MOV dword ptr GS:[0x1ff58],0x2",write other [TODO]
paravirt_start_context_switch,0x42,,RET,ret
paravirt_start_context_switch,0x43,0xffffffff82e4bac0,CALL qword ptr [0xffffffff82e4bac0],in-direct call
paravirt_start_context_switch,0x50,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
paravirt_end_context_switch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_end_context_switch,0x23,ctx->gs + 0x1ff58,"MOV dword ptr GS:[0x1ff58],0x0",write other [TODO]
paravirt_end_context_switch,0x37,,RET,ret
paravirt_end_context_switch,0x38,0xffffffff82e4bab8,CALL qword ptr [0xffffffff82e4bab8],in-direct call
paravirt_end_context_switch,0x3f,,RET,ret
paravirt_end_context_switch,0x40,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
paravirt_get_lazy_mode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
paravirt_get_lazy_mode,0x20,,RET,ret
paravirt_get_lazy_mode,0x24,,RET,ret
__raw_callee_save___native_queued_spin_unlock,0x10,0xffffffff810808b0,CALL 0xffffffff810808b0,direct call
__raw_callee_save___native_queued_spin_unlock,0x22,,RET,ret
__raw_callee_save___native_vcpu_is_preempted,0x10,0xffffffff810808d0,CALL 0xffffffff810808d0,direct call
__raw_callee_save___native_vcpu_is_preempted,0x22,,RET,ret
__native_queued_spin_unlock,0x0,ctx->rdi,"MOV byte ptr [RDI],0x0",write other [TODO]
__native_queued_spin_unlock,0x3,,RET,ret
pv_is_native_spin_unlock,0xe,,RET,ret
__native_vcpu_is_preempted,0x2,,RET,ret
pv_is_native_vcpu_is_preempted,0xe,,RET,ret
pvclock_get_pvti_cpu0_va,0x7,,RET,ret
pvclock_set_flags,0x0,0xffffffff83117f68,"MOV byte ptr [0xffffffff83117f68],DIL",write .data
pvclock_set_flags,0x7,,RET,ret
pvclock_tsc_khz,0x2b,,RET,ret
pvclock_touch_watchdogs,0x4,0xffffffff811ad650,CALL 0xffffffff811ad650,direct call
pvclock_touch_watchdogs,0x9,0xffffffff8115b490,CALL 0xffffffff8115b490,direct call
pvclock_touch_watchdogs,0xe,0xffffffff8113df20,CALL 0xffffffff8113df20,direct call
pvclock_touch_watchdogs,0x13,0xffffffff811ac8b0,CALL 0xffffffff811ac8b0,direct call
pvclock_touch_watchdogs,0x19,,RET,ret
pvclock_resume,0x0,0xffffffff83444490,"MOV qword ptr [0xffffffff83444490],0x0",write .data
pvclock_resume,0xb,,RET,ret
pvclock_read_flags,0x17,,RET,ret
pvclock_clocksource_read,0x99,,RET,ret
pvclock_clocksource_read,0x9e,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
pvclock_clocksource_read,0xa2,0xffffffff811ad650,CALL 0xffffffff811ad650,direct call
pvclock_clocksource_read,0xa7,0xffffffff8115b490,CALL 0xffffffff8115b490,direct call
pvclock_clocksource_read,0xac,0xffffffff8113df20,CALL 0xffffffff8113df20,direct call
pvclock_clocksource_read,0xb1,0xffffffff811ac8b0,CALL 0xffffffff811ac8b0,direct call
pvclock_read_wallclock,0x2d,0xffffffff81080990,CALL 0xffffffff81080990,direct call
pvclock_read_wallclock,0x6f,0xffffffff8114fe20,CALL 0xffffffff8114fe20,direct call
pvclock_read_wallclock,0x7a,,RET,ret
pvclock_set_pvti_cpu0_va,0xa,0xffffffff83117f60,"MOV qword ptr [0xffffffff83117f60],RDI",write .data
pvclock_set_pvti_cpu0_va,0x11,,RET,ret
found,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
found,0xf,,RET,ret
jailhouse_get_tsc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
jailhouse_get_tsc,0x10,,RET,ret
jailhouse_get_wallclock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
jailhouse_get_wallclock,0x6,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
jailhouse_get_wallclock,0xd,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
jailhouse_get_wallclock,0x19,,RET,ret
jailhouse_serial_fixup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
jailhouse_serial_fixup,0x30,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],0x0",write other [TODO]
jailhouse_serial_fixup,0x3d,,RET,ret
jailhouse_cpuid_base.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
jailhouse_cpuid_base.part.0,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
jailhouse_cpuid_base.part.0,0x41,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R12D",write stack
jailhouse_cpuid_base.part.0,0x4f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
jailhouse_cpuid_base.part.0,0x59,0xffffffff82e4b910,CALL qword ptr [0xffffffff82e4b910],in-direct call
jailhouse_cpuid_base.part.0,0x97,,RET,ret
jailhouse_cpuid_base.part.0,0xa0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
jailhouse_paravirt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
jailhouse_paravirt,0x21,,RET,ret
jailhouse_paravirt,0x26,0xffffffff81080bd0,CALL 0xffffffff81080bd0,direct call
jailhouse_paravirt,0x31,,RET,ret
start_periodic_check_for_corruption,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
start_periodic_check_for_corruption,0x1b,,RET,ret
start_periodic_check_for_corruption,0x2c,,RET,ret
check_corruption,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_corruption,0x91,0xffffffff81152d60,CALL 0xffffffff81152d60,direct call
check_corruption,0xac,0xffffffff810c65a0,CALL 0xffffffff810c65a0,direct call
check_corruption,0xb9,,RET,ret
check_corruption,0xca,0xffffffff830c7c17,"MOV byte ptr [0xffffffff830c7c17],0x1",write .data
check_corruption,0xd1,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
default_pre_xol_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_pre_xol_op,0x31,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
default_pre_xol_op,0x3d,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
default_pre_xol_op,0x43,,RET,ret
emulate_push_stack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emulate_push_stack,0x1c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
emulate_push_stack,0x5b,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
emulate_push_stack,0x6a,0xffffffff81605960,CALL 0xffffffff81605960,direct call
emulate_push_stack,0x74,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],R12",write other [TODO]
emulate_push_stack,0x87,,RET,ret
push_emulate_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
push_emulate_op,0x1d,0xffffffff81080e30,CALL 0xffffffff81080e30,direct call
push_emulate_op,0x42,,RET,ret
branch_post_xol_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branch_post_xol_op,0x46,,RET,ret
branch_emulate_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
branch_emulate_op,0x1c,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RBX",write other [TODO]
branch_emulate_op,0x4d,0xffffffff81080e30,CALL 0xffffffff81080e30,direct call
branch_emulate_op,0x5f,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RBX",write other [TODO]
branch_emulate_op,0x72,,RET,ret
default_post_xol_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_post_xol_op,0x48,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
default_post_xol_op,0x64,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],RAX",write other [TODO]
default_post_xol_op,0x76,ctx->r12 + 0x14,"MOV dword ptr [R12 + 0x14],0x1",write other [TODO]
default_post_xol_op,0x86,,RET,ret
default_post_xol_op,0xc5,0xffffffff81080e30,CALL 0xffffffff81080e30,direct call
default_abort_op,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
default_abort_op,0x37,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
default_abort_op,0x3b,,RET,ret
arch_uprobe_analyze_insn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_analyze_insn,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_uprobe_analyze_insn,0x4a,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
arch_uprobe_analyze_insn,0x68,ctx->edi,"MOVZX EDI,byte ptr [R15]",write other [TODO]
arch_uprobe_analyze_insn,0x71,0xffffffff81c8a7a0,CALL 0xffffffff81c8a7a0,direct call
arch_uprobe_analyze_insn,0x12f,0xffffffff81c8c600,CALL 0xffffffff81c8c600,direct call
arch_uprobe_analyze_insn,0x1bc,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],R8B",write other [TODO]
arch_uprobe_analyze_insn,0x1da,ctx->rbx + ctx->rdx * 0x1,"MOV byte ptr [RBX + RDX*0x1],AL",write other [TODO]
arch_uprobe_analyze_insn,0x1e8,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],AL",write other [TODO]
arch_uprobe_analyze_insn,0x1ed,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],-0x7ddf0100",write other [TODO]
arch_uprobe_analyze_insn,0x1f5,ctx->rbx + 0x19,"MOV byte ptr [RBX + 0x19],DL",write other [TODO]
arch_uprobe_analyze_insn,0x229,,RET,ret
arch_uprobe_analyze_insn,0x262,ctx->rbx + 0x1d,"MOV byte ptr [RBX + 0x1d],DL",write other [TODO]
arch_uprobe_analyze_insn,0x265,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],-0x7ddf0120",write other [TODO]
arch_uprobe_analyze_insn,0x26d,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],AL",write other [TODO]
arch_uprobe_analyze_insn,0x273,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
arch_uprobe_analyze_insn,0x2b8,ctx->rbx + 0x19,"MOV byte ptr [RBX + 0x19],AL",write other [TODO]
arch_uprobe_analyze_insn,0x2bd,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],SIL",write other [TODO]
arch_uprobe_analyze_insn,0x2c1,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],-0x7ddf0140",write other [TODO]
arch_uprobe_analyze_insn,0x321,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
arch_uprobe_analyze_insn,0x32f,ctx->wordctx->ptrctx->rcx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RCX + RAX*0x1 + -0x2],SI",write other [TODO]
arch_uprobe_analyze_insn,0x390,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
arch_uprobe_analyze_insn,0x397,ctx->rcx + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RCX + RAX*0x1 + -0x8],0x0",write other [TODO]
arch_uprobe_analyze_insn,0x462,ctx->rax,"MOV dword ptr [RAX],0x0",write other [TODO]
arch_uprobe_analyze_insn,0x468,ctx->rcx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RCX + RAX*0x1 + -0x4],0x0",write other [TODO]
arch_uprobe_analyze_insn,0x493,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_uprobe_pre_xol,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_pre_xol,0x2c,ctx->rax,CALL RAX,in-direct call
arch_uprobe_pre_xol,0x40,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
arch_uprobe_pre_xol,0x4e,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],EAX",write other [TODO]
arch_uprobe_pre_xol,0x58,ctx->rdi + 0x1530,"MOV qword ptr [RDI + 0x1530],RAX",write other [TODO]
arch_uprobe_pre_xol,0x6d,ctx->r12 + 0x14,"MOV dword ptr [R12 + 0x14],EAX",write other [TODO]
arch_uprobe_pre_xol,0x8d,,RET,ret
arch_uprobe_pre_xol,0x90,0xffffffff81048e60,CALL 0xffffffff81048e60,direct call
arch_uprobe_xol_was_trapped,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_xol_was_trapped,0x19,,RET,ret
arch_uprobe_post_xol,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_post_xol,0x42,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],RCX",write other [TODO]
arch_uprobe_post_xol,0x59,ctx->rax,CALL RAX,in-direct call
arch_uprobe_post_xol,0x64,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RDX",write other [TODO]
arch_uprobe_post_xol,0x8c,,RET,ret
arch_uprobe_post_xol,0xa2,0xffffffff810b8030,CALL 0xffffffff810b8030,direct call
arch_uprobe_exception_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_exception_notify,0x29,,RET,ret
arch_uprobe_exception_notify,0x2a,0xffffffff8127de70,CALL 0xffffffff8127de70,direct call
arch_uprobe_exception_notify,0x39,,RET,ret
arch_uprobe_exception_notify,0x3c,,RET,ret
arch_uprobe_exception_notify,0x3d,0xffffffff8127de00,CALL 0xffffffff8127de00,direct call
arch_uprobe_abort_xol,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_abort_xol,0x2c,ctx->rax,CALL RAX,in-direct call
arch_uprobe_abort_xol,0x3c,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],RDX",write other [TODO]
arch_uprobe_abort_xol,0x48,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
arch_uprobe_abort_xol,0x67,,RET,ret
arch_uprobe_skip_sstep,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uprobe_skip_sstep,0x1b,ctx->rax,CALL RAX,in-direct call
arch_uprobe_skip_sstep,0x2e,,RET,ret
arch_uprobe_skip_sstep,0x48,0xffffffff810b8030,CALL 0xffffffff810b8030,direct call
arch_uretprobe_hijack_return_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uretprobe_hijack_return_addr,0x17,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
arch_uretprobe_hijack_return_addr,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
arch_uretprobe_hijack_return_addr,0x72,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
arch_uretprobe_hijack_return_addr,0x7a,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
arch_uretprobe_hijack_return_addr,0x89,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
arch_uretprobe_hijack_return_addr,0xb0,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
arch_uretprobe_hijack_return_addr,0xbf,0xffffffff81605960,CALL 0xffffffff81605960,direct call
arch_uretprobe_hijack_return_addr,0xe7,,RET,ret
arch_uretprobe_hijack_return_addr,0x10b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_uretprobe_is_alive,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_uretprobe_is_alive,0x1f,,RET,ret
arch_uretprobe_is_alive,0x27,,RET,ret
perf_reg_value,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_reg_value,0x2a,,RET,ret
perf_reg_value,0x49,,RET,ret
perf_reg_validate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_reg_validate,0x1d,,RET,ret
perf_reg_validate,0x24,,RET,ret
perf_reg_abi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_reg_abi,0x34,,RET,ret
perf_get_regs_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
perf_get_regs_user,0x6e,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RSI",write other [TODO]
perf_get_regs_user,0x79,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RSI",write other [TODO]
perf_get_regs_user,0x81,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RSI",write other [TODO]
perf_get_regs_user,0x89,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RSI",write other [TODO]
perf_get_regs_user,0x91,ctx->rax + 0x68,"MOV qword ptr [RAX + 0x68],RSI",write other [TODO]
perf_get_regs_user,0x99,ctx->rax + 0x70,"MOV qword ptr [RAX + 0x70],RSI",write other [TODO]
perf_get_regs_user,0xa1,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RSI",write other [TODO]
perf_get_regs_user,0xa9,ctx->rax + 0x40,"MOV qword ptr [RAX + 0x40],RSI",write other [TODO]
perf_get_regs_user,0xb1,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],RSI",write other [TODO]
perf_get_regs_user,0xb9,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RSI",write other [TODO]
perf_get_regs_user,0xc1,ctx->rax + 0x78,"MOV qword ptr [RAX + 0x78],RSI",write other [TODO]
perf_get_regs_user,0xcc,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],RSI",write other [TODO]
perf_get_regs_user,0xda,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RSI",write other [TODO]
perf_get_regs_user,0xe8,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],RSI",write other [TODO]
perf_get_regs_user,0xf6,ctx->rax + 0xa0,"MOV qword ptr [RAX + 0xa0],RSI",write other [TODO]
perf_get_regs_user,0x101,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RSI",write other [TODO]
perf_get_regs_user,0x105,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],-0x1",write other [TODO]
perf_get_regs_user,0x10d,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],-0x1",write other [TODO]
perf_get_regs_user,0x115,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],-0x1",write other [TODO]
perf_get_regs_user,0x11d,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],-0x1",write other [TODO]
perf_get_regs_user,0x125,ctx->rax,"MOV qword ptr [RAX],-0x1",write other [TODO]
perf_get_regs_user,0x152,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
perf_get_regs_user,0x156,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
perf_get_regs_user,0x15a,,RET,ret
perf_get_regs_user,0x15b,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
perf_get_regs_user,0x189,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
perf_get_regs_user,0x18d,,RET,ret
perf_get_regs_user,0x18e,ctx->rcx,"MOV qword ptr [RCX],0x0",write other [TODO]
perf_get_regs_user,0x196,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],0x0",write other [TODO]
perf_get_regs_user,0x19e,,RET,ret
trace_pagefault_reg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
trace_pagefault_reg,0x10,0xffffffff8127ff20,CALL 0xffffffff8127ff20,direct call
trace_pagefault_reg,0x18,,RET,ret
trace_pagefault_unreg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
trace_pagefault_unreg,0x10,0xffffffff8127fa60,CALL 0xffffffff8127fa60,direct call
trace_pagefault_unreg,0x16,,RET,ret
sched_itmt_update_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sched_itmt_update_handler,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
sched_itmt_update_handler,0x2c,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sched_itmt_update_handler,0x50,0xffffffff810b0610,CALL 0xffffffff810b0610,direct call
sched_itmt_update_handler,0x69,0xffffffff8343d2f0,"MOV byte ptr [0xffffffff8343d2f0],0x1",write .data
sched_itmt_update_handler,0x70,0xffffffff8118c2e0,CALL 0xffffffff8118c2e0,direct call
sched_itmt_update_handler,0x7c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sched_itmt_update_handler,0x92,,RET,ret
sched_itmt_update_handler,0xa0,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sched_set_itmt_support,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sched_set_itmt_support,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sched_set_itmt_support,0x25,0xffffffff8140f280,CALL 0xffffffff8140f280,direct call
sched_set_itmt_support,0x2a,0xffffffff83444690,"MOV qword ptr [0xffffffff83444690],RAX",write .data
sched_set_itmt_support,0x36,0xffffffff83117f78,"MOV byte ptr [0xffffffff83117f78],0x1",write .data
sched_set_itmt_support,0x3d,0xffffffff83117f7c,"MOV dword ptr [0xffffffff83117f7c],0x1",write .data
sched_set_itmt_support,0x47,0xffffffff8343d2f0,"MOV byte ptr [0xffffffff8343d2f0],0x1",write .data
sched_set_itmt_support,0x4e,0xffffffff8118c2e0,CALL 0xffffffff8118c2e0,direct call
sched_set_itmt_support,0x5a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sched_set_itmt_support,0x62,,RET,ret
sched_set_itmt_support,0x6a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sched_set_itmt_support,0x75,,RET,ret
sched_clear_itmt_support,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sched_clear_itmt_support,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
sched_clear_itmt_support,0x25,0xffffffff83117f78,"MOV byte ptr [0xffffffff83117f78],0x0",write .data
sched_clear_itmt_support,0x31,0xffffffff8140d670,CALL 0xffffffff8140d670,direct call
sched_clear_itmt_support,0x36,0xffffffff83444690,"MOV qword ptr [0xffffffff83444690],0x0",write .data
sched_clear_itmt_support,0x52,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sched_clear_itmt_support,0x58,,RET,ret
sched_clear_itmt_support,0x59,0xffffffff83117f7c,"MOV dword ptr [0xffffffff83117f7c],0x0",write .data
sched_clear_itmt_support,0x63,0xffffffff8343d2f0,"MOV byte ptr [0xffffffff8343d2f0],0x1",write .data
sched_clear_itmt_support,0x6a,0xffffffff8118c2e0,CALL 0xffffffff8118c2e0,direct call
sched_clear_itmt_support,0x76,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
sched_clear_itmt_support,0x7c,,RET,ret
arch_asym_cpu_priority,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_asym_cpu_priority,0x1b,ctx->eax,"MOV EAX,dword ptr [RDX + RAX*0x1]",write other [TODO]
arch_asym_cpu_priority,0x1f,,RET,ret
sched_set_itmt_core_prio,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sched_set_itmt_core_prio,0x56,ctx->rdi + ctx->r12 * 0x1,"MOV dword ptr [RDI + R12*0x1],EAX",write other [TODO]
sched_set_itmt_core_prio,0x62,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
sched_set_itmt_core_prio,0x6f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
sched_set_itmt_core_prio,0x89,,RET,ret
umip_printk,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
umip_printk,0x3f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
umip_printk,0x43,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
umip_printk,0x47,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
umip_printk,0x54,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
umip_printk,0x5a,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
umip_printk,0x86,,RET,ret
umip_printk,0x87,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fixup_umip_exception,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fixup_umip_exception,0x24,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
fixup_umip_exception,0x2a,ctx->rbp - 0x49,"MOV qword ptr [RBP + -0x49],0x0",write stack
fixup_umip_exception,0x32,ctx->wordctx->ptrctx->rbp - 0x41,"MOV word ptr [RBP + -0x41],CX",write stack
fixup_umip_exception,0x45,0xffffffff81c8b940,CALL 0xffffffff81c8b940,direct call
fixup_umip_exception,0x5d,0xffffffff81c8ba20,CALL 0xffffffff81c8ba20,direct call
fixup_umip_exception,0x93,,RET,ret
fixup_umip_exception,0x9b,0xffffffff81c8c4d0,CALL 0xffffffff81c8c4d0,direct call
fixup_umip_exception,0xf4,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x10a,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x10f,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],0x40",write stack
fixup_umip_exception,0x137,ctx->wordctx->ptrctx->rbp - 0x49,"MOV word ptr [RBP + -0x49],AX",write stack
fixup_umip_exception,0x145,0xffffffff81c8b600,CALL 0xffffffff81c8b600,direct call
fixup_umip_exception,0x166,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
fixup_umip_exception,0x175,0xffffffff81605960,CALL 0xffffffff81605960,direct call
fixup_umip_exception,0x1d5,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x1eb,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x24e,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RCX",write stack
fixup_umip_exception,0x278,ctx->rbp - 0x47,"MOV qword ptr [RBP + -0x47],RCX",write stack
fixup_umip_exception,0x285,ctx->rdi + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RDI + RDX*0x1 + -0x8],RCX",write other [TODO]
fixup_umip_exception,0x2a9,ctx->rbx + ctx->rcx * 0x1,"MOV qword ptr [RBX + RCX*0x1],RDI",write other [TODO]
fixup_umip_exception,0x2b3,ctx->wordctx->ptrctx->rbp - 0x49,"MOV word ptr [RBP + -0x49],AX",write stack
fixup_umip_exception,0x2f1,ctx->rbp - 0x49,"MOV byte ptr [RBP + -0x49],AL",write stack
fixup_umip_exception,0x307,0xffffffff81c8b4a0,CALL 0xffffffff81c8b4a0,direct call
fixup_umip_exception,0x337,ctx->rax,"MOV byte ptr [RAX],DL",write other [TODO]
fixup_umip_exception,0x348,ctx->wordctx->ptrctx->rax + ctx->rbx * 0x1 - 0x2,"MOV word ptr [RAX + RBX*0x1 + -0x2],DX",write other [TODO]
fixup_umip_exception,0x36a,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x380,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x39c,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
fixup_umip_exception,0x3bf,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RAX",write stack
fixup_umip_exception,0x3c6,0xffffffff81113020,CALL 0xffffffff81113020,direct call
fixup_umip_exception,0x3e7,ctx->rbp - 0x47,"MOV byte ptr [RBP + -0x47],AL",write stack
fixup_umip_exception,0x3f8,ctx->wordctx->ptrctx->rdi + ctx->rdx * 0x1 - 0x2,"MOV word ptr [RDI + RDX*0x1 + -0x2],AX",write other [TODO]
fixup_umip_exception,0x40d,ctx->rbp - 0x49,"MOV qword ptr [RBP + -0x49],RAX",write stack
fixup_umip_exception,0x416,ctx->r14 + ctx->rbx * 0x1 - 0x8,"MOV qword ptr [R14 + RBX*0x1 + -0x8],RAX",write other [TODO]
fixup_umip_exception,0x42b,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
fixup_umip_exception,0x43c,ctx->r14 + 0x1528,"MOV qword ptr [R14 + 0x1528],R15",write other [TODO]
fixup_umip_exception,0x450,ctx->r14 + 0x1538,"MOV qword ptr [R14 + 0x1538],0x6",write other [TODO]
fixup_umip_exception,0x45b,ctx->r14 + 0x1530,"MOV qword ptr [R14 + 0x1530],0xe",write other [TODO]
fixup_umip_exception,0x466,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
fixup_umip_exception,0x481,0xffffffff810b70e0,CALL 0xffffffff810b70e0,direct call
fixup_umip_exception,0x4a9,0xffffffff81081f70,CALL 0xffffffff81081f70,direct call
fixup_umip_exception,0x4bf,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
fixup_umip_exception,0x4c7,ctx->rax + ctx->rbx * 0x1 - 0x8,"MOV qword ptr [RAX + RBX*0x1 + -0x8],RDX",write other [TODO]
fixup_umip_exception,0x4ee,ctx->rsi + ctx->rcx * 0x1,"MOV qword ptr [RSI + RCX*0x1],RDI",write other [TODO]
fixup_umip_exception,0x506,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RAX",write stack
fixup_umip_exception,0x518,ctx->rbp - 0x47,"MOV dword ptr [RBP + -0x47],EAX",write stack
fixup_umip_exception,0x51f,ctx->rdi + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [RDI + RDX*0x1 + -0x4],EAX",write other [TODO]
fixup_umip_exception,0x52e,ctx->rbp - 0x49,"MOV dword ptr [RBP + -0x49],EAX",write stack
fixup_umip_exception,0x535,ctx->r14 + ctx->rbx * 0x1 - 0x4,"MOV dword ptr [R14 + RBX*0x1 + -0x4],EAX",write other [TODO]
fixup_umip_exception,0x542,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
fixup_umip_exception,0x549,ctx->rax + ctx->rbx * 0x1 - 0x4,"MOV dword ptr [RAX + RBX*0x1 + -0x4],EDX",write other [TODO]
fixup_umip_exception,0x557,ctx->wordctx->ptrctx->r14 + ctx->rbx * 0x1 - 0x2,"MOV word ptr [R14 + RBX*0x1 + -0x2],AX",write other [TODO]
fixup_umip_exception,0x562,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
unwind_dump,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unwind_dump,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
unwind_dump,0x2a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
unwind_dump,0x32,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
unwind_dump,0x3a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
unwind_dump,0x42,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
unwind_dump,0x4a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
unwind_dump,0x75,,RET,ret
unwind_dump,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
unwind_get_return_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unwind_get_return_address,0xd,,RET,ret
unwind_get_return_address,0x1a,0xffffffff810cade0,CALL 0xffffffff810cade0,direct call
unwind_get_return_address,0x2c,,RET,ret
unwind_get_return_address,0x34,,RET,ret
update_stack_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_stack_state,0x1e,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
update_stack_state,0x34,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
update_stack_state,0x4f,ctx->r15 + 0x41,"MOV byte ptr [R15 + 0x41],0x1",write other [TODO]
update_stack_state,0x74,0xffffffff81039d50,CALL 0xffffffff81039d50,direct call
update_stack_state,0xd2,ctx->r15 + 0x68,"MOV qword ptr [R15 + 0x68],R14",write other [TODO]
update_stack_state,0xd6,ctx->r15 + 0x48,"MOV qword ptr [R15 + 0x48],0x0",write other [TODO]
update_stack_state,0xfa,ctx->rbp - 0x2c,"MOV byte ptr [RBP + -0x2c],R9B",write stack
update_stack_state,0xfe,0xffffffff811dddb0,CALL 0xffffffff811dddb0,direct call
update_stack_state,0x110,ctx->r15 + 0x58,"MOV qword ptr [R15 + 0x58],RAX",write other [TODO]
update_stack_state,0x11d,ctx->r15 + 0x50,"MOV qword ptr [R15 + 0x50],RBX",write other [TODO]
update_stack_state,0x137,,RET,ret
update_stack_state,0x151,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
update_stack_state,0x15a,ctx->r15 + 0x58,"MOV qword ptr [R15 + 0x58],0x0",write other [TODO]
update_stack_state,0x164,ctx->r15 + 0x48,"MOV qword ptr [R15 + 0x48],R13",write other [TODO]
update_stack_state,0x16c,ctx->r15 + 0x68,"MOV qword ptr [R15 + 0x68],0x0",write other [TODO]
update_stack_state,0x184,0xffffffff81209ec0,CALL 0xffffffff81209ec0,direct call
unwind_next_frame.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unwind_next_frame.part.0,0x71,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],0x0",write other [TODO]
unwind_next_frame.part.0,0x7f,0xffffffff81082640,CALL 0xffffffff81082640,direct call
unwind_next_frame.part.0,0x8c,ctx->rbx + 0x40,"MOV byte ptr [RBX + 0x40],0x1",write other [TODO]
unwind_next_frame.part.0,0x11f,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RSI",write other [TODO]
unwind_next_frame.part.0,0x128,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],0x0",write other [TODO]
unwind_next_frame.part.0,0x130,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
unwind_next_frame.part.0,0x13c,,RET,ret
unwind_next_frame,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unwind_next_frame,0xf,0xffffffff810827d0,CALL 0xffffffff810827d0,direct call
unwind_next_frame,0x15,,RET,ret
unwind_next_frame,0x18,,RET,ret
__unwind_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__unwind_start,0x1a,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
__unwind_start,0x25,ctx->rdi + 0x60,"MOV qword ptr [RDI + 0x60],0x0",write other [TODO]
__unwind_start,0x40,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RSI",write other [TODO]
__unwind_start,0x6f,0xffffffff81039d50,CALL 0xffffffff81039d50,direct call
__unwind_start,0x7f,0xffffffff81082640,CALL 0xffffffff81082640,direct call
__unwind_start,0x8f,0xffffffff810827d0,CALL 0xffffffff810827d0,direct call
__unwind_start,0xc9,,RET,ret
__unwind_start,0xd3,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],R13",write other [TODO]
unwind_get_return_address_ptr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unwind_get_return_address_ptr,0x1d,,RET,ret
unwind_get_return_address_ptr,0x27,,RET,ret
unwind_get_return_address_ptr,0x2b,,RET,ret
sev_es_rd_ghcb_msr,0xe,,RET,ret
sev_es_ghcb_hv_call,0xd,ctx->rdi + 0xffc,"MOV dword ptr [RDI + 0xffc],0x0",write other [TODO]
sev_es_ghcb_hv_call,0x17,ctx->wordctx->ptrctx->rdi + 0xffa,"MOV word ptr [RDI + 0xffa],AX",write other [TODO]
sev_es_ghcb_hv_call,0x29,ctx->rdi + 0x390,"MOV qword ptr [RDI + 0x390],RDX",write other [TODO]
sev_es_ghcb_hv_call,0x3e,ctx->rdi + 0x398,"MOV qword ptr [RDI + 0x398],RCX",write other [TODO]
sev_es_ghcb_hv_call,0x4e,ctx->rdi + 0x3a0,"MOV qword ptr [RDI + 0x3a0],R8",write other [TODO]
sev_es_ghcb_hv_call,0x9d,,RET,ret
sev_es_ghcb_hv_call,0xd2,ctx->rsi + 0x78,"MOV qword ptr [RSI + 0x78],RDX",write other [TODO]
sev_es_ghcb_hv_call,0xe5,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
snp_issue_guest_request,0x29,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
snp_issue_guest_request,0x2f,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
snp_issue_guest_request,0x45,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
snp_issue_guest_request,0x4e,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
snp_issue_guest_request,0x5b,0xffffffff81d031c0,CALL 0xffffffff81d031c0,direct call
snp_issue_guest_request,0x72,ctx->rax + 0x390,"MOV qword ptr [RAX + 0x390],0x0",write other [TODO]
snp_issue_guest_request,0x89,ctx->rdi + 0x3f0,"MOV qword ptr [RDI + 0x3f0],0x0",write other [TODO]
snp_issue_guest_request,0x94,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
snp_issue_guest_request,0xb6,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
snp_issue_guest_request,0xe9,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
snp_issue_guest_request,0xfa,0xffffffff81d03260,CALL 0xffffffff81d03260,direct call
snp_issue_guest_request,0x129,,RET,ret
snp_issue_guest_request,0x12a,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
snp_issue_guest_request,0x144,ctx->rdi + 0x1f8,"MOV qword ptr [RDI + 0x1f8],RDX",write other [TODO]
snp_issue_guest_request,0x152,ctx->rdi + 0x318,"MOV qword ptr [RDI + 0x318],RDX",write other [TODO]
snp_issue_guest_request,0x165,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
snp_issue_guest_request,0x184,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
sev_es_play_dead,0x27,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sev_es_play_dead,0x2d,0xffffffff8106e7e0,CALL 0xffffffff8106e7e0,direct call
sev_es_play_dead,0x36,0xffffffff81d031c0,CALL 0xffffffff81d031c0,direct call
sev_es_play_dead,0x67,ctx->rsi + 0x390,"MOV qword ptr [RSI + 0x390],0x0",write other [TODO]
sev_es_play_dead,0x72,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
sev_es_play_dead,0x79,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
sev_es_play_dead,0x85,ctx->rsi + 0x390,"MOV qword ptr [RSI + 0x390],R12",write other [TODO]
sev_es_play_dead,0x90,ctx->rsi + 0x398,"MOV qword ptr [RSI + 0x398],0x0",write other [TODO]
sev_es_play_dead,0x9f,ctx->rsi + 0x3a0,"MOV qword ptr [RSI + 0x3a0],0x0",write other [TODO]
sev_es_play_dead,0xeb,0xffffffff81d03260,CALL 0xffffffff81d03260,direct call
sev_es_play_dead,0xf0,0xffffffff810002c0,CALL 0xffffffff810002c0,direct call
sev_es_play_dead,0x10e,,RET,ret
sev_es_play_dead,0x10f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pvalidate_pages,0x66,,RET,ret
vc_read_mem,0x25,0xffffffff81c8a760,CALL 0xffffffff81c8a760,direct call
vc_read_mem,0x2e,ctx->wordctx->ptrctx->rdi,"MOV word ptr [RDI],DX",write other [TODO]
vc_read_mem,0x32,,RET,ret
vc_read_mem,0x3c,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
vc_read_mem,0x45,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
vc_read_mem,0x49,,RET,ret
vc_read_mem,0x62,ctx->rbp - 0x4,"MOV dword ptr [RBP + -0x4],EAX",write stack
vc_read_mem,0x6c,0xffffffff830c7c1d,"MOV byte ptr [0xffffffff830c7c1d],0x1",write .data
vc_read_mem,0x73,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vc_read_mem,0x82,0xffffffff81c8a750,CALL 0xffffffff81c8a750,direct call
vc_read_mem,0x8b,ctx->rdi,"MOV byte ptr [RDI],DL",write other [TODO]
vc_read_mem,0x8e,,RET,ret
vc_read_mem,0x92,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
vc_read_mem,0x9b,ctx->rdi,"MOV dword ptr [RDI],EDX",write other [TODO]
vc_read_mem,0x9e,,RET,ret
vc_read_mem,0xa9,ctx->r8 + 0x78,"MOV qword ptr [R8 + 0x78],0xe",write other [TODO]
vc_read_mem,0xb1,ctx->r8 + 0x88,"MOV qword ptr [R8 + 0x88],RSI",write other [TODO]
vc_read_mem,0xca,ctx->r8 + 0x80,"MOV qword ptr [R8 + 0x80],RAX",write other [TODO]
vc_read_mem,0xd7,,RET,ret
vc_decode_insn,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
vc_decode_insn,0x2b,0xffffffff81c8b9b0,CALL 0xffffffff81c8b9b0,direct call
vc_decode_insn,0x4e,0xffffffff81c8ba20,CALL 0xffffffff81c8ba20,direct call
vc_decode_insn,0x81,,RET,ret
vc_decode_insn,0x92,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
vc_decode_insn,0xad,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
vc_decode_insn,0xbd,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],0xe",write other [TODO]
vc_decode_insn,0xc5,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],0x14",write other [TODO]
vc_decode_insn,0xd7,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
vc_decode_insn,0xe8,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],0xe",write other [TODO]
vc_decode_insn,0xf0,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],0x10",write other [TODO]
vc_decode_insn,0x102,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
vc_decode_insn,0x113,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],0xd",write other [TODO]
vc_decode_insn,0x120,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],0x0",write other [TODO]
vc_decode_insn,0x12b,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],0x0",write other [TODO]
vc_decode_insn,0x13b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
vc_write_mem,0x2b,0xffffffff81c8cd8f,CALL 0xffffffff81c8cd8f,direct call
vc_write_mem,0x3b,,RET,ret
vc_write_mem,0x48,0xffffffff81c8cdcf,CALL 0xffffffff81c8cdcf,direct call
vc_write_mem,0x5b,ctx->rdi + 0x78,"MOV qword ptr [RDI + 0x78],0xe",write other [TODO]
vc_write_mem,0x63,ctx->rdi + 0x88,"MOV qword ptr [RDI + 0x88],RSI",write other [TODO]
vc_write_mem,0x7c,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],RAX",write other [TODO]
vc_write_mem,0xa2,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
vc_write_mem,0xac,0xffffffff830c7c1e,"MOV byte ptr [0xffffffff830c7c1e],0x1",write .data
vc_write_mem,0xb3,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vc_write_mem,0xc8,0xffffffff81c8cd6f,CALL 0xffffffff81c8cd6f,direct call
vc_write_mem,0xdf,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
vmgexit_psc,0x20,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
vmgexit_psc,0x26,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
vmgexit_psc,0x2c,ctx->rbp - 0xd8,"MOV qword ptr [RBP + -0xd8],RAX",write stack
vmgexit_psc,0x33,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
vmgexit_psc,0x40,0xffffffff81d031c0,CALL 0xffffffff81d031c0,direct call
vmgexit_psc,0x7c,ctx->r15 + 0x800,"MOV qword ptr [R15 + 0x800],RAX",write other [TODO]
vmgexit_psc,0x9c,ctx->r15 + 0xfe8,"MOV qword ptr [R15 + 0xfe8],RAX",write other [TODO]
vmgexit_psc,0xa9,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
vmgexit_psc,0xbc,ctx->wordctx->ptrctx->rbp - 0xca,"MOV word ptr [RBP + -0xca],AX",write stack
vmgexit_psc,0xfb,ctx->r15 + 0x3a8,"MOV qword ptr [R15 + 0x3a8],RAX",write other [TODO]
vmgexit_psc,0x10c,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vmgexit_psc,0x125,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vmgexit_psc,0x139,0xffffffff81d03260,CALL 0xffffffff81d03260,direct call
vmgexit_psc,0x14b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
vmgexit_psc,0x178,,RET,ret
vmgexit_psc,0x1af,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vmgexit_psc,0x1d7,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vmgexit_psc,0x208,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_pages_state,0x2a,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
set_pages_state,0x4c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
set_pages_state,0x57,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
set_pages_state,0xf2,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
set_pages_state,0xf5,ctx->wordctx->ptrctx->r12 + 0x2,"MOV word ptr [R12 + 0x2],R13W",write other [TODO]
set_pages_state,0x110,0xffffffff812e44e0,CALL 0xffffffff812e44e0,direct call
set_pages_state,0x120,0xffffffff812e5d50,CALL 0xffffffff812e5d50,direct call
set_pages_state,0x12a,0xffffffff81083280,CALL 0xffffffff81083280,direct call
set_pages_state,0x143,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
set_pages_state,0x156,,RET,ret
set_pages_state,0x16d,0xffffffff81082b00,CALL 0xffffffff81082b00,direct call
snp_cpuid_hv.part.0,0xe,0xffffffff81082b00,CALL 0xffffffff81082b00,direct call
__sev_cpuid_hv,0x41,ctx->r8,"MOV dword ptr [R8],EDX",write other [TODO]
__sev_cpuid_hv,0x44,,RET,ret
__sev_cpuid_hv,0x4a,,RET,ret
sev_cpuid_hv,0x24,0xffffffff81083630,CALL 0xffffffff81083630,direct call
sev_cpuid_hv,0x2e,,RET,ret
sev_cpuid_hv,0x44,,RET,ret
sev_cpuid_hv,0x51,0xffffffff81083630,CALL 0xffffffff81083630,direct call
sev_cpuid_hv,0x66,0xffffffff81083630,CALL 0xffffffff81083630,direct call
sev_cpuid_hv,0x7b,0xffffffff81083630,CALL 0xffffffff81083630,direct call
sev_cpuid_hv,0x81,,RET,ret
snp_cpuid,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
snp_cpuid,0xba,ctx->r10 + 0x8,"MOV dword ptr [R10 + 0x8],EDX",write other [TODO]
snp_cpuid,0xc1,ctx->r10 + 0xc,"MOV dword ptr [R10 + 0xc],EAX",write other [TODO]
snp_cpuid,0xc8,ctx->r10 + 0x10,"MOV dword ptr [R10 + 0x10],EAX",write other [TODO]
snp_cpuid,0xcf,ctx->r10 + 0x14,"MOV dword ptr [R10 + 0x14],EAX",write other [TODO]
snp_cpuid,0xd6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
snp_cpuid,0xde,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
snp_cpuid,0xe6,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
snp_cpuid,0x10a,0xffffffff81083680,CALL 0xffffffff81083680,direct call
snp_cpuid,0x11a,ctx->r10 + 0x8,"MOV dword ptr [R10 + 0x8],EDX",write other [TODO]
snp_cpuid,0x122,ctx->r10 + 0xc,"MOV byte ptr [R10 + 0xc],DL",write other [TODO]
snp_cpuid,0x12a,ctx->r10 + 0x10,"MOV byte ptr [R10 + 0x10],DL",write other [TODO]
snp_cpuid,0x145,ctx->r10 + 0x10,"MOV dword ptr [R10 + 0x10],EAX",write other [TODO]
snp_cpuid,0x177,,RET,ret
snp_cpuid,0x1ad,ctx->r10 + 0x8,"MOV qword ptr [R10 + 0x8],0x0",write other [TODO]
snp_cpuid,0x1b5,ctx->r10 + 0x10,"MOV qword ptr [R10 + 0x10],0x0",write other [TODO]
snp_cpuid,0x1e8,0xffffffff81083680,CALL 0xffffffff81083680,direct call
snp_cpuid,0x1fd,ctx->r10 + 0xf,"MOV byte ptr [R10 + 0xf],DL",write other [TODO]
snp_cpuid,0x20f,ctx->r10 + 0x14,"MOV dword ptr [R10 + 0x14],EDX",write other [TODO]
snp_cpuid,0x30f,ctx->r10 + 0xc,"MOV dword ptr [R10 + 0xc],R11D",write other [TODO]
snp_cpuid,0x32e,ctx->r10 + 0x10,"MOV dword ptr [R10 + 0x10],EAX",write other [TODO]
snp_cpuid,0x33d,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
snp_cpuid,0x344,0xffffffff81083680,CALL 0xffffffff81083680,direct call
snp_cpuid,0x350,ctx->r10 + 0x14,"MOV dword ptr [R10 + 0x14],EDX",write other [TODO]
snp_cpuid,0x393,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snp_cpuid,0x398,0xffffffff81083610,CALL 0xffffffff81083610,direct call
snp_register_ghcb_early,0x44,,RET,ret
snp_register_ghcb_early,0x50,0xffffffff81082b00,CALL 0xffffffff81082b00,direct call
wakeup_cpu_via_vmgexit,0x1a,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
wakeup_cpu_via_vmgexit,0x54,0xffffffff81070680,CALL 0xffffffff81070680,direct call
wakeup_cpu_via_vmgexit,0x61,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
wakeup_cpu_via_vmgexit,0x71,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
wakeup_cpu_via_vmgexit,0xaf,,RET,ret
wakeup_cpu_via_vmgexit,0xd1,ctx->rax,"MOV RAX,qword ptr [RDX + RAX*0x1]",write other [TODO]
wakeup_cpu_via_vmgexit,0xd5,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
wakeup_cpu_via_vmgexit,0xda,0xffffffff81316150,CALL 0xffffffff81316150,direct call
wakeup_cpu_via_vmgexit,0xf3,0xffffffff812eb730,CALL 0xffffffff812eb730,direct call
wakeup_cpu_via_vmgexit,0xfd,0xffffffff812ef270,CALL 0xffffffff812ef270,direct call
wakeup_cpu_via_vmgexit,0x11c,ctx->rsp,"MOV qword ptr [RSP],R8",write stack
wakeup_cpu_via_vmgexit,0x13b,ctx->r8 + 0x34,"MOV dword ptr [R8 + 0x34],0xffff",write other [TODO]
wakeup_cpu_via_vmgexit,0x147,ctx->wordctx->ptrctx->r8 + 0x32,"MOV word ptr [R8 + 0x32],SI",write other [TODO]
wakeup_cpu_via_vmgexit,0x15b,ctx->wordctx->ptrctx->r8 + 0x12,"MOV word ptr [R8 + 0x12],DX",write other [TODO]
wakeup_cpu_via_vmgexit,0x169,ctx->r8 + 0x18,"MOV qword ptr [R8 + 0x18],R14",write other [TODO]
wakeup_cpu_via_vmgexit,0x179,ctx->wordctx->ptrctx->r8 + 0x10,"MOV word ptr [R8 + 0x10],AX",write other [TODO]
wakeup_cpu_via_vmgexit,0x181,ctx->r8 + 0x178,"MOV qword ptr [R8 + 0x178],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x18c,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],RDX",write other [TODO]
wakeup_cpu_via_vmgexit,0x190,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x193,ctx->r8 + 0x40,"MOV qword ptr [R8 + 0x40],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x197,ctx->r8 + 0x50,"MOV qword ptr [R8 + 0x50],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x19b,ctx->r8 + 0x20,"MOV qword ptr [R8 + 0x20],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x1a7,ctx->r8 + 0x48,"MOV qword ptr [R8 + 0x48],RDX",write other [TODO]
wakeup_cpu_via_vmgexit,0x1ab,ctx->r8 + 0x58,"MOV qword ptr [R8 + 0x58],RDX",write other [TODO]
wakeup_cpu_via_vmgexit,0x1af,ctx->r8 + 0x28,"MOV qword ptr [R8 + 0x28],RDX",write other [TODO]
wakeup_cpu_via_vmgexit,0x1b8,ctx->wordctx->ptrctx->r8 + 0x72,"MOV word ptr [R8 + 0x72],DI",write other [TODO]
wakeup_cpu_via_vmgexit,0x1bd,ctx->r8 + 0x14,"MOV dword ptr [R8 + 0x14],0xffff",write other [TODO]
wakeup_cpu_via_vmgexit,0x1c5,ctx->r8 + 0x64,"MOV dword ptr [R8 + 0x64],0xffff",write other [TODO]
wakeup_cpu_via_vmgexit,0x1cd,ctx->r8 + 0x74,"MOV dword ptr [R8 + 0x74],0xffff",write other [TODO]
wakeup_cpu_via_vmgexit,0x1d5,ctx->r8 + 0x84,"MOV dword ptr [R8 + 0x84],0xffff",write other [TODO]
wakeup_cpu_via_vmgexit,0x1e0,ctx->r8 + 0x94,"MOV dword ptr [R8 + 0x94],0xffff",write other [TODO]
wakeup_cpu_via_vmgexit,0x1f1,ctx->r15 + 0x148,"MOV qword ptr [R15 + 0x148],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x1fd,ctx->r15 + 0x168,"MOV qword ptr [R15 + 0x168],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x20e,ctx->r15 + 0x268,"MOV qword ptr [R15 + 0x268],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x215,ctx->wordctx->ptrctx->r15 + 0x92,"MOV word ptr [R15 + 0x92],R8W",write other [TODO]
wakeup_cpu_via_vmgexit,0x21d,ctx->r15 + 0x158,"MOV qword ptr [R15 + 0x158],0x60000010",write other [TODO]
wakeup_cpu_via_vmgexit,0x228,ctx->r15 + 0x160,"MOV qword ptr [R15 + 0x160],0x400",write other [TODO]
wakeup_cpu_via_vmgexit,0x233,ctx->r15 + 0x170,"MOV qword ptr [R15 + 0x170],0x2",write other [TODO]
wakeup_cpu_via_vmgexit,0x23e,ctx->r15 + 0x3e8,"MOV qword ptr [R15 + 0x3e8],0x1",write other [TODO]
wakeup_cpu_via_vmgexit,0x249,ctx->r15 + 0x408,"MOV dword ptr [R15 + 0x408],0x1f80",write other [TODO]
wakeup_cpu_via_vmgexit,0x254,ctx->wordctx->ptrctx->r15 + 0x40c,"MOV word ptr [R15 + 0x40c],R9W",write other [TODO]
wakeup_cpu_via_vmgexit,0x25c,ctx->wordctx->ptrctx->r15 + 0x410,"MOV word ptr [R15 + 0x410],R10W",write other [TODO]
wakeup_cpu_via_vmgexit,0x26b,ctx->r15 + 0xd0,"MOV qword ptr [R15 + 0xd0],0x1000",write other [TODO]
wakeup_cpu_via_vmgexit,0x27a,ctx->r15 + 0xca,"MOV byte ptr [R15 + 0xca],0x0",write other [TODO]
wakeup_cpu_via_vmgexit,0x282,ctx->r15 + 0x3b0,"MOV qword ptr [R15 + 0x3b0],RAX",write other [TODO]
wakeup_cpu_via_vmgexit,0x45b,0xffffffff830c7c1c,"MOV byte ptr [0xffffffff830c7c1c],0x1",write .data
wakeup_cpu_via_vmgexit,0x462,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
wakeup_cpu_via_vmgexit,0x491,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
FUN_ffffffff81083f0d,-0x9,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],RCX",write other [TODO]
FUN_ffffffff81083f0d,0x0,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
vc_do_mmio,0x1a,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDX",write stack
vc_do_mmio,0x2d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
vc_do_mmio,0x59,0xffffffff81c8b600,CALL 0xffffffff81c8b600,direct call
vc_do_mmio,0x6b,0xffffffff82e4b9c0,CALL qword ptr [0xffffffff82e4b9c0],in-direct call
vc_do_mmio,0xaf,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
vc_do_mmio,0xc3,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
vc_do_mmio,0xd9,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
vc_do_mmio,0x142,ctx->r13 + 0x3a8,"MOV qword ptr [R13 + 0x3a8],RAX",write other [TODO]
vc_do_mmio,0x149,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_do_mmio,0x16f,,RET,ret
vc_do_mmio,0x18d,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],RBX",write other [TODO]
vc_do_mmio,0x195,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],0x0",write other [TODO]
vc_do_mmio,0x1a1,ctx->r12 + 0x78,"MOV qword ptr [R12 + 0x78],0xe",write other [TODO]
vc_do_mmio,0x1bb,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RAX",write other [TODO]
vc_do_mmio,0x1e7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
vc_handle_exitcode,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
vc_handle_exitcode,0x57,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
vc_handle_exitcode,0x91,,RET,ret
vc_handle_exitcode,0xa3,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
vc_handle_exitcode,0xad,0xffffffff81c8bab0,CALL 0xffffffff81c8bab0,direct call
vc_handle_exitcode,0xe1,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
vc_handle_exitcode,0xe5,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x126,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
vc_handle_exitcode,0x136,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
vc_handle_exitcode,0x149,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EAX",write stack
vc_handle_exitcode,0x166,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EAX",write stack
vc_handle_exitcode,0x16b,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
vc_handle_exitcode,0x16f,0xffffffff81c8aee0,CALL 0xffffffff81c8aee0,direct call
vc_handle_exitcode,0x174,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
vc_handle_exitcode,0x181,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
vc_handle_exitcode,0x1d9,ctx->r14 + 0x3a8,"MOV qword ptr [R14 + 0x3a8],RAX",write other [TODO]
vc_handle_exitcode,0x1e0,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x1ff,ctx->rbp - 0xa8,"MOV dword ptr [RBP + -0xa8],EAX",write stack
vc_handle_exitcode,0x228,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
vc_handle_exitcode,0x23e,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
vc_handle_exitcode,0x29a,0xffffffff81c8b4a0,CALL 0xffffffff81c8b4a0,direct call
vc_handle_exitcode,0x2e9,ctx->r14 + 0x1f8,"MOV qword ptr [R14 + 0x1f8],R10",write other [TODO]
vc_handle_exitcode,0x300,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x319,ctx->rbx + 0x2008,"MOV qword ptr [RBX + 0x2008],R10",write other [TODO]
vc_handle_exitcode,0x339,ctx->rsi + 0x308,"MOV qword ptr [RSI + 0x308],RAX",write other [TODO]
vc_handle_exitcode,0x350,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x38d,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
vc_handle_exitcode,0x39c,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RDX",write other [TODO]
vc_handle_exitcode,0x3b4,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
vc_handle_exitcode,0x3bb,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
vc_handle_exitcode,0x3be,0xffffffff81083710,CALL 0xffffffff81083710,direct call
vc_handle_exitcode,0x3ed,ctx->r14 + 0x1f8,"MOV qword ptr [R14 + 0x1f8],RAX",write other [TODO]
vc_handle_exitcode,0x3fc,ctx->r14 + 0x308,"MOV qword ptr [R14 + 0x308],RAX",write other [TODO]
vc_handle_exitcode,0x427,ctx->r14 + 0x3e8,"MOV qword ptr [R14 + 0x3e8],RAX",write other [TODO]
vc_handle_exitcode,0x43e,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x49b,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
vc_handle_exitcode,0x4a6,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
vc_handle_exitcode,0x4b1,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
vc_handle_exitcode,0x4bc,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
vc_handle_exitcode,0x53d,0xffffffff81c8ae60,CALL 0xffffffff81c8ae60,direct call
vc_handle_exitcode,0x593,ctx->r14 + 0x1f8,"MOV qword ptr [R14 + 0x1f8],RAX",write other [TODO]
vc_handle_exitcode,0x5ab,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x5eb,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
vc_handle_exitcode,0x66d,ctx->r14 + 0x308,"MOV qword ptr [R14 + 0x308],RCX",write other [TODO]
vc_handle_exitcode,0x68d,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x6a4,ctx->r10 + 0x50,"MOV qword ptr [R10 + 0x50],RAX",write other [TODO]
vc_handle_exitcode,0x6af,ctx->r10 + 0x60,"MOV qword ptr [R10 + 0x60],RAX",write other [TODO]
vc_handle_exitcode,0x6cf,ctx->rsi + 0x1f8,"MOV qword ptr [RSI + 0x1f8],RAX",write other [TODO]
vc_handle_exitcode,0x6f0,ctx->rsi + 0xcb,"MOV byte ptr [RSI + 0xcb],AL",write other [TODO]
vc_handle_exitcode,0x708,ctx->rax,CALL RAX,in-direct call
vc_handle_exitcode,0x71a,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x745,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
vc_handle_exitcode,0x760,ctx->rax,CALL RAX,in-direct call
vc_handle_exitcode,0x781,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0x78e,ctx->rdi + 0x78,"MOV qword ptr [RDI + 0x78],0x11",write other [TODO]
vc_handle_exitcode,0x79c,ctx->rdi + 0x80,"MOV qword ptr [RDI + 0x80],0x0",write other [TODO]
vc_handle_exitcode,0x7be,0xffffffff81c8b4a0,CALL 0xffffffff81c8b4a0,direct call
vc_handle_exitcode,0x7ea,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
vc_handle_exitcode,0x7f8,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
vc_handle_exitcode,0x7ff,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
vc_handle_exitcode,0x806,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
vc_handle_exitcode,0x80d,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
vc_handle_exitcode,0x816,ctx->rbx,"MOV qword ptr [RBX],0x400",write other [TODO]
vc_handle_exitcode,0x857,0xffffffff81c8b590,CALL 0xffffffff81c8b590,direct call
vc_handle_exitcode,0x85c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
vc_handle_exitcode,0x86e,ctx->r13 + 0x78,"MOV qword ptr [R13 + 0x78],0xd",write other [TODO]
vc_handle_exitcode,0x87c,ctx->r13 + 0x80,"MOV qword ptr [R13 + 0x80],0x0",write other [TODO]
vc_handle_exitcode,0x898,0xffffffff81c8aee0,CALL 0xffffffff81c8aee0,direct call
vc_handle_exitcode,0x8a9,0xffffffff81c8aee0,CALL 0xffffffff81c8aee0,direct call
vc_handle_exitcode,0x8ba,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
vc_handle_exitcode,0x8d3,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RSI",write stack
vc_handle_exitcode,0x8de,0xffffffff81082f60,CALL 0xffffffff81082f60,direct call
vc_handle_exitcode,0x903,0xffffffff81083180,CALL 0xffffffff81083180,direct call
vc_handle_exitcode,0x936,0xffffffff81c8ae60,CALL 0xffffffff81c8ae60,direct call
vc_handle_exitcode,0x971,0xffffffff81083fb0,CALL 0xffffffff81083fb0,direct call
vc_handle_exitcode,0x9bb,ctx->rbx,"MOV byte ptr [RBX],AL",write other [TODO]
vc_handle_exitcode,0x9d4,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
vc_handle_exitcode,0x9ec,0xffffffff81083fb0,CALL 0xffffffff81083fb0,direct call
vc_handle_exitcode,0xa1a,ctx->rbx,"MOV byte ptr [RBX],0x0",write other [TODO]
vc_handle_exitcode,0xa25,ctx->wordctx->ptrctx->rbx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RBX + RAX*0x1 + -0x2],0x0",write other [TODO]
vc_handle_exitcode,0xa3c,0xffffffff81083fb0,CALL 0xffffffff81083fb0,direct call
vc_handle_exitcode,0xa58,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
vc_handle_exitcode,0xa6f,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
vc_handle_exitcode,0xaa1,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
vc_handle_exitcode,0xab1,0xffffffff81083fb0,CALL 0xffffffff81083fb0,direct call
vc_handle_exitcode,0xb21,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
vc_handle_exitcode,0xb30,ctx->rax + 0x60,"MOV qword ptr [RAX + 0x60],RDX",write other [TODO]
vc_handle_exitcode,0xb3f,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RDX",write other [TODO]
vc_handle_exitcode,0xb5a,ctx->r14 + 0x1f8,"MOV qword ptr [R14 + 0x1f8],RDX",write other [TODO]
vc_handle_exitcode,0xb69,ctx->r14 + 0x310,"MOV qword ptr [R14 + 0x310],RDX",write other [TODO]
vc_handle_exitcode,0xb83,0xffffffff81082b30,CALL 0xffffffff81082b30,direct call
vc_handle_exitcode,0xbc4,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x8",write stack
vc_handle_exitcode,0xbd4,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
vc_handle_exitcode,0xbe7,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EAX",write stack
vc_handle_exitcode,0xc23,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
vc_handle_exitcode,0xc3a,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
vc_handle_exitcode,0xc5a,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RBX",write stack
vc_handle_exitcode,0xc67,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],R15",write stack
vc_handle_exitcode,0xc74,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],R14",write stack
vc_handle_exitcode,0xc7e,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EAX",write stack
vc_handle_exitcode,0xcad,0xffffffff81082f60,CALL 0xffffffff81082f60,direct call
vc_handle_exitcode,0xcc5,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
vc_handle_exitcode,0xcdc,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
vc_handle_exitcode,0xcff,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RBX",write stack
vc_handle_exitcode,0xd18,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EAX",write stack
vc_handle_exitcode,0xd41,0xffffffff81083180,CALL 0xffffffff81083180,direct call
vc_handle_exitcode,0xdac,ctx->rcx,"MOV qword ptr [RCX],0x0",write other [TODO]
vc_handle_exitcode,0xdb3,ctx->rcx + ctx->rax * 0x1 - 0x8,"MOV qword ptr [RCX + RAX*0x1 + -0x8],0x0",write other [TODO]
vc_handle_exitcode,0xddb,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
vc_handle_exitcode,0xde2,ctx->rcx + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RCX + RDX*0x1 + -0x8],RAX",write other [TODO]
vc_handle_exitcode,0xe0c,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R9",write stack
vc_handle_exitcode,0xe1e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R8",write stack
vc_handle_exitcode,0xe22,0xffffffff830c7c1a,"MOV byte ptr [0xffffffff830c7c1a],0x1",write .data
vc_handle_exitcode,0xe29,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vc_handle_exitcode,0xe66,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R8",write stack
vc_handle_exitcode,0xe78,0xffffffff830c7c1b,"MOV byte ptr [0xffffffff830c7c1b],0x1",write .data
vc_handle_exitcode,0xe7f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
vc_handle_exitcode,0xe93,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
vc_handle_exitcode,0xe9c,ctx->rbx,"MOV dword ptr [RBX],0x0",write other [TODO]
vc_handle_exitcode,0xea2,ctx->rbx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RBX + RAX*0x1 + -0x4],0x0",write other [TODO]
vc_handle_exitcode,0xeb3,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
vc_handle_exitcode,0xeb5,ctx->rbx + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [RBX + RDX*0x1 + -0x4],EAX",write other [TODO]
vc_handle_exitcode,0xec2,ctx->wordctx->ptrctx->rbx + ctx->rdx * 0x1 - 0x2,"MOV word ptr [RBX + RDX*0x1 + -0x2],AX",write other [TODO]
vc_raw_handle_exception,0x26,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
vc_raw_handle_exception,0x2c,0xffffffff81d031c0,CALL 0xffffffff81d031c0,direct call
vc_raw_handle_exception,0x3d,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RBX",write stack
vc_raw_handle_exception,0x44,ctx->rax + 0x390,"MOV qword ptr [RAX + 0x390],0x0",write other [TODO]
vc_raw_handle_exception,0x55,ctx->rax + 0x3f0,"MOV qword ptr [RAX + 0x3f0],0x0",write other [TODO]
vc_raw_handle_exception,0x60,ctx->rax + 0x3f8,"MOV qword ptr [RAX + 0x3f8],0x0",write other [TODO]
vc_raw_handle_exception,0x88,0xffffffff810841a0,CALL 0xffffffff810841a0,direct call
vc_raw_handle_exception,0x97,0xffffffff81d03260,CALL 0xffffffff81d03260,direct call
vc_raw_handle_exception,0xb5,0xffffffff81083040,CALL 0xffffffff81083040,direct call
vc_raw_handle_exception,0xc0ddd5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff81085170,0x20,,RET,ret
FUN_ffffffff81085170,0xeb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
snp_set_memory_shared,0x13,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
snp_set_memory_shared,0x24,0xffffffff81082ef0,CALL 0xffffffff81082ef0,direct call
snp_set_memory_shared,0x34,0xffffffff81083490,CALL 0xffffffff81083490,direct call
snp_set_memory_shared,0x3e,,RET,ret
snp_set_memory_private,0x13,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
snp_set_memory_private,0x27,0xffffffff81083490,CALL 0xffffffff81083490,direct call
snp_set_memory_private,0x37,0xffffffff81082ef0,CALL 0xffffffff81082ef0,direct call
snp_set_memory_private,0x41,,RET,ret
snp_set_wakeup_secondary_cpu,0x9,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
snp_set_wakeup_secondary_cpu,0x12,ctx->rax,"MOV RAX,qword ptr [0xffffffff826cbfc0]",write other [TODO]
snp_set_wakeup_secondary_cpu,0x19,ctx->rax + 0xf8,"MOV qword ptr [RAX + 0xf8],-0x7ef7c4f0",write other [TODO]
snp_set_wakeup_secondary_cpu,0x25,,RET,ret
setup_ghcb,0x9,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
setup_ghcb,0x13,,RET,ret
setup_ghcb,0x3e,0xffffffff81082b00,CALL 0xffffffff81082b00,direct call
setup_ghcb,0x6d,ctx->wordctx->ptr0xffffffff826ccf70,"MOV word ptr [0xffffffff826ccf70],AX",write .data
setup_ghcb,0x87,0xffffffff82e4c1f8,"MOV qword ptr [0xffffffff82e4c1f8],RDX",write .data
setup_ghcb,0x96,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
setup_ghcb,0xc2,0xffffffff81083ab0,CALL 0xffffffff81083ab0,direct call
setup_ghcb,0xc8,,RET,ret
setup_ghcb,0xce,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
audit_classify_arch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
audit_classify_arch,0x15,,RET,ret
audit_classify_syscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
audit_classify_syscall,0x34,,RET,ret
audit_classify_syscall,0x4a,,RET,ret
audit_classify_syscall,0x4b,,RET,ret
audit_classify_syscall,0x51,,RET,ret
audit_classify_syscall,0x58,0xffffffff81097640,CALL 0xffffffff81097640,direct call
audit_classify_syscall,0x5e,,RET,ret
alloc_iommu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_iommu,0x68,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
alloc_iommu,0x8f,0xffffffff816332a0,CALL 0xffffffff816332a0,direct call
alloc_iommu,0xa9,0xffffffff834446c8,"MOV qword ptr [0xffffffff834446c8],RBX",write .data
alloc_iommu,0xbc,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x1",write .data
alloc_iommu,0xcd,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
alloc_iommu,0xd1,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
alloc_iommu,0xe8,,RET,ret
alloc_iommu,0x110,0xffffffff834446c8,"MOV qword ptr [0xffffffff834446c8],0x0",write .data
alloc_iommu,0x11b,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x1",write .data
alloc_iommu,0x13e,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x1",write .data
alloc_iommu,0x145,0xffffffff816332a0,CALL 0xffffffff816332a0,direct call
__dma_map_cont,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__dma_map_cont,0x24,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
__dma_map_cont,0x28,0xffffffff810854b0,CALL 0xffffffff810854b0,direct call
__dma_map_cont,0x2d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__dma_map_cont,0x68,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],RCX",write other [TODO]
__dma_map_cont,0x75,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],RAX",write other [TODO]
__dma_map_cont,0x7c,ctx->r15 + 0x18,"MOV dword ptr [R15 + 0x18],EAX",write other [TODO]
__dma_map_cont,0xd3,ctx->rcx - 0x4,"MOV dword ptr [RCX + -0x4],EAX",write other [TODO]
__dma_map_cont,0xde,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
__dma_map_cont,0x110,,RET,ret
gart_unmap_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_unmap_page,0x7c,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
gart_unmap_page,0x8e,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_unmap_page,0xa3,0xffffffff815f9e30,CALL 0xffffffff815f9e30,direct call
gart_unmap_page,0xb7,0xffffffff834446c8,"MOV qword ptr [0xffffffff834446c8],RBX",write .data
gart_unmap_page,0xc8,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_unmap_page,0xd5,,RET,ret
gart_unmap_page,0xd6,,RET,ret
gart_unmap_sg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_unmap_sg,0x40,0xffffffff81085750,CALL 0xffffffff81085750,direct call
gart_unmap_sg,0x48,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_unmap_sg,0x68,,RET,ret
gart_unmap_sg,0x69,,RET,ret
gart_free_coherent,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_free_coherent,0x2c,0xffffffff81085750,CALL 0xffffffff81085750,direct call
gart_free_coherent,0x40,0xffffffff81143140,CALL 0xffffffff81143140,direct call
gart_free_coherent,0x4f,,RET,ret
flush_gart,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_gart,0x12,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
flush_gart,0x2d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
flush_gart,0x37,,RET,ret
flush_gart,0x38,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
flush_gart,0x3d,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
gart_iommu_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_iommu_shutdown,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
gart_iommu_shutdown,0x40,,RET,ret
gart_iommu_shutdown,0x48,0xffffffff8107e780,CALL 0xffffffff8107e780,direct call
gart_iommu_shutdown,0x58,0xffffffff8107e7a0,CALL 0xffffffff8107e7a0,direct call
gart_iommu_shutdown,0x6d,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
gart_iommu_shutdown,0x80,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EDX",write stack
gart_iommu_shutdown,0x83,0xffffffff81669050,CALL 0xffffffff81669050,direct call
gart_iommu_shutdown,0x88,0xffffffff8107e760,CALL 0xffffffff8107e760,direct call
gart_iommu_shutdown,0x96,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
dma_map_area.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dma_map_area.constprop.0,0x43,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
dma_map_area.constprop.0,0x47,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
dma_map_area.constprop.0,0x5a,0xffffffff810854b0,CALL 0xffffffff810854b0,direct call
dma_map_area.constprop.0,0xa5,ctx->rdi + ctx->rdx * 0x4,"MOV dword ptr [RDI + RDX*0x4],EAX",write other [TODO]
dma_map_area.constprop.0,0xd8,,RET,ret
gart_map_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_map_page,0x71,0xffffffff810859e0,CALL 0xffffffff810859e0,direct call
gart_map_page,0x80,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_map_page,0x9b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_map_page,0xa8,,RET,ret
gart_map_page,0xa9,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
gart_map_page,0xae,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
gart_alloc_coherent,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_alloc_coherent,0x22,0xffffffff81142eb0,CALL 0xffffffff81142eb0,direct call
gart_alloc_coherent,0x93,0xffffffff810859e0,CALL 0xffffffff810859e0,direct call
gart_alloc_coherent,0x9f,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
gart_alloc_coherent,0xa2,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_alloc_coherent,0xba,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_alloc_coherent,0xd6,,RET,ret
gart_alloc_coherent,0xd7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
gart_alloc_coherent,0xdb,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
gart_alloc_coherent,0xe0,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
gart_alloc_coherent,0x103,0xffffffff81143140,CALL 0xffffffff81143140,direct call
gart_map_sg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_map_sg,0x16,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RSI",write stack
gart_map_sg,0x1a,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EDX",write stack
gart_map_sg,0x1d,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],ECX",write stack
gart_map_sg,0x47,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
gart_map_sg,0x5b,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
gart_map_sg,0x66,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
gart_map_sg,0x75,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x0",write stack
gart_map_sg,0x82,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R12",write stack
gart_map_sg,0xab,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],R8",write other [TODO]
gart_map_sg,0x162,0xffffffff81085610,CALL 0xffffffff81085610,direct call
gart_map_sg,0x179,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_map_sg,0x181,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R13D",write stack
gart_map_sg,0x18e,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ECX",write stack
gart_map_sg,0x199,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
gart_map_sg,0x1b0,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_map_sg,0x1e0,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],RAX",write other [TODO]
gart_map_sg,0x1e7,ctx->r15 + 0x18,"MOV dword ptr [R15 + 0x18],EAX",write other [TODO]
gart_map_sg,0x20b,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x10000",write stack
gart_map_sg,0x217,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R12",write stack
gart_map_sg,0x23e,ctx->r10 + 0x10,"MOV qword ptr [R10 + 0x10],RAX",write other [TODO]
gart_map_sg,0x245,ctx->r10 + 0x18,"MOV dword ptr [R10 + 0x18],EAX",write other [TODO]
gart_map_sg,0x254,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
gart_map_sg,0x258,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_map_sg,0x27f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
gart_map_sg,0x283,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_map_sg,0x2a6,,RET,ret
gart_map_sg,0x2a7,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R12",write stack
gart_map_sg,0x2b9,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_map_sg,0x2da,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_map_sg,0x2ea,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R15D",write stack
gart_map_sg,0x313,0xffffffff81085750,CALL 0xffffffff81085750,direct call
gart_map_sg,0x31b,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_map_sg,0x35c,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RSI",write other [TODO]
gart_map_sg,0x368,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],EAX",write other [TODO]
gart_map_sg,0x36d,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_map_sg,0x3eb,0xffffffff810859e0,CALL 0xffffffff810859e0,direct call
gart_map_sg,0x40a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_map_sg,0x426,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_map_sg,0x43a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
gart_map_sg,0x43e,0xffffffff81085610,CALL 0xffffffff81085610,direct call
gart_map_sg,0x457,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
gart_map_sg,0x45c,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
gart_map_sg,0x47b,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],0x0",write other [TODO]
gart_map_sg,0x482,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
gart_map_sg,0x497,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
gart_map_sg,0x4a6,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
gart_map_sg,0x4ad,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
gart_map_sg,0x4cc,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R15D",write stack
gart_map_sg,0x4f5,0xffffffff81085750,CALL 0xffffffff81085750,direct call
gart_map_sg,0x4fd,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_map_sg,0x516,0xffffffff815fafd0,CALL 0xffffffff815fafd0,direct call
gart_map_sg,0x51b,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],0x0",write other [TODO]
gart_map_sg,0x527,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
gart_map_sg,0x52c,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
gart_map_sg,0x549,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
gart_map_sg,0x54d,0xffffffff8107e920,CALL 0xffffffff8107e920,direct call
gart_map_sg,0x552,0xffffffff834446c0,"MOV byte ptr [0xffffffff834446c0],0x0",write .data
set_up_gart_resume,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_up_gart_resume,0x6,0xffffffff834446b8,"MOV byte ptr [0xffffffff834446b8],0x1",write .data
set_up_gart_resume,0xd,0xffffffff834446b4,"MOV dword ptr [0xffffffff834446b4],EDI",write .data
set_up_gart_resume,0x16,0xffffffff834446b0,"MOV dword ptr [0xffffffff834446b0],ESI",write .data
set_up_gart_resume,0x1d,,RET,ret
gart_mem_pfn_is_ram,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_mem_pfn_is_ram,0x1f,,RET,ret
gart_mem_pfn_is_ram,0x35,,RET,ret
gart_oldmem_pfn_is_ram,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
gart_oldmem_pfn_is_ram,0x1f,,RET,ret
gart_oldmem_pfn_is_ram,0x32,,RET,ret
cmp_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmp_range,0x10,,RET,ret
get_fam10h_pci_mmconf_base,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_fam10h_pci_mmconf_base,0x26,ctx->rsp + 0xa8,"MOV qword ptr [RSP + 0xa8],RAX",write stack
get_fam10h_pci_mmconf_base,0x5f,,RET,ret
get_fam10h_pci_mmconf_base,0x60,0xffffffff81c65910,CALL 0xffffffff81c65910,direct call
get_fam10h_pci_mmconf_base,0x74,0xffffffff81c65780,CALL 0xffffffff81c65780,direct call
get_fam10h_pci_mmconf_base,0x9b,0xffffffff81c65780,CALL 0xffffffff81c65780,direct call
get_fam10h_pci_mmconf_base,0xc4,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
get_fam10h_pci_mmconf_base,0xd4,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDI",write stack
get_fam10h_pci_mmconf_base,0xe3,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDI",write stack
get_fam10h_pci_mmconf_base,0x113,0xffffffff81c65780,CALL 0xffffffff81c65780,direct call
get_fam10h_pci_mmconf_base,0x11a,ctx->rsp + 0x1c,"MOV dword ptr [RSP + 0x1c],EAX",write stack
get_fam10h_pci_mmconf_base,0x12e,0xffffffff81c65780,CALL 0xffffffff81c65780,direct call
get_fam10h_pci_mmconf_base,0x15b,ctx->rsp + ctx->rdx * 0x1 + 0x28,"MOV qword ptr [RSP + RDX*0x1 + 0x28],RAX",write stack
get_fam10h_pci_mmconf_base,0x163,ctx->rsp + ctx->rdx * 0x1 + 0x20,"MOV qword ptr [RSP + RDX*0x1 + 0x20],R8",write stack
get_fam10h_pci_mmconf_base,0x195,0xffffffff815f9110,CALL 0xffffffff815f9110,direct call
get_fam10h_pci_mmconf_base,0x1d9,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RBX",write stack
get_fam10h_pci_mmconf_base,0x22b,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
get_fam10h_pci_mmconf_base,0x271,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
get_fam10h_pci_mmconf_base,0x29e,0xffffffff83444720,"MOV qword ptr [0xffffffff83444720],RAX",write .data
get_fam10h_pci_mmconf_base,0x2af,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
get_fam10h_pci_mmconf_base,0x2dd,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDX",write stack
get_fam10h_pci_mmconf_base,0x2f2,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
get_fam10h_pci_mmconf_base,0x309,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fam10h_check_enable_mmcfg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fam10h_check_enable_mmcfg,0xe,,RET,ret
fam10h_check_enable_mmcfg,0x19,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
fam10h_check_enable_mmcfg,0x4b,0xffffffff81086320,CALL 0xffffffff81086320,direct call
fam10h_check_enable_mmcfg,0x6d,,RET,ret
fam10h_check_enable_mmcfg,0x75,0xffffffff83444720,"MOV qword ptr [0xffffffff83444720],RDX",write .data
fam10h_check_enable_mmcfg,0x81,,RET,ret
vsmp_apic_post_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vsmp_apic_post_init,0x6,ctx->rax,"MOV RAX,qword ptr [0xffffffff826cbfc0]",write other [TODO]
vsmp_apic_post_init,0xd,ctx->rax + 0xe0,"MOV qword ptr [RAX + 0xe0],-0x7ef79920",write other [TODO]
vsmp_apic_post_init,0x1c,,RET,ret
apicid_phys_pkg_id,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
apicid_phys_pkg_id,0xc,0xffffffff81070950,CALL 0xffffffff81070950,direct call
apicid_phys_pkg_id,0x1a,,RET,ret
cachemode2protval,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cachemode2protval,0x10,,RET,ret
cachemode2protval,0x1c,,RET,ret
x86_has_pat_wp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
x86_has_pat_wp,0x30,,RET,ret
pgprot2cachemode,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgprot2cachemode,0x14,,RET,ret
pgprot2cachemode,0x2e,,RET,ret
pfn_range_is_mapped,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pfn_range_is_mapped,0x3f,,RET,ret
pfn_range_is_mapped,0x46,,RET,ret
devmem_is_allowed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devmem_is_allowed,0x25,0xffffffff810ace80,CALL 0xffffffff810ace80,direct call
devmem_is_allowed,0x42,,RET,ret
devmem_is_allowed,0x46,0xffffffff810ae960,CALL 0xffffffff810ae960,direct call
devmem_is_allowed,0x57,,RET,ret
free_init_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_init_pages,0x4d,0xffffffff81090610,CALL 0xffffffff81090610,direct call
free_init_pages,0x58,0xffffffff81090680,CALL 0xffffffff81090680,direct call
free_init_pages,0x6b,0xffffffff812f31e0,CALL 0xffffffff812f31e0,direct call
free_init_pages,0x79,,RET,ret
free_kernel_image_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_kernel_image_pages,0x4d,0xffffffff81090610,CALL 0xffffffff81090610,direct call
free_kernel_image_pages,0x58,0xffffffff81090680,CALL 0xffffffff81090680,direct call
free_kernel_image_pages,0x6b,0xffffffff812f31e0,CALL 0xffffffff812f31e0,direct call
free_kernel_image_pages,0x79,,RET,ret
update_cache_mode_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_cache_mode_entry,0x24,ctx->rdi - 0x7d1b3c68,"MOV byte ptr [RDI + -0x7d1b3c68],SIL",write other [TODO]
update_cache_mode_entry,0x33,ctx->wordctx->ptrctx->rcx + ctx->rcx * 0x1 - 0x7d1b3c60,"MOV word ptr [RCX + RCX*0x1 + -0x7d1b3c60],AX",write other [TODO]
update_cache_mode_entry,0x3b,,RET,ret
arch_max_swapfile_size,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_max_swapfile_size,0x9,0xffffffff813021d0,CALL 0xffffffff813021d0,direct call
arch_max_swapfile_size,0x41,,RET,ret
pte_val,0x4,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
pte_val,0xb,,RET,ret
__pgd,0x4,0xffffffff82e4ba68,CALL qword ptr [0xffffffff82e4ba68],in-direct call
__pgd,0xb,,RET,ret
pgd_val,0x4,0xffffffff82e4ba60,CALL qword ptr [0xffffffff82e4ba60],in-direct call
pgd_val,0xb,,RET,ret
set_pte,0x4,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
set_pte,0xb,,RET,ret
set_pmd,0x4,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
set_pmd,0xb,,RET,ret
__pmd,0x4,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
__pmd,0xb,,RET,ret
pmd_val,0x4,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmd_val,0xb,,RET,ret
set_pud,0x4,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
set_pud,0xb,,RET,ret
__pud,0x4,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
__pud,0xb,,RET,ret
pud_val,0x4,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pud_val,0xb,,RET,ret
set_p4d,0x4,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
set_p4d,0xb,,RET,ret
__p4d,0x4,0xffffffff82e4baa8,CALL qword ptr [0xffffffff82e4baa8],in-direct call
__p4d,0xb,,RET,ret
p4d_val,0x4,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
p4d_val,0xb,,RET,ret
__set_pgd,0x4,0xffffffff82e4bab0,CALL qword ptr [0xffffffff82e4bab0],in-direct call
__set_pgd,0xb,,RET,ret
pmd_large,0x2a,,RET,ret
pmd_present,0x2a,,RET,ret
pud_present,0x28,,RET,ret
FUN_ffffffff81086b6b,0x5,,RET,ret
FUN_ffffffff81086b8e,0x2,,RET,ret
p4d_pgtable,0x4,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
p4d_pgtable,0x1f,,RET,ret
pmd_page_vaddr,0x4,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmd_page_vaddr,0x2b,,RET,ret
pmd_page_vaddr,0x3e,,RET,ret
pmd_pfn,0x4,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmd_pfn,0x45,,RET,ret
pgd_page_vaddr,0x4,0xffffffff82e4ba60,CALL qword ptr [0xffffffff82e4ba60],in-direct call
pgd_page_vaddr,0x1f,,RET,ret
ident_pmd_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ident_pmd_init,0x71,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
ident_pmd_init,0x7d,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
ident_pmd_init,0x97,,RET,ret
pud_pgtable,0x4,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pud_pgtable,0x2b,,RET,ret
pud_pgtable,0x3e,,RET,ret
FUN_ffffffff81086d92,0x0,,RET,ret
ident_pud_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ident_pud_init,0xc5,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
ident_pud_init,0xcd,ctx->r14,CALL qword ptr [R14],in-direct call
ident_pud_init,0xe6,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ident_pud_init,0xea,0xffffffff81086c70,CALL 0xffffffff81086c70,direct call
ident_pud_init,0x117,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
ident_pud_init,0x123,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
ident_pud_init,0x142,,RET,ret
ident_pud_init,0x14e,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
ident_pud_init,0x15a,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
ident_pud_init,0x165,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
ident_pud_init,0x18e,0xffffffff81086c70,CALL 0xffffffff81086c70,direct call
ident_pud_init,0x1b4,,RET,ret
ident_pud_init,0x1b7,,RET,ret
ident_p4d_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ident_p4d_init,0x74,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
ident_p4d_init,0x7c,ctx->r14,CALL qword ptr [R14],in-direct call
ident_p4d_init,0x95,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ident_p4d_init,0x99,0xffffffff81086da0,CALL 0xffffffff81086da0,direct call
ident_p4d_init,0xce,0xffffffff82e4baa8,CALL qword ptr [0xffffffff82e4baa8],in-direct call
ident_p4d_init,0xda,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
ident_p4d_init,0xf9,,RET,ret
ident_p4d_init,0xfa,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
ident_p4d_init,0x11e,0xffffffff81086da0,CALL 0xffffffff81086da0,direct call
ident_p4d_init,0x135,,RET,ret
ident_p4d_init,0x13f,,RET,ret
fill_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fill_pud,0x24,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
fill_pud,0x55,,RET,ret
fill_pud,0x56,0xffffffff81d04cb0,CALL 0xffffffff81d04cb0,direct call
fill_pud,0x96,0xffffffff82e4ba00,CALL qword ptr [0xffffffff82e4ba00],in-direct call
fill_pud,0xc6,0xffffffff82e4baa8,CALL qword ptr [0xffffffff82e4baa8],in-direct call
fill_pud,0xd2,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
fill_pud,0xdc,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
fill_pud,0x103,0xffffffff81086ba0,CALL 0xffffffff81086ba0,direct call
fill_pud,0x115,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
fill_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fill_pmd,0x24,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
fill_pmd,0x62,,RET,ret
fill_pmd,0x6c,0xffffffff81d04cb0,CALL 0xffffffff81d04cb0,direct call
fill_pmd,0xac,0xffffffff82e4b9f8,CALL qword ptr [0xffffffff82e4b9f8],in-direct call
fill_pmd,0xdc,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
fill_pmd,0xe8,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
fill_pmd,0xf2,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
fill_pmd,0x125,0xffffffff81086d10,CALL 0xffffffff81086d10,direct call
fill_pmd,0x137,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
fill_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fill_pte,0x2e,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
fill_pte,0x62,,RET,ret
fill_pte,0x6c,0xffffffff81d04cb0,CALL 0xffffffff81d04cb0,direct call
fill_pte,0xac,0xffffffff82e4b9f0,CALL qword ptr [0xffffffff82e4b9f0],in-direct call
fill_pte,0xdc,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
fill_pte,0xe8,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
fill_pte,0xf2,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
kernel_ident_mapping_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_ident_mapping_init,0x21,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
kernel_ident_mapping_init,0x46,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
FUN_ffffffff810875a9,0x5,0xffffffff81086d50,CALL 0xffffffff81086d50,direct call
FUN_ffffffff810875a9,0x16,0xffffffff81086f70,CALL 0xffffffff81086f70,direct call
FUN_ffffffff810875a9,0x31,,RET,ret
FUN_ffffffff810875db,0x3,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff81087620,-0x78,,RET,ret
FUN_ffffffff81087620,0x21,0xffffffff82e4ba68,CALL qword ptr [0xffffffff82e4ba68],in-direct call
FUN_ffffffff81087620,0x2d,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
set_pte_vaddr_p4d,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pte_vaddr_p4d,0x29,0xffffffff810870c0,CALL 0xffffffff810870c0,direct call
set_pte_vaddr_p4d,0x34,0xffffffff810871f0,CALL 0xffffffff810871f0,direct call
set_pte_vaddr_p4d,0x3f,0xffffffff81087340,CALL 0xffffffff81087340,direct call
set_pte_vaddr_p4d,0x4a,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
set_pte_vaddr_p4d,0x53,0xffffffff8108cbd0,CALL 0xffffffff8108cbd0,direct call
set_pte_vaddr_p4d,0x5c,,RET,ret
set_pte_vaddr_pud,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pte_vaddr_pud,0x21,0xffffffff810871f0,CALL 0xffffffff810871f0,direct call
set_pte_vaddr_pud,0x2c,0xffffffff81087340,CALL 0xffffffff81087340,direct call
set_pte_vaddr_pud,0x37,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
set_pte_vaddr_pud,0x40,0xffffffff8108cbd0,CALL 0xffffffff8108cbd0,direct call
set_pte_vaddr_pud,0x49,,RET,ret
set_pte_vaddr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pte_vaddr,0x1e,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82fdb9e8]",write other [TODO]
add_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
add_pages,0x12,0xffffffff81d05ca0,CALL 0xffffffff81d05ca0,direct call
add_pages,0x38,0xffffffff83558d18,"MOV qword ptr [0xffffffff83558d18],RDX",write .data
add_pages,0x3f,0xffffffff83558d28,"MOV qword ptr [0xffffffff83558d28],RDX",write .data
add_pages,0x51,0xffffffff835567e0,"MOV qword ptr [0xffffffff835567e0],RDX",write .data
add_pages,0x5c,,RET,ret
arch_add_memory,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_add_memory,0x2b,0xffffffff81d04930,CALL 0xffffffff81d04930,direct call
arch_add_memory,0x40,0xffffffff810877e0,CALL 0xffffffff810877e0,direct call
arch_add_memory,0x4d,,RET,ret
kern_addr_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810878d3,0x1e,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82fdb9e8]",write other [TODO]
FUN_ffffffff81087c3e,-0x36c,,RET,ret
memory_block_size_bytes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memory_block_size_bytes,0x1f,,RET,ret
memory_block_size_bytes,0xc0bc65,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
memory_block_size_bytes,0xc0bc6a,0xffffffff83450f88,"MOV qword ptr [0xffffffff83450f88],R12",write .data
register_page_bootmem_memmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
register_page_bootmem_memmap,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
FUN_ffffffff81087d6c,-0x42,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82fdb9e8]",write other [TODO]
FUN_ffffffff81087d6c,-0x1,,RET,ret
FUN_ffffffff81087d6c,0x0,0xffffffff82e4ba60,CALL qword ptr [0xffffffff82e4ba60],in-direct call
FUN_ffffffff81087d6c,0x27,0xffffffff8135eed0,CALL 0xffffffff8135eed0,direct call
FUN_ffffffff81087d6c,0x32,0xffffffff81086d50,CALL 0xffffffff81086d50,direct call
FUN_ffffffff81087d6c,0x46,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff81087d6c,0x6d,0xffffffff8135eed0,CALL 0xffffffff8135eed0,direct call
FUN_ffffffff81087d6c,0x75,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff81087d6c,0xb3,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff81087d6c,0x105,0xffffffff8135eed0,CALL 0xffffffff8135eed0,direct call
FUN_ffffffff81087d6c,0x137,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff81087d6c,0x182,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
FUN_ffffffff81087d6c,0x1e2,0xffffffff8135eed0,CALL 0xffffffff8135eed0,direct call
FUN_ffffffff81087d6c,0x212,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff81087d6c,0x25b,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
FUN_ffffffff81087d6c,0x279,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
FUN_ffffffff81087d6c,0x2bc,0xffffffff8135eed0,CALL 0xffffffff8135eed0,direct call
FUN_ffffffff81087d6c,0x2c4,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
FUN_ffffffff81087d6c,0x309,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
FUN_ffffffff81087d6c,0x330,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
FUN_ffffffff81087d6c,0x346,0xffffffff8135eed0,CALL 0xffffffff8135eed0,direct call
__traceiter_page_fault_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_page_fault_user,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_page_fault_user,0x4b,,RET,ret
__traceiter_page_fault_kernel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_page_fault_kernel,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_page_fault_kernel,0x4b,,RET,ret
perf_trace_x86_exceptions,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_x86_exceptions,0x55,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_x86_exceptions,0x7b,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_x86_exceptions,0x82,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_x86_exceptions,0x89,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_x86_exceptions,0x94,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_x86_exceptions,0x9f,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_x86_exceptions,0xaa,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],R12",write other [TODO]
perf_trace_x86_exceptions,0xae,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
perf_trace_x86_exceptions,0xb5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_x86_exceptions,0xd9,,RET,ret
perf_trace_x86_exceptions,0xe8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_x86_exceptions,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_x86_exceptions,0x3f,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_x86_exceptions,0x49,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_x86_exceptions,0x58,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RBX",write other [TODO]
trace_event_raw_event_x86_exceptions,0x5c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
trace_event_raw_event_x86_exceptions,0x60,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_x86_exceptions,0x80,,RET,ret
trace_event_raw_event_x86_exceptions,0x86,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_x86_exceptions,0x91,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_x86_exceptions,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_x86_exceptions,0x22,,RET,ret
trace_raw_output_x86_exceptions,0x3c,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_x86_exceptions,0x48,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_x86_exceptions,0x51,,RET,ret
__bpf_trace_x86_exceptions,0x4,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_x86_exceptions,0xa,,RET,ret
is_prefetch.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_prefetch.constprop.0,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
is_prefetch.constprop.0,0x4d,,RET,ret
is_prefetch.constprop.0,0x6e,0xffffffff81048c20,CALL 0xffffffff81048c20,direct call
is_prefetch.constprop.0,0x97,0xffffffff81c8a690,CALL 0xffffffff81c8a690,direct call
is_prefetch.constprop.0,0x9c,ctx->rbp - 0x2a,"MOV byte ptr [RBP + -0x2a],DL",write stack
is_prefetch.constprop.0,0xa8,ctx->rbp - 0x29,"MOV byte ptr [RBP + -0x29],DL",write stack
is_prefetch.constprop.0,0xde,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
is_prefetch.constprop.0,0x14c,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
is_prefetch.constprop.0,0x1a3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
spurious_kernel_fault_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spurious_kernel_fault_check,0x4c,,RET,ret
FUN_ffffffff810885c2,0x0,,RET,ret
dump_pagetable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dump_pagetable,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
dump_pagetable,0x22,0xffffffff82e4b9c0,CALL qword ptr [0xffffffff82e4b9c0],in-direct call
dump_pagetable,0x6b,0xffffffff8128d090,CALL 0xffffffff8128d090,direct call
dump_pagetable,0x7c,0xffffffff82e4ba60,CALL qword ptr [0xffffffff82e4ba60],in-direct call
dump_pagetable,0x8c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
page_fault_oops,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
page_fault_oops,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
page_fault_oops,0x3a,0xffffffff810978f0,CALL 0xffffffff810978f0,direct call
page_fault_oops,0x54,0xffffffff813291a0,CALL 0xffffffff813291a0,direct call
page_fault_oops,0x7a,,RET,ret
page_fault_oops,0x7b,0xffffffff8103a3c0,CALL 0xffffffff8103a3c0,direct call
page_fault_oops,0x83,0xffffffff810a5120,CALL 0xffffffff810a5120,direct call
page_fault_oops,0xb3,0xffffffff81c8f289,CALL 0xffffffff81c8f289,direct call
page_fault_oops,0xc8,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
page_fault_oops,0xda,0xffffffff8103a2f0,CALL 0xffffffff8103a2f0,direct call
page_fault_oops,0xe4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
page_fault_oops,0xef,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
page_fault_oops,0xf9,0xffffffff82e4b9c0,CALL qword ptr [0xffffffff82e4b9c0],in-direct call
page_fault_oops,0x140,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
page_fault_oops,0x1ab,0xffffffff8118d880,CALL 0xffffffff8118d880,direct call
page_fault_oops,0x1b9,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
page_fault_oops,0x1da,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
page_fault_oops,0x1e1,0xffffffff8118d880,CALL 0xffffffff8118d880,direct call
page_fault_oops,0x1ef,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
page_fault_oops,0xc0b21c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
kernelmode_fixup_or_oops,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernelmode_fixup_or_oops,0x25,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
kernelmode_fixup_or_oops,0x44,0xffffffff8108a5b0,CALL 0xffffffff8108a5b0,direct call
kernelmode_fixup_or_oops,0x80,,RET,ret
kernelmode_fixup_or_oops,0x87,0xffffffff81088380,CALL 0xffffffff81088380,direct call
kernelmode_fixup_or_oops,0x99,0xffffffff810888a0,CALL 0xffffffff810888a0,direct call
kernelmode_fixup_or_oops,0xac,,RET,ret
kernelmode_fixup_or_oops,0xba,ctx->rax + 0x1528,"MOV qword ptr [RAX + 0x1528],R15",write other [TODO]
kernelmode_fixup_or_oops,0xc1,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0xe",write other [TODO]
kernelmode_fixup_or_oops,0xdb,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],R13",write other [TODO]
kernelmode_fixup_or_oops,0xef,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
kernelmode_fixup_or_oops,0x106,0xffffffff810b9260,CALL 0xffffffff810b9260,direct call
__bad_area_nosemaphore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__bad_area_nosemaphore,0x2b,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ECX",write stack
__bad_area_nosemaphore,0x45,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__bad_area_nosemaphore,0x4b,0xffffffff81088380,CALL 0xffffffff81088380,direct call
__bad_area_nosemaphore,0x9c,0xffffffff810039e0,CALL 0xffffffff810039e0,direct call
__bad_area_nosemaphore,0xcc,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__bad_area_nosemaphore,0xdf,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__bad_area_nosemaphore,0xe2,0xffffffff810b70e0,CALL 0xffffffff810b70e0,direct call
__bad_area_nosemaphore,0xfc,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0xe",write other [TODO]
__bad_area_nosemaphore,0x107,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],R12",write other [TODO]
__bad_area_nosemaphore,0x10e,ctx->rax + 0x1528,"MOV qword ptr [RAX + 0x1528],R15",write other [TODO]
__bad_area_nosemaphore,0x126,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
__bad_area_nosemaphore,0x12b,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__bad_area_nosemaphore,0x13f,,RET,ret
__bad_area_nosemaphore,0x140,0xffffffff810888a0,CALL 0xffffffff810888a0,direct call
__bad_area_nosemaphore,0x153,,RET,ret
__bad_area_nosemaphore,0x15c,0xffffffff81088ad0,CALL 0xffffffff81088ad0,direct call
__bad_area_nosemaphore,0x16f,,RET,ret
__bad_area_nosemaphore,0x176,0xffffffff810b9260,CALL 0xffffffff810b9260,direct call
__bad_area_nosemaphore,0x184,0xffffffff8111d2e0,CALL 0xffffffff8111d2e0,direct call
bad_area_nosemaphore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bad_area_nosemaphore,0x11,0xffffffff81088be0,CALL 0xffffffff81088be0,direct call
bad_area_nosemaphore,0x17,,RET,ret
__bad_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__bad_area,0x38,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R8D",write stack
__bad_area,0x3c,0xffffffff81113020,CALL 0xffffffff81113020,direct call
__bad_area,0x51,0xffffffff81088be0,CALL 0xffffffff81088be0,direct call
__bad_area,0x64,,RET,ret
bad_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bad_area,0x11,0xffffffff81088da0,CALL 0xffffffff81088da0,direct call
bad_area,0x17,,RET,ret
bad_area_access_error,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgtable_bad,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgtable_bad,0x1a,0xffffffff8103a3c0,CALL 0xffffffff8103a3c0,direct call
pgtable_bad,0x3c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pgtable_bad,0x44,0xffffffff810885d0,CALL 0xffffffff810885d0,direct call
pgtable_bad,0x56,0xffffffff81c8f289,CALL 0xffffffff81c8f289,direct call
pgtable_bad,0x69,0xffffffff8103a2f0,CALL 0xffffffff8103a2f0,direct call
pgtable_bad,0x77,,RET,ret
do_user_addr_fault,0x6a,0xffffffff8107aa60,CALL 0xffffffff8107aa60,direct call
do_user_addr_fault,0x244,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
do_user_addr_fault,0x369,0xffffffff81088ee0,CALL 0xffffffff81088ee0,direct call
do_user_addr_fault,0x49b,ctx->r13 + 0x80,"MOV qword ptr [R13 + 0x80],RBX",write other [TODO]
do_user_addr_fault,0xc0ada6,0xffffffff830c7c21,"MOV byte ptr [0xffffffff830c7c21],0x1",write .data
do_user_addr_fault,0xc0adad,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff8108927f,-0x1d9,0xffffffff812d2300,CALL 0xffffffff812d2300,direct call
FUN_ffffffff8108927f,-0x166,0xffffffff812cc3e0,CALL 0xffffffff812cc3e0,direct call
FUN_ffffffff8108927f,-0x147,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R8D",write stack
FUN_ffffffff8108927f,-0x13f,0xffffffff81113020,CALL 0xffffffff81113020,direct call
FUN_ffffffff8108927f,-0xe5,0xffffffff81088ad0,CALL 0xffffffff81088ad0,direct call
FUN_ffffffff8108927f,-0x37,0xffffffff81088d80,CALL 0xffffffff81088d80,direct call
FUN_ffffffff8108927f,-0x24,,RET,ret
FUN_ffffffff8108927f,0x27,0xffffffff81088e40,CALL 0xffffffff81088e40,direct call
FUN_ffffffff8108927f,0xa1,0xffffffff81088e20,CALL 0xffffffff81088e20,direct call
FUN_ffffffff8108927f,0x107,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
FUN_ffffffff8108927f,0x18b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
FUN_ffffffff8108927f,0x18f,0xffffffff812d6700,CALL 0xffffffff812d6700,direct call
FUN_ffffffff8108927f,0x1db,0xffffffff8128cb20,CALL 0xffffffff8128cb20,direct call
FUN_ffffffff8108927f,0x212,0xffffffff81088ad0,CALL 0xffffffff81088ad0,direct call
FUN_ffffffff8108927f,0x28b,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R8D",write stack
FUN_ffffffff8108927f,0x28f,0xffffffff81088380,CALL 0xffffffff81088380,direct call
FUN_ffffffff8108927f,0x2c2,0xffffffff810039e0,CALL 0xffffffff810039e0,direct call
FUN_ffffffff8108927f,0x2e0,ctx->rax + 0x1530,"MOV qword ptr [RAX + 0x1530],0xe",write other [TODO]
FUN_ffffffff8108927f,0x2eb,ctx->rax + 0x1538,"MOV qword ptr [RAX + 0x1538],R12",write other [TODO]
FUN_ffffffff8108927f,0x2f2,ctx->rax + 0x1528,"MOV qword ptr [RAX + 0x1528],R14",write other [TODO]
FUN_ffffffff8108927f,0x310,0xffffffff810b9610,CALL 0xffffffff810b9610,direct call
FUN_ffffffff8108927f,0x32b,0xffffffff81088ad0,CALL 0xffffffff81088ad0,direct call
spurious_kernel_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
spurious_kernel_fault,0x3a,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82fdb9e8]",write other [TODO]
do_kern_addr_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_kern_addr_fault,0x28,0xffffffff810895d0,CALL 0xffffffff810895d0,direct call
do_kern_addr_fault,0x49,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
do_kern_addr_fault,0x69,0xffffffff8107aa60,CALL 0xffffffff8107aa60,direct call
do_kern_addr_fault,0x7b,0xffffffff81088d80,CALL 0xffffffff81088d80,direct call
do_kern_addr_fault,0x87,,RET,ret
fault_in_kernel_space,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fault_in_kernel_space,0x2b,,RET,ret
fault_in_kernel_space,0x2f,,RET,ret
__ioremap_caller,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ioremap_caller,0x1e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
__ioremap_caller,0x22,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],R8D",write stack
__ioremap_caller,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__ioremap_caller,0x35,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
__ioremap_caller,0x75,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
__ioremap_caller,0x7c,0xffffffff810adde0,CALL 0xffffffff810adde0,direct call
__ioremap_caller,0x86,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
__ioremap_caller,0xac,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__ioremap_caller,0xd7,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
__ioremap_caller,0xdb,0xffffffff81091090,CALL 0xffffffff81091090,direct call
__ioremap_caller,0xee,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EDX",write stack
__ioremap_caller,0x118,0xffffffff810022c0,CALL 0xffffffff810022c0,direct call
__ioremap_caller,0x11d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__ioremap_caller,0x13b,0xffffffff81086700,CALL 0xffffffff81086700,direct call
__ioremap_caller,0x14f,0xffffffff812e9640,CALL 0xffffffff812e9640,direct call
__ioremap_caller,0x16a,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R8",write stack
__ioremap_caller,0x16e,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RDI",write other [TODO]
__ioremap_caller,0x176,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
__ioremap_caller,0x17a,0xffffffff81091400,CALL 0xffffffff81091400,direct call
__ioremap_caller,0x19e,0xffffffff812e7fc0,CALL 0xffffffff812e7fc0,direct call
__ioremap_caller,0x1c7,0xffffffff81094440,CALL 0xffffffff81094440,direct call
__ioremap_caller,0x1d2,0xffffffff810ae8b0,CALL 0xffffffff810ae8b0,direct call
__ioremap_caller,0x203,,RET,ret
__ioremap_caller,0x207,0xffffffff81a24320,CALL 0xffffffff81a24320,direct call
__ioremap_caller,0x21b,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
__ioremap_caller,0x240,0xffffffff826ba488,CALL qword ptr [0xffffffff826ba488],in-direct call
__ioremap_caller,0x28b,0xffffffff81086700,CALL 0xffffffff81086700,direct call
__ioremap_caller,0x29c,0xffffffff812e9cb0,CALL 0xffffffff812e9cb0,direct call
__ioremap_caller,0x2ac,0xffffffff81091340,CALL 0xffffffff81091340,direct call
__ioremap_caller,0x2b9,0xffffffff81a24320,CALL 0xffffffff81a24320,direct call
__ioremap_caller,0x2ca,0xffffffff81a242b0,CALL 0xffffffff81a242b0,direct call
__ioremap_caller,0x2dd,0xffffffff81002290,CALL 0xffffffff81002290,direct call
__ioremap_caller,0x2e2,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__ioremap_caller,0x2f5,0xffffffff81086700,CALL 0xffffffff81086700,direct call
__ioremap_caller,0x308,0xffffffff81086700,CALL 0xffffffff81086700,direct call
__ioremap_caller,0x325,0xffffffff830c7c22,"MOV byte ptr [0xffffffff830c7c22],0x1",write .data
__ioremap_caller,0x32c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__ioremap_caller,0x33b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ioremap_caller,0xc0a4b5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__ioremap_caller,0xc0a4cb,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__ioremap_caller,0xc0a4df,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
ioremap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap,0x15,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap,0x1b,,RET,ret
ioremap_uc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_uc,0x15,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap_uc,0x1b,,RET,ret
ioremap_wc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_wc,0x15,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap_wc,0x1b,,RET,ret
ioremap_wt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_wt,0x15,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap_wt,0x1b,,RET,ret
ioremap_encrypted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_encrypted,0x15,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap_encrypted,0x1b,,RET,ret
ioremap_cache,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_cache,0x12,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap_cache,0x18,,RET,ret
ioremap_prot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_prot,0x1c,0xffffffff81086760,CALL 0xffffffff81086760,direct call
ioremap_prot,0x2f,0xffffffff810898b0,CALL 0xffffffff810898b0,direct call
ioremap_prot,0x3b,,RET,ret
iounmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iounmap,0x45,0xffffffff810945f0,CALL 0xffffffff810945f0,direct call
iounmap,0x4d,0xffffffff812e9690,CALL 0xffffffff812e9690,direct call
iounmap,0x79,0xffffffff81091340,CALL 0xffffffff81091340,direct call
iounmap,0x81,0xffffffff812e9700,CALL 0xffffffff812e9700,direct call
iounmap,0x93,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
iounmap,0x9d,,RET,ret
iounmap,0x9e,,RET,ret
iounmap,0xa6,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
memremap_should_map_decrypted.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memremap_should_map_decrypted.part.0,0x21,0xffffffff81a24320,CALL 0xffffffff81a24320,direct call
memremap_should_map_decrypted.part.0,0x32,0xffffffff8103d810,CALL 0xffffffff8103d810,direct call
memremap_should_map_decrypted.part.0,0x4c,,RET,ret
memremap_should_map_decrypted.part.0,0x5a,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
memremap_should_map_decrypted.part.0,0x6e,,RET,ret
memremap_should_map_decrypted.part.0,0x72,0xffffffff81a242b0,CALL 0xffffffff81a242b0,direct call
memremap_is_efi_data.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memremap_is_efi_data.constprop.0,0x50,0xffffffff81097a60,CALL 0xffffffff81097a60,direct call
memremap_is_efi_data.constprop.0,0x61,,RET,ret
memremap_is_efi_data.constprop.0,0x65,0xffffffff81a24320,CALL 0xffffffff81a24320,direct call
memremap_is_efi_data.constprop.0,0x7c,,RET,ret
__ioremap_collect_map_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8108a002,-0x119,,RET,ret
FUN_ffffffff8108a002,-0x4b,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
FUN_ffffffff8108a002,-0x37,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
FUN_ffffffff8108a002,-0x11,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
FUN_ffffffff8108a002,0x2a,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
arch_memremap_can_ram_remap.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_memremap_can_ram_remap.part.0,0x1e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
arch_memremap_can_ram_remap.part.0,0x22,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
arch_memremap_can_ram_remap.part.0,0x63,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
arch_memremap_can_ram_remap.part.0,0x8a,0xffffffff81280200,CALL 0xffffffff81280200,direct call
arch_memremap_can_ram_remap.part.0,0xb3,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
arch_memremap_can_ram_remap.part.0,0xc4,0xffffffff81280200,CALL 0xffffffff81280200,direct call
arch_memremap_can_ram_remap.part.0,0xe6,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
arch_memremap_can_ram_remap.part.0,0x15c,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
arch_memremap_can_ram_remap.part.0,0xc09d9a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff8108a141,-0x1,,RET,ret
FUN_ffffffff8108a141,0x3,0xffffffff81089e30,CALL 0xffffffff81089e30,direct call
FUN_ffffffff8108a141,0x1d,0xffffffff810ace80,CALL 0xffffffff810ace80,direct call
FUN_ffffffff8108a141,0x34,0xffffffff81089db0,CALL 0xffffffff81089db0,direct call
FUN_ffffffff8108a141,0x4a,,RET,ret
ioremap_change_attr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ioremap_change_attr,0x1b,0xffffffff81090340,CALL 0xffffffff81090340,direct call
ioremap_change_attr,0x21,,RET,ret
ioremap_change_attr,0x22,0xffffffff81090380,CALL 0xffffffff81090380,direct call
ioremap_change_attr,0x28,,RET,ret
ioremap_change_attr,0x29,0xffffffff81090500,CALL 0xffffffff81090500,direct call
ioremap_change_attr,0x2f,,RET,ret
ioremap_change_attr,0x30,0xffffffff810904c0,CALL 0xffffffff810904c0,direct call
ioremap_change_attr,0x36,,RET,ret
xlate_dev_mem_ptr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
xlate_dev_mem_ptr,0x24,0xffffffff81280200,CALL 0xffffffff81280200,direct call
xlate_dev_mem_ptr,0x38,,RET,ret
unxlate_dev_mem_ptr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unxlate_dev_mem_ptr,0x13,0xffffffff812801a0,CALL 0xffffffff812801a0,direct call
unxlate_dev_mem_ptr,0x19,,RET,ret
arch_memremap_can_ram_remap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_memremap_can_ram_remap,0x19,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
arch_memremap_can_ram_remap,0x34,0xffffffff8108a030,CALL 0xffffffff8108a030,direct call
arch_memremap_can_ram_remap,0x3f,,RET,ret
arch_memremap_can_ram_remap,0x4b,,RET,ret
phys_mem_access_encrypted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
phys_mem_access_encrypted,0x15,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
phys_mem_access_encrypted,0x2d,0xffffffff8108a030,CALL 0xffffffff8108a030,direct call
phys_mem_access_encrypted,0x37,,RET,ret
ex_handler_uaccess,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ex_handler_uaccess,0x1e,ctx->rsi + 0x50,"MOV qword ptr [RSI + 0x50],0x0",write other [TODO]
ex_handler_uaccess,0x2e,ctx->rsi + 0x60,"MOV qword ptr [RSI + 0x60],0x0",write other [TODO]
ex_handler_uaccess,0x3f,ctx->rsi + 0x80,"MOV qword ptr [RSI + 0x80],RAX",write other [TODO]
ex_handler_uaccess,0x50,,RET,ret
ex_handler_uaccess,0x61,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
ex_handler_uaccess,0x65,0xffffffff830c7c26,"MOV byte ptr [0xffffffff830c7c26],0x1",write .data
ex_handler_uaccess,0x6c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
ex_handler_msr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ex_handler_zeropad,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ex_handler_zeropad,0x31,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ex_handler_zeropad,0x66,,RET,ret
ex_handler_zeropad,0x7b,0xffffffff81c8c870,CALL 0xffffffff81c8c870,direct call
ex_handler_zeropad,0xa6,0xffffffff81c8b600,CALL 0xffffffff81c8b600,direct call
ex_handler_zeropad,0xd2,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RDX",write stack
ex_handler_zeropad,0xd9,0xffffffff81c8b590,CALL 0xffffffff81c8b590,direct call
ex_handler_zeropad,0xfe,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
ex_handler_zeropad,0x10b,ctx->r14 + 0x50,"MOV qword ptr [R14 + 0x50],0x0",write other [TODO]
ex_handler_zeropad,0x11d,ctx->r14 + 0x60,"MOV qword ptr [R14 + 0x60],0x0",write other [TODO]
ex_handler_zeropad,0x12d,ctx->r14 + 0x80,"MOV qword ptr [R14 + 0x80],RAX",write other [TODO]
ex_handler_zeropad,0x13e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ex_get_fixup_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ex_get_fixup_type,0x9,0xffffffff810cac40,CALL 0xffffffff810cac40,direct call
ex_get_fixup_type,0x1f,,RET,ret
fixup_exception,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fixup_exception,0x22,0xffffffff810cac40,CALL 0xffffffff810cac40,direct call
fixup_exception,0x62,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],R14",write other [TODO]
fixup_exception,0x72,ctx->r13 + 0x50,"MOV qword ptr [R13 + 0x50],R14",write other [TODO]
fixup_exception,0xb5,0xffffffff81c8aeb0,CALL 0xffffffff81c8aeb0,direct call
fixup_exception,0xcb,ctx->rdx,"MOV qword ptr [RDX],RBX",write other [TODO]
fixup_exception,0xfa,0xffffffff81c8aeb0,CALL 0xffffffff81c8aeb0,direct call
fixup_exception,0x110,ctx->r13 + 0x58,"MOV qword ptr [R13 + 0x58],RBX",write other [TODO]
fixup_exception,0x11d,0xffffffff8108a2d0,CALL 0xffffffff8108a2d0,direct call
fixup_exception,0x12f,,RET,ret
fixup_exception,0x140,0xffffffff8108a350,CALL 0xffffffff8108a350,direct call
fixup_exception,0x152,,RET,ret
fixup_exception,0x182,ctx->r13 + 0x80,"MOV qword ptr [R13 + 0x80],RSI",write other [TODO]
fixup_exception,0x18f,0xffffffff81043930,CALL 0xffffffff81043930,direct call
fixup_exception,0x1bc,0xffffffff830c7c25,"MOV byte ptr [0xffffffff830c7c25],0x1",write .data
fixup_exception,0x1c3,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
fixup_exception,0x1dc,0xffffffff8108a350,CALL 0xffffffff8108a350,direct call
fixup_exception,0x1ee,,RET,ret
fixup_exception,0x1f8,0xffffffff8108a440,CALL 0xffffffff8108a440,direct call
fixup_exception,0x20b,0xffffffff8109f100,CALL 0xffffffff8109f100,direct call
fixup_exception,0x22f,,RET,ret
fixup_exception,0x235,0xffffffff81c90962,CALL 0xffffffff81c90962,direct call
fixup_exception,0x242,0xffffffff81c90962,CALL 0xffffffff81c90962,direct call
fixup_exception,0x24e,0xffffffff830c7c27,"MOV byte ptr [0xffffffff830c7c27],0x1",write .data
fixup_exception,0x255,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
mmap_base.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmap_base.isra.0,0xa3,,RET,ret
task_size_32bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_size_32bit,0x28,,RET,ret
task_size_64bit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_size_64bit,0x22,,RET,ret
arch_mmap_rnd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_mmap_rnd,0x30,0xffffffff817b71e0,CALL 0xffffffff817b71e0,direct call
arch_mmap_rnd,0x50,,RET,ret
arch_pick_mmap_layout,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_pick_mmap_layout,0x52,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
arch_pick_mmap_layout,0x65,0xffffffff817b71e0,CALL 0xffffffff817b71e0,direct call
arch_pick_mmap_layout,0x9a,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RBX",write other [TODO]
arch_pick_mmap_layout,0xbd,0xffffffff8108a830,CALL 0xffffffff8108a830,direct call
arch_pick_mmap_layout,0xc5,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RBX",write other [TODO]
arch_pick_mmap_layout,0x111,0xffffffff817b71e0,CALL 0xffffffff817b71e0,direct call
arch_pick_mmap_layout,0x146,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],RBX",write other [TODO]
arch_pick_mmap_layout,0x162,0xffffffff8108a830,CALL 0xffffffff8108a830,direct call
arch_pick_mmap_layout,0x16a,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RBX",write other [TODO]
arch_pick_mmap_layout,0x179,,RET,ret
get_mmap_base,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_mmap_base,0x28,,RET,ret
get_mmap_base,0x32,,RET,ret
get_mmap_base,0x38,,RET,ret
get_mmap_base,0x3e,,RET,ret
arch_vma_name,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_vma_name,0xc,,RET,ret
mmap_address_hint_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmap_address_hint_valid,0x5b,,RET,ret
valid_phys_addr_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
valid_phys_addr_range,0x3e,,RET,ret
valid_mmap_phys_addr_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
valid_mmap_phys_addr_range,0x26,,RET,ret
pfn_modify_allowed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8108acc8,0x68,,RET,ret
FUN_ffffffff8108acc8,0x72,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
FUN_ffffffff8108acc8,0x78,,RET,ret
mod_lruvec_page_state.constprop.0,0x7,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
mod_lruvec_page_state.constprop.0,0x10,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
mod_lruvec_page_state.constprop.0,0x1b,0xffffffff813472e0,CALL 0xffffffff813472e0,direct call
mod_lruvec_page_state.constprop.0,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
mod_lruvec_page_state.constprop.0,0x30,,RET,ret
free_pmds.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_pmds.constprop.0,0xa,,RET,ret
preallocate_pmds.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
preallocate_pmds.constprop.0,0xc,,RET,ret
pte_alloc_one,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pte_alloc_one,0x13,0xffffffff81316150,CALL 0xffffffff81316150,direct call
pte_alloc_one,0x2f,ctx->rax + 0x28,"MOV dword ptr [RAX + 0x28],0x0",write other [TODO]
pte_alloc_one,0x36,0xffffffff8108ad50,CALL 0xffffffff8108ad50,direct call
pte_alloc_one,0x43,,RET,ret
___pte_free_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
___pte_free_tlb,0x21,0xffffffff8108ad50,CALL 0xffffffff8108ad50,direct call
___pte_free_tlb,0x34,0xffffffff82e4ba10,CALL qword ptr [0xffffffff82e4ba10],in-direct call
___pte_free_tlb,0x40,0xffffffff82e4b998,CALL qword ptr [0xffffffff82e4b998],in-direct call
___pte_free_tlb,0x4a,,RET,ret
___pmd_free_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
___pmd_free_tlb,0x3d,0xffffffff82e4ba18,CALL qword ptr [0xffffffff82e4ba18],in-direct call
___pmd_free_tlb,0x54,0xffffffff8108ad50,CALL 0xffffffff8108ad50,direct call
___pmd_free_tlb,0x5f,0xffffffff82e4b998,CALL qword ptr [0xffffffff82e4b998],in-direct call
___pmd_free_tlb,0x69,,RET,ret
___pud_free_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
___pud_free_tlb,0x45,0xffffffff82e4ba20,CALL qword ptr [0xffffffff82e4ba20],in-direct call
___pud_free_tlb,0x7a,0xffffffff82e4b998,CALL qword ptr [0xffffffff82e4b998],in-direct call
___pud_free_tlb,0x86,,RET,ret
___p4d_free_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
___p4d_free_tlb,0x45,0xffffffff82e4ba28,CALL qword ptr [0xffffffff82e4ba28],in-direct call
___p4d_free_tlb,0x7a,0xffffffff82e4b998,CALL qword ptr [0xffffffff82e4b998],in-direct call
___p4d_free_tlb,0x86,,RET,ret
pgd_page_get_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgd_page_get_mm,0xe,,RET,ret
pgd_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgd_alloc,0x29,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
pgd_alloc,0x2f,0xffffffff812ebc30,CALL 0xffffffff812ebc30,direct call
pgd_alloc,0x3d,ctx->r13 + 0x48,"MOV qword ptr [R13 + 0x48],RAX",write other [TODO]
pgd_alloc,0x50,0xffffffff8108ada0,CALL 0xffffffff8108ada0,direct call
pgd_alloc,0x66,0xffffffff8108ada0,CALL 0xffffffff8108ada0,direct call
pgd_alloc,0x76,0xffffffff82e4b9e0,CALL qword ptr [0xffffffff82e4b9e0],in-direct call
pgd_alloc,0x8b,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
pgd_alloc,0xcc,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
pgd_alloc,0xdd,ctx->rax + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RAX + RDX*0x1 + -0x8],RDI",write other [TODO]
pgd_alloc,0xfa,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
pgd_alloc,0x138,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],R13",write other [TODO]
pgd_alloc,0x13c,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
pgd_alloc,0x140,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
pgd_alloc,0x144,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],-0x7d1b3c30",write other [TODO]
pgd_alloc,0x14c,0xffffffff82e4c3d0,"MOV qword ptr [0xffffffff82e4c3d0],RDX",write .data
pgd_alloc,0x153,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
pgd_alloc,0x175,,RET,ret
pgd_alloc,0x17e,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pgd_alloc,0x185,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pgd_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgd_free,0x19,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
pgd_free,0x57,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
pgd_free,0x5b,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
pgd_free,0x68,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
pgd_free,0x70,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
pgd_free,0x74,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
pgd_free,0x7f,0xffffffff82e4b9e8,CALL qword ptr [0xffffffff82e4b9e8],in-direct call
pgd_free,0x8a,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pgd_free,0x93,,RET,ret
ptep_set_access_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptep_set_access_flags,0x2a,,RET,ret
ptep_set_access_flags,0x31,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
ptep_set_access_flags,0x3f,,RET,ret
pmdp_set_access_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmdp_set_access_flags,0x11,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmdp_set_access_flags,0x1d,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmdp_set_access_flags,0x42,,RET,ret
pmdp_set_access_flags,0x46,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
pmdp_set_access_flags,0x54,,RET,ret
pudp_set_access_flags,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pudp_set_access_flags,0x11,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pudp_set_access_flags,0x1d,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pudp_set_access_flags,0x42,,RET,ret
pudp_set_access_flags,0x46,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
pudp_set_access_flags,0x54,,RET,ret
ptep_test_and_clear_young,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptep_test_and_clear_young,0x2e,,RET,ret
pmdp_test_and_clear_young,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmdp_test_and_clear_young,0x43,,RET,ret
pudp_test_and_clear_young,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pudp_test_and_clear_young,0x43,,RET,ret
ptep_clear_flush_young,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptep_clear_flush_young,0x2e,,RET,ret
pmdp_clear_flush_young,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmdp_clear_flush_young,0x72,0xffffffff8108c9c0,CALL 0xffffffff8108c9c0,direct call
pmdp_clear_flush_young,0x7d,,RET,ret
pmdp_clear_flush_young,0x80,,RET,ret
pmdp_invalidate_ad,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmdp_invalidate_ad,0x41,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmdp_invalidate_ad,0x94,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
pmdp_invalidate_ad,0x9e,,RET,ret
__native_set_fixmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__native_set_fixmap,0x21,0xffffffff81087760,CALL 0xffffffff81087760,direct call
__native_set_fixmap,0x2e,,RET,ret
native_set_fixmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_set_fixmap,0x44,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
native_set_fixmap,0x64,0xffffffff81087760,CALL 0xffffffff81087760,direct call
native_set_fixmap,0x71,,RET,ret
p4d_set_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4d_set_huge,0xc,,RET,ret
p4d_clear_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
p4d_clear_huge,0xa,,RET,ret
pud_set_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pud_set_huge,0x32,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
pud_set_huge,0x38,0xffffffff81059730,CALL 0xffffffff81059730,direct call
pud_set_huge,0xcf,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
pud_set_huge,0xdb,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
pud_set_huge,0xff,,RET,ret
pud_set_huge,0x100,0xffffffff81092230,CALL 0xffffffff81092230,direct call
pud_set_huge,0x111,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pmd_set_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmd_set_huge,0x37,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
pmd_set_huge,0x3d,0xffffffff81059730,CALL 0xffffffff81059730,direct call
pmd_set_huge,0xd7,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
pmd_set_huge,0xe3,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
pmd_set_huge,0x109,,RET,ret
pmd_set_huge,0x10a,0xffffffff81092200,CALL 0xffffffff81092200,direct call
pmd_set_huge,0x12c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pud_clear_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pud_clear_huge,0xf,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pud_clear_huge,0x29,,RET,ret
pud_clear_huge,0x2f,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
pud_clear_huge,0x3f,,RET,ret
pmd_clear_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmd_clear_huge,0x33,,RET,ret
pmd_clear_huge,0x3a,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
pmd_clear_huge,0x46,,RET,ret
pud_free_pmd_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pud_free_pmd_page,0x16,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
pud_free_pmd_page,0x1d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
pud_free_pmd_page,0x21,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pud_free_pmd_page,0x52,0xffffffff812ebc30,CALL 0xffffffff812ebc30,direct call
pud_free_pmd_page,0x72,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pud_free_pmd_page,0x91,ctx->r13 + ctx->rbx * 0x1,"MOV qword ptr [R13 + RBX*0x1],RAX",write other [TODO]
pud_free_pmd_page,0xa5,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
pud_free_pmd_page,0xba,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
pud_free_pmd_page,0xd5,0xffffffff8108cb20,CALL 0xffffffff8108cb20,direct call
pud_free_pmd_page,0xf1,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pud_free_pmd_page,0x121,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pud_free_pmd_page,0x130,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pud_free_pmd_page,0x16d,0xffffffff8108ad50,CALL 0xffffffff8108ad50,direct call
pud_free_pmd_page,0x178,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pud_free_pmd_page,0x190,,RET,ret
pmd_free_pte_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmd_free_pte_page,0x16,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmd_free_pte_page,0x41,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
pmd_free_pte_page,0x51,0xffffffff8108cb20,CALL 0xffffffff8108cb20,direct call
pmd_free_pte_page,0x5b,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
pmd_free_pte_page,0x6a,,RET,ret
__virt_addr_valid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8108bc7a,-0x7c,,RET,ret
tlb_is_not_lazy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tlb_is_not_lazy,0x18,ctx->eax,"MOVZX EAX,byte ptr [RDX + RAX*0x1]",write other [TODO]
tlb_is_not_lazy,0x23,,RET,ret
l1d_flush_force_sigbus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
l1d_flush_force_sigbus,0xe,0xffffffff810b95a0,CALL 0xffffffff810b95a0,direct call
l1d_flush_force_sigbus,0x14,,RET,ret
tlbflush_write_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tlbflush_write_file,0x2b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
tlbflush_write_file,0x3d,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
tlbflush_write_file,0x4c,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
tlbflush_write_file,0x60,ctx->rbp + ctx->r12 * 0x1 - 0x40,"MOV byte ptr [RBP + R12*0x1 + -0x40],0x0",write stack
tlbflush_write_file,0x66,0xffffffff81608040,CALL 0xffffffff81608040,direct call
tlbflush_write_file,0x77,0xffffffff83118000,"MOV qword ptr [0xffffffff83118000],RAX",write .data
tlbflush_write_file,0x9a,,RET,ret
tlbflush_write_file,0xad,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tlbflush_read_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tlbflush_read_file,0x37,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
tlbflush_read_file,0x3d,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
tlbflush_read_file,0x52,0xffffffff81399170,CALL 0xffffffff81399170,direct call
tlbflush_read_file,0x71,,RET,ret
tlbflush_read_file,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_flush_tlb_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_flush_tlb_all,0x15,0xffffffff82e4b980,CALL qword ptr [0xffffffff82e4b980],in-direct call
do_flush_tlb_all,0x1c,,RET,ret
do_flush_tlb_all,0x1d,0xffffffff82e4b978,CALL qword ptr [0xffffffff82e4b978],in-direct call
do_flush_tlb_all,0x24,,RET,ret
__flush_tlb_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__flush_tlb_all,0x15,0xffffffff82e4b980,CALL qword ptr [0xffffffff82e4b980],in-direct call
__flush_tlb_all,0x1c,,RET,ret
__flush_tlb_all,0x1d,0xffffffff82e4b978,CALL qword ptr [0xffffffff82e4b978],in-direct call
__flush_tlb_all,0x24,,RET,ret
__get_current_cr3_fast,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff8108bee0,0x23,,RET,ret
cr4_update_pce,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cr4_update_pce,0x1f,0xffffffff81007750,CALL 0xffffffff81007750,direct call
cr4_update_pce,0x2b,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_update_pce,0x31,,RET,ret
cr4_update_pce,0x39,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
cr4_update_pce,0x3f,,RET,ret
switch_mm_irqs_off,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
switch_mm_irqs_off,0x3d,ctx->gs + 0x30d40,"MOV byte ptr GS:[0x30d40],0x0",write other [TODO]
switch_mm_irqs_off,0x93,ctx->gs + 0x30c88,"MOV qword ptr GS:[0x30c88],RBX",write other [TODO]
FUN_ffffffff8108c26f,-0x1b2,ctx->gs + 0x30c80,"MOV qword ptr GS:[0x30c80],R12",write other [TODO]
FUN_ffffffff8108c26f,-0x1aa,ctx->wordctx->ptrctx->gs + 0x30c90,"MOV word ptr GS:[0x30c90],BX",write other [TODO]
FUN_ffffffff8108c26f,-0x17f,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
FUN_ffffffff8108c26f,-0x174,0xffffffff8103b380,CALL 0xffffffff8103b380,direct call
FUN_ffffffff8108c26f,-0x165,,RET,ret
FUN_ffffffff8108c26f,-0xc8,0xffffffff81007750,CALL 0xffffffff81007750,direct call
FUN_ffffffff8108c26f,-0xbc,0xffffffff8104b4a0,CALL 0xffffffff8104b4a0,direct call
FUN_ffffffff8108c26f,0x26,0xffffffff82e4b9c8,CALL qword ptr [0xffffffff82e4b9c8],in-direct call
switch_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
switch_mm,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
switch_mm,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
switch_mm,0x19,0xffffffff8108bf60,CALL 0xffffffff8108bf60,direct call
switch_mm,0x23,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
switch_mm,0x2e,,RET,ret
leave_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
leave_mm,0x2f,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
leave_mm,0x35,,RET,ret
leave_mm,0x36,,RET,ret
flush_tlb_func,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_func,0x6e,,RET,ret
flush_tlb_func,0xd2,0xffffffff82e4b978,CALL qword ptr [0xffffffff82e4b978],in-direct call
flush_tlb_func,0xd8,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],-0x1",write stack
flush_tlb_func,0xe7,ctx->gs + ctx->rbx + 0x30c88,"MOV qword ptr GS:[RBX + 0x30c88],R15",write other [TODO]
flush_tlb_func,0x116,,RET,ret
flush_tlb_func,0x165,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
flush_tlb_func,0x17a,0xffffffff8108bf60,CALL 0xffffffff8108bf60,direct call
flush_tlb_func,0x18d,,RET,ret
flush_tlb_func,0x1a2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
flush_tlb_func,0x1af,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],R14D",write stack
flush_tlb_func,0x1bc,0xffffffff82e4b988,CALL qword ptr [0xffffffff82e4b988],in-direct call
enter_lazy_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enter_lazy_tlb,0x19,ctx->gs + 0x30d40,"MOV byte ptr GS:[0x30d40],0x1",write other [TODO]
enter_lazy_tlb,0x22,,RET,ret
initialize_tlbstate_and_flush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
initialize_tlbstate_and_flush,0x1b,0xffffffff82e4b9c0,CALL qword ptr [0xffffffff82e4b9c0],in-direct call
initialize_tlbstate_and_flush,0x157,0xffffffff8104b540,CALL 0xffffffff8104b540,direct call
FUN_ffffffff8108c80f,-0x7e,0xffffffff82e4b9c8,CALL qword ptr [0xffffffff82e4b9c8],in-direct call
FUN_ffffffff8108c80f,-0x78,ctx->gs + 0x30c88,"MOV qword ptr GS:[0x30c88],0x1",write other [TODO]
FUN_ffffffff8108c80f,-0x6c,ctx->wordctx->ptrctx->gs + 0x30c90,"MOV word ptr GS:[0x30c90],0x0",write other [TODO]
FUN_ffffffff8108c80f,-0x62,ctx->wordctx->ptrctx->gs + 0x30c92,"MOV word ptr GS:[0x30c92],0x1",write other [TODO]
FUN_ffffffff8108c80f,-0x51,ctx->gs + 0x30ca0,"MOV qword ptr GS:[0x30ca0],RAX",write other [TODO]
FUN_ffffffff8108c80f,-0x49,ctx->gs + 0x30ca8,"MOV qword ptr GS:[0x30ca8],R12",write other [TODO]
FUN_ffffffff8108c80f,-0x41,ctx->gs + 0x30cb0,"MOV qword ptr GS:[0x30cb0],0x0",write other [TODO]
FUN_ffffffff8108c80f,-0x35,ctx->gs + 0x30cc0,"MOV qword ptr GS:[0x30cc0],0x0",write other [TODO]
FUN_ffffffff8108c80f,-0x29,ctx->gs + 0x30cd0,"MOV qword ptr GS:[0x30cd0],0x0",write other [TODO]
FUN_ffffffff8108c80f,-0x1d,ctx->gs + 0x30ce0,"MOV qword ptr GS:[0x30ce0],0x0",write other [TODO]
FUN_ffffffff8108c80f,-0x11,ctx->gs + 0x30cf0,"MOV qword ptr GS:[0x30cf0],0x0",write other [TODO]
FUN_ffffffff8108c80f,-0x1,,RET,ret
native_flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_flush_tlb_multi,0x42,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
native_flush_tlb_multi,0x4c,,RET,ret
native_flush_tlb_multi,0x54,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
native_flush_tlb_multi,0x5e,,RET,ret
flush_tlb_multi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_multi,0x9,0xffffffff82e4b990,CALL qword ptr [0xffffffff82e4b990],in-direct call
flush_tlb_multi,0x10,,RET,ret
flush_tlb_mm_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_mm_range,0x7d,ctx->r12,"MOV qword ptr [R12],R14",write other [TODO]
flush_tlb_mm_range,0x81,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RSI",write other [TODO]
flush_tlb_mm_range,0x86,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
flush_tlb_mm_range,0x8c,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RDX",write other [TODO]
flush_tlb_mm_range,0x93,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
flush_tlb_mm_range,0x98,ctx->r12 + 0x24,"MOV byte ptr [R12 + 0x24],CL",write other [TODO]
flush_tlb_mm_range,0xa4,ctx->r12 + 0x25,"MOV byte ptr [R12 + 0x25],R8B",write other [TODO]
flush_tlb_mm_range,0xa9,ctx->r12 + 0x20,"MOV dword ptr [R12 + 0x20],EAX",write other [TODO]
flush_tlb_mm_range,0xba,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
flush_tlb_mm_range,0xe9,,RET,ret
flush_tlb_mm_range,0xf7,0xffffffff82e4b990,CALL qword ptr [0xffffffff82e4b990],in-direct call
flush_tlb_mm_range,0xff,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
flush_tlb_mm_range,0x108,0xffffffff8108c4c0,CALL 0xffffffff8108c4c0,direct call
flush_tlb_mm_range,0x10d,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
flush_tlb_mm_range,0x115,0xffffffff82000810,CALL 0xffffffff82000810,direct call
flush_tlb_mm_range,0x124,,RET,ret
flush_tlb_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_all,0x20,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
flush_tlb_all,0x26,,RET,ret
flush_tlb_kernel_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_kernel_range,0x3c,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
flush_tlb_kernel_range,0x42,,RET,ret
flush_tlb_kernel_range,0x67,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RDI",write other [TODO]
flush_tlb_kernel_range,0x6d,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RSI",write other [TODO]
flush_tlb_kernel_range,0x78,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
flush_tlb_kernel_range,0x7f,ctx->wordctx->ptrctx->rdx + 0x24,"MOV word ptr [RDX + 0x24],AX",write other [TODO]
flush_tlb_kernel_range,0x83,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],0x0",write other [TODO]
flush_tlb_kernel_range,0x92,ctx->rdx + 0x20,"MOV dword ptr [RDX + 0x20],EAX",write other [TODO]
flush_tlb_kernel_range,0x95,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
flush_tlb_kernel_range,0xa3,0xffffffff82000810,CALL 0xffffffff82000810,direct call
flush_tlb_kernel_range,0xa9,,RET,ret
flush_tlb_one_kernel,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_one_kernel,0x9,0xffffffff82e4b988,CALL qword ptr [0xffffffff82e4b988],in-direct call
do_kernel_range_flush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_kernel_range_flush,0x23,0xffffffff8108cbd0,CALL 0xffffffff8108cbd0,direct call
do_kernel_range_flush,0x33,,RET,ret
native_flush_tlb_one_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_flush_tlb_one_user,0x1a,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
flush_tlb_one_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_one_user,0x9,0xffffffff82e4b988,CALL qword ptr [0xffffffff82e4b988],in-direct call
flush_tlb_one_user,0x10,,RET,ret
native_flush_tlb_global,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_flush_tlb_global,0x1d,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
FUN_ffffffff8108cd1e,-0x1,,RET,ret
FUN_ffffffff8108cd1e,0x0,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
FUN_ffffffff8108cd1e,0x9,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
FUN_ffffffff8108cd1e,0x1e,0xffffffff8104b720,CALL 0xffffffff8104b720,direct call
FUN_ffffffff8108cd1e,0x26,0xffffffff8104b720,CALL 0xffffffff8104b720,direct call
FUN_ffffffff8108cd1e,0x30,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
FUN_ffffffff8108cd1e,0x38,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
native_flush_tlb_local,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
native_flush_tlb_local,0x17,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
native_flush_tlb_local,0x33,,RET,ret
flush_tlb_local,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_tlb_local,0x9,0xffffffff82e4b978,CALL qword ptr [0xffffffff82e4b978],in-direct call
flush_tlb_local,0x10,,RET,ret
arch_tlbbatch_flush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_tlbbatch_flush,0x34,ctx->wordctx->ptrctx->r13 + 0x24,"MOV word ptr [R13 + 0x24],AX",write other [TODO]
arch_tlbbatch_flush,0x3d,ctx->r13,"MOV qword ptr [R13],0x0",write other [TODO]
arch_tlbbatch_flush,0x45,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
arch_tlbbatch_flush,0x52,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],0x0",write other [TODO]
arch_tlbbatch_flush,0x5a,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],-0x1",write other [TODO]
arch_tlbbatch_flush,0x62,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],0x0",write other [TODO]
arch_tlbbatch_flush,0x6a,ctx->r13 + 0x20,"MOV dword ptr [R13 + 0x20],EAX",write other [TODO]
arch_tlbbatch_flush,0x7a,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
arch_tlbbatch_flush,0xa9,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
arch_tlbbatch_flush,0xbf,,RET,ret
arch_tlbbatch_flush,0xc0,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
arch_tlbbatch_flush,0xc9,0xffffffff8108c4c0,CALL 0xffffffff8108c4c0,direct call
arch_tlbbatch_flush,0xce,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
arch_tlbbatch_flush,0xdc,0xffffffff82e4b990,CALL qword ptr [0xffffffff82e4b990],in-direct call
arch_tlbbatch_flush,0xe4,0xffffffff82000810,CALL 0xffffffff82000810,direct call
arch_tlbbatch_flush,0xf1,,RET,ret
nmi_uaccess_okay,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_uaccess_okay,0x25,,RET,ret
cea_set_pte,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cea_set_pte,0x41,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
cea_set_pte,0x66,0xffffffff81087760,CALL 0xffffffff81087760,direct call
cea_set_pte,0x6c,,RET,ret
copy_from_kernel_nofault_allowed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_from_kernel_nofault_allowed,0x43,,RET,ret
vm_get_page_prot,0x55,,RET,ret
add_encrypt_protection_map,0x13,0xffffffff810022c0,CALL 0xffffffff810022c0,direct call
add_encrypt_protection_map,0x18,ctx->rbx - 0x8,"MOV qword ptr [RBX + -0x8],RAX",write other [TODO]
add_encrypt_protection_map,0x2a,,RET,ret
__cpa_flush_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpa_flush_all,0xd,0xffffffff8108be60,CALL 0xffffffff8108be60,direct call
__cpa_flush_all,0x25,,RET,ret
__cpa_flush_all,0x26,0xffffffff82e4b908,CALL qword ptr [0xffffffff82e4b908],in-direct call
__cpa_flush_all,0x31,,RET,ret
cpa_flush_all,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpa_flush_all,0xc,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
cpa_flush_all,0x2c,0xffffffff8116e580,CALL 0xffffffff8116e580,direct call
cpa_flush_all,0x32,,RET,ret
__cpa_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpa_addr,0x22,,RET,ret
__cpa_addr,0x28,,RET,ret
__cpa_addr,0x48,,RET,ret
FUN_ffffffff8108d162,0x0,,RET,ret
clflush_cache_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clflush_cache_range,0x36,,RET,ret
arch_invalidate_pmem,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_invalidate_pmem,0x36,,RET,ret
__cpa_flush_tlb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpa_flush_tlb,0x31,0xffffffff8108cbd0,CALL 0xffffffff8108cbd0,direct call
__cpa_flush_tlb,0x75,,RET,ret
alloc_pte_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_pte_page,0x12,0xffffffff812ec140,CALL 0xffffffff812ec140,direct call
alloc_pte_page,0x43,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
alloc_pte_page,0x4f,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
alloc_pte_page,0x5c,,RET,ret
alloc_pmd_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_pmd_page,0x12,0xffffffff812ec140,CALL 0xffffffff812ec140,direct call
alloc_pmd_page,0x43,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
alloc_pmd_page,0x4f,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
alloc_pmd_page,0x5c,,RET,ret
populate_pte.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
populate_pte.isra.0,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
populate_pte.isra.0,0x33,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
populate_pte.isra.0,0x92,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
populate_pte.isra.0,0x9a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
populate_pte.isra.0,0xc1,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
populate_pte.isra.0,0xcd,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
populate_pte.isra.0,0xf0,ctx->r14 + 0x30,"MOV qword ptr [R14 + 0x30],RAX",write other [TODO]
populate_pte.isra.0,0x124,,RET,ret
__unmap_pmd_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__unmap_pmd_range,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
__unmap_pmd_range,0x33,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
__unmap_pmd_range,0x6b,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__unmap_pmd_range,0x77,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__unmap_pmd_range,0x90,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
__unmap_pmd_range,0xe2,,RET,ret
__unmap_pmd_range,0xfa,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
__unmap_pmd_range,0x105,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
__unmap_pmd_range,0x112,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
__unmap_pmd_range,0x164,,RET,ret
__unmap_pmd_range,0x170,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
__unmap_pmd_range,0x17c,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
__unmap_pmd_range,0x190,,RET,ret
unmap_pmd_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unmap_pmd_range,0x1c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
unmap_pmd_range,0x23,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
unmap_pmd_range,0x8c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
unmap_pmd_range,0xa0,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
unmap_pmd_range,0xf1,0xffffffff8108d490,CALL 0xffffffff8108d490,direct call
unmap_pmd_range,0x136,,RET,ret
unmap_pmd_range,0x16f,0xffffffff8108d490,CALL 0xffffffff8108d490,direct call
unmap_pmd_range,0x179,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
unmap_pmd_range,0x1c1,0xffffffff812ef340,CALL 0xffffffff812ef340,direct call
unmap_pmd_range,0x1cc,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
unmap_pmd_range,0x1e4,0xffffffff8108d490,CALL 0xffffffff8108d490,direct call
unmap_pmd_range,0x1f7,,RET,ret
populate_pmd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
populate_pmd,0x21,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
populate_pmd,0x25,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ECX",write stack
populate_pmd,0x28,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
populate_pmd,0x3b,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
populate_pmd,0x93,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
populate_pmd,0x9d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
populate_pmd,0x10f,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
populate_pmd,0x11d,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
populate_pmd,0x14e,0xffffffff8108d2e0,CALL 0xffffffff8108d2e0,direct call
populate_pmd,0x15e,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
populate_pmd,0x1bb,,RET,ret
populate_pmd,0x1ee,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
populate_pmd,0x233,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],ECX",write stack
populate_pmd,0x236,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
populate_pmd,0x23a,0xffffffff8108d270,CALL 0xffffffff8108d270,direct call
populate_pmd,0x257,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
populate_pmd,0x25b,0xffffffff8108d350,CALL 0xffffffff8108d350,direct call
populate_pmd,0x269,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],-0x1",write stack
populate_pmd,0x279,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
populate_pmd,0x2ba,0xffffffff8108d270,CALL 0xffffffff8108d270,direct call
populate_pmd,0x2d9,0xffffffff8108d350,CALL 0xffffffff8108d350,direct call
__cpa_process_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpa_process_fault,0x51,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x1",write other [TODO]
__cpa_process_fault,0x76,ctx->r13 + 0x30,"MOV qword ptr [R13 + 0x30],RAX",write other [TODO]
__cpa_process_fault,0x7c,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x1",write other [TODO]
__cpa_process_fault,0xf5,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
FUN_ffffffff8108e126,-0x53e,,RET,ret
FUN_ffffffff8108e126,-0x448,0xffffffff8108d120,CALL 0xffffffff8108d120,direct call
FUN_ffffffff8108e126,-0x443,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
FUN_ffffffff8108e126,-0x424,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
FUN_ffffffff8108e126,-0x411,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
FUN_ffffffff8108e126,-0x404,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
FUN_ffffffff8108e126,-0x3e2,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff8108e126,-0x389,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
FUN_ffffffff8108e126,-0x35f,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R15",write stack
FUN_ffffffff8108e126,-0x342,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
FUN_ffffffff8108e126,-0x337,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RSI",write stack
FUN_ffffffff8108e126,-0x2f2,0xffffffff82e4ba90,CALL qword ptr [0xffffffff82e4ba90],in-direct call
FUN_ffffffff8108e126,-0x2e2,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
FUN_ffffffff8108e126,-0x2b8,ctx->r13 + 0x30,"MOV qword ptr [R13 + 0x30],RAX",write other [TODO]
FUN_ffffffff8108e126,-0x262,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],R12",write other [TODO]
FUN_ffffffff8108e126,-0x251,0xffffffff812ec140,CALL 0xffffffff812ec140,direct call
FUN_ffffffff8108e126,-0x218,0xffffffff82e4baa8,CALL qword ptr [0xffffffff82e4baa8],in-direct call
FUN_ffffffff8108e126,-0x20b,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
FUN_ffffffff8108e126,-0x1f9,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff8108e126,-0x1bc,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
FUN_ffffffff8108e126,-0x1b8,0xffffffff8108d2e0,CALL 0xffffffff8108d2e0,direct call
FUN_ffffffff8108e126,-0x195,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
FUN_ffffffff8108e126,-0x18a,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff8108e126,-0x135,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
FUN_ffffffff8108e126,-0x120,0xffffffff8108d630,CALL 0xffffffff8108d630,direct call
FUN_ffffffff8108e126,-0x10a,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff8108e126,-0xe8,0xffffffff82e4ba70,CALL qword ptr [0xffffffff82e4ba70],in-direct call
FUN_ffffffff8108e126,-0xcb,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
FUN_ffffffff8108e126,-0xc4,0xffffffff8108d840,CALL 0xffffffff8108d840,direct call
FUN_ffffffff8108e126,-0x76,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff8108e126,-0x3d,0xffffffff8108d2e0,CALL 0xffffffff8108d2e0,direct call
FUN_ffffffff8108e126,-0x1d,0xffffffff8108d840,CALL 0xffffffff8108d840,direct call
FUN_ffffffff8108e126,0x2b,0xffffffff82e4ba68,CALL qword ptr [0xffffffff82e4ba68],in-direct call
FUN_ffffffff8108e126,0x37,0xffffffff82e4ba98,CALL qword ptr [0xffffffff82e4ba98],in-direct call
FUN_ffffffff8108e126,0x6b,0xffffffff8108d630,CALL 0xffffffff8108d630,direct call
FUN_ffffffff8108e126,0x92,0xffffffff8108d630,CALL 0xffffffff8108d630,direct call
update_page_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
update_page_count,0x18,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
update_page_count,0x2f,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
update_page_count,0x38,,RET,ret
arch_report_meminfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_report_meminfo,0x24,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_report_meminfo,0x3e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_report_meminfo,0x52,,RET,ret
arch_report_meminfo,0x68,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
arch_report_meminfo,0x72,,RET,ret
lookup_address_in_pgd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lookup_address_in_pgd,0x12,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
FUN_ffffffff8108e320,-0x1,,RET,ret
FUN_ffffffff8108e320,0x3,0xffffffff8108d120,CALL 0xffffffff8108d120,direct call
FUN_ffffffff8108e320,0x14,ctx->rbx,"MOV dword ptr [RBX],0x4",write other [TODO]
FUN_ffffffff8108e320,0x23,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff8108e320,0x59,ctx->rbx,"MOV dword ptr [RBX],0x3",write other [TODO]
FUN_ffffffff8108e320,0x62,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff8108e320,0xaa,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff8108e320,0xed,ctx->rbx,"MOV dword ptr [RBX],0x2",write other [TODO]
FUN_ffffffff8108e320,0x127,ctx->rbx,"MOV dword ptr [RBX],0x1",write other [TODO]
FUN_ffffffff8108e320,0x13a,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
lookup_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lookup_address,0x1b,ctx->rcx,"MOV RCX,qword ptr [0xffffffff82fdb9e8]",write other [TODO]
lookup_address,0x2e,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
lookup_address,0x34,,RET,ret
cpa_flush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpa_flush,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
cpa_flush,0x26,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
FUN_ffffffff8108e614,-0x1,,RET,ret
FUN_ffffffff8108e614,0x5,0xffffffff8108d090,CALL 0xffffffff8108d090,direct call
FUN_ffffffff8108e614,0x3d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
slow_virt_to_phys,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
slow_virt_to_phys,0x2a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
slow_virt_to_phys,0x43,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
slow_virt_to_phys,0x65,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
slow_virt_to_phys,0xa2,,RET,ret
slow_virt_to_phys,0xa3,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
slow_virt_to_phys,0xe7,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
slow_virt_to_phys,0x141,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
static_protections,0x11,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
static_protections,0x15,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R9D",write stack
static_protections,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
static_protections,0xaf,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
static_protections,0xca,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
static_protections,0xc05751,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
static_protections,0xc05755,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__change_page_attr_set_clr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__change_page_attr_set_clr,0x19,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RDI",write stack
__change_page_attr_set_clr,0x20,ctx->rbp - 0xc0,"MOV dword ptr [RBP + -0xc0],ESI",write stack
__change_page_attr_set_clr,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__change_page_attr_set_clr,0x37,ctx->rbp - 0xd0,"MOV qword ptr [RBP + -0xd0],RAX",write stack
__change_page_attr_set_clr,0x3e,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RAX",write stack
__change_page_attr_set_clr,0x6d,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
__change_page_attr_set_clr,0x71,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__change_page_attr_set_clr,0x7d,0xffffffff8108d0d0,CALL 0xffffffff8108d0d0,direct call
__change_page_attr_set_clr,0x82,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RAX",write stack
__change_page_attr_set_clr,0xc3,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0xc8,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RAX",write stack
__change_page_attr_set_clr,0x115,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__change_page_attr_set_clr,0x148,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0x161,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x16d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x179,0xffffffff81316150,CALL 0xffffffff81316150,direct call
__change_page_attr_set_clr,0x188,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
__change_page_attr_set_clr,0x18f,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__change_page_attr_set_clr,0x1b2,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
__change_page_attr_set_clr,0x1b9,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__change_page_attr_set_clr,0x1f3,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0x20c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x21a,0xffffffff812ef270,CALL 0xffffffff812ef270,direct call
__change_page_attr_set_clr,0x23c,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0x241,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RAX",write stack
__change_page_attr_set_clr,0x26a,0xffffffff8108db50,CALL 0xffffffff8108db50,direct call
__change_page_attr_set_clr,0x279,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x2ef,0xffffffff82e4b9f0,CALL qword ptr [0xffffffff82e4b9f0],in-direct call
__change_page_attr_set_clr,0x2f8,ctx->rbp - 0xbc,"MOV dword ptr [RBP + -0xbc],EAX",write stack
__change_page_attr_set_clr,0x347,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
__change_page_attr_set_clr,0x39f,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x200000",write stack
__change_page_attr_set_clr,0x3de,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
__change_page_attr_set_clr,0x40a,0xffffffff8108e7b0,CALL 0xffffffff8108e7b0,direct call
__change_page_attr_set_clr,0x471,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__change_page_attr_set_clr,0x47d,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__change_page_attr_set_clr,0x4a8,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
__change_page_attr_set_clr,0x4d8,0xffffffff81086790,CALL 0xffffffff81086790,direct call
__change_page_attr_set_clr,0x517,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__change_page_attr_set_clr,0x527,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__change_page_attr_set_clr,0x52d,0xffffffff8108caf0,CALL 0xffffffff8108caf0,direct call
__change_page_attr_set_clr,0x539,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x569,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0x595,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x5a1,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0x5b4,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RBX",write other [TODO]
__change_page_attr_set_clr,0x5df,,RET,ret
__change_page_attr_set_clr,0x5fa,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0x64f,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
__change_page_attr_set_clr,0x6a6,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x1000",write stack
__change_page_attr_set_clr,0x6b6,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x200000",write stack
__change_page_attr_set_clr,0x6cc,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x1000",write stack
__change_page_attr_set_clr,0x719,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
__change_page_attr_set_clr,0x78d,ctx->rsi + 0x20,"MOV qword ptr [RSI + 0x20],RAX",write other [TODO]
__change_page_attr_set_clr,0x7fb,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RCX",write stack
__change_page_attr_set_clr,0x812,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
__change_page_attr_set_clr,0x820,ctx->rsi + 0x30,"MOV qword ptr [RSI + 0x30],RAX",write other [TODO]
__change_page_attr_set_clr,0x827,0xffffffff8108e7b0,CALL 0xffffffff8108e7b0,direct call
__change_page_attr_set_clr,0x9a8,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__change_page_attr_set_clr,0x9b8,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__change_page_attr_set_clr,0x9d0,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0xa11,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
__change_page_attr_set_clr,0xa61, - 0x7cbaf020 + ctx->rdx * 0x8,"MOV qword ptr [-0x7cbaf020 + RDX*0x8],RAX",write other [TODO]
__change_page_attr_set_clr,0xaa8,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
__change_page_attr_set_clr,0xaaf,0xffffffff81086790,CALL 0xffffffff81086790,direct call
__change_page_attr_set_clr,0xac3,0xffffffff8108d0d0,CALL 0xffffffff8108d0d0,direct call
__change_page_attr_set_clr,0xb65,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
__change_page_attr_set_clr,0xb6f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
__change_page_attr_set_clr,0xb7e,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
__change_page_attr_set_clr,0xb86,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__change_page_attr_set_clr,0xb8e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__change_page_attr_set_clr,0xb96,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
__change_page_attr_set_clr,0xb9e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__change_page_attr_set_clr,0xbaa,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__change_page_attr_set_clr,0xbb6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__change_page_attr_set_clr,0xbbe,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
__change_page_attr_set_clr,0xbc2,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
__change_page_attr_set_clr,0xbd3,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0xbdf,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0xc00,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
__change_page_attr_set_clr,0xc41,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RCX",write stack
__change_page_attr_set_clr,0xc57,0xffffffff8108e7b0,CALL 0xffffffff8108e7b0,direct call
__change_page_attr_set_clr,0xcc0,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
__change_page_attr_set_clr,0xcd3,ctx->r14 + 0x30,"MOV qword ptr [R14 + 0x30],R13",write other [TODO]
__change_page_attr_set_clr,0xcd7,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
__change_page_attr_set_clr,0xce3,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
__change_page_attr_set_clr,0xcf5,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
__change_page_attr_set_clr,0xd0e,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x1",write other [TODO]
__change_page_attr_set_clr,0xd16,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__change_page_attr_set_clr,0xdc5,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R8",write stack
__change_page_attr_set_clr,0xddc,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
__change_page_attr_set_clr,0xe39,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
__change_page_attr_set_clr,0xe45,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__change_page_attr_set_clr,0xe4d,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__change_page_attr_set_clr,0xe55,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
__change_page_attr_set_clr,0xe5d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__change_page_attr_set_clr,0xe65,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__change_page_attr_set_clr,0xe71,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__change_page_attr_set_clr,0xe7f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__change_page_attr_set_clr,0xe8a,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
__change_page_attr_set_clr,0xe8e,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
__change_page_attr_set_clr,0xee1,0xffffffff830c7c2d,"MOV byte ptr [0xffffffff830c7c2d],0x1",write .data
__change_page_attr_set_clr,0xef2,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__change_page_attr_set_clr,0xf45,0xffffffff830c7c2d,"MOV byte ptr [0xffffffff830c7c2d],0x1",write .data
__change_page_attr_set_clr,0xf4c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__change_page_attr_set_clr,0xf58,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
change_page_attr_set_clr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
change_page_attr_set_clr,0x3f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
change_page_attr_set_clr,0x58,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
change_page_attr_set_clr,0x96,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
change_page_attr_set_clr,0xa4,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],R9",write stack
change_page_attr_set_clr,0xab,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],R8D",write stack
change_page_attr_set_clr,0xaf,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],ESI",write stack
change_page_attr_set_clr,0xb2,0xffffffff812e6590,CALL 0xffffffff812e6590,direct call
change_page_attr_set_clr,0xbf,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R15",write stack
change_page_attr_set_clr,0xce,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R12",write stack
change_page_attr_set_clr,0xd9,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RBX",write stack
change_page_attr_set_clr,0xe6,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RSI",write stack
change_page_attr_set_clr,0xf4,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
change_page_attr_set_clr,0xf8,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
change_page_attr_set_clr,0x100,ctx->rbp - 0x3c,"MOV byte ptr [RBP + -0x3c],R8B",write stack
change_page_attr_set_clr,0x104,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
change_page_attr_set_clr,0x123,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
change_page_attr_set_clr,0x134,0xffffffff81086760,CALL 0xffffffff81086760,direct call
change_page_attr_set_clr,0x14b,0xffffffff8108e4f0,CALL 0xffffffff8108e4f0,direct call
change_page_attr_set_clr,0x170,,RET,ret
change_page_attr_set_clr,0x18f,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
change_page_attr_set_clr,0x1a2,0xffffffff8108d090,CALL 0xffffffff8108d090,direct call
change_page_attr_set_clr,0x1a9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
_set_pages_array,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_set_pages_array,0x56,0xffffffff81091090,CALL 0xffffffff81091090,direct call
_set_pages_array,0x8a,0xffffffff81091340,CALL 0xffffffff81091340,direct call
_set_pages_array,0xa7,,RET,ret
_set_pages_array,0xb6,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_pages_array,0xcf,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_pages_array,0xe7,,RET,ret
_set_pages_array,0xe8,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_pages_array,0x101,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_pages_array,0x114,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_pages_array,0x130,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_pages_array_uc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_array_uc,0xe,0xffffffff8108faa0,CALL 0xffffffff8108faa0,direct call
set_pages_array_uc,0x14,,RET,ret
set_pages_array_wc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_array_wc,0xe,0xffffffff8108faa0,CALL 0xffffffff8108faa0,direct call
set_pages_array_wc,0x14,,RET,ret
clear_mce_nospec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_mce_nospec,0x33,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
clear_mce_nospec,0x3b,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
clear_mce_nospec,0x43,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
clear_mce_nospec,0x58,,RET,ret
clear_mce_nospec,0x59,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_memory_wb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_wb,0x2e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
set_memory_wb,0x36,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDI",write stack
set_memory_wb,0x3e,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_wb,0x72,0xffffffff81091340,CALL 0xffffffff81091340,direct call
set_memory_wb,0x93,,RET,ret
set_memory_wb,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_pages_wb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_wb,0x1f,0xffffffff8108fc80,CALL 0xffffffff8108fc80,direct call
set_pages_wb,0x25,,RET,ret
set_memory_uc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_uc,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
set_memory_uc,0x30,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
set_memory_uc,0x64,0xffffffff81091090,CALL 0xffffffff81091090,direct call
set_memory_uc,0x94,,RET,ret
set_memory_uc,0x9a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R13",write stack
set_memory_uc,0x9e,0xffffffff81086700,CALL 0xffffffff81086700,direct call
set_memory_uc,0xb7,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_uc,0xe9,0xffffffff81091340,CALL 0xffffffff81091340,direct call
set_memory_uc,0xf0,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x1",write stack
set_memory_uc,0x104,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_pages_uc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_uc,0x1f,0xffffffff8108fd60,CALL 0xffffffff8108fd60,direct call
set_pages_uc,0x25,,RET,ret
__set_memory_enc_pgtable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__set_memory_enc_pgtable,0x19,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDI",write stack
__set_memory_enc_pgtable,0x26,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
__set_memory_enc_pgtable,0x4f,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__set_memory_enc_pgtable,0x56,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__set_memory_enc_pgtable,0x63,0xffffffff810022c0,CALL 0xffffffff810022c0,direct call
__set_memory_enc_pgtable,0x6a,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__set_memory_enc_pgtable,0x6e,0xffffffff81002290,CALL 0xffffffff81002290,direct call
__set_memory_enc_pgtable,0x73,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
__set_memory_enc_pgtable,0x82,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
__set_memory_enc_pgtable,0x86,0xffffffff812e6590,CALL 0xffffffff812e6590,direct call
__set_memory_enc_pgtable,0x8e,0xffffffff826ba500,CALL qword ptr [0xffffffff826ba500],in-direct call
__set_memory_enc_pgtable,0x98,0xffffffff826ba508,CALL qword ptr [0xffffffff826ba508],in-direct call
__set_memory_enc_pgtable,0xa5,0xffffffff8108e4f0,CALL 0xffffffff8108e4f0,direct call
__set_memory_enc_pgtable,0xb4,0xffffffff826ba4f0,CALL qword ptr [0xffffffff826ba4f0],in-direct call
__set_memory_enc_pgtable,0xc3,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
__set_memory_enc_pgtable,0xd1,0xffffffff8108e4f0,CALL 0xffffffff8108e4f0,direct call
__set_memory_enc_pgtable,0xe5,0xffffffff826ba4f8,CALL qword ptr [0xffffffff826ba4f8],in-direct call
__set_memory_enc_pgtable,0x113,,RET,ret
__set_memory_enc_pgtable,0x114,0xffffffff81002290,CALL 0xffffffff81002290,direct call
__set_memory_enc_pgtable,0x11b,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__set_memory_enc_pgtable,0x11f,0xffffffff810022c0,CALL 0xffffffff810022c0,direct call
__set_memory_enc_pgtable,0x13f,0xffffffff830c7c2b,"MOV byte ptr [0xffffffff830c7c2b],0x1",write .data
__set_memory_enc_pgtable,0x146,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__set_memory_enc_pgtable,0x157,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__set_memory_enc_pgtable,0x160,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_memory_decrypted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_decrypted,0x13,0xffffffff81033d80,CALL 0xffffffff81033d80,direct call
set_memory_decrypted,0x1e,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
set_memory_decrypted,0x32,,RET,ret
set_memory_decrypted,0x3e,0xffffffff81033de0,CALL 0xffffffff81033de0,direct call
set_memory_decrypted,0x48,,RET,ret
set_memory_decrypted,0x51,0xffffffff8108fea0,CALL 0xffffffff8108fea0,direct call
set_memory_decrypted,0x5b,,RET,ret
set_memory_encrypted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_encrypted,0x13,0xffffffff81033d80,CALL 0xffffffff81033d80,direct call
set_memory_encrypted,0x1e,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
set_memory_encrypted,0x32,,RET,ret
set_memory_encrypted,0x3b,0xffffffff81033de0,CALL 0xffffffff81033de0,direct call
set_memory_encrypted,0x45,,RET,ret
set_memory_encrypted,0x51,0xffffffff8108fea0,CALL 0xffffffff8108fea0,direct call
set_memory_encrypted,0x5b,,RET,ret
set_pages_array_wb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_array_wb,0x2e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
set_pages_array_wb,0x37,0xffffffff812e6590,CALL 0xffffffff812e6590,direct call
set_pages_array_wb,0x4b,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],0x0",write stack
set_pages_array_wb,0x53,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R12",write stack
set_pages_array_wb,0x57,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
set_pages_array_wb,0x5b,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
set_pages_array_wb,0x63,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x98",write stack
set_pages_array_wb,0x6b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
set_pages_array_wb,0x73,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x4",write stack
set_pages_array_wb,0x7a,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
set_pages_array_wb,0xb6,0xffffffff81091340,CALL 0xffffffff81091340,direct call
set_pages_array_wb,0xe1,,RET,ret
set_pages_array_wb,0xe4,0xffffffff81086760,CALL 0xffffffff81086760,direct call
set_pages_array_wb,0xfb,0xffffffff8108e4f0,CALL 0xffffffff8108e4f0,direct call
set_pages_array_wb,0x106,0xffffffff8108d090,CALL 0xffffffff8108d090,direct call
set_pages_array_wb,0x10d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
lookup_pmd_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lookup_pmd_address,0x16,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82fdb9e8]",write other [TODO]
FUN_ffffffff8109022e,-0x1,,RET,ret
FUN_ffffffff8109022e,0x3,0xffffffff8108d120,CALL 0xffffffff8108d120,direct call
FUN_ffffffff8109022e,0x1a,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
FUN_ffffffff8109022e,0x53,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff8109022e,0x9b,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
FUN_ffffffff8109022e,0xd2,,RET,ret
__set_memory_prot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__set_memory_prot,0x1b,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
__set_memory_prot,0x23,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
__set_memory_prot,0x29,,RET,ret
_set_memory_uc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_set_memory_uc,0x12,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
_set_memory_uc,0x1b,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_memory_uc,0x34,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_memory_uc,0x3e,,RET,ret
_set_memory_wc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_set_memory_wc,0x12,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
_set_memory_wc,0x1b,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_memory_wc,0x34,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_memory_wc,0x43,,RET,ret
_set_memory_wc,0x49,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_memory_wc,0x65,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_memory_wc,0x70,,RET,ret
set_memory_wc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_wc,0x21,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
set_memory_wc,0x51,0xffffffff81091090,CALL 0xffffffff81091090,direct call
set_memory_wc,0x6e,,RET,ret
set_memory_wc,0x75,0xffffffff81090380,CALL 0xffffffff81090380,direct call
set_memory_wc,0xa5,0xffffffff81091340,CALL 0xffffffff81091340,direct call
set_memory_wc,0xac,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x1",write stack
_set_memory_wt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_set_memory_wt,0x12,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
_set_memory_wt,0x1b,0xffffffff81086700,CALL 0xffffffff81086700,direct call
_set_memory_wt,0x34,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_memory_wt,0x3e,,RET,ret
_set_memory_wb,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_set_memory_wb,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
_set_memory_wb,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
_set_memory_wb,0x2a,,RET,ret
set_mce_nospec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_mce_nospec,0x2b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
set_mce_nospec,0x31,0xffffffff810690b0,CALL 0xffffffff810690b0,direct call
set_mce_nospec,0x83,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
set_mce_nospec,0x87,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_x,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_x,0x17,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_x,0x1e,,RET,ret
set_memory_x,0x37,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_x,0x3e,,RET,ret
set_memory_nx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_nx,0x17,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_nx,0x1e,,RET,ret
set_memory_nx,0x37,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_nx,0x3e,,RET,ret
set_memory_ro,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_ro,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_ro,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_ro,0x2a,,RET,ret
set_memory_rw,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_rw,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_rw,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_rw,0x2a,,RET,ret
set_memory_np,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_np,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_np,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_np,0x2a,,RET,ret
set_memory_np_noalias,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_np_noalias,0x1f,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_np_noalias,0x27,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_np_noalias,0x2d,,RET,ret
set_memory_4k,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_4k,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_4k,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_4k,0x2a,,RET,ret
set_memory_nonglobal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_nonglobal,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_nonglobal,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_nonglobal,0x2a,,RET,ret
set_memory_global,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_memory_global,0x1c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDI",write stack
set_memory_global,0x24,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_memory_global,0x2a,,RET,ret
set_pages_ro,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_ro,0x2a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
set_pages_ro,0x41,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
set_pages_ro,0x49,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_pages_ro,0x5e,,RET,ret
set_pages_ro,0x5f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_pages_rw,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_pages_rw,0x2a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
set_pages_rw,0x41,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
set_pages_rw,0x49,0xffffffff8108f8f0,CALL 0xffffffff8108f8f0,direct call
set_pages_rw,0x5e,,RET,ret
set_pages_rw,0x5f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_direct_map_invalid_noflush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_direct_map_invalid_noflush,0x24,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
set_direct_map_invalid_noflush,0x39,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDI",write stack
set_direct_map_invalid_noflush,0x4c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x3",write stack
set_direct_map_invalid_noflush,0x54,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
set_direct_map_invalid_noflush,0x58,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x1",write stack
set_direct_map_invalid_noflush,0x60,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
set_direct_map_invalid_noflush,0x75,,RET,ret
set_direct_map_invalid_noflush,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_direct_map_default_noflush,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_direct_map_default_noflush,0x24,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
set_direct_map_default_noflush,0x39,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDI",write stack
set_direct_map_default_noflush,0x4c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x3",write stack
set_direct_map_default_noflush,0x54,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
set_direct_map_default_noflush,0x58,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x1",write stack
set_direct_map_default_noflush,0x60,0xffffffff8108e970,CALL 0xffffffff8108e970,direct call
set_direct_map_default_noflush,0x75,,RET,ret
set_direct_map_default_noflush,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kernel_page_present,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_page_present,0x23,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
kernel_page_present,0x55,0xffffffff8108e2f0,CALL 0xffffffff8108e2f0,direct call
kernel_page_present,0x5d,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
kernel_page_present,0x76,,RET,ret
kernel_page_present,0x77,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pat_enabled,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pat_enabled,0x11,,RET,ret
pagerange_is_ram_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pagerange_is_ram_callback,0x21,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],EAX",write other [TODO]
pagerange_is_ram_callback,0x27,ctx->rdx + 0xc,"MOV dword ptr [RDX + 0xc],ECX",write other [TODO]
pagerange_is_ram_callback,0x2a,ctx->rdx,"MOV qword ptr [RDX],RDI",write other [TODO]
pagerange_is_ram_callback,0x3b,,RET,ret
__init_cache_modes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__init_cache_modes,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__init_cache_modes,0x2b,ctx->rbp - 0x19,"MOV byte ptr [RBP + -0x19],0x0",write stack
__init_cache_modes,0x57,ctx->rbp + ctx->rbx * 0x4 - 0x39,"MOV dword ptr [RBP + RBX*0x4 + -0x39],EAX",write stack
__init_cache_modes,0x5b,0xffffffff81086960,CALL 0xffffffff81086960,direct call
memtype_seq_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_seq_stop,0xc,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
memtype_seq_stop,0x12,,RET,ret
pat_pagerange_is_ram,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pat_pagerange_is_ram,0x25,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
pat_pagerange_is_ram,0x30,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RDI",write stack
pat_pagerange_is_ram,0x37,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],0x0",write stack
pat_pagerange_is_ram,0x5a,,RET,ret
pat_pagerange_is_ram,0x69,0xffffffff810ade80,CALL 0xffffffff810ade80,direct call
pat_pagerange_is_ram,0x87,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
lookup_memtype,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lookup_memtype,0x1e,0xffffffff826ba488,CALL qword ptr [0xffffffff826ba488],in-direct call
lookup_memtype,0x33,,RET,ret
lookup_memtype,0x3a,0xffffffff81090af0,CALL 0xffffffff81090af0,direct call
lookup_memtype,0x87,,RET,ret
lookup_memtype,0x8f,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
lookup_memtype,0x97,0xffffffff810920f0,CALL 0xffffffff810920f0,direct call
lookup_memtype,0xb3,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
lookup_memtype,0xb6,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
lookup_memtype,0xc7,,RET,ret
pat_pfn_immune_to_uc_mtrr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pat_pfn_immune_to_uc_mtrr,0xd,0xffffffff81090b80,CALL 0xffffffff81090b80,direct call
pat_pfn_immune_to_uc_mtrr,0x1c,,RET,ret
pgprot_writecombine,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgprot_writecombine,0x12,0xffffffff81086700,CALL 0xffffffff81086700,direct call
pgprot_writecombine,0x1f,,RET,ret
pgprot_writethrough,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pgprot_writethrough,0x12,0xffffffff81086700,CALL 0xffffffff81086700,direct call
pgprot_writethrough,0x1f,,RET,ret
memtype_seq_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_seq_open,0x13,0xffffffff813949e0,CALL 0xffffffff813949e0,direct call
memtype_seq_open,0x19,,RET,ret
memtype_seq_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_seq_show,0x2e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
memtype_seq_show,0x36,,RET,ret
memtype_get_idx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_get_idx,0x21,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
memtype_get_idx,0x35,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
memtype_get_idx,0x40,0xffffffff81092140,CALL 0xffffffff81092140,direct call
memtype_get_idx,0x4f,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
memtype_get_idx,0x61,,RET,ret
memtype_get_idx,0x68,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
memtype_seq_next,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_seq_next,0x10,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
memtype_seq_next,0x1c,ctx->rbx,"MOV qword ptr [RBX],RDI",write other [TODO]
memtype_seq_next,0x1f,0xffffffff81090d10,CALL 0xffffffff81090d10,direct call
memtype_seq_next,0x29,,RET,ret
memtype_seq_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_seq_start,0x15,0xffffffff81090d10,CALL 0xffffffff81090d10,direct call
memtype_seq_start,0x1f,,RET,ret
memtype_seq_start,0x20,ctx->rsi,"MOV qword ptr [RSI],0x1",write other [TODO]
memtype_seq_start,0x34,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
memtype_seq_start,0x3c,0xffffffff81090d10,CALL 0xffffffff81090d10,direct call
memtype_seq_start,0x46,,RET,ret
memtype_free.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_free.part.0,0x25,0xffffffff826ba488,CALL qword ptr [0xffffffff826ba488],in-direct call
memtype_free.part.0,0x3e,0xffffffff81090af0,CALL 0xffffffff81090af0,direct call
memtype_free.part.0,0x57,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
memtype_free.part.0,0x62,0xffffffff81092070,CALL 0xffffffff81092070,direct call
memtype_free.part.0,0x71,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
memtype_free.part.0,0x86,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
arch_io_free_memtype_wc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_io_free_memtype_wc,0x15,0xffffffff81090e00,CALL 0xffffffff81090e00,direct call
arch_io_free_memtype_wc,0x1b,,RET,ret
arch_io_free_memtype_wc,0x1c,,RET,ret
pat_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pat_disable,0x2a,,RET,ret
pat_disable,0x32,0xffffffff830c7c2e,"MOV byte ptr [0xffffffff830c7c2e],0x1",write .data
pat_disable,0x39,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
pat_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pat_init,0x6f,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pat_init,0x79,,RET,ret
pat_init,0x8d,0xffffffff82e4b918,CALL qword ptr [0xffffffff82e4b918],in-direct call
pat_init,0xa7,0xffffffff82e4b920,CALL qword ptr [0xffffffff82e4b920],in-direct call
pat_init,0xb0,0xffffffff83118009,"MOV byte ptr [0xffffffff83118009],0x1",write .data
pat_init,0xb7,0xffffffff81090a60,CALL 0xffffffff81090a60,direct call
pat_init,0xbc,0xffffffff8311800b,"MOV byte ptr [0xffffffff8311800b],0x1",write .data
pat_init,0xc7,,RET,ret
pat_init,0xc8,,RET,ret
pat_init,0xea,0xffffffff81090f10,CALL 0xffffffff81090f10,direct call
pat_init,0x126,0xffffffff81090f10,CALL 0xffffffff81090f10,direct call
memtype_reserve,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_reserve,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
memtype_reserve,0x5e,0xffffffff826ba488,CALL qword ptr [0xffffffff826ba488],in-direct call
memtype_reserve,0x71,ctx->rbx,"MOV dword ptr [RBX],0x0",write other [TODO]
memtype_reserve,0x9f,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R14D",write stack
memtype_reserve,0xb4,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
memtype_reserve,0xbc,0xffffffff81090af0,CALL 0xffffffff81090af0,direct call
memtype_reserve,0xe3,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
memtype_reserve,0xf4,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R15",write other [TODO]
memtype_reserve,0xff,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
memtype_reserve,0x105,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
memtype_reserve,0x109,ctx->r10 + 0x18,"MOV dword ptr [R10 + 0x18],EAX",write other [TODO]
memtype_reserve,0x10d,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
memtype_reserve,0x119,0xffffffff81091f80,CALL 0xffffffff81091f80,direct call
memtype_reserve,0x134,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
memtype_reserve,0x138,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
memtype_reserve,0x15c,ctx->rbx,"MOV dword ptr [RBX],R14D",write other [TODO]
memtype_reserve,0x16b,0xffffffff81059730,CALL 0xffffffff81059730,direct call
memtype_reserve,0x17a,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
memtype_reserve,0x1e5,ctx->rbx,"MOV dword ptr [RBX],R14D",write other [TODO]
memtype_reserve,0x26c,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
memtype_reserve,0x293,ctx->rbx,"MOV dword ptr [RBX],0x2",write other [TODO]
memtype_reserve,0xc02fe1,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
memtype_reserve,0xc02fe5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
memtype_reserve,0xc02fee,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
memtype_reserve,0xc02ffa,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
memtype_reserve,0xc03041,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
memtype_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_free,0x12,0xffffffff81090e00,CALL 0xffffffff81090e00,direct call
memtype_free,0x18,,RET,ret
memtype_free,0x1b,,RET,ret
memtype_free_io,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_free_io,0x12,0xffffffff81090e00,CALL 0xffffffff81090e00,direct call
memtype_free_io,0x18,,RET,ret
memtype_free_io,0x19,,RET,ret
phys_mem_access_prot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
phys_mem_access_prot,0x18,0xffffffff8108a290,CALL 0xffffffff8108a290,direct call
phys_mem_access_prot,0x29,,RET,ret
phys_mem_access_prot,0x2d,0xffffffff81002290,CALL 0xffffffff81002290,direct call
phys_mem_access_prot,0x3d,,RET,ret
phys_mem_access_prot_allowed,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
phys_mem_access_prot_allowed,0x1e,0xffffffff81086700,CALL 0xffffffff81086700,direct call
phys_mem_access_prot_allowed,0x2b,ctx->r12,"MOV qword ptr [R12],RBX",write other [TODO]
phys_mem_access_prot_allowed,0x33,,RET,ret
memtype_kernel_map_sync,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_kernel_map_sync,0x51,,RET,ret
memtype_kernel_map_sync,0x59,0xffffffff810ad540,CALL 0xffffffff810ad540,direct call
memtype_kernel_map_sync,0xbe,0xffffffff8108a1a0,CALL 0xffffffff8108a1a0,direct call
memtype_reserve_io,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_reserve_io,0x25,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
memtype_reserve_io,0x35,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
memtype_reserve_io,0x3b,0xffffffff810ae8b0,CALL 0xffffffff810ae8b0,direct call
memtype_reserve_io,0x55,0xffffffff81091090,CALL 0xffffffff81091090,direct call
memtype_reserve_io,0x85,,RET,ret
memtype_reserve_io,0x8f,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
memtype_reserve_io,0x92,0xffffffff826ba488,CALL qword ptr [0xffffffff826ba488],in-direct call
memtype_reserve_io,0xd8,0xffffffff81090e00,CALL 0xffffffff81090e00,direct call
memtype_reserve_io,0xe8,0xffffffff81091400,CALL 0xffffffff81091400,direct call
memtype_reserve_io,0xf8,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
memtype_reserve_io,0x106,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arch_io_reserve_memtype_wc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_io_reserve_memtype_wc,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
arch_io_reserve_memtype_wc,0x23,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],0x1",write stack
arch_io_reserve_memtype_wc,0x2a,0xffffffff810914e0,CALL 0xffffffff810914e0,direct call
arch_io_reserve_memtype_wc,0x3f,,RET,ret
arch_io_reserve_memtype_wc,0x40,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
reserve_pfn_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reserve_pfn_range,0x23,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ECX",write stack
reserve_pfn_range,0x32,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
reserve_pfn_range,0x38,0xffffffff81086760,CALL 0xffffffff81086760,direct call
reserve_pfn_range,0x43,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
reserve_pfn_range,0x49,0xffffffff81090af0,CALL 0xffffffff81090af0,direct call
reserve_pfn_range,0x82,0xffffffff81090b80,CALL 0xffffffff81090b80,direct call
reserve_pfn_range,0x87,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
reserve_pfn_range,0xa1,0xffffffff81091090,CALL 0xffffffff81091090,direct call
reserve_pfn_range,0xaa,ctx->ecx,"MOV ECX,dword ptr [RBP + -0x34]",write other [TODO]
reserve_pfn_range,0xb0,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],ECX",write stack
reserve_pfn_range,0xc2,0xffffffff826ba488,CALL qword ptr [0xffffffff826ba488],in-direct call
reserve_pfn_range,0xf0,0xffffffff81091340,CALL 0xffffffff81091340,direct call
reserve_pfn_range,0x116,0xffffffff81086700,CALL 0xffffffff81086700,direct call
reserve_pfn_range,0x122,ctx->rbx,"MOV qword ptr [RBX],R14",write other [TODO]
reserve_pfn_range,0x132,0xffffffff81091400,CALL 0xffffffff81091400,direct call
reserve_pfn_range,0x145,0xffffffff81091340,CALL 0xffffffff81091340,direct call
reserve_pfn_range,0x15a,0xffffffff81091340,CALL 0xffffffff81091340,direct call
track_pfn_copy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
track_pfn_copy,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
track_pfn_copy,0x3c,,RET,ret
track_pfn_copy,0x51,0xffffffff812cd360,CALL 0xffffffff812cd360,direct call
track_pfn_copy,0x71,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
track_pfn_copy,0x75,0xffffffff81091640,CALL 0xffffffff81091640,direct call
track_pfn_copy,0x85,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
track_pfn_remap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
track_pfn_remap,0x44,,RET,ret
track_pfn_remap,0x4b,0xffffffff81090b80,CALL 0xffffffff81090b80,direct call
track_pfn_remap,0x62,0xffffffff81090b80,CALL 0xffffffff81090b80,direct call
track_pfn_remap,0x7b,0xffffffff81086700,CALL 0xffffffff81086700,direct call
track_pfn_remap,0x88,ctx->r14,"MOV qword ptr [R14],RBX",write other [TODO]
track_pfn_remap,0x93,,RET,ret
track_pfn_remap,0xa8,0xffffffff81091640,CALL 0xffffffff81091640,direct call
track_pfn_remap,0xc8,,RET,ret
track_pfn_remap,0xd4,0xffffffff81091640,CALL 0xffffffff81091640,direct call
track_pfn_insert,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
track_pfn_insert,0xe,,RET,ret
track_pfn_insert,0x20,0xffffffff81090b80,CALL 0xffffffff81090b80,direct call
track_pfn_insert,0x2a,0xffffffff81086700,CALL 0xffffffff81086700,direct call
track_pfn_insert,0x36,ctx->rbx,"MOV qword ptr [RBX],R12",write other [TODO]
track_pfn_insert,0x3d,,RET,ret
untrack_pfn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
untrack_pfn,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
untrack_pfn,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
untrack_pfn,0x52,0xffffffff812cd360,CALL 0xffffffff812cd360,direct call
untrack_pfn,0x70,0xffffffff81090af0,CALL 0xffffffff81090af0,direct call
untrack_pfn,0x9f,,RET,ret
untrack_pfn,0xaf,0xffffffff81090e00,CALL 0xffffffff81090e00,direct call
untrack_pfn,0xbf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
untrack_pfn_moved,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
untrack_pfn_moved,0x12,,RET,ret
interval_augment_rotate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
interval_augment_rotate,0xa,ctx->rsi - 0x10,"MOV qword ptr [RSI + -0x10],RAX",write other [TODO]
interval_augment_rotate,0x41,ctx->rdi - 0x10,"MOV qword ptr [RDI + -0x10],RAX",write other [TODO]
interval_augment_rotate,0x46,,RET,ret
interval_subtree_search,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
interval_subtree_search,0x4b,,RET,ret
interval_subtree_search,0x50,,RET,ret
interval_iter_next,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
interval_iter_next,0x33,,RET,ret
interval_iter_next,0x4a,,RET,ret
interval_iter_next,0x53,0xffffffff81091ab0,CALL 0xffffffff81091ab0,direct call
interval_iter_next,0x59,,RET,ret
interval_insert.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
interval_insert.constprop.0,0x35,ctx->rax - 0x10,"MOV qword ptr [RAX + -0x10],RSI",write other [TODO]
interval_insert.constprop.0,0x52,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RSI",write other [TODO]
interval_insert.constprop.0,0x56,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
interval_insert.constprop.0,0x5a,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],0x0",write other [TODO]
interval_insert.constprop.0,0x62,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],0x0",write other [TODO]
interval_insert.constprop.0,0x6a,ctx->rcx,"MOV qword ptr [RCX],R10",write other [TODO]
interval_insert.constprop.0,0x83,0xffffffff81c7d7b0,CALL 0xffffffff81c7d7b0,direct call
interval_insert.constprop.0,0x89,,RET,ret
interval_insert.constprop.0,0x8a,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RSI",write other [TODO]
interval_insert.constprop.0,0x8e,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x0",write other [TODO]
interval_insert.constprop.0,0x96,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],0x0",write other [TODO]
interval_insert.constprop.0,0x9e,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],0x0",write other [TODO]
interval_insert.constprop.0,0xa6,0xffffffff83451020,"MOV qword ptr [0xffffffff83451020],R10",write .data
interval_insert.constprop.0,0xad,0xffffffff83451028,"MOV qword ptr [0xffffffff83451028],R10",write .data
interval_remove.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
interval_remove.constprop.0,0x64,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R9",write other [TODO]
interval_remove.constprop.0,0x68,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RCX",write other [TODO]
interval_remove.constprop.0,0x75,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
interval_remove.constprop.0,0x7c,ctx->rsi - 0x10,"MOV qword ptr [RSI + -0x10],RAX",write other [TODO]
interval_remove.constprop.0,0x8a,ctx->rax - 0x10,"MOV qword ptr [RAX + -0x10],RCX",write other [TODO]
interval_remove.constprop.0,0xd8,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RCX",write other [TODO]
interval_remove.constprop.0,0xe5,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
interval_remove.constprop.0,0x103,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
interval_remove.constprop.0,0x110,ctx->r9,"MOV qword ptr [R9],RDI",write other [TODO]
interval_remove.constprop.0,0x113,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
interval_remove.constprop.0,0x127,ctx->rdx - 0x10,"MOV qword ptr [RDX + -0x10],RAX",write other [TODO]
interval_remove.constprop.0,0x180,0xffffffff81c7cf70,CALL 0xffffffff81c7cf70,direct call
interval_remove.constprop.0,0x189,,RET,ret
interval_remove.constprop.0,0x18d,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
interval_remove.constprop.0,0x1a9,0xffffffff83451020,"MOV qword ptr [0xffffffff83451020],RDX",write .data
interval_remove.constprop.0,0x1c3,ctx->rcx - 0x10,"MOV qword ptr [RCX + -0x10],RAX",write other [TODO]
interval_remove.constprop.0,0x1d7,ctx->rcx + 0x10,"MOV qword ptr [RCX + 0x10],RDX",write other [TODO]
interval_remove.constprop.0,0x1e3,0xffffffff81c7d980,CALL 0xffffffff81c7d980,direct call
interval_remove.constprop.0,0x1f0,0xffffffff83451028,"MOV qword ptr [0xffffffff83451028],RAX",write .data
interval_remove.constprop.0,0x216,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
interval_remove.constprop.0,0x21f,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
interval_remove.constprop.0,0x22b,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
interval_remove.constprop.0,0x23d,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RDI",write other [TODO]
interval_remove.constprop.0,0x24b,0xffffffff83451020,"MOV qword ptr [0xffffffff83451020],RCX",write .data
interval_remove.constprop.0,0x25b,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
interval_remove.constprop.0,0x263,0xffffffff83451020,"MOV qword ptr [0xffffffff83451020],RDI",write .data
interval_remove.constprop.0,0x283,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
interval_remove.constprop.0,0x291,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RDI",write other [TODO]
memtype_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_match,0x46,0xffffffff81091ab0,CALL 0xffffffff81091ab0,direct call
memtype_match,0x60,0xffffffff81091b10,CALL 0xffffffff81091b10,direct call
memtype_match,0x90,,RET,ret
memtype_match,0x9e,,RET,ret
memtype_check_insert,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_check_insert,0x2e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
memtype_check_insert,0x64,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R9D",write stack
memtype_check_insert,0x68,0xffffffff81091ab0,CALL 0xffffffff81091ab0,direct call
memtype_erase,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_erase,0x16,0xffffffff81091ee0,CALL 0xffffffff81091ee0,direct call
memtype_erase,0x2c,0xffffffff81091c30,CALL 0xffffffff81091c30,direct call
memtype_erase,0x3a,,RET,ret
memtype_erase,0x3b,0xffffffff81091c30,CALL 0xffffffff81091c30,direct call
memtype_erase,0x40,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RBX",write other [TODO]
memtype_erase,0x4b,0xffffffff81091b70,CALL 0xffffffff81091b70,direct call
memtype_erase,0x59,,RET,ret
memtype_erase,0x65,0xffffffff81091ee0,CALL 0xffffffff81091ee0,direct call
memtype_lookup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_lookup,0x36,0xffffffff81091ab0,CALL 0xffffffff81091ab0,direct call
memtype_lookup,0x3c,,RET,ret
memtype_lookup,0x3f,,RET,ret
memtype_lookup,0x40,,RET,ret
memtype_copy_nth_element,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memtype_copy_nth_element,0x31,0xffffffff81091ab0,CALL 0xffffffff81091ab0,direct call
memtype_copy_nth_element,0x57,0xffffffff81091b10,CALL 0xffffffff81091b10,direct call
memtype_copy_nth_element,0x70,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
memtype_copy_nth_element,0x78,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
memtype_copy_nth_element,0x81,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
memtype_copy_nth_element,0x8a,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
memtype_copy_nth_element,0x93,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
memtype_copy_nth_element,0x9c,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
memtype_copy_nth_element,0xa5,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
memtype_copy_nth_element,0xb1,,RET,ret
memtype_copy_nth_element,0xbd,,RET,ret
pmd_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pmd_huge,0x10,,RET,ret
pmd_huge,0x15,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pmd_huge,0x2b,,RET,ret
pud_huge,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pud_huge,0x10,,RET,ret
pud_huge,0x15,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pud_huge,0x2b,,RET,ret
hugetlb_get_unmapped_area,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
hugetlb_get_unmapped_area,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
hugetlb_get_unmapped_area,0xb3,,RET,ret
hugetlb_get_unmapped_area,0xeb,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x1",write stack
hugetlb_get_unmapped_area,0xf3,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
hugetlb_get_unmapped_area,0xf7,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x1000",write stack
hugetlb_get_unmapped_area,0xff,0xffffffff8108ab20,CALL 0xffffffff8108ab20,direct call
hugetlb_get_unmapped_area,0x10e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
hugetlb_get_unmapped_area,0x132,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
hugetlb_get_unmapped_area,0x143,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
hugetlb_get_unmapped_area,0x147,0xffffffff812d4290,CALL 0xffffffff812d4290,direct call
hugetlb_get_unmapped_area,0x157,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
hugetlb_get_unmapped_area,0x199,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
hugetlb_get_unmapped_area,0x1c3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
hugetlb_get_unmapped_area,0x1c7,0xffffffff812d4290,CALL 0xffffffff812d4290,direct call
hugetlb_get_unmapped_area,0x1d7,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
hugetlb_get_unmapped_area,0x1de,0xffffffff8108ab70,CALL 0xffffffff8108ab70,direct call
hugetlb_get_unmapped_area,0x20c,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
hugetlb_get_unmapped_area,0x214,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
hugetlb_get_unmapped_area,0x218,0xffffffff8108ab20,CALL 0xffffffff8108ab20,direct call
hugetlb_get_unmapped_area,0x21d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
hugetlb_get_unmapped_area,0x234,0xffffffff8108a8e0,CALL 0xffffffff8108a8e0,direct call
hugetlb_get_unmapped_area,0x239,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
hugetlb_get_unmapped_area,0x245,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
hugetlb_get_unmapped_area,0x256,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
hugetlb_get_unmapped_area,0x25a,0xffffffff812d4290,CALL 0xffffffff812d4290,direct call
hugetlb_get_unmapped_area,0x274,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
hugetlb_get_unmapped_area,0x283,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
hugetlb_get_unmapped_area,0x287,0xffffffff812d2300,CALL 0xffffffff812d2300,direct call
hugetlb_get_unmapped_area,0x2d1,0xffffffff8108a910,CALL 0xffffffff8108a910,direct call
hugetlb_get_unmapped_area,0x2fd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
effective_prot,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
effective_prot,0x4a,ctx->rdi + ctx->rcx * 0x8 + 0x30,"MOV qword ptr [RDI + RCX*0x8 + 0x30],RAX",write other [TODO]
effective_prot,0x50,,RET,ret
ptdump_walk_pgd_level_core,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptdump_walk_pgd_level_core,0x29,ctx->rsp + 0xb8,"MOV qword ptr [RSP + 0xb8],RAX",write stack
ptdump_walk_pgd_level_core,0x3e,ctx->rsp,"MOV qword ptr [RSP],0x0",write stack
ptdump_walk_pgd_level_core,0x46,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],-0x1",write stack
ptdump_walk_pgd_level_core,0x53,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],RSP",write stack
ptdump_walk_pgd_level_core,0x5b,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],0x0",write stack
ptdump_walk_pgd_level_core,0x64,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
ptdump_walk_pgd_level_core,0x78,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],0x0",write stack
ptdump_walk_pgd_level_core,0x81,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
ptdump_walk_pgd_level_core,0x90,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],-0x7ef6d920",write stack
ptdump_walk_pgd_level_core,0x99,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],-0x7ef6da90",write stack
ptdump_walk_pgd_level_core,0xa2,ctx->rsp + 0x48,"MOV dword ptr [RSP + 0x48],0xffffffff",write stack
ptdump_walk_pgd_level_core,0xaa,ctx->rsp + 0xa0,"MOV byte ptr [RSP + 0xa0],R8B",write stack
ptdump_walk_pgd_level_core,0xb2,ctx->rsp + 0xa1,"MOV byte ptr [RSP + 0xa1],BL",write stack
ptdump_walk_pgd_level_core,0xb9,ctx->rsp + 0xb0,"MOV qword ptr [RSP + 0xb0],R9",write stack
ptdump_walk_pgd_level_core,0xc1,0xffffffff8135e710,CALL 0xffffffff8135e710,direct call
ptdump_walk_pgd_level_core,0xe6,,RET,ret
ptdump_walk_pgd_level_core,0xe7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptdump_walk_pgd_level_debugfs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptdump_walk_pgd_level_debugfs,0x12,0xffffffff810925d0,CALL 0xffffffff810925d0,direct call
ptdump_walk_pgd_level_debugfs,0x18,,RET,ret
note_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
note_page,0x26,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
note_page,0xec,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x148,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x158,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
note_page,0x188,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x18c,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x1a8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x1ac,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x1c8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x1cc,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x1e8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x1ec,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x22e,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
note_page,0x28e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x29b,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],0x0",write other [TODO]
note_page,0x2a7,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
note_page,0x31f,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],R12",write other [TODO]
note_page,0x323,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],R13",write other [TODO]
note_page,0x327,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
note_page,0x32a,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],-0x7d1b39c0",write other [TODO]
note_page,0x332,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],0x0",write other [TODO]
note_page,0x345,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82e4c648]",write other [TODO]
note_page,0x356,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x369,,RET,ret
note_page,0x38e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
note_page,0x3c1,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x3dc,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x42d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x431,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x456,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0x45a,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R8D",write stack
note_page,0x45e,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x4a0,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x4a4,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x4e8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x4ec,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x508,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x50c,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x524,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x552,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x577,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
note_page,0x58e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0x592,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x5b2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x5b6,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x5ce,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x5d2,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x5ee,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x5f2,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x624,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0x628,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
note_page,0x658,0xffffffff830c7c2f,"MOV byte ptr [0xffffffff830c7c2f],0x1",write .data
note_page,0x65f,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
note_page,0x67d,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],0x0",write other [TODO]
note_page,0x685,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RDX",write other [TODO]
note_page,0xc01c7d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
note_page,0xc01c91,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
note_page,0xc01c95,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],CL",write stack
note_page,0xc01c98,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01cb7,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01cbb,ctx->rbp - 0x38,"MOV byte ptr [RBP + -0x38],CL",write stack
note_page,0xc01cbe,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01cdb,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01cdf,ctx->rbp - 0x38,"MOV byte ptr [RBP + -0x38],CL",write stack
note_page,0xc01ce2,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01cf4,ctx->rsi,"MOV RSI,qword ptr [0xffffffff82e4c648]",write other [TODO]
note_page,0xc01d02,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01d23,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01d3e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01d64,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
note_page,0xc01d68,ctx->rbp - 0x40,"MOV byte ptr [RBP + -0x40],CL",write stack
note_page,0xc01d6b,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01d8a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01d8e,ctx->rbp - 0x38,"MOV byte ptr [RBP + -0x38],CL",write stack
note_page,0xc01d91,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01dae,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01db2,ctx->rbp - 0x38,"MOV byte ptr [RBP + -0x38],CL",write stack
note_page,0xc01db5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01dd3,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01dd7,ctx->rbp - 0x38,"MOV byte ptr [RBP + -0x38],CL",write stack
note_page,0xc01dda,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01e0c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01e21,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01e25,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R8D",write stack
note_page,0xc01e29,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01e48,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0xc01e4c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01e61,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0xc01e65,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01e7e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01e96,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01e9a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
note_page,0xc01e9e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01eb7,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
note_page,0xc01ebb,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01ecd,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01ee5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01efe,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
note_page,0xc01f02,ctx->rbp - 0x38,"MOV byte ptr [RBP + -0x38],CL",write stack
note_page,0xc01f05,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
note_page,0xc01f38,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff810929d7,-0x38,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
FUN_ffffffff810929d7,0x8,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],0x0",write other [TODO]
FUN_ffffffff810929d7,0x10,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
ptdump_walk_pgd_level,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptdump_walk_pgd_level,0x15,0xffffffff810925d0,CALL 0xffffffff810925d0,direct call
ptdump_walk_pgd_level,0x1b,,RET,ret
ptdump_walk_user_pgd_level_checkwx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptdump_walk_user_pgd_level_checkwx,0xa,,RET,ret
ptdump_walk_pgd_level_checkwx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptdump_walk_pgd_level_checkwx,0x21,0xffffffff810925d0,CALL 0xffffffff810925d0,direct call
ptdump_walk_pgd_level_checkwx,0x27,,RET,ret
rcu_free_kmmio_fault_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rcu_free_kmmio_fault_pages,0x1a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rcu_free_kmmio_fault_pages,0x37,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
rcu_free_kmmio_fault_pages,0x40,,RET,ret
remove_kmmio_fault_pages,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
remove_kmmio_fault_pages,0x20,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
remove_kmmio_fault_pages,0x44,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
remove_kmmio_fault_pages,0x48,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
remove_kmmio_fault_pages,0x4b,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDI",write other [TODO]
remove_kmmio_fault_pages,0x63,ctx->r12,"MOV qword ptr [R12],RDX",write other [TODO]
remove_kmmio_fault_pages,0x67,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],0x0",write other [TODO]
remove_kmmio_fault_pages,0x6f,ctx->rbx + 0x30,"MOV byte ptr [RBX + 0x30],0x0",write other [TODO]
remove_kmmio_fault_pages,0x83,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
remove_kmmio_fault_pages,0x92,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
remove_kmmio_fault_pages,0x9d,,RET,ret
get_kmmio_fault_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_kmmio_fault_page,0x22,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
get_kmmio_fault_page,0x28,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
get_kmmio_fault_page,0x56,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
get_kmmio_fault_page,0xc4,,RET,ret
get_kmmio_fault_page,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
clear_page_presence,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_page_presence,0x27,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
clear_page_presence,0x2d,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
clear_page_presence,0x3b,ctx->esi,"MOV ESI,dword ptr [RBP + -0x1c]",write other [TODO]
clear_page_presence,0x49,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
clear_page_presence,0x58,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
clear_page_presence,0x61,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
clear_page_presence,0x75,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
clear_page_presence,0x84,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
clear_page_presence,0x90,0xffffffff82e4ba38,CALL qword ptr [0xffffffff82e4ba38],in-direct call
clear_page_presence,0x9a,0xffffffff8108cbd0,CALL 0xffffffff8108cbd0,direct call
clear_page_presence,0xbc,,RET,ret
clear_page_presence,0xbd,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
clear_page_presence,0xf5,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
clear_page_presence,0x149,0xffffffff82e4ba80,CALL qword ptr [0xffffffff82e4ba80],in-direct call
clear_page_presence,0x15b,0xffffffff82e4ba58,CALL qword ptr [0xffffffff82e4ba58],in-direct call
clear_page_presence,0x167,0xffffffff82e4ba30,CALL qword ptr [0xffffffff82e4ba30],in-direct call
clear_page_presence,0x184,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
clear_page_presence,0xc0168e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
disarm_kmmio_fault_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disarm_kmmio_fault_page,0xf,0xffffffff81092fb0,CALL 0xffffffff81092fb0,direct call
disarm_kmmio_fault_page,0x18,ctx->rbx + 0x28,"MOV byte ptr [RBX + 0x28],0x0",write other [TODO]
disarm_kmmio_fault_page,0x21,,RET,ret
disarm_kmmio_fault_page,0x36,0xffffffff830c7c31,"MOV byte ptr [0xffffffff830c7c31],0x1",write .data
disarm_kmmio_fault_page,0x3d,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
unregister_kmmio_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unregister_kmmio_probe,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
unregister_kmmio_probe,0x41,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
unregister_kmmio_probe,0x5c,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
unregister_kmmio_probe,0x64,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
unregister_kmmio_probe,0x71,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
unregister_kmmio_probe,0x9e,0xffffffff81092ee0,CALL 0xffffffff81092ee0,direct call
unregister_kmmio_probe,0xb7,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
unregister_kmmio_probe,0xbb,0xffffffff81093140,CALL 0xffffffff81093140,direct call
unregister_kmmio_probe,0xce,ctx->rax + 0x30,"MOV byte ptr [RAX + 0x30],0x1",write other [TODO]
unregister_kmmio_probe,0xd2,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
unregister_kmmio_probe,0xd6,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RCX",write other [TODO]
unregister_kmmio_probe,0xf0,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
unregister_kmmio_probe,0xf4,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
unregister_kmmio_probe,0x101,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
unregister_kmmio_probe,0x10d,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unregister_kmmio_probe,0x12a,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
unregister_kmmio_probe,0x146,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
unregister_kmmio_probe,0x14a,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
unregister_kmmio_probe,0x16c,,RET,ret
unregister_kmmio_probe,0x183,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
unregister_kmmio_probe,0x187,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
unregister_kmmio_probe,0x194,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
unregister_kmmio_probe,0x1a0,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
unregister_kmmio_probe,0x1a7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
arm_kmmio_fault_page,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arm_kmmio_fault_page,0x1f,0xffffffff81092fb0,CALL 0xffffffff81092fb0,direct call
arm_kmmio_fault_page,0x28,ctx->rbx + 0x28,"MOV byte ptr [RBX + 0x28],0x1",write other [TODO]
arm_kmmio_fault_page,0x31,,RET,ret
arm_kmmio_fault_page,0x46,0xffffffff830c7c33,"MOV byte ptr [0xffffffff830c7c33],0x1",write .data
arm_kmmio_fault_page,0x4d,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
arm_kmmio_fault_page,0x73,ctx->rbp - 0xc,"MOV dword ptr [RBP + -0xc],EAX",write stack
arm_kmmio_fault_page,0x76,0xffffffff830c7c32,"MOV byte ptr [0xffffffff830c7c32],0x1",write .data
arm_kmmio_fault_page,0x7d,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
register_kmmio_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
register_kmmio_probe,0x26,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
register_kmmio_probe,0x41,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R13",write stack
register_kmmio_probe,0x4c,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
register_kmmio_probe,0x51,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
register_kmmio_probe,0x7a,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
register_kmmio_probe,0x8c,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
register_kmmio_probe,0xa8,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],-0x7d1b3850",write other [TODO]
register_kmmio_probe,0xb0,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
register_kmmio_probe,0xb3,0xffffffff82e4c7b0,"MOV qword ptr [0xffffffff82e4c7b0],RBX",write .data
register_kmmio_probe,0xc0,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
register_kmmio_probe,0xe0,ctx->r15 + 0x2c,"MOV dword ptr [R15 + 0x2c],EAX",write other [TODO]
register_kmmio_probe,0x105,0xffffffff81092ee0,CALL 0xffffffff81092ee0,direct call
register_kmmio_probe,0x123,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
register_kmmio_probe,0x134,ctx->rax + 0x2c,"MOV dword ptr [RAX + 0x2c],0x1",write other [TODO]
register_kmmio_probe,0x13e,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],R13",write other [TODO]
register_kmmio_probe,0x142,0xffffffff81093340,CALL 0xffffffff81093340,direct call
register_kmmio_probe,0x15a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
register_kmmio_probe,0x15e,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
register_kmmio_probe,0x19e,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
register_kmmio_probe,0x1a2,ctx->r15,"MOV qword ptr [R15],RDX",write other [TODO]
register_kmmio_probe,0x1a5,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
register_kmmio_probe,0x1a8,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],R15",write other [TODO]
register_kmmio_probe,0x1b4,0xffffffff81093340,CALL 0xffffffff81093340,direct call
register_kmmio_probe,0x1d0,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
register_kmmio_probe,0x1f5,,RET,ret
register_kmmio_probe,0x20a,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
register_kmmio_probe,0x216,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
register_kmmio_probe,0x228,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kmmio_die_notifier,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kmmio_die_notifier,0x1e,ctx->eax,"MOV EAX,R12D",write other [TODO]
kmmio_die_notifier,0x28,,RET,ret
kmmio_die_notifier,0x68,ctx->rax,CALL RAX,in-direct call
kmmio_die_notifier,0x71,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
kmmio_die_notifier,0x88,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kmmio_die_notifier,0x97,ctx->r14 + 0x90,"MOV qword ptr [R14 + 0x90],RAX",write other [TODO]
kmmio_die_notifier,0xa2,ctx->r14 + 0x90,"MOV qword ptr [R14 + 0x90],RAX",write other [TODO]
kmmio_die_notifier,0xb0,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kmmio_die_notifier,0xdc,0xffffffff81093340,CALL 0xffffffff81093340,direct call
kmmio_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kmmio_handler,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
kmmio_handler,0x32,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
kmmio_handler,0x5b,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kmmio_handler,0x63,0xffffffff81092ee0,CALL 0xffffffff81092ee0,direct call
kmmio_handler,0xa1,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kmmio_handler,0xd0,,RET,ret
kmmio_handler,0xd1,ctx->r14,"MOV qword ptr [R14],R15",write other [TODO]
kmmio_handler,0xdb,ctx->r14 + 0x20,"MOV dword ptr [R14 + 0x20],0x1",write other [TODO]
kmmio_handler,0xfe,ctx->rdi,"MOV RDI,qword ptr [RDI]",write other [TODO]
kmmio_handler,0x10a,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],0x0",write other [TODO]
kmmio_handler,0x119,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],R13",write other [TODO]
kmmio_handler,0x122,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
kmmio_handler,0x133,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],RAX",write other [TODO]
kmmio_handler,0x13d,0xffffffff81093140,CALL 0xffffffff81093140,direct call
kmmio_handler,0x14c,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RDI",write other [TODO]
kmmio_handler,0x157,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],R13",write other [TODO]
kmmio_handler,0x160,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RAX",write other [TODO]
kmmio_handler,0x178,ctx->rax,CALL RAX,in-direct call
kmmio_handler,0x1a8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kmmio_handler,0xc00fda,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
kmmio_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kmmio_init,0x10,ctx->rax,"MOV qword ptr [RAX],RAX",write other [TODO]
kmmio_init,0x13,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RAX",write other [TODO]
kmmio_init,0x2a,0xffffffff810d2de0,CALL 0xffffffff810d2de0,direct call
kmmio_init,0x30,,RET,ret
kmmio_cleanup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kmmio_cleanup,0x1c,0xffffffff810d2c20,CALL 0xffffffff810d2c20,direct call
kmmio_cleanup,0x52,0xffffffff830c7c30,"MOV byte ptr [0xffffffff830c7c30],0x1",write .data
kmmio_cleanup,0x59,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
kmmio_cleanup,0x70,,RET,ret
skip_prefix,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
skip_prefix,0x7d,,RET,ret
get_ins_reg_width,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ins_reg_width,0x1e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
get_ins_reg_width,0x24,0xffffffff81093970,CALL 0xffffffff81093970,direct call
get_ins_reg_width,0x6b,,RET,ret
get_ins_reg_width,0xb7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_reg_w32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_reg_w32,0x1b,,RET,ret
get_reg_w32,0x21,,RET,ret
get_reg_w32,0x27,,RET,ret
get_reg_w32,0x2d,,RET,ret
get_reg_w32,0x36,,RET,ret
get_reg_w32,0x3c,,RET,ret
get_reg_w32,0x42,,RET,ret
get_reg_w32,0x48,,RET,ret
get_reg_w32,0x4e,,RET,ret
get_reg_w32,0x54,,RET,ret
get_reg_w32,0x5a,,RET,ret
get_reg_w32,0x60,,RET,ret
get_reg_w32,0x66,,RET,ret
get_reg_w32,0x6c,,RET,ret
get_reg_w32,0x72,,RET,ret
get_reg_w32,0x78,,RET,ret
get_ins_type,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ins_type,0x1e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
get_ins_type,0x24,0xffffffff81093970,CALL 0xffffffff81093970,direct call
get_ins_type,0x9a,,RET,ret
get_ins_type,0xae,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_ins_mem_width,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ins_mem_width,0x1e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
get_ins_mem_width,0x24,0xffffffff81093970,CALL 0xffffffff81093970,direct call
get_ins_mem_width,0xb4,,RET,ret
get_ins_mem_width,0x101,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_ins_reg_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ins_reg_val,0x26,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
get_ins_reg_val,0x2c,0xffffffff81093970,CALL 0xffffffff81093970,direct call
get_ins_reg_val,0xa5,0xffffffff810939f0,CALL 0xffffffff810939f0,direct call
get_ins_reg_val,0xd4,0xffffffff81093ab0,CALL 0xffffffff81093ab0,direct call
get_ins_reg_val,0xfa,,RET,ret
get_ins_reg_val,0x126,0xffffffff810939f0,CALL 0xffffffff810939f0,direct call
get_ins_reg_val,0x146,0xffffffff81093ab0,CALL 0xffffffff81093ab0,direct call
get_ins_reg_val,0x16c,0xffffffff81093ab0,CALL 0xffffffff81093ab0,direct call
get_ins_reg_val,0x1ed,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
get_ins_reg_val,0x2a8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_ins_reg_val,0x2c5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
get_ins_imm_val,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_ins_imm_val,0x20,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
get_ins_imm_val,0x26,0xffffffff81093970,CALL 0xffffffff81093970,direct call
get_ins_imm_val,0x71,0xffffffff810939f0,CALL 0xffffffff810939f0,direct call
get_ins_imm_val,0x9c,,RET,ret
get_ins_imm_val,0xca,0xffffffff810939f0,CALL 0xffffffff810939f0,direct call
get_ins_imm_val,0xeb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_ins_imm_val,0xc0075d,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
get_ins_imm_val,0xc0076e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pte_val,0x4,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
pte_val,0xb,,RET,ret
post,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
post,0x4a,0xffffffff811d8720,CALL 0xffffffff811d8720,direct call
post,0x66,,RET,ret
post,0x6e,0xffffffff81093d00,CALL 0xffffffff81093d00,direct call
post,0x73,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
post,0x7a,0xffffffff82000810,CALL 0xffffffff82000810,direct call
post,0x84,,RET,ret
post,0x85,0xffffffff82000810,CALL 0xffffffff82000810,direct call
pre,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pre,0x1c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
pre,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
pre,0x65,0xffffffff81093b30,CALL 0xffffffff81093b30,direct call
pre,0x7e,ctx->r13,"MOV qword ptr [R13],R12",write other [TODO]
pre,0x82,ctx->r13 + 0x14,"MOV dword ptr [R13 + 0x14],0x1",write other [TODO]
pre,0x8a,ctx->r13 + 0x10,"MOV dword ptr [R13 + 0x10],EAX",write other [TODO]
pre,0x8e,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],R15",write other [TODO]
pre,0x9a,ctx->rbx,"MOV qword ptr [RBX],R12",write other [TODO]
pre,0xa1,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EDX",write other [TODO]
pre,0xb1,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RDX",write other [TODO]
pre,0xcd,ctx->wordctx->ptrctx->rbx + 0x1c,"MOV word ptr [RBX + 0x1c],AX",write other [TODO]
pre,0xeb,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
pre,0x11e,,RET,ret
pre,0x11f,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],0x2",write other [TODO]
pre,0x126,0xffffffff81093bf0,CALL 0xffffffff81093bf0,direct call
pre,0x131,ctx->rbx + 0x1d,"MOV byte ptr [RBX + 0x1d],AL",write other [TODO]
pre,0x134,0xffffffff81093d00,CALL 0xffffffff81093d00,direct call
pre,0x139,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
pre,0x13f,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],0x1",write other [TODO]
pre,0x146,0xffffffff81093bf0,CALL 0xffffffff81093bf0,direct call
pre,0x14b,ctx->rbx + 0x1d,"MOV byte ptr [RBX + 0x1d],AL",write other [TODO]
pre,0x150,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],0x2",write other [TODO]
pre,0x157,0xffffffff81093bf0,CALL 0xffffffff81093bf0,direct call
pre,0x15f,ctx->rbx + 0x1d,"MOV byte ptr [RBX + 0x1d],AL",write other [TODO]
pre,0x162,0xffffffff81093fe0,CALL 0xffffffff81093fe0,direct call
pre,0x167,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
pre,0x16d,0xffffffff82000810,CALL 0xffffffff82000810,direct call
pre,0x174,0xffffffff82000810,CALL 0xffffffff82000810,direct call
pre,0x17e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pre,0x1a6,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pre,0x1b2,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
pre,0x1d0,0xffffffff810940e0,CALL 0xffffffff810940e0,direct call
pre,0x1dc,0xffffffff810940e0,CALL 0xffffffff810940e0,direct call
pre,0x1f4,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pre,0xc0060c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pre,0xc0061c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pre,0xc00634,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pre,0xc00653,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
pre,0xc00661,0xffffffff82000810,CALL 0xffffffff82000810,direct call
pre,0xc00672,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mmiotrace_printk,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmiotrace_printk,0x1d,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RSI",write stack
mmiotrace_printk,0x22,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RDX",write stack
mmiotrace_printk,0x27,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RCX",write stack
mmiotrace_printk,0x2c,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],R8",write stack
mmiotrace_printk,0x31,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],R9",write stack
mmiotrace_printk,0x3f,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
mmiotrace_printk,0x4a,ctx->rsp,"MOV dword ptr [RSP],0x8",write stack
mmiotrace_printk,0x51,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
mmiotrace_printk,0x5b,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
mmiotrace_printk,0x60,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
mmiotrace_printk,0x7e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
mmiotrace_printk,0xa1,,RET,ret
mmiotrace_printk,0xa8,0xffffffff811d88b0,CALL 0xffffffff811d88b0,direct call
mmiotrace_printk,0xb2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mmiotrace_ioremap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmiotrace_ioremap,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
mmiotrace_ioremap,0x63,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
mmiotrace_ioremap,0x68,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
mmiotrace_ioremap,0x6f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R14",write stack
mmiotrace_ioremap,0x7d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R13",write stack
mmiotrace_ioremap,0x81,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
mmiotrace_ioremap,0xb5,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
mmiotrace_ioremap,0xb8,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
mmiotrace_ioremap,0xbd,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],R14",write other [TODO]
mmiotrace_ioremap,0xc2,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],R13",write other [TODO]
mmiotrace_ioremap,0xc7,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],-0x7ef6be80",write other [TODO]
mmiotrace_ioremap,0xd0,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],-0x7ef6bf10",write other [TODO]
mmiotrace_ioremap,0xd9,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],R12",write other [TODO]
mmiotrace_ioremap,0xde,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],RBX",write other [TODO]
mmiotrace_ioremap,0xe3,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
mmiotrace_ioremap,0xfa,0xffffffff811d87e0,CALL 0xffffffff811d87e0,direct call
mmiotrace_ioremap,0x106,ctx->r12,"MOV qword ptr [R12],-0x7d1b3840",write other [TODO]
mmiotrace_ioremap,0x10e,0xffffffff82e4c7c8,"MOV qword ptr [0xffffffff82e4c7c8],R12",write .data
mmiotrace_ioremap,0x115,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
mmiotrace_ioremap,0x11a,ctx->rax,"MOV qword ptr [RAX],R12",write other [TODO]
mmiotrace_ioremap,0x12d,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
mmiotrace_ioremap,0x14d,,RET,ret
mmiotrace_ioremap,0x184,0xffffffff810933e0,CALL 0xffffffff810933e0,direct call
mmiotrace_ioremap,0x18e,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mmiotrace_ioremap,0x19a,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
mmiotrace_ioremap,0x1a1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mmiotrace_iounmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmiotrace_iounmap,0x1c,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
mmiotrace_iounmap,0x22,0xffffffff82000828,CALL 0xffffffff82000828,direct call
mmiotrace_iounmap,0x4c,,RET,ret
mmiotrace_iounmap,0x4d,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
mmiotrace_iounmap,0x55,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
mmiotrace_iounmap,0x5d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
mmiotrace_iounmap,0x65,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RBX",write stack
mmiotrace_iounmap,0x69,ctx->rbp - 0x1c,"MOV byte ptr [RBP + -0x1c],0x4",write stack
mmiotrace_iounmap,0x79,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
mmiotrace_iounmap,0xd3,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
mmiotrace_iounmap,0xd7,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
mmiotrace_iounmap,0xe4,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
mmiotrace_iounmap,0xec,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
mmiotrace_iounmap,0xff,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],EAX",write stack
mmiotrace_iounmap,0x102,0xffffffff811d87e0,CALL 0xffffffff811d87e0,direct call
mmiotrace_iounmap,0x10e,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
mmiotrace_iounmap,0x113,0xffffffff8113c240,CALL 0xffffffff8113c240,direct call
mmiotrace_iounmap,0x118,ctx->rdi,"MOV RDI,R12",write other [TODO]
mmiotrace_iounmap,0x11b,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
mmiotrace_iounmap,0x129,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],0xffffffff",write stack
mmiotrace_iounmap,0x130,0xffffffff811d87e0,CALL 0xffffffff811d87e0,direct call
mmiotrace_iounmap,0x13c,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
mmiotrace_iounmap,0x166,0xffffffff81093190,CALL 0xffffffff81093190,direct call
mmiotrace_iounmap,0x170,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
enable_mmiotrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
enable_mmiotrace,0x13,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
FUN_ffffffff8109488c,-0xf3,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
FUN_ffffffff8109488c,-0xea,,RET,ret
FUN_ffffffff8109488c,0x16,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
FUN_ffffffff8109488c,0x29,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
FUN_ffffffff8109488c,0x35,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff8109488c,0xbfffad,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
disable_mmiotrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
disable_mmiotrace,0x17,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
disable_mmiotrace,0x42,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
disable_mmiotrace,0x65,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
early_cpu_to_node,0x15,,RET,ret
early_cpu_to_node,0x2a,,RET,ret
__node_distance,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__node_distance,0x2a,,RET,ret
__node_distance,0x3e,,RET,ret
memory_add_physaddr_to_nid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
memory_add_physaddr_to_nid,0x39,,RET,ret
memory_add_physaddr_to_nid,0x4e,,RET,ret
phys_to_target_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
phys_to_target_node,0x61,,RET,ret
phys_to_target_node,0x76,,RET,ret
phys_to_target_node,0x86,,RET,ret
numa_cpu_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numa_cpu_node,0x2f,,RET,ret
numa_cpu_node,0x4a,,RET,ret
numa_set_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numa_set_node,0x6,ctx->rax,"MOV RAX,qword ptr [0xffffffff830b9ce8]",write other [TODO]
numa_set_node,0x18,ctx->rax + ctx->rdi * 0x4,"MOV dword ptr [RAX + RDI*0x4],ESI",write other [TODO]
numa_set_node,0x1c,,RET,ret
numa_set_node,0x2f,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],ESI",write other [TODO]
numa_set_node,0x41,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],ESI",write other [TODO]
numa_set_node,0x45,,RET,ret
numa_clear_node,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numa_clear_node,0x6,ctx->rax,"MOV RAX,qword ptr [0xffffffff830b9ce8]",write other [TODO]
numa_clear_node,0x18,ctx->rax + ctx->rdi * 0x4,"MOV dword ptr [RAX + RDI*0x4],0xffffffff",write other [TODO]
numa_clear_node,0x20,,RET,ret
numa_clear_node,0x33,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],0xffffffff",write other [TODO]
numa_clear_node,0x49,ctx->rdx + ctx->rax * 0x1,"MOV dword ptr [RDX + RAX*0x1],0xffffffff",write other [TODO]
numa_clear_node,0x51,,RET,ret
numa_add_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numa_add_cpu,0x2f,,RET,ret
numa_remove_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
numa_remove_cpu,0x2f,,RET,ret
init_pkru_write_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_pkru_write_file,0x2b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
init_pkru_write_file,0x3d,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
init_pkru_write_file,0x4c,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
init_pkru_write_file,0x60,ctx->rbp + ctx->r12 * 0x1 - 0x40,"MOV byte ptr [RBP + R12*0x1 + -0x40],0x0",write stack
init_pkru_write_file,0x66,0xffffffff81607bc0,CALL 0xffffffff81607bc0,direct call
init_pkru_write_file,0x76,0xffffffff82e5c800,"MOV dword ptr [0xffffffff82e5c800],EAX",write .data
init_pkru_write_file,0x98,,RET,ret
init_pkru_write_file,0xab,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
init_pkru_read_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_pkru_read_file,0x36,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
init_pkru_read_file,0x3c,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
init_pkru_read_file,0x51,0xffffffff81399170,CALL 0xffffffff81399170,direct call
init_pkru_read_file,0x70,,RET,ret
init_pkru_read_file,0x71,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__execute_only_pkey,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff81094e3e,-0x1,,RET,ret
FUN_ffffffff81094e3e,0x11,0xffffffff81045f40,CALL 0xffffffff81045f40,direct call
FUN_ffffffff81094e3e,0x2b,ctx->wordctx->ptrctx->rbx + 0x374,"MOV word ptr [RBX + 0x374],AX",write other [TODO]
FUN_ffffffff81094e86,0x28,ctx->wordctx->ptrctx->rbx + 0x374,"MOV word ptr [RBX + 0x374],AX",write other [TODO]
FUN_ffffffff81094e86,0x46,0xffffffff81045f40,CALL 0xffffffff81045f40,direct call
FUN_ffffffff81094e86,0x52,ctx->wordctx->ptrctx->rbx + 0x376,"MOV word ptr [RBX + 0x376],R13W",write other [TODO]
FUN_ffffffff81094e86,0x63,,RET,ret
__arch_override_mprotect_pkey,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__arch_override_mprotect_pkey,0x38,,RET,ret
__arch_override_mprotect_pkey,0x53,,RET,ret
force_dma_unencrypted,0xd,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
force_dma_unencrypted,0x1b,,RET,ret
force_dma_unencrypted,0x21,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
force_dma_unencrypted,0x72,,RET,ret
amd_enc_tlb_flush_required,0x5,,RET,ret
FUN_ffffffff81095018,0x5,,RET,ret
pg_level_to_pfn,0x2e,,RET,ret
pg_level_to_pfn,0x32,0xffffffff82e4ba50,CALL qword ptr [0xffffffff82e4ba50],in-direct call
pg_level_to_pfn,0x61,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
pg_level_to_pfn,0x65,,RET,ret
pg_level_to_pfn,0x69,0xffffffff82e4ba88,CALL qword ptr [0xffffffff82e4ba88],in-direct call
pg_level_to_pfn,0xb6,0xffffffff82e4ba78,CALL qword ptr [0xffffffff82e4ba78],in-direct call
pg_level_to_pfn,0x107,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
pg_level_to_pfn,0x10b,0xffffffff830c7c37,"MOV byte ptr [0xffffffff830c7c37],0x1",write .data
pg_level_to_pfn,0x112,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
enc_dec_hypercall,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
enc_dec_hypercall,0x4a,0xffffffff81095020,CALL 0xffffffff81095020,direct call
enc_dec_hypercall,0x71,0xffffffff82e4b9a8,CALL qword ptr [0xffffffff82e4b9a8],in-direct call
enc_dec_hypercall,0x95,0xffffffff8108e4b0,CALL 0xffffffff8108e4b0,direct call
enc_dec_hypercall,0xc8,,RET,ret
enc_dec_hypercall,0xd0,0xffffffff830c7c36,"MOV byte ptr [0xffffffff830c7c36],0x1",write .data
enc_dec_hypercall,0xd7,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
enc_dec_hypercall,0xe0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
amd_enc_status_change_finish,0x16,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
amd_enc_status_change_finish,0x28,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
amd_enc_status_change_finish,0x3c,,RET,ret
amd_enc_status_change_finish,0x46,0xffffffff81095140,CALL 0xffffffff81095140,direct call
amd_enc_status_change_finish,0x56,,RET,ret
amd_enc_status_change_finish,0x5d,0xffffffff810852b0,CALL 0xffffffff810852b0,direct call
amd_enc_status_change_prepare,0x16,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
amd_enc_status_change_prepare,0x29,,RET,ret
amd_enc_status_change_prepare,0x30,0xffffffff81085270,CALL 0xffffffff81085270,direct call
amd_enc_status_change_prepare,0x3b,,RET,ret
sme_encrypt_execute,0x30,ctx->rdi,"MOVSB.REP RDI,RSI",write other [TODO]
sme_encrypt_execute,0x48,ctx->rax,CALL RAX,in-direct call
sme_encrypt_execute,0x50,,RET,ret
__enc_copy,0x59,ctx->rdi,"MOVSB.REP RDI,RSI",write other [TODO]
__enc_copy,0x64,ctx->rdi,"MOVSB.REP RDI,RSI",write other [TODO]
__enc_copy,0x81,,RET,ret
blake2s_compress_ssse3,0x230,ctx->xmctx->rdi,"MOVDQU xmmword ptr [RDI],XMM0",write other [TODO]
blake2s_compress_ssse3,0x234,ctx->xmctx->rdi + 0x10,"MOVDQU xmmword ptr [RDI + 0x10],XMM1",write other [TODO]
blake2s_compress_ssse3,0x239,ctx->xmctx->rdi + 0x20,"MOVDQU xmmword ptr [RDI + 0x20],XMM14",write other [TODO]
blake2s_compress_ssse3,0x23f,,RET,ret
blake2s_compress,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
blake2s_compress,0x90,0xffffffff81609d80,CALL 0xffffffff81609d80,direct call
blake2s_compress,0x9f,,RET,ret
crc32c_intel_setkey,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_setkey,0x11,ctx->rdi + 0x20,"MOV dword ptr [RDI + 0x20],EAX",write other [TODO]
crc32c_intel_setkey,0x16,,RET,ret
crc32c_intel_setkey,0x1d,,RET,ret
crc32c_intel_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_init,0x10,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EAX",write other [TODO]
crc32c_intel_init,0x15,,RET,ret
crc32c_intel_final,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_final,0xe,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
crc32c_intel_final,0x13,,RET,ret
crc32c_intel_cra_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_cra_init,0x8,ctx->rdi + 0x18,"MOV dword ptr [RDI + 0x18],0xffffffff",write other [TODO]
crc32c_intel_cra_init,0x13,,RET,ret
crc32c_pcl_intel_digest,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_pcl_intel_digest,0x71,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
crc32c_pcl_intel_digest,0x7d,,RET,ret
crc32c_pcl_intel_digest,0x7e,0xffffffff81043320,CALL 0xffffffff81043320,direct call
crc32c_pcl_intel_digest,0x9f,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
crc32c_pcl_intel_digest,0xae,0xffffffff81095c20,CALL 0xffffffff81095c20,direct call
crc32c_pcl_intel_digest,0xb5,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
crc32c_pcl_intel_digest,0xb7,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
crc32c_pcl_intel_digest,0xc6,,RET,ret
crc32c_intel_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_update,0x3f,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EAX",write other [TODO]
crc32c_intel_update,0x45,,RET,ret
crc32c_intel_finup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_finup,0x42,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
crc32c_intel_finup,0x46,,RET,ret
crc32c_intel_digest,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_intel_digest,0x4b,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
crc32c_intel_digest,0x4f,,RET,ret
crc32c_pcl_intel_update,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_pcl_intel_update,0x69,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
crc32c_pcl_intel_update,0x74,,RET,ret
crc32c_pcl_intel_update,0x75,0xffffffff81043320,CALL 0xffffffff81043320,direct call
crc32c_pcl_intel_update,0x95,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
crc32c_pcl_intel_update,0xa3,0xffffffff81095c20,CALL 0xffffffff81095c20,direct call
crc32c_pcl_intel_update,0xa8,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
crc32c_pcl_intel_update,0xab,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
crc32c_pcl_intel_update,0xb8,,RET,ret
crc32c_pcl_intel_finup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
crc32c_pcl_intel_finup,0x70,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
crc32c_pcl_intel_finup,0x7c,,RET,ret
crc32c_pcl_intel_finup,0x7d,0xffffffff81043320,CALL 0xffffffff81043320,direct call
crc32c_pcl_intel_finup,0x9e,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
crc32c_pcl_intel_finup,0xad,0xffffffff81095c20,CALL 0xffffffff81095c20,direct call
crc32c_pcl_intel_finup,0xb4,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
crc32c_pcl_intel_finup,0xb6,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
crc32c_pcl_intel_finup,0xc5,,RET,ret
crc_pcl,0x10ce,,RET,ret
ia32_restore_sigcontext,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ia32_restore_sigcontext,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
ia32_restore_sigcontext,0x32,ctx->rax + 0x980,"MOV qword ptr [RAX + 0x980],-0x7ef48780",write other [TODO]
ia32_restore_sigcontext,0x3d,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
ia32_restore_sigcontext,0x51,ctx->rbx + 0x78,"MOV qword ptr [RBX + 0x78],-0x1",write other [TODO]
ia32_restore_sigcontext,0x59,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
ia32_restore_sigcontext,0x66,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
ia32_restore_sigcontext,0x6d,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
ia32_restore_sigcontext,0x74,ctx->rbx + 0x68,"MOV qword ptr [RBX + 0x68],RAX",write other [TODO]
ia32_restore_sigcontext,0x7b,ctx->rbx + 0x70,"MOV qword ptr [RBX + 0x70],RAX",write other [TODO]
ia32_restore_sigcontext,0x82,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
ia32_restore_sigcontext,0x89,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
ia32_restore_sigcontext,0x90,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],RAX",write other [TODO]
ia32_restore_sigcontext,0x9a,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
ia32_restore_sigcontext,0xab,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
ia32_restore_sigcontext,0xbc,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],RAX",write other [TODO]
ia32_restore_sigcontext,0xd3,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],RAX",write other [TODO]
ia32_restore_sigcontext,0xdc,ctx->edi,"MOVZX EDI,word ptr [RBP + -0x68]",write other [TODO]
ia32_restore_sigcontext,0x126,0xffffffff81045730,CALL 0xffffffff81045730,direct call
ia32_restore_sigcontext,0x13f,,RET,ret
ia32_restore_sigcontext,0x147,0xffffffff82e4b8c0,CALL qword ptr [0xffffffff82e4b8c0],in-direct call
ia32_restore_sigcontext,0x153,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_sigreturn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_sigreturn,0x1c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_compat_sys_sigreturn,0x63,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
__ia32_compat_sys_sigreturn,0x6a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RCX",write stack
__ia32_compat_sys_sigreturn,0x79,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
__ia32_compat_sys_sigreturn,0x7e,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],EDX",write stack
__ia32_compat_sys_sigreturn,0x89,0xffffffff810b78a0,CALL 0xffffffff810b78a0,direct call
__ia32_compat_sys_sigreturn,0x94,0xffffffff81096cf0,CALL 0xffffffff81096cf0,direct call
__ia32_compat_sys_sigreturn,0xb1,0xffffffff81036840,CALL 0xffffffff81036840,direct call
__ia32_compat_sys_sigreturn,0xd2,,RET,ret
__ia32_compat_sys_sigreturn,0xd3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigreturn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigreturn,0x1b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_compat_sys_rt_sigreturn,0x6b,0xffffffff81036840,CALL 0xffffffff81036840,direct call
__ia32_compat_sys_rt_sigreturn,0x8b,,RET,ret
__ia32_compat_sys_rt_sigreturn,0x93,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
__ia32_compat_sys_rt_sigreturn,0x98,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
__ia32_compat_sys_rt_sigreturn,0xa4,0xffffffff810b78a0,CALL 0xffffffff810b78a0,direct call
__ia32_compat_sys_rt_sigreturn,0xb3,0xffffffff81096cf0,CALL 0xffffffff81096cf0,direct call
__ia32_compat_sys_rt_sigreturn,0xc3,0xffffffff810bc050,CALL 0xffffffff810bc050,direct call
__ia32_compat_sys_rt_sigreturn,0xd3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
get_sigframe.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_sigframe.constprop.0,0x28,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
get_sigframe.constprop.0,0x9d,0xffffffff810457d0,CALL 0xffffffff810457d0,direct call
get_sigframe.constprop.0,0xa9,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
get_sigframe.constprop.0,0xb3,0xffffffff810453e0,CALL 0xffffffff810453e0,direct call
get_sigframe.constprop.0,0xef,,RET,ret
get_sigframe.constprop.0,0x111,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ia32_setup_frame,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ia32_setup_frame,0x38,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
ia32_setup_frame,0x3e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
ia32_setup_frame,0x46,0xffffffff81097010,CALL 0xffffffff81097010,direct call
ia32_setup_frame,0xa1,,RET,ret
ia32_setup_frame,0xa8,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],R12D",write other [TODO]
ia32_setup_frame,0xb6,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EDX",write other [TODO]
ia32_setup_frame,0xbb,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EDX",write other [TODO]
ia32_setup_frame,0xc0,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],EDX",write other [TODO]
ia32_setup_frame,0xc5,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
ia32_setup_frame,0xcc,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],EDX",write other [TODO]
ia32_setup_frame,0xd3,ctx->rax + 0x1c,"MOV dword ptr [RAX + 0x1c],EDX",write other [TODO]
ia32_setup_frame,0xda,ctx->rax + 0x20,"MOV dword ptr [RAX + 0x20],EDX",write other [TODO]
ia32_setup_frame,0xe3,ctx->rax + 0x24,"MOV dword ptr [RAX + 0x24],EDX",write other [TODO]
ia32_setup_frame,0xea,ctx->rax + 0x28,"MOV dword ptr [RAX + 0x28],R8D",write other [TODO]
ia32_setup_frame,0xf2,ctx->rax + 0x2c,"MOV dword ptr [RAX + 0x2c],R8D",write other [TODO]
ia32_setup_frame,0xfa,ctx->rax + 0x30,"MOV dword ptr [RAX + 0x30],R8D",write other [TODO]
ia32_setup_frame,0x102,ctx->rax + 0x34,"MOV dword ptr [RAX + 0x34],R8D",write other [TODO]
ia32_setup_frame,0x116,ctx->rax + 0x38,"MOV dword ptr [RAX + 0x38],R8D",write other [TODO]
ia32_setup_frame,0x12a,ctx->rax + 0x3c,"MOV dword ptr [RAX + 0x3c],R8D",write other [TODO]
ia32_setup_frame,0x135,ctx->rax + 0x40,"MOV dword ptr [RAX + 0x40],R8D",write other [TODO]
ia32_setup_frame,0x140,ctx->rax + 0x44,"MOV dword ptr [RAX + 0x44],R8D",write other [TODO]
ia32_setup_frame,0x14b,ctx->rax + 0x48,"MOV dword ptr [RAX + 0x48],R8D",write other [TODO]
ia32_setup_frame,0x14f,ctx->rax + 0x4c,"MOV dword ptr [RAX + 0x4c],EDX",write other [TODO]
ia32_setup_frame,0x159,ctx->rax + 0x50,"MOV dword ptr [RAX + 0x50],EDX",write other [TODO]
ia32_setup_frame,0x15c,ctx->rax + 0x54,"MOV dword ptr [RAX + 0x54],ESI",write other [TODO]
ia32_setup_frame,0x15f,ctx->rax + 0x58,"MOV dword ptr [RAX + 0x58],EDI",write other [TODO]
ia32_setup_frame,0x172,ctx->rax + 0x5c,"MOV dword ptr [RAX + 0x5c],EDX",write other [TODO]
ia32_setup_frame,0x179,ctx->rax + 0x2d0,"MOV dword ptr [RAX + 0x2d0],EDX",write other [TODO]
ia32_setup_frame,0x17f,ctx->rax,"MOV dword ptr [RAX],ECX",write other [TODO]
ia32_setup_frame,0x18b,ctx->rax + 0x2d4,"MOV qword ptr [RAX + 0x2d4],RDX",write other [TODO]
ia32_setup_frame,0x195,ctx->rbx + 0x98,"MOV qword ptr [RBX + 0x98],RAX",write other [TODO]
ia32_setup_frame,0x19f,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],R12",write other [TODO]
ia32_setup_frame,0x1a3,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
ia32_setup_frame,0x1af,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],0x0",write other [TODO]
ia32_setup_frame,0x1b9,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
ia32_setup_frame,0x1c5,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],0x23",write other [TODO]
ia32_setup_frame,0x1d3,ctx->rbx + 0xa0,"MOV qword ptr [RBX + 0xa0],0x2b",write other [TODO]
ia32_setup_frame,0x229,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ia32_setup_rt_frame,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ia32_setup_rt_frame,0x3a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ia32_setup_rt_frame,0x40,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
ia32_setup_rt_frame,0x48,0xffffffff81097010,CALL 0xffffffff81097010,direct call
ia32_setup_rt_frame,0x9a,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],R14D",write other [TODO]
ia32_setup_rt_frame,0xa2,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],ECX",write other [TODO]
ia32_setup_rt_frame,0xac,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EDX",write other [TODO]
FUN_ffffffff81097421,-0x2e,,RET,ret
FUN_ffffffff81097421,0x0,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
FUN_ffffffff81097421,0x6,ctx->rbx + 0x94,"MOV dword ptr [RBX + 0x94],0x0",write other [TODO]
FUN_ffffffff81097421,0x20,ctx->rbx + 0x98,"MOV dword ptr [RBX + 0x98],ESI",write other [TODO]
FUN_ffffffff81097421,0x2c,ctx->rbx + 0x9c,"MOV dword ptr [RBX + 0x9c],ESI",write other [TODO]
FUN_ffffffff81097421,0x39,ctx->rbx + 0xa0,"MOV dword ptr [RBX + 0xa0],EAX",write other [TODO]
FUN_ffffffff81097421,0x4e,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
FUN_ffffffff81097421,0x52,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
FUN_ffffffff81097421,0x5e,ctx->rbx + 0x104,"MOV qword ptr [RBX + 0x104],RAX",write other [TODO]
FUN_ffffffff81097421,0x6e,ctx->rbx + 0xa4,"MOV dword ptr [RBX + 0xa4],EAX",write other [TODO]
FUN_ffffffff81097421,0x76,ctx->rbx + 0xa8,"MOV dword ptr [RBX + 0xa8],EAX",write other [TODO]
FUN_ffffffff81097421,0x7e,ctx->rbx + 0xb0,"MOV dword ptr [RBX + 0xb0],EAX",write other [TODO]
FUN_ffffffff81097421,0x86,ctx->rbx + 0xac,"MOV dword ptr [RBX + 0xac],EAX",write other [TODO]
FUN_ffffffff81097421,0x91,ctx->rbx + 0xb4,"MOV dword ptr [RBX + 0xb4],EAX",write other [TODO]
FUN_ffffffff81097421,0x9c,ctx->rbx + 0xb8,"MOV dword ptr [RBX + 0xb8],EAX",write other [TODO]
FUN_ffffffff81097421,0xa7,ctx->rbx + 0xbc,"MOV dword ptr [RBX + 0xbc],EAX",write other [TODO]
FUN_ffffffff81097421,0xb5,ctx->rbx + 0xc0,"MOV dword ptr [RBX + 0xc0],EAX",write other [TODO]
FUN_ffffffff81097421,0xc0,ctx->rbx + 0xc4,"MOV dword ptr [RBX + 0xc4],R8D",write other [TODO]
FUN_ffffffff81097421,0xcc,ctx->rbx + 0xc8,"MOV dword ptr [RBX + 0xc8],R8D",write other [TODO]
FUN_ffffffff81097421,0xd8,ctx->rbx + 0xcc,"MOV dword ptr [RBX + 0xcc],R8D",write other [TODO]
FUN_ffffffff81097421,0xe4,ctx->rbx + 0xd0,"MOV dword ptr [RBX + 0xd0],R8D",write other [TODO]
FUN_ffffffff81097421,0xfb,ctx->rbx + 0xd4,"MOV dword ptr [RBX + 0xd4],R8D",write other [TODO]
FUN_ffffffff81097421,0x112,ctx->rbx + 0xd8,"MOV dword ptr [RBX + 0xd8],R8D",write other [TODO]
FUN_ffffffff81097421,0x121,ctx->rbx + 0xdc,"MOV dword ptr [RBX + 0xdc],R8D",write other [TODO]
FUN_ffffffff81097421,0x130,ctx->rbx + 0xe0,"MOV dword ptr [RBX + 0xe0],R8D",write other [TODO]
FUN_ffffffff81097421,0x13f,ctx->rbx + 0xe4,"MOV dword ptr [RBX + 0xe4],R8D",write other [TODO]
FUN_ffffffff81097421,0x146,ctx->rbx + 0xe8,"MOV dword ptr [RBX + 0xe8],EAX",write other [TODO]
FUN_ffffffff81097421,0x154,ctx->rbx + 0xec,"MOV dword ptr [RBX + 0xec],EAX",write other [TODO]
FUN_ffffffff81097421,0x15a,ctx->rbx + 0xf0,"MOV dword ptr [RBX + 0xf0],ESI",write other [TODO]
FUN_ffffffff81097421,0x160,ctx->rbx + 0xf4,"MOV dword ptr [RBX + 0xf4],EDI",write other [TODO]
FUN_ffffffff81097421,0x176,ctx->rbx + 0xf8,"MOV dword ptr [RBX + 0xf8],EAX",write other [TODO]
FUN_ffffffff81097421,0x17f,ctx->rbx + 0xfc,"MOV qword ptr [RBX + 0xfc],RAX",write other [TODO]
FUN_ffffffff81097421,0x190,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
FUN_ffffffff81097421,0x194,0xffffffff810bb230,CALL 0xffffffff810bb230,direct call
FUN_ffffffff81097421,0x1a9,ctx->r12 + 0x98,"MOV qword ptr [R12 + 0x98],RBX",write other [TODO]
FUN_ffffffff81097421,0x1b5,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],R14",write other [TODO]
FUN_ffffffff81097421,0x1ba,ctx->r12 + 0x58,"MOV qword ptr [R12 + 0x58],RDX",write other [TODO]
FUN_ffffffff81097421,0x1c4,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],RCX",write other [TODO]
FUN_ffffffff81097421,0x1cb,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],RSI",write other [TODO]
FUN_ffffffff81097421,0x1d7,ctx->r12 + 0x88,"MOV qword ptr [R12 + 0x88],0x23",write other [TODO]
FUN_ffffffff81097421,0x1e3,ctx->r12 + 0xa0,"MOV qword ptr [R12 + 0xa0],0x2b",write other [TODO]
FUN_ffffffff81097421,0x217,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ia32_classify_syscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ia32_classify_syscall,0x2e,,RET,ret
ia32_classify_syscall,0x4c,,RET,ret
ia32_classify_syscall,0x53,,RET,ret
ia32_classify_syscall,0x5a,,RET,ret
efi_delete_dummy_variable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_delete_dummy_variable,0x2b,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
efi_delete_dummy_variable,0x3d,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
efi_delete_dummy_variable,0x4b,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
efi_delete_dummy_variable,0x50,0xffffffff83123710,CALL qword ptr [0xffffffff83123710],in-direct call
efi_delete_dummy_variable,0x67,,RET,ret
efi_delete_dummy_variable,0x68,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_query_variable_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_query_variable_store,0x21,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
efi_query_variable_store,0x4f,0xffffffff83123718,CALL qword ptr [0xffffffff83123718],in-direct call
efi_query_variable_store,0x92,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
efi_query_variable_store,0xc0,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
efi_query_variable_store,0xcf,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
efi_query_variable_store,0xd4,0xffffffff83123708,CALL qword ptr [0xffffffff83123708],in-direct call
efi_query_variable_store,0xe6,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
efi_query_variable_store,0xfd,0xffffffff83123718,CALL qword ptr [0xffffffff83123718],in-direct call
efi_query_variable_store,0x13f,,RET,ret
efi_query_variable_store,0x140,0xffffffff83123720,CALL qword ptr [0xffffffff83123720],in-direct call
efi_query_variable_store,0x16a,0xffffffff810976a0,CALL 0xffffffff810976a0,direct call
efi_query_variable_store,0x174,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_reboot_required,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_reboot_required,0x14,0xffffffff83094e18,"MOV dword ptr [0xffffffff83094e18],0x1",write .data
efi_reboot_required,0x24,,RET,ret
efi_poweroff_required,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_poweroff_required,0x20,,RET,ret
efi_crash_gracefully_on_page_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_crash_gracefully_on_page_fault,0x1d,,RET,ret
efi_crash_gracefully_on_page_fault,0x27,0xffffffff810c4420,CALL 0xffffffff810c4420,direct call
efi_crash_gracefully_on_page_fault,0x42,,RET,ret
efi_crash_gracefully_on_page_fault,0x4d,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
fw_vendor_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fw_vendor_show,0x1a,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
fw_vendor_show,0x22,,RET,ret
runtime_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
runtime_show,0x1a,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
runtime_show,0x22,,RET,ret
config_table_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
config_table_show,0x1a,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
config_table_show,0x22,,RET,ret
efi_is_table_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_is_table_address,0x38,,RET,ret
efi_is_table_address,0x3f,,RET,ret
efi_systab_show_arch,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_systab_show_arch,0x22,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
efi_systab_show_arch,0x34,,RET,ret
efi_attr_is_visible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_attr_is_visible,0x29,,RET,ret
efi_attr_is_visible,0x37,,RET,ret
efi_attr_is_visible,0x51,,RET,ret
efi_attr_is_visible,0x5f,,RET,ret
efi_thunk_get_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_get_time,0x14,,RET,ret
efi_thunk_set_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_set_time,0x14,,RET,ret
efi_thunk_get_wakeup_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_get_wakeup_time,0x14,,RET,ret
efi_thunk_set_wakeup_time,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_set_wakeup_time,0x14,,RET,ret
efi_thunk_update_capsule,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_update_capsule,0x14,,RET,ret
efi_thunk_query_capsule_caps,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_query_capsule_caps,0x14,,RET,ret
efi_thunk_get_next_high_mono_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_get_next_high_mono_count,0x14,,RET,ret
FUN_ffffffff81097c62,0x0,,RET,ret
efi_sync_low_kernel_mappings,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_sync_low_kernel_mappings,0x60,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
efi_sync_low_kernel_mappings,0x88,0xffffffff81097c20,CALL 0xffffffff81097c20,direct call
efi_sync_low_kernel_mappings,0x8f,ctx->rdi,"MOV RDI,R12",write other [TODO]
efi_sync_low_kernel_mappings,0x95,0xffffffff81097c20,CALL 0xffffffff81097c20,direct call
efi_sync_low_kernel_mappings,0xb3,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
efi_sync_low_kernel_mappings,0xbe,0xffffffff81097c20,CALL 0xffffffff81097c20,direct call
efi_sync_low_kernel_mappings,0xc3,ctx->rdi,"MOV RDI,R12",write other [TODO]
efi_sync_low_kernel_mappings,0xcc,0xffffffff81097c20,CALL 0xffffffff81097c20,direct call
efi_sync_low_kernel_mappings,0xd7,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
efi_sync_low_kernel_mappings,0xf8,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
efi_sync_low_kernel_mappings,0x121,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
efi_sync_low_kernel_mappings,0x12b,ctx->rcx + 0xdd8,"MOV qword ptr [RCX + 0xdd8],RAX",write other [TODO]
efi_sync_low_kernel_mappings,0x141,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
efi_sync_low_kernel_mappings,0x147,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
efi_sync_low_kernel_mappings,0x16f,0xffffffff82e4baa0,CALL qword ptr [0xffffffff82e4baa0],in-direct call
efi_sync_low_kernel_mappings,0x197,ctx->rcx + 0xfe0,"MOV qword ptr [RCX + 0xfe0],RAX",write other [TODO]
efi_sync_low_kernel_mappings,0x1a2,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RAX",write other [TODO]
efi_sync_low_kernel_mappings,0x1aa,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],RAX",write other [TODO]
efi_sync_low_kernel_mappings,0x1b2,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],RAX",write other [TODO]
efi_sync_low_kernel_mappings,0x1c0,,RET,ret
efi_thunk_query_variable_info_nonblocking,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_query_variable_info_nonblocking,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
efi_thunk_query_variable_info_nonblocking,0x4b,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
efi_thunk_query_variable_info_nonblocking,0x51,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
efi_thunk_query_variable_info_nonblocking,0x55,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
efi_thunk_query_variable_info_nonblocking,0x62,0xffffffff81d14a90,CALL 0xffffffff81d14a90,direct call
efi_thunk_query_variable_info_nonblocking,0x7a,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_query_variable_info_nonblocking,0xb1,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_query_variable_info_nonblocking,0xe8,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_query_variable_info_nonblocking,0x115,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_query_variable_info_nonblocking,0x11f,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_query_variable_info_nonblocking,0x12b,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_query_variable_info_nonblocking,0x170,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R10",write stack
efi_thunk_query_variable_info_nonblocking,0x174,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_query_variable_info_nonblocking,0x17f,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_query_variable_info_nonblocking,0x186,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_query_variable_info_nonblocking,0x192,ctx->wordctx->ptrctx->rbp - 0x52,"MOV word ptr [RBP + -0x52],AX",write stack
efi_thunk_query_variable_info_nonblocking,0x1be,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_query_variable_info_nonblocking,0x1ef,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],RSI",write other [TODO]
efi_thunk_query_variable_info_nonblocking,0x20a,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_query_variable_info_nonblocking,0x20f,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_query_variable_info_nonblocking,0x22f,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_query_variable_info_nonblocking,0x23f,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_query_variable_info_nonblocking,0x268,,RET,ret
efi_thunk_query_variable_info_nonblocking,0x277,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
efi_thunk_query_variable_info_nonblocking,0x282,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_query_variable_info_nonblocking,0x2a2,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_query_variable_info_nonblocking,0x2c1,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_query_variable_info_nonblocking,0x2de,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_query_variable_info_nonblocking,0x2fd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_thunk_query_variable_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_query_variable_info,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
efi_thunk_query_variable_info,0x55,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
efi_thunk_query_variable_info,0x5a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
efi_thunk_query_variable_info,0x66,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_query_variable_info,0x9d,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_query_variable_info,0xd4,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_query_variable_info,0x101,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_query_variable_info,0x10b,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_query_variable_info,0x117,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_query_variable_info,0x15c,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R10",write stack
efi_thunk_query_variable_info,0x160,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_query_variable_info,0x16b,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_query_variable_info,0x172,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_query_variable_info,0x17e,ctx->wordctx->ptrctx->rbp - 0x52,"MOV word ptr [RBP + -0x52],AX",write stack
efi_thunk_query_variable_info,0x1aa,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_query_variable_info,0x1db,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],RSI",write other [TODO]
efi_thunk_query_variable_info,0x1f6,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_query_variable_info,0x1fb,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_query_variable_info,0x21b,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_query_variable_info,0x22b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_query_variable_info,0x254,,RET,ret
efi_thunk_query_variable_info,0x258,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_query_variable_info,0x278,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_query_variable_info,0x2a3,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_query_variable_info,0x2cb,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_query_variable_info,0x2ea,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_thunk_reset_system,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_reset_system,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
efi_thunk_reset_system,0x3a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
efi_thunk_reset_system,0x3f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
efi_thunk_reset_system,0x4b,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_reset_system,0x7b,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_reset_system,0x85,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_reset_system,0x91,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_reset_system,0xd6,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R10",write stack
efi_thunk_reset_system,0xda,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_reset_system,0xe5,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_reset_system,0xec,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_reset_system,0xf8,ctx->wordctx->ptrctx->rbp - 0x52,"MOV word ptr [RBP + -0x52],AX",write stack
efi_thunk_reset_system,0x125,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_reset_system,0x149,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],RSI",write other [TODO]
efi_thunk_reset_system,0x150,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_reset_system,0x155,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_reset_system,0x171,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_reset_system,0x181,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_reset_system,0x1a3,,RET,ret
efi_thunk_reset_system,0x1a7,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_reset_system,0x1c4,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_reset_system,0x1d2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_thunk_set_variable_nonblocking,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_set_variable_nonblocking,0x21,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],EDX",write stack
efi_thunk_set_variable_nonblocking,0x24,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RCX",write stack
efi_thunk_set_variable_nonblocking,0x31,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
efi_thunk_set_variable_nonblocking,0x37,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
efi_thunk_set_variable_nonblocking,0x40,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
efi_thunk_set_variable_nonblocking,0x4d,0xffffffff81d14a90,CALL 0xffffffff81d14a90,direct call
efi_thunk_set_variable_nonblocking,0x71,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
efi_thunk_set_variable_nonblocking,0x74,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RDX",write other [TODO]
efi_thunk_set_variable_nonblocking,0x78,0xffffffff81644290,CALL 0xffffffff81644290,direct call
efi_thunk_set_variable_nonblocking,0x8c,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_set_variable_nonblocking,0xb9,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
efi_thunk_set_variable_nonblocking,0xc8,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_set_variable_nonblocking,0xf3,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EAX",write stack
efi_thunk_set_variable_nonblocking,0x102,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_set_variable_nonblocking,0x152,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_set_variable_nonblocking,0x17d,,RET,ret
efi_thunk_set_variable_nonblocking,0x181,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_set_variable_nonblocking,0x1b2,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
efi_thunk_set_variable_nonblocking,0x1d1,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
efi_thunk_set_variable_nonblocking,0x1df,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_set_variable_nonblocking,0x211,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_set_variable_nonblocking,0x22a,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EAX",write stack
efi_thunk_set_variable_nonblocking,0x242,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],R9D",write stack
efi_thunk_set_variable_nonblocking,0x249,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_set_variable_nonblocking,0x253,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_set_variable_nonblocking,0x25f,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_set_variable_nonblocking,0x2a4,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R10",write stack
efi_thunk_set_variable_nonblocking,0x2a8,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_set_variable_nonblocking,0x2b3,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_set_variable_nonblocking,0x2ba,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_set_variable_nonblocking,0x2f9,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_set_variable_nonblocking,0x327,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],RSI",write other [TODO]
efi_thunk_set_variable_nonblocking,0x342,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_set_variable_nonblocking,0x347,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_set_variable_nonblocking,0x369,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_set_variable_nonblocking,0x381,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_set_variable_nonblocking,0x388,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_thunk_set_variable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_set_variable,0x30,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EDX",write stack
efi_thunk_set_variable,0x33,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RCX",write stack
efi_thunk_set_variable,0x40,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
efi_thunk_set_variable,0x46,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
efi_thunk_set_variable,0x5d,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RDX",write other [TODO]
efi_thunk_set_variable,0x62,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
efi_thunk_set_variable,0x66,0xffffffff81644290,CALL 0xffffffff81644290,direct call
efi_thunk_set_variable,0x7a,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_set_variable,0xa7,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],0x0",write stack
efi_thunk_set_variable,0xb6,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_set_variable,0xe1,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],EAX",write stack
efi_thunk_set_variable,0xf0,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_set_variable,0x140,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_set_variable,0x16b,,RET,ret
efi_thunk_set_variable,0x16f,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_set_variable,0x19f,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],0x0",write stack
efi_thunk_set_variable,0x1ae,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_set_variable,0x1e0,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_set_variable,0x1f9,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],EAX",write stack
efi_thunk_set_variable,0x211,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],R9D",write stack
efi_thunk_set_variable,0x218,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_set_variable,0x222,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_set_variable,0x22e,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_set_variable,0x273,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R10",write stack
efi_thunk_set_variable,0x277,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_set_variable,0x282,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_set_variable,0x289,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_set_variable,0x2c8,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_set_variable,0x2f6,ctx->r10 + 0x928,"MOV qword ptr [R10 + 0x928],RSI",write other [TODO]
efi_thunk_set_variable,0x311,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_set_variable,0x316,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_set_variable,0x338,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_set_variable,0x350,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_set_variable,0x357,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_thunk_get_next_variable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_get_next_variable,0x2f,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RAX",write stack
efi_thunk_get_next_variable,0x3b,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
efi_thunk_get_next_variable,0x4e,ctx->rsp + 0x10,"MOV dword ptr [RSP + 0x10],0x0",write stack
efi_thunk_get_next_variable,0x56,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
efi_thunk_get_next_variable,0x5a,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
efi_thunk_get_next_variable,0x65,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_next_variable,0x90,ctx->rsp + 0x10,"MOV dword ptr [RSP + 0x10],EAX",write stack
efi_thunk_get_next_variable,0x94,ctx->rsp + 0x14,"MOV dword ptr [RSP + 0x14],0x0",write stack
efi_thunk_get_next_variable,0xa4,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_next_variable,0xcf,ctx->rsp + 0x14,"MOV dword ptr [RSP + 0x14],EAX",write stack
efi_thunk_get_next_variable,0xe3,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_next_variable,0x10f,ctx->rsp + 0xc,"MOV dword ptr [RSP + 0xc],EAX",write stack
efi_thunk_get_next_variable,0x11b,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_get_next_variable,0x125,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_get_next_variable,0x131,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_get_next_variable,0x176,ctx->rsp,"MOV qword ptr [RSP],R9",write stack
efi_thunk_get_next_variable,0x17a,ctx->r9 + 0x928,"MOV qword ptr [R9 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_get_next_variable,0x185,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_get_next_variable,0x18c,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_get_next_variable,0x1c3,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_get_next_variable,0x1f1,ctx->r9 + 0x928,"MOV qword ptr [R9 + 0x928],RSI",write other [TODO]
efi_thunk_get_next_variable,0x20c,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_get_next_variable,0x211,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_get_next_variable,0x231,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_get_next_variable,0x23b,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_next_variable,0x26b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_get_next_variable,0x277,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
efi_thunk_get_next_variable,0x27a,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RDX",write other [TODO]
efi_thunk_get_next_variable,0x29f,,RET,ret
efi_thunk_get_next_variable,0x2a3,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_next_variable,0x2b8,ctx->rsp + 0x14,"MOV dword ptr [RSP + 0x14],EAX",write stack
efi_thunk_get_next_variable,0x2c4,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_next_variable,0x2d9,ctx->rsp + 0x10,"MOV dword ptr [RSP + 0x10],EAX",write stack
efi_thunk_get_next_variable,0x2e2,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_get_next_variable,0x2fa,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_thunk_get_variable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_thunk_get_variable,0x33,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RSI",write stack
efi_thunk_get_variable,0x40,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
efi_thunk_get_variable,0x46,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
efi_thunk_get_variable,0x4f,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x0",write stack
efi_thunk_get_variable,0x56,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
efi_thunk_get_variable,0x61,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RDX",write other [TODO]
efi_thunk_get_variable,0x65,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
efi_thunk_get_variable,0x71,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_variable,0x9c,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EAX",write stack
efi_thunk_get_variable,0x9f,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],0x0",write stack
efi_thunk_get_variable,0xae,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_variable,0xd9,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],EAX",write stack
efi_thunk_get_variable,0xe4,0xffffffff81644290,CALL 0xffffffff81644290,direct call
efi_thunk_get_variable,0xf8,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_variable,0x130,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_variable,0x16c,0xffffffff8108bba0,CALL 0xffffffff8108bba0,direct call
efi_thunk_get_variable,0x1bd,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
efi_thunk_get_variable,0x1e8,,RET,ret
efi_thunk_get_variable,0x1ec,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_variable,0x205,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],EAX",write stack
efi_thunk_get_variable,0x210,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_variable,0x250,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_variable,0x269,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],EAX",write stack
efi_thunk_get_variable,0x274,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_variable,0x2a2,0xffffffff8108e660,CALL 0xffffffff8108e660,direct call
efi_thunk_get_variable,0x2d6,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],R9D",write stack
efi_thunk_get_variable,0x2da,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
efi_thunk_get_variable,0x2e4,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
efi_thunk_get_variable,0x2f0,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_get_variable,0x335,ctx->r15 + 0x928,"MOV qword ptr [R15 + 0x928],-0x7cf6ba20",write other [TODO]
efi_thunk_get_variable,0x340,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_thunk_get_variable,0x347,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_get_variable,0x382,0xffffffff810995f0,CALL 0xffffffff810995f0,direct call
efi_thunk_get_variable,0x3ab,ctx->r15 + 0x928,"MOV qword ptr [R15 + 0x928],RSI",write other [TODO]
efi_thunk_get_variable,0x3c6,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_thunk_get_variable,0x3cb,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
efi_thunk_get_variable,0x3ed,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
efi_thunk_get_variable,0x40f,0xffffffff82000810,CALL 0xffffffff82000810,direct call
efi_thunk_get_variable,0x416,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
efi_enter_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_enter_mm,0x1f,ctx->rax + 0x928,"MOV qword ptr [RAX + 0x928],-0x7cf6ba20",write other [TODO]
efi_enter_mm,0x2d,0xffffffff8346b220,"MOV qword ptr [0xffffffff8346b220],RDI",write .data
efi_enter_mm,0x34,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_enter_mm,0x3a,,RET,ret
efi_leave_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
efi_leave_mm,0x1f,ctx->rax + 0x928,"MOV qword ptr [RAX + 0x928],RSI",write other [TODO]
efi_leave_mm,0x29,0xffffffff8108c450,CALL 0xffffffff8108c450,direct call
efi_leave_mm,0x2f,,RET,ret
__efi_call,0x10,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],R9",write stack
__efi_call,0x15,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
__efi_call,0x23,ctx->rdi,CALL RDI,in-direct call
__efi_call,0x26,,RET,ret
__efi64_thunk,0x1d,ctx->rsp + 0x18,"MOV dword ptr [RSP + 0x18],EBP",write stack
__efi64_thunk,0x21,ctx->rsp + 0x1c,"MOV dword ptr [RSP + 0x1c],EBX",write stack
__efi64_thunk,0x25,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],EAX",write stack
__efi64_thunk,0x4b,ctx->rsp,"MOV dword ptr [RSP],EBX",write stack
__efi64_thunk,0x4e,ctx->rsp + 0x4,"MOV dword ptr [RSP + 0x4],ESI",write stack
__efi64_thunk,0x52,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],EDX",write stack
__efi64_thunk,0x56,ctx->rsp + 0xc,"MOV dword ptr [RSP + 0xc],ECX",write stack
__efi64_thunk,0x5a,ctx->rsp + 0x10,"MOV dword ptr [RSP + 0x10],R8D",write stack
__efi64_thunk,0x5f,ctx->rsp + 0x14,"MOV dword ptr [RSP + 0x14],R9D",write stack
__efi64_thunk,0x67,,RETF,ret
iosf_mbi_available,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_available,0x15,,RET,ret
mcr_get,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mcr_get,0x8,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
mcr_get,0x11,,RET,ret
iosf_mbi_assert_punit_acquired,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_assert_punit_acquired,0x14,,RET,ret
iosf_mbi_pci_read_mdr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_pci_read_mdr,0x33,0xffffffff81669050,CALL 0xffffffff81669050,direct call
iosf_mbi_pci_read_mdr,0x4f,0xffffffff81668fb0,CALL 0xffffffff81668fb0,direct call
iosf_mbi_pci_read_mdr,0x70,0xffffffff81669050,CALL 0xffffffff81669050,direct call
iosf_mbi_pci_read_mdr,0x8b,,RET,ret
iosf_mbi_read,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_read,0x31,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
iosf_mbi_read,0x57,0xffffffff810996c0,CALL 0xffffffff810996c0,direct call
iosf_mbi_read,0x69,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
iosf_mbi_read,0x7b,,RET,ret
iosf_mbi_pci_write_mdr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_pci_write_mdr,0x28,0xffffffff81669050,CALL 0xffffffff81669050,direct call
iosf_mbi_pci_write_mdr,0x50,0xffffffff81669050,CALL 0xffffffff81669050,direct call
iosf_mbi_pci_write_mdr,0x71,0xffffffff81669050,CALL 0xffffffff81669050,direct call
iosf_mbi_write,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_write,0x31,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
iosf_mbi_write,0x57,0xffffffff810997e0,CALL 0xffffffff810997e0,direct call
iosf_mbi_write,0x69,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
iosf_mbi_write,0x7b,,RET,ret
iosf_mbi_modify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_modify,0x1b,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],R8D",write stack
iosf_mbi_modify,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
iosf_mbi_modify,0x62,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
iosf_mbi_modify,0x7e,0xffffffff810996c0,CALL 0xffffffff810996c0,direct call
iosf_mbi_modify,0xa1,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDX",write stack
iosf_mbi_modify,0xa4,0xffffffff810997e0,CALL 0xffffffff810997e0,direct call
iosf_mbi_modify,0xb6,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
iosf_mbi_modify,0xdb,,RET,ret
iosf_mbi_modify,0xe6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
iosf_mbi_punit_acquire,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_punit_acquire,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
iosf_mbi_punit_acquire,0x23,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
iosf_mbi_punit_acquire,0x39,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_punit_acquire,0x3e,0xffffffff82000828,CALL 0xffffffff82000828,direct call
iosf_mbi_punit_acquire,0x53,0xffffffff811040c0,CALL 0xffffffff811040c0,direct call
iosf_mbi_punit_acquire,0x5a,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
iosf_mbi_punit_acquire,0x6f,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
iosf_mbi_punit_acquire,0x89,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
iosf_mbi_punit_acquire,0x9e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_punit_acquire,0xb3,,RET,ret
iosf_mbi_punit_acquire,0xb4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
iosf_mbi_reset_semaphore,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_reset_semaphore,0x21,0xffffffff81099900,CALL 0xffffffff81099900,direct call
iosf_mbi_unblock_punit_i2c_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_unblock_punit_i2c_access,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
iosf_mbi_unblock_punit_i2c_access,0x25,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_unblock_punit_i2c_access,0x2b,,RET,ret
iosf_mbi_unblock_punit_i2c_access,0x2c,0xffffffff81099ab0,CALL 0xffffffff81099ab0,direct call
iosf_mbi_unblock_punit_i2c_access,0x3a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_unblock_punit_i2c_access,0x52,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
iosf_mbi_unblock_punit_i2c_access,0x58,,RET,ret
iosf_mbi_unregister_pmic_bus_access_notifier_unlocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_unregister_pmic_bus_access_notifier_unlocked,0x1d,0xffffffff810d2970,CALL 0xffffffff810d2970,direct call
iosf_mbi_unregister_pmic_bus_access_notifier_unlocked,0x23,,RET,ret
iosf_mbi_probe,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_probe,0x16,0xffffffff81675320,CALL 0xffffffff81675320,direct call
iosf_mbi_probe,0x26,0xffffffff81676840,CALL 0xffffffff81676840,direct call
iosf_mbi_probe,0x2b,0xffffffff8346b2a8,"MOV qword ptr [0xffffffff8346b2a8],RAX",write .data
iosf_mbi_probe,0x36,0xffffffff8346b298,"MOV dword ptr [0xffffffff8346b298],EAX",write .data
iosf_mcr_fops_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mcr_fops_open,0x1e,0xffffffff81399a60,CALL 0xffffffff81399a60,direct call
iosf_mcr_fops_open,0x24,,RET,ret
mcr_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mcr_set,0x1e,ctx->rdi,"MOV dword ptr [RDI],ESI",write other [TODO]
mcr_set,0x28,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
mcr_set,0x4e,0xffffffff81099750,CALL 0xffffffff81099750,direct call
mcr_set,0x59,,RET,ret
mcr_set,0x63,0xffffffff81099870,CALL 0xffffffff81099870,direct call
mcr_set,0x6e,,RET,ret
iosf_mbi_punit_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_punit_release,0x11,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
iosf_mbi_punit_release,0x26,0xffffffff8346b2a0,"MOV dword ptr [0xffffffff8346b2a0],EBX",write .data
iosf_mbi_punit_release,0x2c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_punit_release,0x3a,,RET,ret
iosf_mbi_punit_release,0x4e,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
iosf_mbi_punit_release,0x58,,RET,ret
iosf_mbi_register_pmic_bus_access_notifier,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_register_pmic_bus_access_notifier,0xf,0xffffffff810999f0,CALL 0xffffffff810999f0,direct call
iosf_mbi_register_pmic_bus_access_notifier,0x1e,0xffffffff810d2bb0,CALL 0xffffffff810d2bb0,direct call
iosf_mbi_register_pmic_bus_access_notifier,0x2d,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
iosf_mbi_register_pmic_bus_access_notifier,0x42,0xffffffff8346b2a0,"MOV dword ptr [0xffffffff8346b2a0],EBX",write .data
iosf_mbi_register_pmic_bus_access_notifier,0x48,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_register_pmic_bus_access_notifier,0x58,,RET,ret
iosf_mbi_register_pmic_bus_access_notifier,0x6c,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
iosf_mbi_register_pmic_bus_access_notifier,0x78,,RET,ret
iosf_mbi_unregister_pmic_bus_access_notifier,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_unregister_pmic_bus_access_notifier,0xf,0xffffffff810999f0,CALL 0xffffffff810999f0,direct call
iosf_mbi_unregister_pmic_bus_access_notifier,0x28,0xffffffff810d2970,CALL 0xffffffff810d2970,direct call
iosf_mbi_unregister_pmic_bus_access_notifier,0x37,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
iosf_mbi_unregister_pmic_bus_access_notifier,0x4c,0xffffffff8346b2a0,"MOV dword ptr [0xffffffff8346b2a0],EBX",write .data
iosf_mbi_unregister_pmic_bus_access_notifier,0x52,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_unregister_pmic_bus_access_notifier,0x62,,RET,ret
iosf_mbi_unregister_pmic_bus_access_notifier,0x76,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
iosf_mbi_unregister_pmic_bus_access_notifier,0x82,,RET,ret
iosf_mbi_block_punit_i2c_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iosf_mbi_block_punit_i2c_access,0x1f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
iosf_mbi_block_punit_i2c_access,0x48,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
iosf_mbi_block_punit_i2c_access,0x5e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
iosf_mbi_block_punit_i2c_access,0x63,0xffffffff82000828,CALL 0xffffffff82000828,direct call
iosf_mbi_block_punit_i2c_access,0x78,0xffffffff811040c0,CALL 0xffffffff811040c0,direct call
iosf_mbi_block_punit_i2c_access,0x7f,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
iosf_mbi_block_punit_i2c_access,0x94,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
iosf_mbi_block_punit_i2c_access,0xae,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
iosf_mbi_block_punit_i2c_access,0x10a,0xffffffff810d30e0,CALL 0xffffffff810d30e0,direct call
iosf_mbi_block_punit_i2c_access,0x118,0xffffffff81113be0,CALL 0xffffffff81113be0,direct call
iosf_mbi_block_punit_i2c_access,0x12a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
iosf_mbi_block_punit_i2c_access,0x149,0xffffffff810997e0,CALL 0xffffffff810997e0,direct call
iosf_mbi_block_punit_i2c_access,0x15b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
iosf_mbi_block_punit_i2c_access,0xbfacb8,0xffffffff81cd0a5d,CALL 0xffffffff81cd0a5d,direct call
FUN_ffffffff81099fda,-0xb5,0xffffffff8346b29c,"MOV dword ptr [0xffffffff8346b29c],EAX",write .data
FUN_ffffffff81099fda,-0xa8,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
FUN_ffffffff81099fda,-0x7f,,RET,ret
FUN_ffffffff81099fda,0xf,0xffffffff81d13530,CALL 0xffffffff81d13530,direct call
FUN_ffffffff81099fda,0x32,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
FUN_ffffffff81099fda,0x52,0xffffffff810996c0,CALL 0xffffffff810996c0,direct call
FUN_ffffffff81099fda,0x64,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
FUN_ffffffff81099fda,0x7f,0xffffffff8346b290,"MOV qword ptr [0xffffffff8346b290],RAX",write .data
FUN_ffffffff81099fda,0xd4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
FUN_ffffffff81099fda,0xbfaab6,0xffffffff81cd0a5d,CALL 0xffffffff81cd0a5d,direct call
FUN_ffffffff81099fda,0xbfaabb,0xffffffff81099ab0,CALL 0xffffffff81099ab0,direct call
FUN_ffffffff81099fda,0xbfaacd,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
FUN_ffffffff81099fda,0xbfaaea,0xffffffff810996c0,CALL 0xffffffff810996c0,direct call
FUN_ffffffff81099fda,0xbfaafb,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
FUN_ffffffff81099fda,0xbfab19,0xffffffff81cd0a5d,CALL 0xffffffff81cd0a5d,direct call
FUN_ffffffff81099fda,0xbfab63,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EDX",write stack
FUN_ffffffff81099fda,0xbfab66,0xffffffff81cd0a5d,CALL 0xffffffff81cd0a5d,direct call
__uv_bios_call,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__uv_bios_call,0x1d,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDI",write stack
__uv_bios_call,0x20,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
__uv_bios_call,0x24,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
__uv_bios_call,0x45,0xffffffff81097c70,CALL 0xffffffff81097c70,direct call
__uv_bios_call,0x4f,0xffffffff810436f0,CALL 0xffffffff810436f0,direct call
__uv_bios_call,0x5b,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
__uv_bios_call,0x87,0xffffffff81099550,CALL 0xffffffff81099550,direct call
__uv_bios_call,0x8c,0xffffffff81a26720,CALL 0xffffffff81a26720,direct call
__uv_bios_call,0x9f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__uv_bios_call,0xaf,0xffffffff810995c0,CALL 0xffffffff810995c0,direct call
__uv_bios_call,0xc2,0xffffffff81a26740,CALL 0xffffffff81a26740,direct call
__uv_bios_call,0xc7,0xffffffff81099590,CALL 0xffffffff81099590,direct call
__uv_bios_call,0xcc,0xffffffff8104cd60,CALL 0xffffffff8104cd60,direct call
__uv_bios_call,0xec,0xffffffff81042fc0,CALL 0xffffffff81042fc0,direct call
__uv_bios_call,0x102,,RET,ret
__uv_bios_call,0x103,0xffffffff82000810,CALL 0xffffffff82000810,direct call
uv_bios_get_pci_topology,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_get_pci_topology,0x1a,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_get_pci_topology,0x36,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_get_pci_topology,0x45,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_get_pci_topology,0x52,,RET,ret
uv_bios_call_irqsave.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_call_irqsave.constprop.0,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
uv_bios_call_irqsave.constprop.0,0x2d,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_call_irqsave.constprop.0,0x36,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
uv_bios_call_irqsave.constprop.0,0x3f,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
uv_bios_call_irqsave.constprop.0,0x58,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_call_irqsave.constprop.0,0x70,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_call_irqsave.constprop.0,0x86,,RET,ret
uv_bios_call_irqsave.constprop.0,0x87,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
uv_bios_reserved_page_pa,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_reserved_page_pa,0x14,0xffffffff8109a240,CALL 0xffffffff8109a240,direct call
uv_bios_reserved_page_pa,0x1a,,RET,ret
uv_bios_change_memprotect,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_change_memprotect,0x19,0xffffffff8109a240,CALL 0xffffffff8109a240,direct call
uv_bios_change_memprotect,0x1f,,RET,ret
uv_bios_mq_watchlist_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_mq_watchlist_free,0x19,0xffffffff8109a240,CALL 0xffffffff8109a240,direct call
uv_bios_mq_watchlist_free,0x1f,,RET,ret
uv_bios_mq_watchlist_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_mq_watchlist_alloc,0x23,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
uv_bios_mq_watchlist_alloc,0x2d,0xffffffff8109a240,CALL 0xffffffff8109a240,direct call
uv_bios_mq_watchlist_alloc,0x48,,RET,ret
uv_bios_mq_watchlist_alloc,0x49,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uv_bios_get_master_nasid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_get_master_nasid,0x19,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_get_master_nasid,0x36,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_get_master_nasid,0x45,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_get_master_nasid,0x51,,RET,ret
uv_bios_get_heapsize,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_get_heapsize,0x1e,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_get_heapsize,0x3c,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_get_heapsize,0x4b,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_get_heapsize,0x59,,RET,ret
uv_bios_install_heap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_install_heap,0x1e,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_install_heap,0x3c,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_install_heap,0x4b,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_install_heap,0x59,,RET,ret
uv_bios_obj_count,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_obj_count,0x1e,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_obj_count,0x3c,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_obj_count,0x4b,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_obj_count,0x59,,RET,ret
uv_bios_enum_objs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_enum_objs,0x1e,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_enum_objs,0x3c,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_enum_objs,0x4b,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_enum_objs,0x59,,RET,ret
uv_bios_enum_ports,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_enum_ports,0x23,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_enum_ports,0x42,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_enum_ports,0x51,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_enum_ports,0x61,,RET,ret
uv_bios_get_geoinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_get_geoinfo,0x1f,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_get_geoinfo,0x3c,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_get_geoinfo,0x4b,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_get_geoinfo,0x5a,,RET,ret
uv_bios_get_sn_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_get_sn_info,0x41,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
uv_bios_get_sn_info,0x47,0xffffffff8109a240,CALL 0xffffffff8109a240,direct call
uv_bios_get_sn_info,0x5d,ctx->r15,"MOV dword ptr [R15],ECX",write other [TODO]
uv_bios_get_sn_info,0x6f,ctx->r14,"MOV qword ptr [R14],RCX",write other [TODO]
uv_bios_get_sn_info,0x81,ctx->r13,"MOV qword ptr [R13],RCX",write other [TODO]
uv_bios_get_sn_info,0x90,ctx->r12,"MOV qword ptr [R12],RDI",write other [TODO]
uv_bios_get_sn_info,0x9d,ctx->rbx,"MOV qword ptr [RBX],RDX",write other [TODO]
uv_bios_get_sn_info,0xbd,,RET,ret
uv_bios_get_sn_info,0xbe,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uv_bios_freq_base,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_freq_base,0x1a,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_freq_base,0x36,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_freq_base,0x45,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_freq_base,0x52,,RET,ret
uv_bios_set_legacy_vga_target,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_set_legacy_vga_target,0x21,0xffffffff81d10400,CALL 0xffffffff81d10400,direct call
uv_bios_set_legacy_vga_target,0x3e,0xffffffff8109a0c0,CALL 0xffffffff8109a0c0,direct call
uv_bios_set_legacy_vga_target,0x4d,0xffffffff81d10120,CALL 0xffffffff81d10120,direct call
uv_bios_set_legacy_vga_target,0x5c,,RET,ret
get_uv_systab_phys,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_uv_systab_phys,0x2d,0xffffffff81a24190,CALL 0xffffffff81a24190,direct call
get_uv_systab_phys,0x42,,RET,ret
uv_bios_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_bios_init,0xd,0xffffffff8346b2d8,"MOV qword ptr [0xffffffff8346b2d8],0x0",write .data
uv_bios_init,0x31,0xffffffff81a24190,CALL 0xffffffff81a24190,direct call
uv_bios_init,0x52,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
uv_bios_init,0x57,0xffffffff8346b2d8,"MOV qword ptr [0xffffffff8346b2d8],RAX",write .data
uv_bios_init,0x79,0xffffffff81c7f8e0,CALL 0xffffffff81c7f8e0,direct call
uv_bios_init,0xa0,0xffffffff81089cf0,CALL 0xffffffff81089cf0,direct call
uv_bios_init,0xab,0xffffffff81089bf0,CALL 0xffffffff81089bf0,direct call
uv_bios_init,0xb0,0xffffffff8346b2d8,"MOV qword ptr [0xffffffff8346b2d8],RAX",write .data
uv_bios_init,0xbfa30e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
uv_bios_init,0xbfa325,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
uv_noop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_noop,0xa,,RET,ret
uv_domain_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_domain_free,0x16,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
uv_domain_free,0x24,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
uv_domain_free,0x33,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
uv_domain_free,0x42,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
uv_domain_free,0x52,0xffffffff8112b470,CALL 0xffffffff8112b470,direct call
uv_domain_free,0x5d,,RET,ret
uv_domain_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_domain_alloc,0x1e,0xffffffff8112a2f0,CALL 0xffffffff8112a2f0,direct call
uv_domain_alloc,0x57,0xffffffff812b3510,CALL 0xffffffff812b3510,direct call
uv_domain_alloc,0x74,0xffffffff8112b130,CALL 0xffffffff8112b130,direct call
uv_domain_alloc,0x90,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
uv_domain_alloc,0xc7,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EAX",write other [TODO]
uv_domain_alloc,0xcf,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
uv_domain_alloc,0xd3,0xffffffff8112aba0,CALL 0xffffffff8112aba0,direct call
uv_domain_alloc,0xeb,,RET,ret
uv_domain_alloc,0xf6,0xffffffff811270f0,CALL 0xffffffff811270f0,direct call
uv_domain_alloc,0x100,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
uv_setup_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_setup_irq,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
uv_setup_irq,0x3a,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
uv_setup_irq,0x54,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
uv_setup_irq,0x63,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R10",write stack
uv_setup_irq,0x8f,0xffffffff81072840,CALL 0xffffffff81072840,direct call
uv_setup_irq,0x94,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R15D",write stack
uv_setup_irq,0xa6,ctx->rbp - 0x78,"MOV dword ptr [RBP + -0x78],0x7",write stack
uv_setup_irq,0xb6,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R12D",write stack
uv_setup_irq,0xbf,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R14",write stack
uv_setup_irq,0xc3,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R13",write stack
uv_setup_irq,0xd4,0xffffffff8112b510,CALL 0xffffffff8112b510,direct call
uv_setup_irq,0xfb,,RET,ret
uv_setup_irq,0x10c,0xffffffff8112a7f0,CALL 0xffffffff8112a7f0,direct call
uv_setup_irq,0x132,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
uv_setup_irq,0x136,0xffffffff8112a540,CALL 0xffffffff8112a540,direct call
uv_setup_irq,0x142,0xffffffff8346b2e0,"MOV qword ptr [0xffffffff8346b2e0],RAX",write .data
uv_setup_irq,0x152,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
uv_setup_irq,0x15b,0xffffffff81129fe0,CALL 0xffffffff81129fe0,direct call
uv_setup_irq,0x16f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uv_teardown_irq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_teardown_irq,0xe,0xffffffff8112bb30,CALL 0xffffffff8112bb30,direct call
uv_teardown_irq,0x14,,RET,ret
uv_program_mmr.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_program_mmr.isra.0,0x67,ctx->r8,"MOV qword ptr [R8],RDX",write other [TODO]
uv_program_mmr.isra.0,0x6b,,RET,ret
uv_set_irq_affinity,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_set_irq_affinity,0x1e,0xffffffff81071320,CALL 0xffffffff81071320,direct call
uv_set_irq_affinity,0x33,ctx->rax + 0x50,CALL qword ptr [RAX + 0x50],in-direct call
uv_set_irq_affinity,0x4f,0xffffffff8109ac90,CALL 0xffffffff8109ac90,direct call
uv_set_irq_affinity,0x57,0xffffffff81072b30,CALL 0xffffffff81072b30,direct call
uv_set_irq_affinity,0x69,,RET,ret
uv_domain_activate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_domain_activate,0x11,0xffffffff81071320,CALL 0xffffffff81071320,direct call
uv_domain_activate,0x21,0xffffffff8109ac90,CALL 0xffffffff8109ac90,direct call
uv_domain_activate,0x2d,,RET,ret
uv_domain_deactivate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_domain_deactivate,0x11,0xffffffff81071320,CALL 0xffffffff81071320,direct call
uv_domain_deactivate,0x21,0xffffffff8109ac90,CALL 0xffffffff8109ac90,direct call
uv_domain_deactivate,0x2b,,RET,ret
uv_read_rtc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_read_rtc,0x7c,,RET,ret
uv_setup_intr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_setup_intr,0x34,ctx->rcx,"MOV RCX,qword ptr [RSI + RCX*0x1]",write other [TODO]
uv_setup_intr,0x68,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
uv_setup_intr,0x9b,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
uv_setup_intr,0xed,ctx->rax,"MOV qword ptr [RAX],RDI",write other [TODO]
uv_setup_intr,0x120,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
uv_setup_intr,0x14c,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
uv_setup_intr,0x151,0xffffffff8109add0,CALL 0xffffffff8109add0,direct call
uv_setup_intr,0x166,,RET,ret
uv_setup_intr,0x1eb,,RET,ret
uv_rtc_find_next_timer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_rtc_find_next_timer,0x9,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],0xffffffff",write other [TODO]
uv_rtc_find_next_timer,0x7f,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
uv_rtc_find_next_timer,0x82,,RET,ret
uv_rtc_find_next_timer,0x88,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],R10D",write other [TODO]
uv_rtc_find_next_timer,0x97,0xffffffff8109ae80,CALL 0xffffffff8109ae80,direct call
uv_rtc_find_next_timer,0xa5,,RET,ret
uv_rtc_find_next_timer,0x122,ctx->rax,"MOV qword ptr [RAX],RSI",write other [TODO]
uv_rtc_find_next_timer,0x12a,,RET,ret
uv_rtc_unset_timer,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_rtc_unset_timer,0x4e,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
uv_rtc_unset_timer,0x6c,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
uv_rtc_unset_timer,0x7d,,RET,ret
uv_rtc_unset_timer,0x80,0xffffffff8109add0,CALL 0xffffffff8109add0,direct call
uv_rtc_unset_timer,0xa2,ctx->rax + ctx->r12 * 0x1 + 0x18,"MOV qword ptr [RAX + R12*0x1 + 0x18],-0x1",write other [TODO]
uv_rtc_unset_timer,0xb9,0xffffffff8109b070,CALL 0xffffffff8109b070,direct call
uv_rtc_interrupt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_rtc_interrupt,0x30,0xffffffff8109b1a0,CALL 0xffffffff8109b1a0,direct call
uv_rtc_interrupt,0x3d,ctx->rbx,CALL qword ptr [RBX],in-direct call
uv_rtc_interrupt,0x44,,RET,ret
uv_rtc_interrupt,0x45,,RET,ret
uv_rtc_shutdown,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_rtc_shutdown,0x6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_rtc_shutdown,0x16,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
uv_rtc_shutdown,0x22,0xffffffff8109b1a0,CALL 0xffffffff8109b1a0,direct call
uv_rtc_shutdown,0x2a,,RET,ret
uv_rtc_next_event,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_rtc_next_event,0x23,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_rtc_next_event,0x29,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
uv_rtc_next_event,0x36,0xffffffff8109add0,CALL 0xffffffff8109add0,direct call
uv_rtc_next_event,0x58,ctx->wordctx->ptrctx->rbp - 0x2e,"MOV word ptr [RBP + -0x2e],CX",write stack
uv_rtc_next_event,0x7a,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
uv_rtc_next_event,0x84,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
uv_rtc_next_event,0x96,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],R15",write other [TODO]
uv_rtc_next_event,0xb3,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
uv_rtc_next_event,0xc8,,RET,ret
uv_rtc_next_event,0xc9,ctx->r13 + 0x4,"MOV dword ptr [R13 + 0x4],EDX",write other [TODO]
uv_rtc_next_event,0xd3,0xffffffff8109ae80,CALL 0xffffffff8109ae80,direct call
uv_rtc_next_event,0xdc,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],-0x1",write other [TODO]
uv_rtc_next_event,0xeb,0xffffffff8109b070,CALL 0xffffffff8109b070,direct call
uv_rtc_next_event,0xf6,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
uv_local_mmr_address,0x30,,RET,ret
param_set_local64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
param_set_local64,0xa,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
param_set_local64,0x17,,RET,ret
param_get_local64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
param_get_local64,0x17,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
param_get_local64,0x1d,,RET,ret
param_get_action,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
param_get_action,0x17,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
param_get_action,0x1d,,RET,ret
param_set_action,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
param_set_action,0x2c,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
param_set_action,0x32,0xffffffff81c7f840,CALL 0xffffffff81c7f840,direct call
param_set_action,0x3f,ctx->rbp - 0x29,"MOV byte ptr [RBP + -0x29],0x0",write stack
param_set_action,0x43,0xffffffff81c7f910,CALL 0xffffffff81c7f910,direct call
param_set_action,0x4d,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
param_set_action,0x68,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
param_set_action,0x7d,ctx->rsi,"MOV RSI,qword ptr [RBX]",write other [TODO]
param_set_action,0x87,0xffffffff81c7f8c0,CALL 0xffffffff81c7f8c0,direct call
param_set_action,0x9b,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
param_set_action,0xbf97fa,0xffffffff81cb4d33,CALL 0xffffffff81cb4d33,direct call
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
cpumask_weight,0x1,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpumask_weight,0xa,0xffffffff815f9f70,CALL 0xffffffff815f9f70,direct call
cpumask_weight,0x10,,RET,ret
uv_nmi_sync_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_nmi_sync_exit,0x22,0xffffffff8346b328,"MOV dword ptr [0xffffffff8346b328],0x0",write .data
uv_nmi_sync_exit,0x2d,,RET,ret
uv_nmi_sync_exit,0x3b,,RET,ret
uv_set_in_nmi.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_set_in_nmi.isra.0,0x1b,ctx->rsi + 0x8,"MOV dword ptr [RSI + 0x8],EDI",write other [TODO]
uv_set_in_nmi.isra.0,0x36,0xffffffff82e5d1a4,"MOV dword ptr [0xffffffff82e5d1a4],EDI",write .data
uv_set_in_nmi.isra.0,0x41,,RET,ret
uv_nmi_wait_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_nmi_wait_cpus,0x5b,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
uv_nmi_wait_cpus,0x71,0xffffffff8109b550,CALL 0xffffffff8109b550,direct call
uv_nmi_wait_cpus,0x8f,0xffffffff81c8a4c0,CALL 0xffffffff81c8a4c0,direct call
uv_nmi_wait_cpus,0x9a,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
uv_nmi_wait_cpus,0xaf,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
uv_nmi_wait_cpus,0xe7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
uv_nmi_wait_cpus,0xf7,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
uv_nmi_wait_cpus,0x10e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EBX",write stack
uv_nmi_wait_cpus,0x114,ctx->rdi,"MOVSXD RDI,dword ptr [RBP + -0x2c]",write other [TODO]
uv_nmi_wait_cpus,0x11c,0xffffffff81c8a4c0,CALL 0xffffffff81c8a4c0,direct call
uv_nmi_wait_cpus,0x166,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
uv_nmi_wait_cpus,0x16d,0xffffffff82e5d1a0,"MOV dword ptr [0xffffffff82e5d1a0],R13D",write .data
uv_nmi_wait_cpus,0x182,,RET,ret
uv_nmi_wait_cpus,0x1a3,,RET,ret
uv_nmi_dump_state_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_nmi_dump_state_cpu,0xbf95dc,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
uv_handle_nmi,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_handle_nmi,0x29,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
uv_handle_nmi,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
uv_handle_nmi,0x33,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
uv_handle_nmi,0x157,0xffffffff8106c8a0,CALL 0xffffffff8106c8a0,direct call
uv_handle_nmi,0x161,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
uv_handle_nmi,0x218,0xffffffff81d14a90,CALL 0xffffffff81d14a90,direct call
uv_handle_nmi,0x227,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDX",write stack
uv_handle_nmi,0x233,0xffffffff81c8a4c0,CALL 0xffffffff81c8a4c0,direct call
uv_handle_nmi,0x25c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uv_handle_nmi,0x38c,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],RCX",write other [TODO]
uv_handle_nmi,0x3a1,ctx->rax,"MOV dword ptr [RAX],0x1",write other [TODO]
uv_handle_nmi,0x3ac,0xffffffff8109b5b0,CALL 0xffffffff8109b5b0,direct call
uv_handle_nmi,0x44e,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDX",write stack
uv_handle_nmi,0x451,0xffffffff8109b5b0,CALL 0xffffffff8109b5b0,direct call
uv_handle_nmi,0x464,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uv_handle_nmi,0x4b6,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],RAX",write other [TODO]
uv_handle_nmi,0x4d3,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
uv_handle_nmi,0xbf95c1,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
uv_handle_nmi,0xbf95c9,0xffffffff81172e70,CALL 0xffffffff81172e70,direct call
uv_handle_nmi,0xbf95d5,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
uv_handle_nmi,0xbf95da,0xffffffff8346b318,"MOV dword ptr [0xffffffff8346b318],0x1",write .data
uv_handle_nmi_ping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_handle_nmi_ping,0x1e,,RET,ret
uv_handle_nmi_ping,0x31,0xffffffff8109b840,CALL 0xffffffff8109b840,direct call
uv_handle_nmi_ping,0x36,ctx->gs + 0x201cc,"MOV dword ptr GS:[0x201cc],0x0",write other [TODO]
uv_handle_nmi_ping,0x42,,RET,ret
uv_nmi_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uv_nmi_init,0x15,ctx->rax + 0x18,CALL qword ptr [RAX + 0x18],in-direct call
uv_nmi_init,0x31,ctx->rax + 0x10,CALL qword ptr [RAX + 0x10],in-direct call
uv_nmi_init,0x35,,RET,ret
pop_callee_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pop_callee_regs,0x1c,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],R8W",write other [TODO]
pop_callee_regs,0x30,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],CX",write other [TODO]
pop_callee_regs,0x43,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],DX",write other [TODO]
pop_callee_regs,0x4c,ctx->rax,"MOV byte ptr [RAX],0x5b",write other [TODO]
pop_callee_regs,0x53,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
pop_callee_regs,0x57,,RET,ret
emit_mov_imm32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_mov_imm32,0x46,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
emit_mov_imm32,0x48,ctx->rax + 0x3,"MOV dword ptr [RAX + 0x3],R9D",write other [TODO]
emit_mov_imm32,0x51,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
emit_mov_imm32,0x54,,RET,ret
emit_mov_imm32,0x5e,ctx->rax,"MOV byte ptr [RAX],0x41",write other [TODO]
emit_mov_imm32,0x67,ctx->rax + 0x1,"MOV dword ptr [RAX + 0x1],R9D",write other [TODO]
emit_mov_imm32,0x75,ctx->rax,"MOV byte ptr [RAX],DL",write other [TODO]
emit_mov_imm32,0x7c,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
emit_mov_imm32,0x7f,,RET,ret
emit_mov_imm32,0x84,ctx->rax,"MOV byte ptr [RAX],0x45",write other [TODO]
emit_mov_imm32,0xa5,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],DX",write other [TODO]
emit_mov_imm32,0xaa,ctx->r8,"MOV qword ptr [R8],RAX",write other [TODO]
emit_mov_imm32,0xad,,RET,ret
emit_mov_imm64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_mov_imm64,0x22,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
emit_mov_imm64,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
emit_mov_imm64,0x3c,ctx->rax + 0x2,"MOV dword ptr [RAX + 0x2],R8D",write other [TODO]
emit_mov_imm64,0x60,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
emit_mov_imm64,0x67,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RDX",write stack
emit_mov_imm64,0x6f,ctx->rax + 0x6,"MOV dword ptr [RAX + 0x6],EDI",write other [TODO]
emit_mov_imm64,0x72,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RDX",write stack
emit_mov_imm64,0x7a,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
emit_mov_imm64,0x91,,RET,ret
emit_mov_imm64,0x9d,0xffffffff8109bf30,CALL 0xffffffff8109bf30,direct call
emit_mov_imm64,0xa8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
emit_mov_reg,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_mov_reg,0x7a,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
emit_mov_reg,0x80,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
emit_mov_reg,0x84,,RET,ret
emit_mov_reg,0xb4,ctx->rsi,"MOV byte ptr [RSI],CL",write other [TODO]
emit_mov_reg,0xdb,ctx->wordctx->ptrctx->rsi - 0x2,"MOV word ptr [RSI + -0x2],AX",write other [TODO]
emit_mov_reg,0xe0,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
emit_mov_reg,0xe3,,RET,ret
maybe_emit_mod,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
maybe_emit_mod,0x4c,ctx->r8 - 0x1,"MOV byte ptr [R8 + -0x1],DL",write other [TODO]
maybe_emit_mod,0x50,ctx->rdi,"MOV qword ptr [RDI],R8",write other [TODO]
maybe_emit_mod,0x54,,RET,ret
maybe_emit_mod,0x64,ctx->r8,"MOV byte ptr [R8],AL",write other [TODO]
maybe_emit_mod,0x6c,ctx->rdi,"MOV qword ptr [RDI],R8",write other [TODO]
maybe_emit_mod,0x6f,,RET,ret
cmp_ips,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cmp_ips,0x1f,,RET,ret
emit_atomic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_atomic,0x35,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
emit_atomic,0x40,ctx->rax,"MOV byte ptr [RAX],0xf0",write other [TODO]
emit_atomic,0x4e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
emit_atomic,0x52,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
emit_atomic,0x77,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],CX",write other [TODO]
emit_atomic,0x92,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
emit_atomic,0xbe,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],DX",write other [TODO]
emit_atomic,0xc2,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
emit_atomic,0xfc,ctx->rax - 0x1,"MOV byte ptr [RAX + -0x1],DL",write other [TODO]
emit_atomic,0x112,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
emit_atomic,0x137,ctx->rax + 0x1,"MOV dword ptr [RAX + 0x1],R12D",write other [TODO]
emit_atomic,0x13b,ctx->rax,"MOV byte ptr [RAX],DL",write other [TODO]
emit_atomic,0x14a,ctx->rax,"MOV byte ptr [RAX],0x87",write other [TODO]
jit_fill_hole,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
jit_fill_hole,0x10,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
jit_fill_hole,0x16,,RET,ret
emit_ldx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_ldx,0x6d,ctx->rdx,"MOV dword ptr [RDX],ESI",write other [TODO]
emit_ldx,0xa5,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],R8W",write other [TODO]
emit_ldx,0xab,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
emit_ldx,0xae,,RET,ret
emit_ldx,0xf8,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],SI",write other [TODO]
emit_ldx,0x104,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],R8D",write other [TODO]
emit_ldx,0x108,ctx->rdx,"MOV byte ptr [RDX],AL",write other [TODO]
emit_ldx,0x10f,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
emit_ldx,0x112,,RET,ret
emit_ldx,0x153,ctx->rdx,"MOV dword ptr [RDX],ESI",write other [TODO]
emit_ldx,0x189,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],CX",write other [TODO]
emit_ldx,0x1a4,ctx->rdx,"MOV byte ptr [RDX],0x8b",write other [TODO]
restore_regs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restore_regs,0x1d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
restore_regs,0x24,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],ECX",write stack
restore_regs,0x27,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
restore_regs,0x2f,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
restore_regs,0x67,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
restore_regs,0xca,0xffffffff8109c3a0,CALL 0xffffffff8109c3a0,direct call
restore_regs,0x100,,RET,ret
restore_regs,0x101,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x1",write stack
emit_stx,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_stx,0x64,ctx->rdx,"MOV dword ptr [RDX],ECX",write other [TODO]
emit_stx,0x9c,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],R8W",write other [TODO]
emit_stx,0xa2,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
emit_stx,0xa5,,RET,ret
emit_stx,0xef,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],SI",write other [TODO]
emit_stx,0xfb,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],R8D",write other [TODO]
emit_stx,0xff,ctx->rdx,"MOV byte ptr [RDX],AL",write other [TODO]
emit_stx,0x106,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
emit_stx,0x109,,RET,ret
emit_stx,0x139,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],CX",write other [TODO]
emit_stx,0x189,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],CX",write other [TODO]
emit_stx,0x1b8,ctx->rdx,"MOV byte ptr [RDX],0x88",write other [TODO]
emit_stx,0x1c4,ctx->rdx,"MOV byte ptr [RDX],0x89",write other [TODO]
emit_stx,0x1d9,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],CX",write other [TODO]
__bpf_arch_text_poke,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__bpf_arch_text_poke,0x23,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__bpf_arch_text_poke,0x34,ctx->rbp - 0x22,"MOV dword ptr [RBP + -0x22],ECX",write stack
__bpf_arch_text_poke,0x37,ctx->rbp - 0x1e,"MOV byte ptr [RBP + -0x1e],DIL",write stack
__bpf_arch_text_poke,0x64,ctx->rbp - 0x22,"MOV byte ptr [RBP + -0x22],0xe9",write stack
__bpf_arch_text_poke,0x68,ctx->rbp - 0x21,"MOV dword ptr [RBP + -0x21],ECX",write stack
__bpf_arch_text_poke,0x6d,ctx->rbp - 0x1d,"MOV dword ptr [RBP + -0x1d],EDX",write stack
__bpf_arch_text_poke,0x74,ctx->rbp - 0x19,"MOV byte ptr [RBP + -0x19],AL",write stack
__bpf_arch_text_poke,0x8e,ctx->rbp - 0x1d,"MOV byte ptr [RBP + -0x1d],0xe9",write stack
__bpf_arch_text_poke,0x92,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EAX",write stack
__bpf_arch_text_poke,0x9c,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
__bpf_arch_text_poke,0xb7,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__bpf_arch_text_poke,0xe5,ctx->rbp - 0x22,"MOV byte ptr [RBP + -0x22],0xe8",write stack
__bpf_arch_text_poke,0xe9,ctx->rbp - 0x21,"MOV dword ptr [RBP + -0x21],ECX",write stack
__bpf_arch_text_poke,0xee,ctx->rbp - 0x1d,"MOV dword ptr [RBP + -0x1d],EDX",write stack
__bpf_arch_text_poke,0xf5,ctx->rbp - 0x19,"MOV byte ptr [RBP + -0x19],AL",write stack
__bpf_arch_text_poke,0x10f,ctx->rbp - 0x1d,"MOV byte ptr [RBP + -0x1d],0xe8",write stack
__bpf_arch_text_poke,0x113,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EAX",write stack
__bpf_arch_text_poke,0x13c,0xffffffff81d04600,CALL 0xffffffff81d04600,direct call
__bpf_arch_text_poke,0x156,ctx->rbp - 0x1d,"MOV dword ptr [RBP + -0x1d],ECX",write stack
__bpf_arch_text_poke,0x15d,ctx->rbp - 0x19,"MOV byte ptr [RBP + -0x19],AL",write stack
__bpf_arch_text_poke,0xbf8894,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
emit_bpf_dispatcher,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
emit_bpf_dispatcher,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
emit_bpf_dispatcher,0x3d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
emit_bpf_dispatcher,0x43,ctx->rax,"MOV byte ptr [RAX],0x48",write other [TODO]
emit_bpf_dispatcher,0x70,ctx->wordctx->ptrctx->rax + 0x1,"MOV word ptr [RAX + 0x1],R10W",write other [TODO]
emit_bpf_dispatcher,0x75,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
emit_bpf_dispatcher,0x7c,ctx->rax + 0x3,"MOV dword ptr [RAX + 0x3],ECX",write other [TODO]
emit_bpf_dispatcher,0x91,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x1",write stack
emit_bpf_dispatcher,0x98,ctx->wordctx->ptrctx->rax + 0x7,"MOV word ptr [RAX + 0x7],DX",write other [TODO]
emit_bpf_dispatcher,0xa5,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R15",write stack
emit_bpf_dispatcher,0xa9,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
emit_bpf_dispatcher,0xad,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
emit_bpf_dispatcher,0xb1,0xffffffff8109c9d0,CALL 0xffffffff8109c9d0,direct call
emit_bpf_dispatcher,0xfc,ctx->rcx + ctx->rax * 0x1,"MOV byte ptr [RCX + RAX*0x1],DL",write other [TODO]
emit_bpf_dispatcher,0x114,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
emit_bpf_dispatcher,0x127,ctx->r15,"MOV dword ptr [R15],ECX",write other [TODO]
emit_bpf_dispatcher,0x137,0xffffffff8109c9d0,CALL 0xffffffff8109c9d0,direct call
emit_bpf_dispatcher,0x144,ctx->r14,"MOV qword ptr [R14],RDX",write other [TODO]
emit_bpf_dispatcher,0x16e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R15",write stack
emit_bpf_dispatcher,0x172,ctx->wordctx->ptrctx->rax + 0x7,"MOV word ptr [RAX + 0x7],CX",write other [TODO]
emit_bpf_dispatcher,0x176,ctx->rax + 0x9,"MOV dword ptr [RAX + 0x9],0x0",write other [TODO]
emit_bpf_dispatcher,0x17d,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x4",write stack
emit_bpf_dispatcher,0x190,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
emit_bpf_dispatcher,0x199,ctx->rax,"MOV byte ptr [RAX],0x48",write other [TODO]
emit_bpf_dispatcher,0x1b1,ctx->wordctx->ptrctx->rax + 0x1,"MOV word ptr [RAX + 0x1],R12W",write other [TODO]
emit_bpf_dispatcher,0x1b6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
emit_bpf_dispatcher,0x1bd,ctx->rax + 0x3,"MOV dword ptr [RAX + 0x3],EDX",write other [TODO]
emit_bpf_dispatcher,0x1c7,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
emit_bpf_dispatcher,0x1eb,ctx->rax + 0x9,"MOV dword ptr [RAX + 0x9],EDX",write other [TODO]
emit_bpf_dispatcher,0x1ee,ctx->wordctx->ptrctx->rax + 0x7,"MOV word ptr [RAX + 0x7],R11W",write other [TODO]
emit_bpf_dispatcher,0x1fc,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],BX",write other [TODO]
emit_bpf_dispatcher,0x200,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
emit_bpf_dispatcher,0x20a,ctx->r15,"MOV byte ptr [R15],CL",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
invoke_bpf_prog.constprop.0.isra.0,0x2f,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R9D",write stack
invoke_bpf_prog.constprop.0.isra.0,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x47,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x4b,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
invoke_bpf_prog.constprop.0.isra.0,0x57,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],R14D",write stack
invoke_bpf_prog.constprop.0.isra.0,0x6a,0xffffffff8109c660,CALL 0xffffffff8109c660,direct call
invoke_bpf_prog.constprop.0.isra.0,0xa8,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
invoke_bpf_prog.constprop.0.isra.0,0xb7,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
invoke_bpf_prog.constprop.0.isra.0,0xbd,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x7edbd510",write stack
invoke_bpf_prog.constprop.0.isra.0,0xc5,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],-0x7edbd480",write stack
invoke_bpf_prog.constprop.0.isra.0,0xe8,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
invoke_bpf_prog.constprop.0.isra.0,0xf5,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x102,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x10c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x123,ctx->rax + 0x4,"MOV byte ptr [RAX + 0x4],0xe8",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x127,ctx->rax + 0x5,"MOV dword ptr [RAX + 0x5],EDX",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x12f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x13e,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
invoke_bpf_prog.constprop.0.isra.0,0x147,ctx->rax,"MOV dword ptr [RAX],0xc08548",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x166,ctx->rax + 0x3,"MOV byte ptr [RAX + 0x3],CL",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x16d,ctx->rax + 0x5,"MOV dword ptr [RAX + 0x5],EBX",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x170,ctx->rax + 0x4,"MOV byte ptr [RAX + 0x4],DL",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x177,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x17f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x1aa,ctx->rdx,"MOV byte ptr [RDX],0xe8",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x1ad,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],ESI",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x1b4,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x1c1,ctx->rax + 0x3,"MOV byte ptr [RAX + 0x3],0x74",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x1d4,ctx->rax + 0x4,"MOV byte ptr [RAX + 0x4],DL",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x1da,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
invoke_bpf_prog.constprop.0.isra.0,0x1f2,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
invoke_bpf_prog.constprop.0.isra.0,0x204,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x20e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x225,ctx->rax + 0x4,"MOV byte ptr [RAX + 0x4],0xe8",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x229,ctx->rax + 0x5,"MOV dword ptr [RAX + 0x5],EDX",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x22c,ctx->r13,"MOV qword ptr [R13],RCX",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x25e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R8",write stack
invoke_bpf_prog.constprop.0.isra.0,0x268,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x26c,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
invoke_bpf_prog.constprop.0.isra.0,0x286,ctx->rdx + 0x5,"MOV dword ptr [RDX + 0x5],0xf8458948",write other [TODO]
invoke_bpf_prog.constprop.0.isra.0,0x28d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
invoke_bpf_prog.constprop.0.isra.0,0x296,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x7edbd410",write stack
invoke_bpf_prog.constprop.0.isra.0,0x29e,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],-0x7edbd3b0",write stack
invoke_bpf_prog.constprop.0.isra.0,0xbf8528,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
invoke_bpf_prog.constprop.0.isra.0,0xbf8542,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
do_jit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_jit,0x28,ctx->rbp - 0x138,"MOV qword ptr [RBP + -0x138],RDI",write stack
do_jit,0x2f,ctx->rbp - 0x110,"MOV qword ptr [RBP + -0x110],RSI",write stack
do_jit,0x3a,ctx->rbp - 0x118,"MOV qword ptr [RBP + -0x118],RDX",write stack
do_jit,0x41,ctx->rbp - 0x128,"MOV qword ptr [RBP + -0x128],RCX",write stack
do_jit,0x48,ctx->rbp - 0x120,"MOV dword ptr [RBP + -0x120],R8D",write stack
do_jit,0x4f,ctx->rbp - 0x140,"MOV qword ptr [RBP + -0x140],R9",write stack
do_jit,0x56,ctx->rbp - 0x12a,"MOV byte ptr [RBP + -0x12a],AL",write stack
do_jit,0x65,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_jit,0x73,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],R10",write stack
do_jit,0x7a,ctx->rbp - 0xf4,"MOV dword ptr [RBP + -0xf4],0x0",write stack
do_jit,0x84,ctx->rbp - 0x129,"MOV byte ptr [RBP + -0x129],AL",write stack
do_jit,0x8d,ctx->rbp - 0x11c,"MOV dword ptr [RBP + -0x11c],EAX",write stack
do_jit,0x9b,ctx->rbp - 0x148,"MOV qword ptr [RBP + -0x148],R12",write stack
do_jit,0x156,ctx->rbp - 0xf1,"MOV byte ptr [RBP + -0xf1],0x1",write stack
do_jit,0x162,ctx->rbp - 0xf2,"MOV byte ptr [RBP + -0xf2],0x1",write stack
do_jit,0x16d,ctx->rbp - 0xf3,"MOV byte ptr [RBP + -0xf3],0x1",write stack
do_jit,0x179,ctx->rbp - 0xf4,"MOV byte ptr [RBP + -0xf4],0x1",write stack
do_jit,0x19f,ctx->rbp - 0xf0,"MOV dword ptr [RBP + -0xf0],EDX",write stack
do_jit,0x1b0,ctx->rbp - 0xec,"MOV byte ptr [RBP + -0xec],DL",write stack
do_jit,0x1e0,ctx->wordctx->ptrctx->rbp - 0xeb,"MOV word ptr [RBP + -0xeb],BX",write stack
do_jit,0x1e7,ctx->r8,"MOV byte ptr [R8],0x55",write other [TODO]
do_jit,0x1eb,ctx->r8 + 0x1,"MOV dword ptr [R8 + 0x1],0xe58948",write other [TODO]
do_jit,0x208,ctx->r8,"MOV byte ptr [R8],0x50",write other [TODO]
do_jit,0x219,ctx->r8,"MOV byte ptr [R8],0x53",write other [TODO]
do_jit,0x234,ctx->wordctx->ptrctx->r8 - 0x2,"MOV word ptr [R8 + -0x2],R9W",write other [TODO]
do_jit,0x24b,ctx->wordctx->ptrctx->r8 - 0x2,"MOV word ptr [R8 + -0x2],DI",write other [TODO]
do_jit,0x262,ctx->wordctx->ptrctx->r8 - 0x2,"MOV word ptr [R8 + -0x2],SI",write other [TODO]
do_jit,0x294,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
do_jit,0x2ad,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],R10",write stack
do_jit,0x2b4,ctx->rax,"MOV dword ptr [RAX],EBX",write other [TODO]
do_jit,0x2c5,ctx->rbp - 0x148,"MOV byte ptr [RBP + -0x148],0x0",write stack
do_jit,0x2d2,ctx->rbp - 0x130,"MOV dword ptr [RBP + -0x130],0x0",write stack
do_jit,0x2e5,ctx->rbp - 0x158,"MOV dword ptr [RBP + -0x158],EAX",write stack
do_jit,0x15d0,ctx->rbp - 0x130,"MOV dword ptr [RBP + -0x130],0x0",write stack
do_jit,0x1ba7,ctx->wordctx->ptrctx->rbp - 0xeb,"MOV word ptr [RBP + -0xeb],R11W",write stack
do_jit,0x1baf,ctx->r8,"MOV byte ptr [R8],0x55",write other [TODO]
do_jit,0x1bb3,ctx->r8 + 0x1,"MOV dword ptr [R8 + 0x1],0xe58948",write other [TODO]
do_jit,0x1bc3,ctx->r8 + 0x4,"MOV dword ptr [R8 + 0x4],0xec8148",write other [TODO]
do_jit,0x1bd4,ctx->r8 + 0x7,"MOV dword ptr [R8 + 0x7],EAX",write other [TODO]
FUN_ffffffff8109d24e,0x5,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
FUN_ffffffff8109d24e,0x10f4,ctx->rax + ctx->rdx * 0x1,"MOV byte ptr [RAX + RDX*0x1],R11B",write other [TODO]
FUN_ffffffff8109d24e,0x1195,ctx->rax + 0x2,"MOV dword ptr [RAX + 0x2],R9D",write other [TODO]
FUN_ffffffff8109d24e,0x11a2,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
FUN_ffffffff8109d24e,0x11a9,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
FUN_ffffffff8109d24e,0x11b6,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
FUN_ffffffff8109d24e,0xbf7f96,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff8109dbf7,0x4,ctx->wordctx->ptrctx->rdi,"MOV word ptr [RDI],DX",write other [TODO]
FUN_ffffffff8109dbf7,0x7,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
FUN_ffffffff8109dbf7,0xe,ctx->rdi + 0x2,"MOV dword ptr [RDI + 0x2],R13D",write other [TODO]
caseD_18,-0xaa9,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R11D",write stack
caseD_18,-0xa9f,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,-0xa99,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
caseD_18,-0xa59,ctx->wordctx->ptrctx->rcx,"MOV word ptr [RCX],DX",write other [TODO]
caseD_18,-0x9b0,ctx->rdi - 0x1,"MOV byte ptr [RDI + -0x1],DL",write other [TODO]
caseD_18,-0x99f,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDI",write stack
caseD_18,-0x978,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
caseD_18,-0x959,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R11D",write stack
caseD_18,-0x94f,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,-0x949,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
caseD_18,-0x8fc,ctx->wordctx->ptrctx->rcx,"MOV word ptr [RCX],AX",write other [TODO]
caseD_18,-0x8f5,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x876,ctx->r14,"MOV byte ptr [R14],CL",write other [TODO]
caseD_18,-0x86b,ctx->rdx,"MOV dword ptr [RDX],R8D",write other [TODO]
caseD_18,-0x860,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],R10",write stack
caseD_18,-0x82b,ctx->rdx,"MOV byte ptr [RDX],0x52",write other [TODO]
caseD_18,-0x824,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x80b,ctx->rdx,"MOV dword ptr [RDX],0xc3c749",write other [TODO]
caseD_18,-0x801,ctx->rdx + 0x3,"MOV dword ptr [RDX + 0x3],R13D",write other [TODO]
caseD_18,-0x7fd,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,-0x7e6,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x7c7,ctx->wordctx->ptrctx->rcx,"MOV word ptr [RCX],DX",write other [TODO]
caseD_18,-0x7ab,ctx->rcx - 0x1,"MOV byte ptr [RCX + -0x1],DL",write other [TODO]
caseD_18,-0x791,ctx->wordctx->ptrctx->rcx,"MOV word ptr [RCX],DX",write other [TODO]
caseD_18,-0x785,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x762,ctx->rdx,"MOV byte ptr [RDX],0x5a",write other [TODO]
caseD_18,-0x759,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x747,ctx->rdx,"MOV byte ptr [RDX],0x58",write other [TODO]
caseD_18,-0x73e,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x70a,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,-0x704,0xffffffff8109c3a0,CALL 0xffffffff8109c3a0,direct call
caseD_18,-0x6a3,ctx->rdx,"MOV byte ptr [RDX],0x51",write other [TODO]
caseD_18,-0x6a0,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,-0x668,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],ECX",write other [TODO]
caseD_18,-0x649,ctx->rdx,"MOV byte ptr [RDX],0x41",write other [TODO]
caseD_18,-0x61c,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],AX",write other [TODO]
caseD_18,-0x615,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x604,ctx->rdx + 0x2,"MOV byte ptr [RDX + 0x2],0x59",write other [TODO]
caseD_18,-0x600,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x5db,ctx->rax,"MOV dword ptr [RAX],EDX",write other [TODO]
caseD_18,-0x5a1,ctx->rdx - 0x1,"MOV byte ptr [RDX + -0x1],CL",write other [TODO]
caseD_18,-0x591,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x560,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
caseD_18,-0x558,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x532,0xffffffff8109c660,CALL 0xffffffff8109c660,direct call
caseD_18,-0x505,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,-0x4fc,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
caseD_18,-0x4b6,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
caseD_18,-0x4ae,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x48b,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],EAX",write stack
caseD_18,-0x482,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],R11D",write stack
caseD_18,-0x47b,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
caseD_18,-0x444,ctx->rcx,"MOV dword ptr [RCX],EAX",write other [TODO]
caseD_18,-0x435,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x400,ctx->rdx,"MOV byte ptr [RDX],0x41",write other [TODO]
caseD_18,-0x3e4,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],AX",write other [TODO]
caseD_18,-0x3db,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x3a4,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],EAX",write stack
caseD_18,-0x391,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R11D",write stack
caseD_18,-0x38a,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],RDI",write stack
caseD_18,-0x383,ctx->rbp - 0x168,"MOV byte ptr [RBP + -0x168],R8B",write stack
caseD_18,-0x37c,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,-0x346,ctx->rbp - 0x170,"MOV dword ptr [RBP + -0x170],EDX",write stack
caseD_18,-0x327,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],R11D",write stack
caseD_18,-0x31c,ctx->rbp - 0x168,"MOV qword ptr [RBP + -0x168],RSI",write stack
caseD_18,-0x30e,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],EAX",write stack
caseD_18,-0x305,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],RDI",write stack
caseD_18,-0x2fe,0xffffffff8109c3a0,CALL 0xffffffff8109c3a0,direct call
caseD_18,-0x2e8,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,-0x2ac,ctx->rsi,"MOV byte ptr [RSI],DL",write other [TODO]
caseD_18,-0x297,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R11D",write stack
caseD_18,-0x28a,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],RDI",write stack
caseD_18,-0x268,ctx->wordctx->ptrctx->rcx - 0x2,"MOV word ptr [RCX + -0x2],DX",write other [TODO]
caseD_18,-0x257,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,-0x247,0xffffffff8109c220,CALL 0xffffffff8109c220,direct call
caseD_18,-0x216,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],RDI",write stack
caseD_18,-0x200,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],AX",write other [TODO]
caseD_18,-0x1fc,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x1f2,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,-0x1da,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,-0x1a8,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,-0x176,0xffffffff8109bf30,CALL 0xffffffff8109bf30,direct call
caseD_18,-0x148,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R11D",write stack
caseD_18,-0x13e,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,-0x138,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
caseD_18,-0xf5,ctx->wordctx->ptrctx->rcx,"MOV word ptr [RCX],DX",write other [TODO]
caseD_18,-0xca,ctx->rdi,"MOV byte ptr [RDI],0x41",write other [TODO]
caseD_18,-0x50,ctx->rax,"MOV byte ptr [RAX],0xe9",write other [TODO]
caseD_18,-0x4d,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,-0x46,ctx->rax + 0x1,"MOV dword ptr [RAX + 0x1],EDI",write other [TODO]
caseD_18,-0x3d,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,-0x9,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],CX",write other [TODO]
caseD_18,0x19,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
caseD_18,0x51,ctx->rax,"MOV dword ptr [RAX],0x858b48",write other [TODO]
caseD_18,0x67,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,0x7d,ctx->rax + 0x3,"MOV dword ptr [RAX + 0x3],ECX",write other [TODO]
caseD_18,0x84,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,0xc4,ctx->rax + 0x7,"MOV byte ptr [RAX + 0x7],0xe8",write other [TODO]
caseD_18,0xc8,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EDX",write other [TODO]
caseD_18,0xd1,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x104,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],CX",write other [TODO]
caseD_18,0x136,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],AX",write other [TODO]
caseD_18,0x13f,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,0x16d,ctx->rdx,"MOV byte ptr [RDX],R13B",write other [TODO]
caseD_18,0x174,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x1aa,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],DI",write other [TODO]
caseD_18,0x1cf,ctx->rdx,"MOV dword ptr [RDX],0xc74166",write other [TODO]
caseD_18,0x22e,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDI",write stack
caseD_18,0x23d,ctx->wordctx->ptrctx->rbx,"MOV word ptr [RBX],R10W",write other [TODO]
caseD_18,0x244,ctx->rbx + 0x2,"MOV dword ptr [RBX + 0x2],EAX",write other [TODO]
caseD_18,0x261,ctx->rbx + 0x6,"MOV dword ptr [RBX + 0x6],0x21f883",write other [TODO]
caseD_18,0x268,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RSI",write stack
caseD_18,0x27a,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDI",write stack
caseD_18,0x285,ctx->rbx + 0xb,"MOV dword ptr [RBX + 0xb],0x1c083",write other [TODO]
caseD_18,0x28c,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],ESI",write stack
caseD_18,0x29b,ctx->wordctx->ptrctx->rbx + 0x9,"MOV word ptr [RBX + 0x9],SI",write other [TODO]
caseD_18,0x2a9,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
caseD_18,0x2ac,ctx->wordctx->ptrctx->rbx + 0xe,"MOV word ptr [RBX + 0xe],R13W",write other [TODO]
caseD_18,0x2b1,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RSI",write stack
caseD_18,0x2bc,ctx->rcx + 0x31,"MOV byte ptr [RCX + 0x31],0xb",write other [TODO]
caseD_18,0x2c0,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0x2cb,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
caseD_18,0x2df,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
caseD_18,0x2e8,ctx->rcx + 0x10,"MOV qword ptr [RCX + 0x10],RSI",write other [TODO]
caseD_18,0x2f8,ctx->rbx + 0x14,"MOV byte ptr [RBX + 0x14],0xe9",write other [TODO]
caseD_18,0x2fc,ctx->rbx + 0x15,"MOV dword ptr [RBX + 0x15],EAX",write other [TODO]
caseD_18,0x303,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0x406,ctx->rdx,"MOV byte ptr [RDX],0x45",write other [TODO]
caseD_18,0x42f,ctx->rax,"MOV dword ptr [RAX],0xe8ae0f",write other [TODO]
caseD_18,0x43b,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x4d3,ctx->rdi + ctx->rax * 0x1,"MOV byte ptr [RDI + RAX*0x1],DL",write other [TODO]
caseD_18,0x4e6,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDI",write stack
caseD_18,0x535,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0x568,ctx->rdi,"MOV byte ptr [RDI],0x41",write other [TODO]
caseD_18,0x574,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDI",write stack
caseD_18,0x5b0,ctx->rdi,"MOV byte ptr [RDI],CL",write other [TODO]
caseD_18,0x5b2,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x5b9,ctx->rdi + 0x1,"MOV dword ptr [RDI + 0x1],R13D",write other [TODO]
caseD_18,0x5c3,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x5e0,ctx->r14,"MOV qword ptr [R14],RCX",write other [TODO]
caseD_18,0x5e8,ctx->r14 + ctx->rax * 0x1 - 0x8,"MOV qword ptr [R14 + RAX*0x1 + -0x8],RCX",write other [TODO]
caseD_18,0x5fb,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
caseD_18,0x6b5,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
caseD_18,0x6be,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x71d,ctx->rdx,"MOV byte ptr [RDX],AL",write other [TODO]
caseD_18,0x723,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x730,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],EAX",write other [TODO]
caseD_18,0x79a,ctx->rdx,"MOV dword ptr [RDX],R13D",write other [TODO]
caseD_18,0x7a5,ctx->r14,"MOV dword ptr [R14],ECX",write other [TODO]
caseD_18,0x7ad,ctx->r14 + ctx->rax * 0x1 - 0x4,"MOV dword ptr [R14 + RAX*0x1 + -0x4],ECX",write other [TODO]
caseD_18,0x87b,ctx->rax + ctx->rdx * 0x1,"MOV byte ptr [RAX + RDX*0x1],CL",write other [TODO]
caseD_18,0x8d3,ctx->rdi - 0x1,"MOV byte ptr [RDI + -0x1],DL",write other [TODO]
caseD_18,0x8de,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDI",write stack
caseD_18,0x93d,ctx->rdi,"MOV dword ptr [RDI],EAX",write other [TODO]
caseD_18,0x945,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x954,ctx->rdx,"MOV byte ptr [RDX],0xc7",write other [TODO]
caseD_18,0x964,ctx->rdx,"MOV byte ptr [RDX],0x50",write other [TODO]
caseD_18,0x967,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,0x98e,ctx->rdx - 0x1,"MOV byte ptr [RDX + -0x1],CL",write other [TODO]
caseD_18,0x9a0,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],R11D",write stack
caseD_18,0x9a7,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R9D",write stack
caseD_18,0x9ae,ctx->wordctx->ptrctx->rbx,"MOV word ptr [RBX],SI",write other [TODO]
caseD_18,0x9b1,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDI",write stack
caseD_18,0x9b8,ctx->rbx + 0x2,"MOV dword ptr [RBX + 0x2],0x245639",write other [TODO]
caseD_18,0x9cf,ctx->wordctx->ptrctx->rbx + 0x7,"MOV word ptr [RBX + 0x7],R8W",write other [TODO]
caseD_18,0x9d4,ctx->rbx + 0x9,"MOV dword ptr [RBX + 0x9],EAX",write other [TODO]
caseD_18,0x9d9,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],ESI",write stack
caseD_18,0x9e8,ctx->wordctx->ptrctx->rbx + 0x5,"MOV word ptr [RBX + 0x5],DX",write other [TODO]
caseD_18,0x9f0,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDX",write stack
caseD_18,0x9fb,ctx->rbx + 0xd,"MOV dword ptr [RBX + 0xd],0x21f883",write other [TODO]
caseD_18,0xa02,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDX",write stack
caseD_18,0xa10,ctx->rbx + 0x12,"MOV dword ptr [RBX + 0x12],0x1c083",write other [TODO]
caseD_18,0xa17,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RCX",write stack
caseD_18,0xa20,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],ESI",write stack
caseD_18,0xa2f,ctx->wordctx->ptrctx->rbx + 0x10,"MOV word ptr [RBX + 0x10],DX",write other [TODO]
caseD_18,0xa3d,ctx->rbx + 0x17,"MOV dword ptr [RBX + 0x17],EAX",write other [TODO]
caseD_18,0xa40,ctx->wordctx->ptrctx->rbx + 0x15,"MOV word ptr [RBX + 0x15],R9W",write other [TODO]
caseD_18,0xa45,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDX",write stack
caseD_18,0xa50,ctx->rbx + 0x1b,"MOV dword ptr [RBX + 0x1b],0xd68c8b48",write other [TODO]
caseD_18,0xa57,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0xa62,ctx->rbx + 0x1f,"MOV dword ptr [RBX + 0x1f],0x110",write other [TODO]
caseD_18,0xa69,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0xa74,ctx->rbx + 0x23,"MOV dword ptr [RBX + 0x23],0xc98548",write other [TODO]
caseD_18,0xa7b,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0xa97,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDX",write stack
caseD_18,0xa9e,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,0xaac,ctx->wordctx->ptrctx->rbx + 0x26,"MOV word ptr [RBX + 0x26],AX",write other [TODO]
caseD_18,0xab0,0xffffffff8109bed0,CALL 0xffffffff8109bed0,direct call
caseD_18,0xad1,ctx->rdx,"MOV byte ptr [RDX],0x58",write other [TODO]
caseD_18,0xad4,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0xadd,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],0xc48148",write other [TODO]
caseD_18,0xaef,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0xafa,ctx->rdx + 0x4,"MOV dword ptr [RDX + 0x4],R11D",write other [TODO]
caseD_18,0xb02,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
caseD_18,0xb09,ctx->rax,"MOV dword ptr [RAX],0x30498b48",write other [TODO]
caseD_18,0xb13,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],0xbc18348",write other [TODO]
caseD_18,0xb1a,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RDX",write stack
caseD_18,0xb31,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],CX",write other [TODO]
caseD_18,0xb3d,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0xb47,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EDX",write other [TODO]
caseD_18,0xb58,ctx->wordctx->ptrctx->rdx - 0x2,"MOV word ptr [RDX + -0x2],SI",write other [TODO]
caseD_18,0xb61,ctx->rdx,"MOV byte ptr [RDX],0xc6",write other [TODO]
caseD_18,0xbad,ctx->rax,"MOV byte ptr [RAX],0xe8",write other [TODO]
caseD_18,0xbb0,ctx->rax + 0x1,"MOV dword ptr [RAX + 0x1],EDX",write other [TODO]
caseD_18,0xbc7,ctx->rdx - 0x1,"MOV byte ptr [RDX + -0x1],CL",write other [TODO]
caseD_18,0xbe0,ctx->rdx + 0x2,"MOV dword ptr [RDX + 0x2],R13D",write other [TODO]
caseD_18,0xbe7,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],AX",write other [TODO]
caseD_18,0xbee,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0xbfb,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0xc58,ctx->rcx,"MOV dword ptr [RCX],EDX",write other [TODO]
caseD_18,0xc6e,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,0xc88,ctx->rbp - 0x160,"MOV dword ptr [RBP + -0x160],R11D",write stack
caseD_18,0xc8f,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],EAX",write stack
caseD_18,0xc95,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],ESI",write stack
caseD_18,0xc9b,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,0xcc7,ctx->rdx,"MOV byte ptr [RDX],0x41",write other [TODO]
caseD_18,0xce7,ctx->rdi - 0x1,"MOV byte ptr [RDI + -0x1],DL",write other [TODO]
caseD_18,0xd04,ctx->rax,"MOV dword ptr [RAX],R14D",write other [TODO]
caseD_18,0xd07,0xffffffff8109bed0,CALL 0xffffffff8109bed0,direct call
caseD_18,0xd1f,ctx->rbp - 0x148,"MOV byte ptr [RBP + -0x148],0x1",write stack
caseD_18,0xd26,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],DX",write other [TODO]
caseD_18,0xd2f,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0xd3e,ctx->rbp - 0x170,"MOV dword ptr [RBP + -0x170],0x800",write stack
caseD_18,0xd6d,0xffffffff8109c220,CALL 0xffffffff8109c220,direct call
caseD_18,0xd9a,ctx->rdi,"MOV byte ptr [RDI],0x41",write other [TODO]
caseD_18,0xe24,ctx->wordctx->ptrctx->r14 + ctx->rax * 0x1 - 0x2,"MOV word ptr [R14 + RAX*0x1 + -0x2],CX",write other [TODO]
caseD_18,0xe6a,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,0xe70,0xffffffff8109c180,CALL 0xffffffff8109c180,direct call
caseD_18,0xea4,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],DX",write other [TODO]
caseD_18,0xec1,ctx->rdi - 0x1,"MOV byte ptr [RDI + -0x1],R8B",write other [TODO]
caseD_18,0xf38,ctx->rsi,"MOV dword ptr [RSI],EDX",write other [TODO]
caseD_18,0xf3a,ctx->rsi + 0x8,"MOV dword ptr [RSI + 0x8],0x7",write other [TODO]
caseD_18,0xf51,ctx->rbp - 0x130,"MOV dword ptr [RBP + -0x130],EDI",write stack
caseD_18,0xf60,ctx->rsi + 0x4,"MOV dword ptr [RSI + 0x4],EDX",write other [TODO]
caseD_18,0xf7f,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,0xf85,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,0xfad,ctx->rdx,"MOV dword ptr [RDX],0xcb8949",write other [TODO]
caseD_18,0xff1,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],R8W",write other [TODO]
caseD_18,0x1000,ctx->rcx,"MOV byte ptr [RCX],AL",write other [TODO]
caseD_18,0x1008,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x102a,ctx->rcx + 0x2,"MOV byte ptr [RCX + 0x2],0x5a",write other [TODO]
caseD_18,0x103e,ctx->rdi + 0x2,"MOV dword ptr [RDI + 0x2],R13D",write other [TODO]
caseD_18,0x104d,ctx->wordctx->ptrctx->rdi,"MOV word ptr [RDI],AX",write other [TODO]
caseD_18,0x1054,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x1061,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x107c,ctx->rdx,"MOV byte ptr [RDX],0x66",write other [TODO]
caseD_18,0x1082,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDI",write stack
caseD_18,0x1098,ctx->rdx + 0x1,"MOV byte ptr [RDX + 0x1],0x41",write other [TODO]
caseD_18,0x109c,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDI",write stack
caseD_18,0x10bc,ctx->rdi,"MOV dword ptr [RDI],EDX",write other [TODO]
caseD_18,0x10c2,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x10db,ctx->wordctx->ptrctx->rdi + 0x3,"MOV word ptr [RDI + 0x3],R11W",write other [TODO]
caseD_18,0x10ef,ctx->rax - 0x1,"MOV byte ptr [RAX + -0x1],DL",write other [TODO]
caseD_18,0x10f4,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x112f,ctx->rcx + 0x2,"MOV byte ptr [RCX + 0x2],0x41",write other [TODO]
caseD_18,0x114d,ctx->rdx,"MOV byte ptr [RDX],0xf",write other [TODO]
caseD_18,0x1163,ctx->rdx,"MOV dword ptr [RDX],0xb70f45",write other [TODO]
caseD_18,0x118b,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],R9W",write other [TODO]
caseD_18,0x1191,ctx->rdi + 0x3,"MOV dword ptr [RDI + 0x3],0xb70f45",write other [TODO]
caseD_18,0x11ac,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],EAX",write stack
caseD_18,0x11b2,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,0x11df,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],R13W",write other [TODO]
caseD_18,0x11e8,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],EAX",write stack
caseD_18,0x120c,ctx->wordctx->ptrctx->rbx,"MOV word ptr [RBX],AX",write other [TODO]
caseD_18,0x1224,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,0x122b,ctx->rbx + 0x2,"MOV dword ptr [RBX + 0x2],EDX",write other [TODO]
caseD_18,0x1236,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RCX",write stack
caseD_18,0x123d,ctx->rbx + 0x6,"MOV dword ptr [RBX + 0x6],EDX",write other [TODO]
caseD_18,0x1254,ctx->wordctx->ptrctx->rbx + 0xd,"MOV word ptr [RBX + 0xd],AX",write other [TODO]
caseD_18,0x1265,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],R9",write stack
caseD_18,0x1274,ctx->rbp - 0x170,"MOV qword ptr [RBP + -0x170],R9",write stack
caseD_18,0x127e,ctx->rbp - 0x168,"MOV dword ptr [RBP + -0x168],R11D",write stack
caseD_18,0x1285,ctx->rbx + 0xa,"MOV byte ptr [RBX + 0xa],DL",write other [TODO]
caseD_18,0x1292,ctx->rbp - 0x150,"MOV qword ptr [RBP + -0x150],RDI",write stack
caseD_18,0x12a5,ctx->wordctx->ptrctx->rbx + 0xb,"MOV word ptr [RBX + 0xb],DX",write other [TODO]
caseD_18,0x12ae,0xffffffff8109c090,CALL 0xffffffff8109c090,direct call
caseD_18,0x12c3,ctx->r13,"MOV byte ptr [R13],0x49",write other [TODO]
caseD_18,0x12c8,ctx->wordctx->ptrctx->r13 + 0x1,"MOV word ptr [R13 + 0x1],AX",write other [TODO]
caseD_18,0x12cd,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RDX",write stack
caseD_18,0x12da,ctx->r13 + 0x3,"MOV dword ptr [R13 + 0x3],EDX",write other [TODO]
caseD_18,0x12ed,ctx->wordctx->ptrctx->r13 + 0x7,"MOV word ptr [R13 + 0x7],AX",write other [TODO]
caseD_18,0x12fd,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],R8",write stack
caseD_18,0x1304,ctx->rbp - 0x160,"MOV qword ptr [RBP + -0x160],R8",write stack
caseD_18,0x130b,0xffffffff8109bf30,CALL 0xffffffff8109bf30,direct call
caseD_18,0x1331,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],AX",write other [TODO]
caseD_18,0x1342,ctx->rbp - 0x178,"MOV qword ptr [RBP + -0x178],RAX",write stack
caseD_18,0x134c,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
caseD_18,0x1356,ctx->rbx + 0xe,"MOV byte ptr [RBX + 0xe],DL",write other [TODO]
caseD_18,0x1359,ctx->r13 + 0x8,"MOV byte ptr [R13 + 0x8],AL",write other [TODO]
caseD_18,0xbf74fb,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0xbf7512,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0xbf7557,0xffffffff81cb4d33,CALL 0xffffffff81cb4d33,direct call
caseD_18,0xbf7563,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0xbf757a,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0xbf7591,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0xbf75a8,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
caseD_18,0xbf75d6,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff8109dfae,0xe,ctx->rbp - 0x150,"MOV dword ptr [RBP + -0x150],R9D",write stack
FUN_ffffffff8109dfae,0x15,ctx->rbp - 0x154,"MOV dword ptr [RBP + -0x154],R11D",write stack
FUN_ffffffff8109dfae,0x1c,0xffffffff8109bed0,CALL 0xffffffff8109bed0,direct call
FUN_ffffffff8109dfae,0x3d,ctx->rdx,"MOV byte ptr [RDX],0x58",write other [TODO]
FUN_ffffffff8109dfae,0x40,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
FUN_ffffffff8109dfae,0x49,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],0xc48148",write other [TODO]
FUN_ffffffff8109dfae,0x5b,ctx->rbp - 0x100,"MOV qword ptr [RBP + -0x100],RAX",write stack
FUN_ffffffff8109dfae,0x66,ctx->rdx + 0x4,"MOV dword ptr [RDX + 0x4],EAX",write other [TODO]
FUN_ffffffff8109dfae,0x7a,ctx->rax - 0x5,"MOV dword ptr [RAX + -0x5],EDX",write other [TODO]
FUN_ffffffff8109dfae,0x88,ctx->rax - 0x1,"MOV byte ptr [RAX + -0x1],DL",write other [TODO]
FUN_ffffffff8109dfae,0x93,ctx->rbp - 0x108,"MOV qword ptr [RBP + -0x108],RAX",write stack
FUN_ffffffff8109dfae,0x9d,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],EDX",write other [TODO]
bpf_arch_text_invalidate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_arch_text_invalidate,0x11,0xffffffff8103f8f0,CALL 0xffffffff8103f8f0,direct call
bpf_arch_text_invalidate,0x28,,RET,ret
bpf_arch_text_invalidate,0x2f,,RET,ret
bpf_arch_text_poke,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_arch_text_poke,0x3b,0xffffffff8109c850,CALL 0xffffffff8109c850,direct call
bpf_arch_text_poke,0x49,,RET,ret
bpf_arch_text_poke,0x4d,0xffffffff810041e0,CALL 0xffffffff810041e0,direct call
bpf_arch_text_poke,0x59,0xffffffff8120d240,CALL 0xffffffff8120d240,direct call
ex_handler_bpf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ex_handler_bpf,0xc,ctx->rsi + ctx->rax * 0x1,"MOV qword ptr [RSI + RAX*0x1],0x0",write other [TODO]
ex_handler_bpf,0x28,,RET,ret
arch_prepare_bpf_trampoline,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prepare_bpf_trampoline,0x16,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RDI",write stack
arch_prepare_bpf_trampoline,0x21,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RSI",write stack
arch_prepare_bpf_trampoline,0x29,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RDX",write stack
arch_prepare_bpf_trampoline,0x30,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RCX",write stack
arch_prepare_bpf_trampoline,0x34,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],R8D",write stack
arch_prepare_bpf_trampoline,0x38,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R9",write stack
arch_prepare_bpf_trampoline,0x45,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
arch_prepare_bpf_trampoline,0x4b,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EBX",write stack
arch_prepare_bpf_trampoline,0x61,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
arch_prepare_bpf_trampoline,0xac,ctx->rbp - 0x80,"MOV dword ptr [RBP + -0x80],EDI",write stack
arch_prepare_bpf_trampoline,0xb4,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
arch_prepare_bpf_trampoline,0xc4,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],EDI",write stack
arch_prepare_bpf_trampoline,0xd8,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],EDX",write stack
arch_prepare_bpf_trampoline,0xdb,ctx->rdi,"MOV byte ptr [RDI],0x55",write other [TODO]
arch_prepare_bpf_trampoline,0xde,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
arch_prepare_bpf_trampoline,0xe9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_prepare_bpf_trampoline,0xed,ctx->rdi + 0x1,"MOV dword ptr [RDI + 0x1],0xe58948",write other [TODO]
arch_prepare_bpf_trampoline,0xf8,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_prepare_bpf_trampoline,0x106,ctx->rdi + 0x4,"MOV dword ptr [RDI + 0x4],EAX",write other [TODO]
arch_prepare_bpf_trampoline,0x109,ctx->rdi + 0x8,"MOV byte ptr [RDI + 0x8],0x53",write other [TODO]
arch_prepare_bpf_trampoline,0x119,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_prepare_bpf_trampoline,0x11d,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
arch_prepare_bpf_trampoline,0x13b,0xffffffff8109c660,CALL 0xffffffff8109c660,direct call
arch_prepare_bpf_trampoline,0x165,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
arch_prepare_bpf_trampoline,0x1f0,0xffffffff8109c660,CALL 0xffffffff8109c660,direct call
arch_prepare_bpf_trampoline,0x290,ctx->wordctx->ptrctx->rdx,"MOV word ptr [RDX],AX",write other [TODO]
arch_prepare_bpf_trampoline,0x297,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_prepare_bpf_trampoline,0x2a6,ctx->rax,"MOV byte ptr [RAX],0xc3",write other [TODO]
arch_prepare_bpf_trampoline,0x2f9,ctx->rdx + 0x2,"MOV dword ptr [RDX + 0x2],0x8c48348",write other [TODO]
arch_prepare_bpf_trampoline,0x30a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
arch_prepare_bpf_trampoline,0x31b,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],R13D",write stack
arch_prepare_bpf_trampoline,0x323,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R12",write stack
arch_prepare_bpf_trampoline,0x362,0xffffffff8109cc00,CALL 0xffffffff8109cc00,direct call
arch_prepare_bpf_trampoline,0x388,0xffffffff8109c550,CALL 0xffffffff8109c550,direct call
arch_prepare_bpf_trampoline,0x3aa,ctx->rax + 0x278,"MOV qword ptr [RAX + 0x278],RDX",write other [TODO]
arch_prepare_bpf_trampoline,0x3ba,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
arch_prepare_bpf_trampoline,0x3dd,ctx->rcx,"MOV byte ptr [RCX],0xe8",write other [TODO]
arch_prepare_bpf_trampoline,0x3e0,ctx->rcx + 0x1,"MOV dword ptr [RCX + 0x1],EAX",write other [TODO]
arch_prepare_bpf_trampoline,0x40a,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
arch_prepare_bpf_trampoline,0x429,ctx->rcx,"MOV dword ptr [RCX],0x8948c031",write other [TODO]
arch_prepare_bpf_trampoline,0x433,ctx->wordctx->ptrctx->rcx - 0x2,"MOV word ptr [RCX + -0x2],R10W",write other [TODO]
arch_prepare_bpf_trampoline,0x43f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
arch_prepare_bpf_trampoline,0x457,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R13D",write stack
arch_prepare_bpf_trampoline,0x483,0xffffffff8109cc00,CALL 0xffffffff8109cc00,direct call
arch_prepare_bpf_trampoline,0x494,ctx->rcx,"MOV dword ptr [RCX],0xf87d8348",write other [TODO]
arch_prepare_bpf_trampoline,0x4a5,ctx->rcx + 0x4,"MOV byte ptr [RCX + 0x4],0x0",write other [TODO]
arch_prepare_bpf_trampoline,0x4a9,ctx->r12 + ctx->r13 * 0x8,"MOV qword ptr [R12 + R13*0x8],RAX",write other [TODO]
arch_prepare_bpf_trampoline,0x4b3,ctx->rcx + ctx->rax * 0x1 + 0x5,"MOV byte ptr [RCX + RAX*0x1 + 0x5],DL",write other [TODO]
arch_prepare_bpf_trampoline,0x4c9,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
arch_prepare_bpf_trampoline,0x4da,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
arch_prepare_bpf_trampoline,0x4f1,0xffffffff8109c550,CALL 0xffffffff8109c550,direct call
arch_prepare_bpf_trampoline,0x51e,ctx->rdx,"MOV byte ptr [RDX],0xe8",write other [TODO]
arch_prepare_bpf_trampoline,0x521,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],ECX",write other [TODO]
arch_prepare_bpf_trampoline,0x53a,ctx->rax - 0x9,"MOV dword ptr [RAX + -0x9],0xf8458948",write other [TODO]
arch_prepare_bpf_trampoline,0x541,ctx->rbx + 0x270,"MOV qword ptr [RBX + 0x270],RDX",write other [TODO]
arch_prepare_bpf_trampoline,0x54a,ctx->rax - 0x5,"MOV dword ptr [RAX + -0x5],ESI",write other [TODO]
arch_prepare_bpf_trampoline,0x551,ctx->rax - 0x1,"MOV byte ptr [RAX + -0x1],CL",write other [TODO]
arch_prepare_bpf_trampoline,0x554,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_prepare_bpf_trampoline,0x5a7,ctx->rsi + ctx->rax * 0x1,"MOV byte ptr [RSI + RAX*0x1],DL",write other [TODO]
arch_prepare_bpf_trampoline,0x5ca,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
arch_prepare_bpf_trampoline,0x608,ctx->rax + 0x2,"MOV dword ptr [RAX + 0x2],EDX",write other [TODO]
arch_prepare_bpf_trampoline,0x60b,ctx->wordctx->ptrctx->rax,"MOV word ptr [RAX],R8W",write other [TODO]
arch_prepare_bpf_trampoline,0x60f,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
arch_prepare_bpf_trampoline,0x64e,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
arch_prepare_bpf_trampoline,0x671,ctx->rdx,"MOV byte ptr [RDX],0xe8",write other [TODO]
arch_prepare_bpf_trampoline,0x674,ctx->rdx + 0x1,"MOV dword ptr [RDX + 0x1],EAX",write other [TODO]
arch_prepare_bpf_trampoline,0x67b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
arch_prepare_bpf_trampoline,0x699,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
arch_prepare_bpf_trampoline,0x6ad,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],R13D",write stack
arch_prepare_bpf_trampoline,0x6ed,0xffffffff8109cc00,CALL 0xffffffff8109cc00,direct call
arch_prepare_bpf_trampoline,0x713,0xffffffff8109bfe0,CALL 0xffffffff8109bfe0,direct call
arch_prepare_bpf_trampoline,0x72b,0xffffffff8109c660,CALL 0xffffffff8109c660,direct call
arch_prepare_bpf_trampoline,0x735,ctx->rdx,"MOV dword ptr [RDX],0xf8458b48",write other [TODO]
arch_prepare_bpf_trampoline,0x74e,ctx->rax,"MOV dword ptr [RAX],0x8458b48",write other [TODO]
arch_prepare_bpf_trampoline,0x758,ctx->wordctx->ptrctx->rax - 0x2,"MOV word ptr [RAX + -0x2],R9W",write other [TODO]
arch_prepare_bpf_trampoline,0x76a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
arch_prepare_bpf_trampoline,0x78a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
arch_prepare_bpf_trampoline,0xbf6182,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_prepare_bpf_trampoline,0xbf61a0,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_prepare_bpf_trampoline,0xbf61c1,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
arch_prepare_bpf_dispatcher,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
arch_prepare_bpf_dispatcher,0x3e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
arch_prepare_bpf_dispatcher,0x44,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R13",write stack
arch_prepare_bpf_dispatcher,0x48,0xffffffff815f9110,CALL 0xffffffff815f9110,direct call
arch_prepare_bpf_dispatcher,0x5f,0xffffffff8109c9d0,CALL 0xffffffff8109c9d0,direct call
arch_prepare_bpf_dispatcher,0x7f,,RET,ret
arch_prepare_bpf_dispatcher,0x80,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
bpf_int_jit_compile,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_int_jit_compile,0x16,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDI",write stack
bpf_int_jit_compile,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
bpf_int_jit_compile,0x29,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x0",write stack
bpf_int_jit_compile,0x31,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],0x0",write stack
bpf_int_jit_compile,0x39,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
bpf_int_jit_compile,0x40,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
bpf_int_jit_compile,0x48,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
bpf_int_jit_compile,0x83,0xffffffff8120dd10,CALL 0xffffffff8120dd10,direct call
bpf_int_jit_compile,0x9e,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
bpf_int_jit_compile,0xc4,ctx->rbp - 0x5e,"MOV byte ptr [RBP + -0x5e],0x1",write stack
bpf_int_jit_compile,0xcc,ctx->rbp - 0x3c,"MOV qword ptr [RBP + -0x3c],RAX",write stack
bpf_int_jit_compile,0xd3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R11",write stack
bpf_int_jit_compile,0xd7,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
bpf_int_jit_compile,0xea,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RSI",write stack
bpf_int_jit_compile,0xee,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
bpf_int_jit_compile,0xf5,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RCX",write stack
bpf_int_jit_compile,0xfd,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R15",write stack
bpf_int_jit_compile,0x106,ctx->rbp - 0x5d,"MOV byte ptr [RBP + -0x5d],AL",write stack
bpf_int_jit_compile,0x109,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EAX",write stack
bpf_int_jit_compile,0x10e,0xffffffff82000820,CALL 0xffffffff82000820,direct call
bpf_int_jit_compile,0x139,ctx->rbp - 0x5d,"MOV byte ptr [RBP + -0x5d],AL",write stack
bpf_int_jit_compile,0x13f,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EAX",write stack
bpf_int_jit_compile,0x15e,0xffffffff8109ceb0,CALL 0xffffffff8109ceb0,direct call
bpf_int_jit_compile,0x1b2,0xffffffff8120ed40,CALL 0xffffffff8120ed40,direct call
bpf_int_jit_compile,0x1b7,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
bpf_int_jit_compile,0x1d0,ctx->rax + 0x3e8,"MOV qword ptr [RAX + 0x3e8],R11",write other [TODO]
bpf_int_jit_compile,0x2b6,0xffffffff8120eea0,CALL 0xffffffff8120eea0,direct call
bpf_int_jit_compile,0x2d9,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],R14D",write stack
bpf_int_jit_compile,0x339,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
bpf_int_jit_compile,0x360,0xffffffff8109c850,CALL 0xffffffff8109c850,direct call
bpf_int_jit_compile,0x37f,0xffffffff8109c850,CALL 0xffffffff8109c850,direct call
bpf_int_jit_compile,0x38c,ctx->rbx + 0x30,"MOV byte ptr [RBX + 0x30],0x1",write other [TODO]
bpf_int_jit_compile,0x39b,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
bpf_int_jit_compile,0x3b2,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],R15",write other [TODO]
bpf_int_jit_compile,0x3b6,ctx->rsi + 0x24,"MOV qword ptr [RSI + 0x24],RAX",write other [TODO]
bpf_int_jit_compile,0x3bd,ctx->rsi + 0x20,"MOV dword ptr [RSI + 0x20],R14D",write other [TODO]
bpf_int_jit_compile,0x3c1,ctx->rsi + 0x2c,"MOV dword ptr [RSI + 0x2c],EAX",write other [TODO]
bpf_int_jit_compile,0x3c7,ctx->rsi + 0x18,"MOV qword ptr [RSI + 0x18],R13",write other [TODO]
bpf_int_jit_compile,0x3cf,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
bpf_int_jit_compile,0x3d2,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RSI",write other [TODO]
bpf_int_jit_compile,0x3da,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],R14D",write other [TODO]
bpf_int_jit_compile,0x3df,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
bpf_int_jit_compile,0x3ed,ctx->r12 + 0x2,"MOV byte ptr [R12 + 0x2],AL",write other [TODO]
bpf_int_jit_compile,0x40e,0xffffffff8120c7e0,CALL 0xffffffff8120c7e0,direct call
bpf_int_jit_compile,0x416,0xffffffff812a7ba0,CALL 0xffffffff812a7ba0,direct call
bpf_int_jit_compile,0x41f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
bpf_int_jit_compile,0x429,ctx->rax + 0xa8,"MOV qword ptr [RAX + 0xa8],0x0",write other [TODO]
bpf_int_jit_compile,0x459,0xffffffff812a79c0,CALL 0xffffffff812a79c0,direct call
bpf_int_jit_compile,0x474,ctx->rax + ctx->rsi * 0x4,"MOV dword ptr [RAX + RSI*0x4],ECX",write other [TODO]
bpf_int_jit_compile,0x47e,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ECX",write stack
bpf_int_jit_compile,0x48b,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],0x0",write stack
bpf_int_jit_compile,0x497,ctx->rbp - 0x5e,"MOV byte ptr [RBP + -0x5e],0x0",write stack
bpf_int_jit_compile,0x4c4,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
bpf_int_jit_compile,0x4c9,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
bpf_int_jit_compile,0x4da,ctx->rax + 0xa8,"MOV qword ptr [RAX + 0xa8],RSI",write other [TODO]
bpf_int_jit_compile,0xbf59ad,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
bpf_int_jit_compile,0xbf59df,0xffffffff816076a0,CALL 0xffffffff816076a0,direct call
bpf_jit_supports_kfunc_call,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_jit_supports_kfunc_call,0xf,,RET,ret
bpf_arch_text_copy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_arch_text_copy,0xe,0xffffffff8103f850,CALL 0xffffffff8103f850,direct call
bpf_arch_text_copy,0x29,,RET,ret
bpf_jit_supports_subprog_tailcalls,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_jit_supports_subprog_tailcalls,0xf,,RET,ret
bpf_jit_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bpf_jit_free,0x2e,0xffffffff8120eea0,CALL 0xffffffff8120eea0,direct call
bpf_jit_free,0x37,0xffffffff812a7ba0,CALL 0xffffffff812a7ba0,direct call
bpf_jit_free,0x3f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
bpf_jit_free,0x47,0xffffffff8120d980,CALL 0xffffffff8120d980,direct call
bpf_jit_free,0x51,0xffffffff8120eef0,CALL 0xffffffff8120eef0,direct call
bpf_jit_free,0x86,0xffffffff8120c930,CALL 0xffffffff8120c930,direct call
bpf_jit_free,0x90,,RET,ret
__traceiter_task_newtask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_task_newtask,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_task_newtask,0x41,,RET,ret
__traceiter_task_rename,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_task_rename,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_task_rename,0x41,,RET,ret
get_task_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_task_mm,0x1b,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
get_task_mm,0x3b,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
get_task_mm,0x49,,RET,ret
idle_dummy,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
idle_dummy,0xc,,RET,ret
perf_trace_task_newtask,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_task_newtask,0x52,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_task_newtask,0x75,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_task_newtask,0x7c,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_task_newtask,0x83,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_task_newtask,0x8e,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_task_newtask,0xa0,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EAX",write other [TODO]
perf_trace_task_newtask,0xb1,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RBX",write other [TODO]
perf_trace_task_newtask,0xb5,ctx->rdi + 0xc,"MOV qword ptr [RDI + 0xc],RAX",write other [TODO]
perf_trace_task_newtask,0xb9,ctx->rdi + 0x14,"MOV qword ptr [RDI + 0x14],RDX",write other [TODO]
perf_trace_task_newtask,0xce,ctx->wordctx->ptrctx->rdi + 0x28,"MOV word ptr [RDI + 0x28],AX",write other [TODO]
perf_trace_task_newtask,0xd6,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_task_newtask,0xfa,,RET,ret
perf_trace_task_newtask,0x109,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_task_newtask,0x1f,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
trace_event_raw_event_task_newtask,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_task_newtask,0x4c,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EDX",write other [TODO]
trace_event_raw_event_task_newtask,0x5f,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RBX",write other [TODO]
trace_event_raw_event_task_newtask,0x63,ctx->rax + 0x14,"MOV qword ptr [RAX + 0x14],RDI",write other [TODO]
trace_event_raw_event_task_newtask,0x6a,ctx->rax + 0xc,"MOV qword ptr [RAX + 0xc],RSI",write other [TODO]
trace_event_raw_event_task_newtask,0x7d,ctx->wordctx->ptrctx->rax + 0x28,"MOV word ptr [RAX + 0x28],DX",write other [TODO]
trace_event_raw_event_task_newtask,0x81,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_task_newtask,0xa0,,RET,ret
trace_event_raw_event_task_newtask,0xa6,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_task_newtask,0xb1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_task_newtask,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_task_newtask,0x22,,RET,ret
trace_raw_output_task_newtask,0x42,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_task_newtask,0x4e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_task_newtask,0x57,,RET,ret
trace_raw_output_task_rename,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_task_rename,0x22,,RET,ret
trace_raw_output_task_rename,0x42,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_task_rename,0x4e,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_task_rename,0x57,,RET,ret
perf_trace_task_rename,0x29,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
perf_trace_task_rename,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_task_rename,0x70,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_task_rename,0x77,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_task_rename,0x7e,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_task_rename,0x89,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_task_rename,0x9b,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EAX",write other [TODO]
perf_trace_task_rename,0xae,ctx->r12 + 0x14,"MOV qword ptr [R12 + 0x14],RDX",write other [TODO]
perf_trace_task_rename,0xb3,ctx->r12 + 0xc,"MOV qword ptr [R12 + 0xc],RAX",write other [TODO]
perf_trace_task_rename,0xbd,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
perf_trace_task_rename,0xc1,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
perf_trace_task_rename,0xe7,ctx->r12 + 0x1c,"MOV qword ptr [R12 + 0x1c],RDX",write other [TODO]
perf_trace_task_rename,0xf7,ctx->rcx + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RCX + RDX*0x1 + -0x8],RSI",write other [TODO]
perf_trace_task_rename,0x11d,ctx->r8 + ctx->rdi * 0x1,"MOV qword ptr [R8 + RDI*0x1],R9",write other [TODO]
perf_trace_task_rename,0x125,ctx->r12 + ctx->rax * 0x1 + 0x1c,"MOV byte ptr [R12 + RAX*0x1 + 0x1c],0x0",write other [TODO]
perf_trace_task_rename,0x151,ctx->wordctx->ptrctx->r12 + 0x2c,"MOV word ptr [R12 + 0x2c],AX",write other [TODO]
perf_trace_task_rename,0x15b,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_task_rename,0x181,,RET,ret
perf_trace_task_rename,0x18d,ctx->r12 + 0x1c,"MOV byte ptr [R12 + 0x1c],DL",write other [TODO]
perf_trace_task_rename,0x1a1,ctx->wordctx->ptrctx->rcx + ctx->rdx * 0x1 - 0x2,"MOV word ptr [RCX + RDX*0x1 + -0x2],SI",write other [TODO]
perf_trace_task_rename,0x1bc,ctx->r12 + 0x1c,"MOV dword ptr [R12 + 0x1c],EDX",write other [TODO]
perf_trace_task_rename,0x1cb,ctx->rcx + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [RCX + RDX*0x1 + -0x4],ESI",write other [TODO]
perf_trace_task_rename,0x1d4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_task_rename,0x21,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
trace_event_raw_event_task_rename,0x40,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_task_rename,0x5f,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EAX",write other [TODO]
trace_event_raw_event_task_rename,0x70,ctx->rbx + 0x14,"MOV qword ptr [RBX + 0x14],RDX",write other [TODO]
trace_event_raw_event_task_rename,0x74,ctx->rbx + 0xc,"MOV qword ptr [RBX + 0xc],RAX",write other [TODO]
trace_event_raw_event_task_rename,0x78,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
trace_event_raw_event_task_rename,0x9e,ctx->rbx + 0x1c,"MOV qword ptr [RBX + 0x1c],RDX",write other [TODO]
trace_event_raw_event_task_rename,0xa9,ctx->r14 + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [R14 + RDX*0x1 + -0x8],RCX",write other [TODO]
trace_event_raw_event_task_rename,0xcf,ctx->rdi + ctx->rsi * 0x1,"MOV qword ptr [RDI + RSI*0x1],R8",write other [TODO]
trace_event_raw_event_task_rename,0xd7,ctx->rbx + ctx->rax * 0x1 + 0x1c,"MOV byte ptr [RBX + RAX*0x1 + 0x1c],0x0",write other [TODO]
trace_event_raw_event_task_rename,0xed,ctx->wordctx->ptrctx->rbx + 0x2c,"MOV word ptr [RBX + 0x2c],AX",write other [TODO]
trace_event_raw_event_task_rename,0xf1,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_task_rename,0x112,,RET,ret
trace_event_raw_event_task_rename,0x120,ctx->rbx + 0x1c,"MOV byte ptr [RBX + 0x1c],DL",write other [TODO]
trace_event_raw_event_task_rename,0x12f,ctx->wordctx->ptrctx->r14 + ctx->rdx * 0x1 - 0x2,"MOV word ptr [R14 + RDX*0x1 + -0x2],CX",write other [TODO]
trace_event_raw_event_task_rename,0x140,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_task_rename,0x153,ctx->rbx + 0x1c,"MOV dword ptr [RBX + 0x1c],EDX",write other [TODO]
trace_event_raw_event_task_rename,0x15d,ctx->r14 + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [R14 + RDX*0x1 + -0x4],ECX",write other [TODO]
trace_event_raw_event_task_rename,0x167,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__bpf_trace_task_newtask,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_task_newtask,0xa,,RET,ret
__bpf_trace_task_rename,0x4,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_task_rename,0xa,,RET,ret
thread_stack_free_rcu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
thread_stack_free_rcu,0x38,0xffffffff812ef270,CALL 0xffffffff812ef270,direct call
thread_stack_free_rcu,0x3e,,RET,ret
__ia32_sys_set_tid_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_set_tid_address,0x1a,ctx->rdi + 0xa90,"MOV qword ptr [RDI + 0xa90],RAX",write other [TODO]
__ia32_sys_set_tid_address,0x24,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__ia32_sys_set_tid_address,0x2c,,RET,ret
pidfd_show_fdinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pidfd_show_fdinfo,0x46,0xffffffff810c9640,CALL 0xffffffff810c9640,direct call
pidfd_show_fdinfo,0x5b,0xffffffff81394d50,CALL 0xffffffff81394d50,direct call
pidfd_show_fdinfo,0x6d,0xffffffff81394d50,CALL 0xffffffff81394d50,direct call
pidfd_show_fdinfo,0x9e,0xffffffff81394d50,CALL 0xffffffff81394d50,direct call
pidfd_show_fdinfo,0xb2,0xffffffff81394890,CALL 0xffffffff81394890,direct call
pidfd_show_fdinfo,0xc1,,RET,ret
pidfd_show_fdinfo,0xd0,0xffffffff81394d50,CALL 0xffffffff81394d50,direct call
pidfd_show_fdinfo,0xe6,0xffffffff81394d50,CALL 0xffffffff81394d50,direct call
pidfd_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pidfd_release,0xd,ctx->rsi + 0xc8,"MOV qword ptr [RSI + 0xc8],0x0",write other [TODO]
pidfd_release,0x1b,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
pidfd_release,0x23,,RET,ret
pidfd_poll,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pidfd_poll,0x2d,ctx->rax,CALL RAX,in-direct call
pidfd_poll,0x32,0xffffffff810a8790,CALL 0xffffffff810a8790,direct call
pidfd_poll,0x43,,RET,ret
sighand_ctor,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sighand_ctor,0x18,ctx->rdi - 0x8,"MOV dword ptr [RDI + -0x8],0x0",write other [TODO]
sighand_ctor,0x22,0xffffffff81103c70,CALL 0xffffffff81103c70,direct call
sighand_ctor,0x28,,RET,ret
copy_clone_args_from_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_clone_args_from_user,0x23,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
copy_clone_args_from_user,0x85,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],R8",write stack
copy_clone_args_from_user,0x8c,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
copy_clone_args_from_user,0x9e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
copy_clone_args_from_user,0xeb,ctx->r8,"MOV R8,qword ptr [RBP + -0x88]",write other [TODO]
copy_clone_args_from_user,0x125,ctx->rbx,"MOV qword ptr [RBX],R8",write other [TODO]
copy_clone_args_from_user,0x128,ctx->rbx + 0x20,"MOV dword ptr [RBX + 0x20],ESI",write other [TODO]
copy_clone_args_from_user,0x12b,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
copy_clone_args_from_user,0x133,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RDX",write other [TODO]
copy_clone_args_from_user,0x137,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
copy_clone_args_from_user,0x13f,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],R9D",write other [TODO]
copy_clone_args_from_user,0x143,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
copy_clone_args_from_user,0x14b,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
copy_clone_args_from_user,0x153,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
copy_clone_args_from_user,0x15b,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],RAX",write other [TODO]
copy_clone_args_from_user,0x174,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
copy_clone_args_from_user,0x182,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
copy_clone_args_from_user,0x190,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],R13",write other [TODO]
copy_clone_args_from_user,0x1b7,,RET,ret
copy_clone_args_from_user,0x1d3,ctx->rax,"MOV byte ptr [RAX],0x0",write other [TODO]
copy_clone_args_from_user,0x1e4,ctx->wordctx->ptrctx->rax + ctx->rsi * 0x1 - 0x2,"MOV word ptr [RAX + RSI*0x1 + -0x2],DX",write other [TODO]
copy_clone_args_from_user,0x204,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
copy_clone_args_from_user,0x20b,ctx->rax + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [RAX + RDX*0x1 + -0x8],0x0",write other [TODO]
copy_clone_args_from_user,0x22f,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],R8",write stack
copy_clone_args_from_user,0x236,0xffffffff81605990,CALL 0xffffffff81605990,direct call
copy_clone_args_from_user,0x25c,ctx->rax,"MOV dword ptr [RAX],0x0",write other [TODO]
copy_clone_args_from_user,0x262,ctx->rax + ctx->rsi * 0x1 - 0x4,"MOV dword ptr [RAX + RSI*0x1 + -0x4],0x0",write other [TODO]
copy_clone_args_from_user,0x279,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
mod_lruvec_kmem_state.constprop.0,0x7,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
mod_lruvec_kmem_state.constprop.0,0x10,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
mod_lruvec_kmem_state.constprop.0,0x1b,0xffffffff8134a2b0,CALL 0xffffffff8134a2b0,direct call
mod_lruvec_kmem_state.constprop.0,0x25,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
mod_lruvec_kmem_state.constprop.0,0x30,,RET,ret
__refcount_add.constprop.0,0x19,,RET,ret
__refcount_add.constprop.0,0x1f,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__refcount_add.constprop.0,0x25,,RET,ret
__refcount_add.constprop.0,0x2b,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__refcount_add.constprop.0,0x31,,RET,ret
mm_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mm_release,0x14,0xffffffff8127ce10,CALL 0xffffffff8127ce10,direct call
mm_release,0x1b,0xffffffff82e4b8c0,CALL qword ptr [0xffffffff82e4b8c0],in-direct call
mm_release,0x3a,ctx->r12 + 0xa90,"MOV qword ptr [R12 + 0xa90],0x0",write other [TODO]
mm_release,0x5c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
mm_release,0x6e,ctx->r12 + 0xa80,"MOV qword ptr [R12 + 0xa80],0x0",write other [TODO]
mm_release,0x7a,0xffffffff81105880,CALL 0xffffffff81105880,direct call
mm_release,0x82,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mm_release,0x91,,RET,ret
mm_release,0x97,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
mm_release,0xb0,0xffffffff8116a620,CALL 0xffffffff8116a620,direct call
mmput_async,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmput_async,0xb,,RET,ret
mmput_async,0x25,ctx->rdi + 0x3e0,"MOV qword ptr [RDI + 0x3e0],RAX",write other [TODO]
mmput_async,0x33,ctx->rdi + 0x3e8,"MOV qword ptr [RDI + 0x3e8],RAX",write other [TODO]
mmput_async,0x3a,ctx->rdi + 0x3f8,"MOV qword ptr [RDI + 0x3f8],-0x7ef5f020",write other [TODO]
mmput_async,0x48,ctx->rdi + 0x3f0,"MOV qword ptr [RDI + 0x3f0],RAX",write other [TODO]
mmput_async,0x54,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
mmput_async,0x5a,,RET,ret
__x64_sys_set_tid_address,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_set_tid_address,0x1a,ctx->rdi + 0xa90,"MOV qword ptr [RDI + 0xa90],RAX",write other [TODO]
__x64_sys_set_tid_address,0x24,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__x64_sys_set_tid_address,0x2c,,RET,ret
__mmdrop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__mmdrop,0x52,0xffffffff8108b1a0,CALL 0xffffffff8108b1a0,direct call
__mmdrop,0x5a,0xffffffff8103b4a0,CALL 0xffffffff8103b4a0,direct call
__mmdrop,0xe2,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
__mmdrop,0xed,,RET,ret
__mmdrop,0xee,0xffffffff817e8190,CALL 0xffffffff817e8190,direct call
__mmdrop,0xf3,ctx->r12 + 0x400,"MOV dword ptr [R12 + 0x400],0xffffffff",write other [TODO]
__mmdrop,0x109,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__mmdrop,0x110,0xffffffff8118e3e0,CALL 0xffffffff8118e3e0,direct call
__mmdrop,0x129,0xffffffff81319c90,CALL 0xffffffff81319c90,direct call
__mmdrop,0xbf468f,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
mmdrop_async_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmdrop_async_fn,0x10,0xffffffff810a0d20,CALL 0xffffffff810a0d20,direct call
mmdrop_async_fn,0x16,,RET,ret
__mmput,0x9,0xffffffff8127c8a0,CALL 0xffffffff8127c8a0,direct call
__mmput,0x11,0xffffffff813ccf30,CALL 0xffffffff813ccf30,direct call
__mmput,0x3b,0xffffffff8133ff70,CALL 0xffffffff8133ff70,direct call
__mmput,0x43,0xffffffff812d5270,CALL 0xffffffff812d5270,direct call
__mmput,0x4b,0xffffffff81332d20,CALL 0xffffffff81332d20,direct call
__mmput,0x58,ctx->r12 + 0x3a0,"MOV qword ptr [R12 + 0x3a0],0x0",write other [TODO]
__mmput,0x74,0xffffffff81366540,CALL 0xffffffff81366540,direct call
__mmput,0x95,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__mmput,0xb1,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__mmput,0xb5,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
__mmput,0xc2,ctx->r12 + 0x98,"MOV qword ptr [R12 + 0x98],RAX",write other [TODO]
__mmput,0xce,ctx->r12 + 0xa0,"MOV qword ptr [R12 + 0xa0],RAX",write other [TODO]
__mmput,0xd6,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__mmput,0xec,0xffffffff811470b0,CALL 0xffffffff811470b0,direct call
__mmput,0xfe,,RET,ret
__mmput,0x102,0xffffffff8131e9d0,CALL 0xffffffff8131e9d0,direct call
__mmput,0x10f,0xffffffff810a0d20,CALL 0xffffffff810a0d20,direct call
__mmput,0x119,,RET,ret
mmput,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmput,0xe,0xffffffff82000828,CALL 0xffffffff82000828,direct call
mmput,0x20,,RET,ret
mmput,0x24,0xffffffff810a0e90,CALL 0xffffffff810a0e90,direct call
mmput,0x2e,,RET,ret
mmput_async_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mmput_async_fn,0x10,0xffffffff810a0e90,CALL 0xffffffff810a0e90,direct call
mmput_async_fn,0x16,,RET,ret
mm_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mm_init,0x2d,ctx->rdi - 0x68,"MOV qword ptr [RDI + -0x68],0x0",write other [TODO]
mm_init,0x35,ctx->rdi - 0x60,"MOV dword ptr [RDI + -0x60],0x301",write other [TODO]
mm_init,0x3c,ctx->rdi - 0x1c,"MOV dword ptr [RDI + -0x1c],0x1",write other [TODO]
mm_init,0x43,ctx->rdi + 0x80,"MOV dword ptr [RDI + 0x80],0x0",write other [TODO]
mm_init,0x4d,ctx->rdi - 0x18,"MOV dword ptr [RDI + -0x18],0x1",write other [TODO]
mm_init,0x54,0xffffffff81112b60,CALL 0xffffffff81112b60,direct call
mm_init,0x69,ctx->r12 + 0x98,"MOV qword ptr [R12 + 0x98],RAX",write other [TODO]
mm_init,0x79,ctx->r12 + 0xa0,"MOV qword ptr [R12 + 0xa0],RAX",write other [TODO]
mm_init,0x85,ctx->r12 + 0x60,"MOV qword ptr [R12 + 0x60],0x0",write other [TODO]
mm_init,0x92,ctx->r12 + 0x68,"MOV dword ptr [R12 + 0x68],0x0",write other [TODO]
mm_init,0x9f,ctx->r12 + 0xc0,"MOV qword ptr [R12 + 0xc0],0x0",write other [TODO]
mm_init,0xab,ctx->r12 + 0xc8,"MOV qword ptr [R12 + 0xc8],0x0",write other [TODO]
mm_init,0xb7,ctx->r12 + 0x2d0,"MOV qword ptr [R12 + 0x2d0],0x0",write other [TODO]
mm_init,0xc3,ctx->r12 + 0x2d8,"MOV qword ptr [R12 + 0x2d8],0x0",write other [TODO]
mm_init,0xcf,ctx->r12 + 0x2e0,"MOV qword ptr [R12 + 0x2e0],0x0",write other [TODO]
mm_init,0xdb,ctx->r12 + 0x2e8,"MOV qword ptr [R12 + 0x2e8],0x0",write other [TODO]
mm_init,0xe7,ctx->r12 + 0x6c,"MOV dword ptr [R12 + 0x6c],0x0",write other [TODO]
mm_init,0xf0,ctx->r12 + 0xf4,"MOV dword ptr [R12 + 0xf4],0x0",write other [TODO]
mm_init,0xfc,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
mm_init,0x101,ctx->r12 + 0x390,"MOV qword ptr [R12 + 0x390],R13",write other [TODO]
mm_init,0x109,ctx->r12 + 0x3a0,"MOV qword ptr [R12 + 0x3a0],0x0",write other [TODO]
mm_init,0x115,ctx->r12 + 0x380,"MOV dword ptr [R12 + 0x380],0x0",write other [TODO]
mm_init,0x121,ctx->r12 + 0x3c4,"MOV dword ptr [R12 + 0x3c4],0x0",write other [TODO]
mm_init,0x12d,ctx->r12 + 0x388,"MOV qword ptr [R12 + 0x388],0x0",write other [TODO]
mm_init,0x139,ctx->r12 + 0x400,"MOV dword ptr [R12 + 0x400],0xffffffff",write other [TODO]
mm_init,0x145,ctx->r12 + 0x3a8,"MOV qword ptr [R12 + 0x3a8],0x0",write other [TODO]
mm_init,0x151,ctx->r12 + 0x3d0,"MOV qword ptr [R12 + 0x3d0],0x0",write other [TODO]
mm_init,0x15d,ctx->r12 + 0x3d8,"MOV qword ptr [R12 + 0x3d8],0x0",write other [TODO]
mm_init,0x194,ctx->r12 + 0x378,"MOV qword ptr [R12 + 0x378],RDX",write other [TODO]
mm_init,0x1af,ctx->r12 + 0xe8,"MOV qword ptr [R12 + 0xe8],RAX",write other [TODO]
mm_init,0x1ba,0xffffffff8108b000,CALL 0xffffffff8108b000,direct call
mm_init,0x1bf,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],RAX",write other [TODO]
mm_init,0x1e3,0xffffffff81112440,CALL 0xffffffff81112440,direct call
mm_init,0x1f6,ctx->r12 + 0x300,"MOV qword ptr [R12 + 0x300],0x0",write other [TODO]
mm_init,0x206,ctx->r12 + 0x2f8,"MOV qword ptr [R12 + 0x2f8],RAX",write other [TODO]
mm_init,0x287,ctx->r12 + 0x378,"MOV qword ptr [R12 + 0x378],RAX",write other [TODO]
mm_init,0x2ac,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
mm_init,0x2b0,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
mm_init,0x2c3,,RET,ret
nr_processes,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nr_processes,0x6,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
nr_processes,0x3c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
nr_processes,0x52,,RET,ret
FUN_ffffffff810a1330,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a1330,0xa,,RET,ret
free_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_task,0xe,0xffffffff810e2600,CALL 0xffffffff810e2600,direct call
free_task,0x22,0xffffffff811ddf70,CALL 0xffffffff811ddf70,direct call
free_task,0x2a,0xffffffff81041a00,CALL 0xffffffff81041a00,direct call
free_task,0x41,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
free_task,0x4b,,RET,ret
free_task,0x4f,0xffffffff810cd930,CALL 0xffffffff810cd930,direct call
__put_task_struct,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__put_task_struct,0x4b,0xffffffff815ef500,CALL 0xffffffff815ef500,direct call
__put_task_struct,0x53,0xffffffff811803e0,CALL 0xffffffff811803e0,direct call
__put_task_struct,0x60,0xffffffff810f34e0,CALL 0xffffffff810f34e0,direct call
__put_task_struct,0x68,0xffffffff81504570,CALL 0xffffffff81504570,direct call
__put_task_struct,0x70,0xffffffff81241590,CALL 0xffffffff81241590,direct call
__put_task_struct,0x78,0xffffffff810d42a0,CALL 0xffffffff810d42a0,direct call
__put_task_struct,0x91,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
__put_task_struct,0xa3,ctx->r12 + 0x1378,"MOV qword ptr [R12 + 0x1378],0x0",write other [TODO]
__put_task_struct,0xc1,0xffffffff81110d00,CALL 0xffffffff81110d00,direct call
__put_task_struct,0xc9,0xffffffff810a1340,CALL 0xffffffff810a1340,direct call
__put_task_struct,0xd3,,RET,ret
__put_task_struct,0xe7,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
__put_task_struct,0xef,0xffffffff81111f30,CALL 0xffffffff81111f30,direct call
__put_task_struct,0x110,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
__put_task_struct,0x11f,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__put_task_struct,0x159,ctx->rdx + 0x3f8,"MOV qword ptr [RDX + 0x3f8],-0x7ef5f190",write other [TODO]
__put_task_struct,0x164,ctx->rdx + 0x3e0,"MOV qword ptr [RDX + 0x3e0],RAX",write other [TODO]
__put_task_struct,0x179,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
__put_task_struct,0x17d,ctx->rdx + 0x10,"MOV qword ptr [RDX + 0x10],RAX",write other [TODO]
__put_task_struct,0x181,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
__delayed_free_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__delayed_free_task,0x10,0xffffffff810a1340,CALL 0xffffffff810a1340,direct call
__delayed_free_task,0x16,,RET,ret
vm_area_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vm_area_alloc,0x19,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
vm_area_alloc,0x37,ctx->r8 + 0x10,"MOV qword ptr [R8 + 0x10],RBX",write other [TODO]
vm_area_alloc,0x3b,ctx->r8 + 0x48,"MOV qword ptr [R8 + 0x48],RAX",write other [TODO]
vm_area_alloc,0x3f,ctx->r8 + 0x60,"MOV qword ptr [R8 + 0x60],-0x7dde7da0",write other [TODO]
vm_area_alloc,0x47,ctx->r8 + 0x50,"MOV qword ptr [R8 + 0x50],RAX",write other [TODO]
vm_area_alloc,0x53,,RET,ret
vm_area_dup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vm_area_dup,0x23,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
vm_area_dup,0x43,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
vm_area_dup,0x59,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
vm_area_dup,0x6f,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
vm_area_dup,0x85,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
vm_area_dup,0x8b,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],RAX",write other [TODO]
vm_area_dup,0x90,ctx->r12 + 0x50,"MOV qword ptr [R12 + 0x50],RAX",write other [TODO]
vm_area_dup,0x95,0xffffffff812f9850,CALL 0xffffffff812f9850,direct call
vm_area_dup,0xad,0xffffffff812f8b40,CALL 0xffffffff812f8b40,direct call
vm_area_dup,0xb2,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
vm_area_dup,0xc6,,RET,ret
vm_area_dup,0xe3,ctx->rbp - 0x1e0,"MOV qword ptr [RBP + -0x1e0],RAX",write stack
vm_area_dup,0xea,0xffffffff81605660,CALL 0xffffffff81605660,direct call
vm_area_dup,0x100,ctx->rbp - 0x1e0,"MOV qword ptr [RBP + -0x1e0],RAX",write stack
vm_area_dup,0x107,0xffffffff81605660,CALL 0xffffffff81605660,direct call
vm_area_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
vm_area_free,0x29,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
vm_area_free,0x33,,RET,ret
vm_area_free,0x4b,0xffffffff81605660,CALL 0xffffffff81605660,direct call
vm_area_free,0x52,0xffffffff812f9840,CALL 0xffffffff812f9840,direct call
exit_task_stack_account,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exit_task_stack_account,0x12,0xffffffff810a0b50,CALL 0xffffffff810a0b50,direct call
exit_task_stack_account,0x18,,RET,ret
put_task_stack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
put_task_stack,0x28,,RET,ret
put_task_stack,0x3e,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
put_task_stack,0x43,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],0x0",write other [TODO]
put_task_stack,0x50,,RET,ret
put_task_stack,0x5d,0xffffffff81605660,CALL 0xffffffff81605660,direct call
put_task_stack,0x67,,RET,ret
FUN_ffffffff810a17c0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a17c0,0xe,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
FUN_ffffffff810a17c0,0x16,,RET,ret
set_task_stack_end_magic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_task_stack_end_magic,0xa,ctx->rax,"MOV qword ptr [RAX],0x57ac6e9d",write other [TODO]
set_task_stack_end_magic,0x15,,RET,ret
mm_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mm_alloc,0x15,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
mm_alloc,0x49,0xffffffff810a1000,CALL 0xffffffff810a1000,direct call
mm_alloc,0x55,,RET,ret
set_mm_exe_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_mm_exe_file,0x3a,ctx->rdi + 0x3a0,"MOV qword ptr [RDI + 0x3a0],RSI",write other [TODO]
set_mm_exe_file,0x54,0xffffffff81366540,CALL 0xffffffff81366540,direct call
set_mm_exe_file,0x61,,RET,ret
get_mm_exe_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_mm_exe_file,0xe,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
get_mm_exe_file,0x37,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
get_mm_exe_file,0x44,,RET,ret
get_mm_exe_file,0x45,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
get_mm_exe_file,0x55,,RET,ret
replace_mm_exe_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
replace_mm_exe_file,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
replace_mm_exe_file,0x2b,0xffffffff810a18d0,CALL 0xffffffff810a18d0,direct call
replace_mm_exe_file,0x4a,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R12",write stack
replace_mm_exe_file,0x4e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x1",write stack
replace_mm_exe_file,0x63,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
replace_mm_exe_file,0x78,0xffffffff81c73350,CALL 0xffffffff81c73350,direct call
replace_mm_exe_file,0xb1,0xffffffff81113020,CALL 0xffffffff81113020,direct call
replace_mm_exe_file,0xb9,0xffffffff81366540,CALL 0xffffffff81366540,direct call
replace_mm_exe_file,0x105,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
replace_mm_exe_file,0x11a,0xffffffff81366540,CALL 0xffffffff81366540,direct call
replace_mm_exe_file,0x124,0xffffffff81113020,CALL 0xffffffff81113020,direct call
replace_mm_exe_file,0x14c,,RET,ret
replace_mm_exe_file,0x1ce,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
dup_mmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dup_mmap,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
dup_mmap,0x41,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RSI",write stack
dup_mmap,0x48,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RAX",write stack
dup_mmap,0x4f,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
dup_mmap,0x64,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R12",write stack
dup_mmap,0x6b,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x1",write stack
dup_mmap,0x76,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],-0x1",write stack
dup_mmap,0x81,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x1",write stack
dup_mmap,0x89,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x1",write stack
dup_mmap,0x91,0xffffffff8127ca00,CALL 0xffffffff8127ca00,direct call
dup_mmap,0xa2,ctx->rbp - 0xd0,"MOV qword ptr [RBP + -0xd0],RAX",write stack
dup_mmap,0xa9,0xffffffff81d112d0,CALL 0xffffffff81d112d0,direct call
dup_mmap,0xc3,0xffffffff8127cab0,CALL 0xffffffff8127cab0,direct call
dup_mmap,0xd5,ctx->rbp - 0xd8,"MOV qword ptr [RBP + -0xd8],RAX",write stack
dup_mmap,0xdc,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
dup_mmap,0xe9,0xffffffff810a18d0,CALL 0xffffffff810a18d0,direct call
dup_mmap,0xee,ctx->r12 + 0x3a0,"MOV qword ptr [R12 + 0x3a0],RAX",write other [TODO]
dup_mmap,0x121,ctx->r12 + 0xb8,"MOV qword ptr [R12 + 0xb8],RAX",write other [TODO]
dup_mmap,0x130,ctx->r12 + 0xd0,"MOV qword ptr [R12 + 0xd0],RAX",write other [TODO]
dup_mmap,0x13f,ctx->r12 + 0xd8,"MOV qword ptr [R12 + 0xd8],RAX",write other [TODO]
dup_mmap,0x14e,ctx->r12 + 0xe0,"MOV qword ptr [R12 + 0xe0],RAX",write other [TODO]
dup_mmap,0x182,0xffffffff81c78aa0,CALL 0xffffffff81c78aa0,direct call
dup_mmap,0x19a,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RAX",write stack
dup_mmap,0x1af,0xffffffff81c73350,CALL 0xffffffff81c73350,direct call
dup_mmap,0x1fe,0xffffffff81502f10,CALL 0xffffffff81502f10,direct call
dup_mmap,0x20e,0xffffffff810a15b0,CALL 0xffffffff810a15b0,direct call
dup_mmap,0x225,0xffffffff813169d0,CALL 0xffffffff813169d0,direct call
dup_mmap,0x232,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],R12",write other [TODO]
dup_mmap,0x240,0xffffffff813c81c0,CALL 0xffffffff813c81c0,direct call
dup_mmap,0x25c,ctx->r15 + 0x58,"MOV qword ptr [R15 + 0x58],0x0",write other [TODO]
dup_mmap,0x26e,ctx->r15 + 0x20,"MOV qword ptr [R15 + 0x20],RAX",write other [TODO]
dup_mmap,0x287,ctx->rbp - 0xe8,"MOV qword ptr [RBP + -0xe8],RDX",write stack
dup_mmap,0x291,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],R10",write stack
dup_mmap,0x298,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
dup_mmap,0x2c0,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],R10",write stack
dup_mmap,0x2c7,0xffffffff812bb330,CALL 0xffffffff812bb330,direct call
dup_mmap,0x2d3,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
dup_mmap,0x2f1,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
dup_mmap,0x2fd,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
dup_mmap,0x301,0xffffffff81c7ad10,CALL 0xffffffff81c7ad10,direct call
dup_mmap,0x30a,0xffffffff81c7b0e0,CALL 0xffffffff81c7b0e0,direct call
dup_mmap,0x344,ctx->rax,CALL RAX,in-direct call
dup_mmap,0x3a2,0xffffffff812e3b80,CALL 0xffffffff812e3b80,direct call
dup_mmap,0x3b3,0xffffffff81314790,CALL 0xffffffff81314790,direct call
dup_mmap,0x3bb,0xffffffff810a16d0,CALL 0xffffffff810a16d0,direct call
dup_mmap,0x3d8,0xffffffff81632ff0,CALL 0xffffffff81632ff0,direct call
dup_mmap,0x46a,0xffffffff812d79b0,CALL 0xffffffff812d79b0,direct call
dup_mmap,0x47a,0xffffffff812e3f00,CALL 0xffffffff812e3f00,direct call
dup_mmap,0x493,0xffffffff81307fb0,CALL 0xffffffff81307fb0,direct call
dup_mmap,0x4a3,0xffffffff812c8f80,CALL 0xffffffff812c8f80,direct call
dup_mmap,0x4be,ctx->rax,CALL RAX,in-direct call
dup_mmap,0x506,0xffffffff8133fdb0,CALL 0xffffffff8133fdb0,direct call
dup_mmap,0x531,0xffffffff8131e7d0,CALL 0xffffffff8131e7d0,direct call
dup_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dup_mm,0x21,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
dup_mm,0x3d,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
dup_mm,0x4d,0xffffffff810a1000,CALL 0xffffffff810a1000,direct call
dup_mm,0x61,0xffffffff810a1b10,CALL 0xffffffff810a1b10,direct call
dup_mm,0xa1,ctx->r12 + 0xa8,"MOV qword ptr [R12 + 0xa8],RAX",write other [TODO]
dup_mm,0xb1,ctx->r12 + 0xb0,"MOV qword ptr [R12 + 0xb0],RAX",write other [TODO]
dup_mm,0xca,0xffffffff81147d60,CALL 0xffffffff81147d60,direct call
dup_mm,0xdd,,RET,ret
dup_mm,0xde,ctx->r12 + 0x2f0,"MOV qword ptr [R12 + 0x2f0],0x0",write other [TODO]
dup_mm,0xea,ctx->r12 + 0x390,"MOV qword ptr [R12 + 0x390],0x0",write other [TODO]
dup_mm,0xf6,0xffffffff82000828,CALL 0xffffffff82000828,direct call
dup_mm,0x110,,RET,ret
dup_mm,0x114,0xffffffff810a0e90,CALL 0xffffffff810a0e90,direct call
get_task_exe_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_task_exe_file,0x1b,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
get_task_exe_file,0x35,0xffffffff810a18d0,CALL 0xffffffff810a18d0,direct call
get_task_exe_file,0x40,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
get_task_exe_file,0x4e,,RET,ret
mm_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mm_access,0x26,0xffffffff81d10b80,CALL 0xffffffff81d10b80,direct call
mm_access,0x3f,,RET,ret
mm_access,0x4a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
mm_access,0x6f,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mm_access,0x8c,0xffffffff810b28b0,CALL 0xffffffff810b28b0,direct call
mm_access,0x95,0xffffffff82000828,CALL 0xffffffff82000828,direct call
mm_access,0xb5,0xffffffff81113020,CALL 0xffffffff81113020,direct call
mm_access,0xc7,,RET,ret
mm_access,0xce,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mm_access,0xd8,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mm_access,0xe9,0xffffffff810a0e90,CALL 0xffffffff810a0e90,direct call
exit_mm_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exit_mm_release,0x13,0xffffffff81169f70,CALL 0xffffffff81169f70,direct call
exit_mm_release,0x1e,0xffffffff810a0bd0,CALL 0xffffffff810a0bd0,direct call
exit_mm_release,0x28,,RET,ret
exec_mm_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exec_mm_release,0x13,0xffffffff81169f00,CALL 0xffffffff81169f00,direct call
exec_mm_release,0x1e,0xffffffff810a0bd0,CALL 0xffffffff810a0bd0,direct call
exec_mm_release,0x28,,RET,ret
__cleanup_sighand,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cleanup_sighand,0x26,,RET,ret
__cleanup_sighand,0x27,0xffffffff813c3580,CALL 0xffffffff813c3580,direct call
__cleanup_sighand,0x36,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
__cleanup_sighand,0x40,,RET,ret
__cleanup_sighand,0x4a,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__cleanup_sighand,0x54,,RET,ret
copy_process,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_process,0x1c,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],ESI",write stack
copy_process,0x32,ctx->rsp + 0x58,"MOV qword ptr [RSP + 0x58],RAX",write stack
copy_process,0xb0,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
copy_process,0xb7,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],R8D",write stack
copy_process,0xce,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
copy_process,0x10a,,RET,ret
copy_process,0x126,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RAX",write stack
copy_process,0x136,ctx->rsp + 0x40,"MOV qword ptr [RSP + 0x40],0x0",write stack
copy_process,0x13f,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],0x0",write stack
copy_process,0x148,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],0x0",write stack
copy_process,0x161,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],R8D",write stack
copy_process,0x166,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
copy_process,0x188,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],RDX",write stack
copy_process,0x192,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RCX",write other [TODO]
copy_process,0x196,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RCX",write other [TODO]
copy_process,0x19e,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],RAX",write stack
copy_process,0x1a3,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],R8D",write stack
copy_process,0x1b1,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
copy_process,0x1bd,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
copy_process,0x1eb,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],R8D",write stack
copy_process,0x1f0,0xffffffff81324450,CALL 0xffffffff81324450,direct call
copy_process,0x207,0xffffffff810419d0,CALL 0xffffffff810419d0,direct call
copy_process,0x232,ctx->rsp + 0x20,"MOV dword ptr [RSP + 0x20],R8D",write stack
copy_process,0x237,0xffffffff812f1f80,CALL 0xffffffff812f1f80,direct call
copy_process,0x251,ctx->r14 + 0x1440,"MOV dword ptr [R14 + 0x1440],0x1",write other [TODO]
copy_process,0x26e,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],RDI",write other [TODO]
copy_process,0x272,0xffffffff810a0b50,CALL 0xffffffff810a0b50,direct call
copy_process,0x277,ctx->r14 + 0xc60,"MOV qword ptr [R14 + 0xc60],0x0",write other [TODO]
copy_process,0x291,ctx->rax,"MOV qword ptr [RAX],0x57ac6e9d",write other [TODO]
copy_process,0x29e,0xffffffff817b71e0,CALL 0xffffffff817b71e0,direct call
copy_process,0x2aa,ctx->r14 + 0x9b8,"MOV qword ptr [R14 + 0x9b8],RAX",write other [TODO]
copy_process,0x2ce,0xffffffff810e2580,CALL 0xffffffff810e2580,direct call
copy_process,0x2db,ctx->r14 + 0x1350,"MOV dword ptr [R14 + 0x1350],0x2",write other [TODO]
copy_process,0x2f5,ctx->r14 + 0x28,"MOV dword ptr [R14 + 0x28],0x1",write other [TODO]
copy_process,0x2fd,ctx->r14 + 0x408,"MOV dword ptr [R14 + 0x408],0x0",write other [TODO]
copy_process,0x308,ctx->r14 + 0x1360,"MOV qword ptr [R14 + 0x1360],0x0",write other [TODO]
copy_process,0x313,ctx->r14 + 0x1368,"MOV qword ptr [R14 + 0x1368],0x0",write other [TODO]
copy_process,0x31e,ctx->r14 + 0xca0,"MOV qword ptr [R14 + 0xca0],0x0",write other [TODO]
copy_process,0x329,ctx->r14 + 0xa98,"MOV qword ptr [R14 + 0xa98],0x0",write other [TODO]
copy_process,0x334,ctx->r14 + 0x1384,"MOV dword ptr [R14 + 0x1384],0x0",write other [TODO]
copy_process,0x33f,ctx->r14 + 0x13f0,"MOV qword ptr [R14 + 0x13f0],0x0",write other [TODO]
copy_process,0x34a,ctx->r14 + 0x13e8,"MOV qword ptr [R14 + 0x13e8],0x0",write other [TODO]
copy_process,0x355,ctx->r14 + 0x2c,"MOV dword ptr [R14 + 0x2c],EAX",write other [TODO]
copy_process,0x362,ctx->r14 + 0x2c,"MOV dword ptr [R14 + 0x2c],EAX",write other [TODO]
copy_process,0x373,ctx->r14 + 0xbf8,"MOV qword ptr [R14 + 0xbf8],-0x40101",write other [TODO]
copy_process,0x38d,ctx->r14 + 0xa88,"MOV qword ptr [R14 + 0xa88],RAX",write other [TODO]
copy_process,0x3a6,ctx->r14 + 0xa90,"MOV qword ptr [R14 + 0xa90],RAX",write other [TODO]
copy_process,0x3ad,0xffffffff811ddf00,CALL 0xffffffff811ddf00,direct call
copy_process,0x3b8,ctx->r14 + 0xc9c,"MOV dword ptr [R14 + 0xc9c],0x0",write other [TODO]
copy_process,0x3c3,ctx->r14 + 0xca8,"MOV qword ptr [R14 + 0xca8],0x0",write other [TODO]
copy_process,0x3ce,ctx->r14 + 0xcb0,"MOV qword ptr [R14 + 0xcb0],0x0",write other [TODO]
copy_process,0x3d9,ctx->r14 + 0xcb8,"MOV qword ptr [R14 + 0xcb8],0x0",write other [TODO]
copy_process,0x3e4,ctx->r14 + 0xcc0,"MOV qword ptr [R14 + 0xcc0],0x0",write other [TODO]
copy_process,0x3ef,0xffffffff810d43f0,CALL 0xffffffff810d43f0,direct call
copy_process,0x413,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDX",write stack
copy_process,0x418,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
copy_process,0x42b,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
copy_process,0x43a,0xffffffff810d71d0,CALL 0xffffffff810d71d0,direct call
copy_process,0x45c,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
copy_process,0x492,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
copy_process,0x4a5,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
copy_process,0x4b4,0xffffffff810d7050,CALL 0xffffffff810d7050,direct call
copy_process,0x4bc,0xffffffff810d42a0,CALL 0xffffffff810d42a0,direct call
copy_process,0x4ca,ctx->r14 + 0x18,"MOV dword ptr [R14 + 0x18],0x80",write other [TODO]
copy_process,0x4d2,0xffffffff810a0b50,CALL 0xffffffff810a0b50,direct call
copy_process,0x4da,0xffffffff810a1750,CALL 0xffffffff810a1750,direct call
copy_process,0x4ed,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
copy_process,0x505,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
copy_process,0x51a,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
copy_process,0x52e,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
copy_process,0x536,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
copy_process,0x53a,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],0x0",write stack
copy_process,0x543,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],0x0",write stack
copy_process,0x55c,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
copy_process,0x581,ctx->r14 + 0x418,"MOV qword ptr [R14 + 0x418],RAX",write other [TODO]
copy_process,0x593,ctx->r14 + 0x1378,"MOV qword ptr [R14 + 0x1378],0x0",write other [TODO]
copy_process,0x5ac,ctx->r14 + 0x834,"MOV qword ptr [R14 + 0x834],0x0",write other [TODO]
copy_process,0x5be,ctx->r14 + 0x860,"MOV byte ptr [R14 + 0x860],0x0",write other [TODO]
copy_process,0x5ce,ctx->r14 + 0x850,"MOV qword ptr [R14 + 0x850],0x0",write other [TODO]
copy_process,0x5de,ctx->r14 + 0x864,"MOV dword ptr [R14 + 0x864],0xffffffff",write other [TODO]
copy_process,0x5ec,ctx->r14 + 0x2c,"MOV dword ptr [R14 + 0x2c],EAX",write other [TODO]
copy_process,0x5f7,ctx->r14 + 0x9d0,"MOV qword ptr [R14 + 0x9d0],RAX",write other [TODO]
copy_process,0x5fe,ctx->r14 + 0x9d8,"MOV qword ptr [R14 + 0x9d8],RAX",write other [TODO]
copy_process,0x60c,ctx->r14 + 0x9e0,"MOV qword ptr [R14 + 0x9e0],RAX",write other [TODO]
copy_process,0x613,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RAX",write stack
copy_process,0x618,ctx->r14 + 0x9e8,"MOV qword ptr [R14 + 0x9e8],RAX",write other [TODO]
copy_process,0x626,ctx->r14 + 0x840,"MOV qword ptr [R14 + 0x840],RAX",write other [TODO]
copy_process,0x62d,ctx->r14 + 0x848,"MOV qword ptr [R14 + 0x848],RAX",write other [TODO]
copy_process,0x63b,ctx->r14 + 0x868,"MOV qword ptr [R14 + 0x868],RAX",write other [TODO]
copy_process,0x642,ctx->r14 + 0x870,"MOV qword ptr [R14 + 0x870],RAX",write other [TODO]
copy_process,0x650,ctx->r14 + 0x888,"MOV qword ptr [R14 + 0x888],RAX",write other [TODO]
copy_process,0x657,ctx->r14 + 0x890,"MOV qword ptr [R14 + 0x890],RAX",write other [TODO]
copy_process,0x665,ctx->r14 + 0x898,"MOV qword ptr [R14 + 0x898],RAX",write other [TODO]
copy_process,0x66c,ctx->r14 + 0x8a0,"MOV qword ptr [R14 + 0x8a0],RAX",write other [TODO]
copy_process,0x67a,ctx->r14 + 0xc10,"MOV qword ptr [R14 + 0xc10],RAX",write other [TODO]
copy_process,0x681,ctx->r14 + 0x878,"MOV dword ptr [R14 + 0x878],0x0",write other [TODO]
copy_process,0x68c,ctx->r14 + 0xc18,"MOV qword ptr [R14 + 0xc18],RAX",write other [TODO]
copy_process,0x693,ctx->r14 + 0x880,"MOV dword ptr [R14 + 0x880],0x0",write other [TODO]
copy_process,0x69e,ctx->r14 + 0xa80,"MOV qword ptr [R14 + 0xa80],0x0",write other [TODO]
copy_process,0x6a9,ctx->r14 + 0xc98,"MOV dword ptr [R14 + 0xc98],0x0",write other [TODO]
copy_process,0x6b4,ctx->r14 + 0xc20,"MOV qword ptr [R14 + 0xc20],0x0",write other [TODO]
copy_process,0x6bf,ctx->r14 + 0xab0,"MOV qword ptr [R14 + 0xab0],0x0",write other [TODO]
copy_process,0x6ca,ctx->r14 + 0xaa8,"MOV qword ptr [R14 + 0xaa8],0x0",write other [TODO]
copy_process,0x6d5,ctx->r14 + 0xaa0,"MOV qword ptr [R14 + 0xaa0],0x0",write other [TODO]
copy_process,0x6e0,ctx->r14 + 0xac0,"MOV qword ptr [R14 + 0xac0],0x0",write other [TODO]
copy_process,0x6eb,ctx->r14 + 0xab8,"MOV qword ptr [R14 + 0xab8],0x0",write other [TODO]
copy_process,0x6f6,ctx->r14 + 0xac8,"MOV dword ptr [R14 + 0xac8],0x0",write other [TODO]
copy_process,0x70a,ctx->r14 + 0xbd8,"MOV qword ptr [R14 + 0xbd8],0x0",write other [TODO]
copy_process,0x715,ctx->r14 + 0x930,"MOV qword ptr [R14 + 0x930],0x0",write other [TODO]
copy_process,0x720,ctx->r14 + 0x938,"MOV qword ptr [R14 + 0x938],0x0",write other [TODO]
copy_process,0x72b,ctx->r14 + 0x940,"MOV dword ptr [R14 + 0x940],0x0",write other [TODO]
copy_process,0x73d,ctx->r14 + 0xd48,"MOV dword ptr [R14 + 0xd48],0x0",write other [TODO]
copy_process,0x748,ctx->r14 + 0x13a0,"MOV qword ptr [R14 + 0x13a0],RAX",write other [TODO]
copy_process,0x758,0xffffffff811b4170,CALL 0xffffffff811b4170,direct call
copy_process,0x775,ctx->r14 + 0xb00,"MOV qword ptr [R14 + 0xb00],-0x1",write other [TODO]
copy_process,0x780,ctx->r14 + 0xb18,"MOV qword ptr [R14 + 0xb18],-0x1",write other [TODO]
copy_process,0x78b,ctx->r14 + 0xb30,"MOV qword ptr [R14 + 0xb30],-0x1",write other [TODO]
copy_process,0x796,ctx->r14 + 0xcf0,"MOV qword ptr [R14 + 0xcf0],0x0",write other [TODO]
copy_process,0x7a1,ctx->r14 + 0xc48,"MOV qword ptr [R14 + 0xc48],0x0",write other [TODO]
copy_process,0x7ac,0xffffffff8117fe10,CALL 0xffffffff8117fe10,direct call
copy_process,0x7c9,0xffffffff813168e0,CALL 0xffffffff813168e0,direct call
copy_process,0x7ce,ctx->r14 + 0xea8,"MOV qword ptr [R14 + 0xea8],RAX",write other [TODO]
copy_process,0x7f1,ctx->r14 + 0xdf0,"MOV dword ptr [R14 + 0xdf0],0xffffffff",write other [TODO]
copy_process,0x7fc,ctx->r14 + 0xde8,"MOV qword ptr [R14 + 0xde8],RAX",write other [TODO]
copy_process,0x803,ctx->r14 + 0x1408,"MOV dword ptr [R14 + 0x1408],0x0",write other [TODO]
copy_process,0x80e,ctx->r14 + 0x1450,"MOV qword ptr [R14 + 0x1450],0x0",write other [TODO]
copy_process,0x819,ctx->r14 + 0x1458,"MOV qword ptr [R14 + 0x1458],0x0",write other [TODO]
copy_process,0x824,0xffffffff810e5120,CALL 0xffffffff810e5120,direct call
copy_process,0x83a,0xffffffff81276990,CALL 0xffffffff81276990,direct call
copy_process,0x84d,0xffffffff81199dd0,CALL 0xffffffff81199dd0,direct call
copy_process,0x86a,ctx->r14 + 0xba8,"MOV qword ptr [R14 + 0xba8],RAX",write other [TODO]
copy_process,0x871,ctx->r14 + 0xbb0,"MOV qword ptr [R14 + 0xbb0],RAX",write other [TODO]
copy_process,0x878,0xffffffff815044b0,CALL 0xffffffff815044b0,direct call
copy_process,0x88a,0xffffffff814e87e0,CALL 0xffffffff814e87e0,direct call
copy_process,0x8a6,ctx->rsp + 0x3c,"MOV dword ptr [RSP + 0x3c],0x0",write stack
copy_process,0x8d8,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x8dd,0xffffffff814e88c0,CALL 0xffffffff814e88c0,direct call
copy_process,0x8ea,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x8ef,0xffffffff81504570,CALL 0xffffffff81504570,direct call
copy_process,0x90a,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x90f,0xffffffff81276660,CALL 0xffffffff81276660,direct call
copy_process,0x928,0xffffffff81314790,CALL 0xffffffff81314790,direct call
copy_process,0x940,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
copy_process,0x945,ctx->r14 + 0x1378,"MOV qword ptr [R14 + 0x1378],0x0",write other [TODO]
copy_process,0x958,0xffffffff810cdb50,CALL 0xffffffff810cdb50,direct call
copy_process,0x974,0xffffffff810cd860,CALL 0xffffffff810cd860,direct call
copy_process,0x98d,0xffffffff811b26d0,CALL 0xffffffff811b26d0,direct call
copy_process,0x99c,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
copy_process,0x9ae,ctx->r14 + 0xea8,"MOV qword ptr [R14 + 0xea8],0x0",write other [TODO]
copy_process,0x9c1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
copy_process,0x9c9,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x9ce,0xffffffff81199f70,CALL 0xffffffff81199f70,direct call
copy_process,0x9e5,0xffffffff8138b6f0,CALL 0xffffffff8138b6f0,direct call
copy_process,0x9f3,ctx->r14 + 0xbd0,"MOV qword ptr [R14 + 0xbd0],RAX",write other [TODO]
copy_process,0xa1b,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RDI",write stack
copy_process,0xa20,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
copy_process,0xa37,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
copy_process,0xa55,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
copy_process,0xa5a,ctx->r14 + 0xbf0,"MOV qword ptr [R14 + 0xbf0],RAX",write other [TODO]
copy_process,0xa6d,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],0x1",write other [TODO]
copy_process,0xa88,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
copy_process,0xa8d,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
copy_process,0xaaa,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
copy_process,0xab4,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
copy_process,0xadc,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
copy_process,0xae1,ctx->r14 + 0xbe8,"MOV qword ptr [R14 + 0xbe8],RAX",write other [TODO]
copy_process,0xafe,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],0x1",write other [TODO]
copy_process,0xb10,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
copy_process,0xb22,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
copy_process,0xb26,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
copy_process,0xb2e,ctx->rbx,"MOV dword ptr [RBX],0x1",write other [TODO]
copy_process,0xb34,ctx->r14 + 0xa70,"MOV qword ptr [R14 + 0xa70],RAX",write other [TODO]
copy_process,0xb3b,ctx->r14 + 0xa78,"MOV qword ptr [R14 + 0xa78],RAX",write other [TODO]
copy_process,0xb42,0xffffffff81103c70,CALL 0xffffffff81103c70,direct call
copy_process,0xb4b,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],R14",write other [TODO]
copy_process,0xb54,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],RAX",write other [TODO]
copy_process,0xb64,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RAX",write other [TODO]
copy_process,0xb6f,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
copy_process,0xb76,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],0x0",write other [TODO]
copy_process,0xb7e,ctx->rbx + 0x90,"MOV qword ptr [RBX + 0x90],RAX",write other [TODO]
copy_process,0xb85,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],0x0",write other [TODO]
copy_process,0xb8d,ctx->rbx + 0x1a8,"MOV qword ptr [RBX + 0x1a8],0x0",write other [TODO]
copy_process,0xb98,ctx->rbx + 0x1e8,"MOV qword ptr [RBX + 0x1e8],0x0",write other [TODO]
copy_process,0xba3,ctx->rbx + 0x1e0,"MOV qword ptr [RBX + 0x1e0],0x0",write other [TODO]
copy_process,0xbae,ctx->rbx + 0x1f0,"MOV dword ptr [RBX + 0x1f0],0x0",write other [TODO]
copy_process,0xbb8,0xffffffff811552d0,CALL 0xffffffff811552d0,direct call
copy_process,0xbbd,ctx->rbx + 0xc0,"MOV qword ptr [RBX + 0xc0],-0x7ee9c090",write other [TODO]
copy_process,0xbd8,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
copy_process,0xbe4,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
copy_process,0xc0b,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
copy_process,0xc1c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
copy_process,0xc2f,0xffffffff81162540,CALL 0xffffffff81162540,direct call
copy_process,0xc37,0xffffffff8178ae00,CALL 0xffffffff8178ae00,direct call
copy_process,0xc3f,0xffffffff81111e30,CALL 0xffffffff81111e30,direct call
copy_process,0xc65,ctx->wordctx->ptrctx->rbx + 0x3fa,"MOV word ptr [RBX + 0x3fa],DX",write other [TODO]
copy_process,0xc81,ctx->wordctx->ptrctx->rbx + 0x3fc,"MOV word ptr [RBX + 0x3fc],AX",write other [TODO]
copy_process,0xc88,0xffffffff81112440,CALL 0xffffffff81112440,direct call
copy_process,0xca2,0xffffffff81112b60,CALL 0xffffffff81112b60,direct call
copy_process,0xca7,ctx->r14 + 0xaf8,"MOV qword ptr [R14 + 0xaf8],0x0",write other [TODO]
copy_process,0xcb2,ctx->r14 + 0xaf0,"MOV qword ptr [R14 + 0xaf0],0x0",write other [TODO]
copy_process,0xcbd,ctx->r14 + 0xad8,"MOV qword ptr [R14 + 0xad8],0x0",write other [TODO]
copy_process,0xcc8,ctx->r14 + 0xad0,"MOV qword ptr [R14 + 0xad0],0x0",write other [TODO]
copy_process,0xcd3,ctx->r14 + 0xbb8,"MOV qword ptr [R14 + 0xbb8],0x0",write other [TODO]
copy_process,0xcde,ctx->r14 + 0xbc0,"MOV qword ptr [R14 + 0xbc0],0x0",write other [TODO]
copy_process,0xce9,ctx->r14 + 0x920,"MOV qword ptr [R14 + 0x920],0x0",write other [TODO]
copy_process,0xcf4,ctx->r14 + 0x928,"MOV qword ptr [R14 + 0x928],0x0",write other [TODO]
copy_process,0xd25,ctx->r14 + 0x920,"MOV qword ptr [R14 + 0x920],RSI",write other [TODO]
copy_process,0xd2c,ctx->r14 + 0x928,"MOV qword ptr [R14 + 0x928],RSI",write other [TODO]
copy_process,0xd39,0xffffffff810d1d90,CALL 0xffffffff810d1d90,direct call
copy_process,0xd62,0xffffffff815a5b70,CALL 0xffffffff815a5b70,direct call
copy_process,0xd75,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0xd7a,0xffffffff810d27d0,CALL 0xffffffff810d27d0,direct call
copy_process,0xd9d,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0xda2,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
copy_process,0xdbf,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0xdc4,0xffffffff810a2380,CALL 0xffffffff810a2380,direct call
copy_process,0xdd1,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0xdd6,0xffffffff813a8de0,CALL 0xffffffff813a8de0,direct call
copy_process,0xde3,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0xde8,0xffffffff8138baa0,CALL 0xffffffff8138baa0,direct call
copy_process,0xdfa,0xffffffff813a8e80,CALL 0xffffffff813a8e80,direct call
copy_process,0xdff,ctx->r14 + 0xbc8,"MOV qword ptr [R14 + 0xbc8],RAX",write other [TODO]
copy_process,0xe1d,0xffffffff81041a70,CALL 0xffffffff81041a70,direct call
copy_process,0xe3e,ctx->rsp + 0x10,"MOV dword ptr [RSP + 0x10],EAX",write stack
copy_process,0xe4d,0xffffffff810c9e90,CALL 0xffffffff810c9e90,direct call
copy_process,0xe7a,ctx->rsp,"MOV dword ptr [RSP],R11D",write stack
copy_process,0xe7e,0xffffffff8138b2d0,CALL 0xffffffff8138b2d0,direct call
copy_process,0xe96,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],EAX",write stack
copy_process,0xea8,0xffffffff813c2ac0,CALL 0xffffffff813c2ac0,direct call
copy_process,0xebc,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
copy_process,0xef1,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
copy_process,0xf1d,ctx->r14 + 0xe28,"MOV qword ptr [R14 + 0xe28],RAX",write other [TODO]
copy_process,0xf24,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],R11D",write stack
copy_process,0xf29,ctx->r14 + 0xe30,"MOV qword ptr [R14 + 0xe30],RAX",write other [TODO]
copy_process,0xf30,ctx->r14 + 0xcd8,"MOV qword ptr [R14 + 0xcd8],0x0",write other [TODO]
copy_process,0xf3b,ctx->r14 + 0xe18,"MOV qword ptr [R14 + 0xe18],0x0",write other [TODO]
copy_process,0xf46,ctx->r14 + 0xe20,"MOV qword ptr [R14 + 0xe20],0x0",write other [TODO]
copy_process,0xf51,ctx->r14 + 0xe38,"MOV qword ptr [R14 + 0xe38],0x0",write other [TODO]
copy_process,0xf5c,ctx->r14 + 0xe60,"MOV dword ptr [R14 + 0xe60],0x0",write other [TODO]
copy_process,0xf67,0xffffffff81112440,CALL 0xffffffff81112440,direct call
copy_process,0xf81,ctx->r14 + 0xc28,"MOV qword ptr [R14 + 0xc28],0x0",write other [TODO]
copy_process,0xf8c,ctx->r14 + 0xc30,"MOV qword ptr [R14 + 0xc30],0x0",write other [TODO]
copy_process,0xf97,ctx->r14 + 0xc38,"MOV dword ptr [R14 + 0xc38],0x2",write other [TODO]
copy_process,0xfa5,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],R11D",write stack
copy_process,0xfaa,0xffffffff81048f60,CALL 0xffffffff81048f60,direct call
copy_process,0xfd0,ctx->r14 + 0x9b0,"MOV dword ptr [R14 + 0x9b0],R11D",write other [TODO]
copy_process,0xfed,ctx->r14 + 0x9f0,"MOV qword ptr [R14 + 0x9f0],RDX",write other [TODO]
copy_process,0x1003,ctx->r14 + 0x9b4,"MOV dword ptr [R14 + 0x9b4],R11D",write other [TODO]
copy_process,0x100a,ctx->r14 + 0x1390,"MOV qword ptr [R14 + 0x1390],0x0",write other [TODO]
copy_process,0x1019,ctx->r14 + 0x1388,"MOV qword ptr [R14 + 0x1388],RAX",write other [TODO]
copy_process,0x1027,ctx->r14 + 0xa60,"MOV qword ptr [R14 + 0xa60],RAX",write other [TODO]
copy_process,0x102e,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RAX",write stack
copy_process,0x1033,ctx->r14 + 0xa68,"MOV qword ptr [R14 + 0xa68],RAX",write other [TODO]
copy_process,0x103a,ctx->r14 + 0x950,"MOV dword ptr [R14 + 0x950],0x0",write other [TODO]
copy_process,0x1045,ctx->r14 + 0xc40,"MOV qword ptr [R14 + 0xc40],0x0",write other [TODO]
copy_process,0x1050,0xffffffff81162820,CALL 0xffffffff81162820,direct call
copy_process,0x105b,ctx->r14 + 0x1498,"MOV qword ptr [R14 + 0x1498],0x0",write other [TODO]
copy_process,0x1066,ctx->r14 + 0x14a0,"MOV qword ptr [R14 + 0x14a0],0x0",write other [TODO]
copy_process,0x1071,0xffffffff81180550,CALL 0xffffffff81180550,direct call
copy_process,0x1087,0xffffffff810e5310,CALL 0xffffffff810e5310,direct call
copy_process,0x108c,0xffffffff81157c00,CALL 0xffffffff81157c00,direct call
copy_process,0x1096,ctx->r14 + 0xae0,"MOV qword ptr [R14 + 0xae0],RAX",write other [TODO]
copy_process,0x109d,0xffffffff81157ca0,CALL 0xffffffff81157ca0,direct call
copy_process,0x10a9,ctx->r14 + 0xae8,"MOV qword ptr [R14 + 0xae8],RAX",write other [TODO]
copy_process,0x10b0,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
copy_process,0x10d2,ctx->r14 + 0x9c0,"MOV qword ptr [R14 + 0x9c0],RAX",write other [TODO]
copy_process,0x10e0,ctx->r14 + 0xc88,"MOV qword ptr [R14 + 0xc88],RAX",write other [TODO]
copy_process,0x1102,ctx->r14 + 0x94c,"MOV dword ptr [R14 + 0x94c],EAX",write other [TODO]
copy_process,0x1109,0xffffffff81141600,CALL 0xffffffff81141600,direct call
copy_process,0x1111,0xffffffff81110c60,CALL 0xffffffff81110c60,direct call
copy_process,0x1126,ctx->rsp,"MOV qword ptr [RSP],RCX",write stack
copy_process,0x112a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
copy_process,0x1147,ctx->rsp,"MOV qword ptr [RSP],RCX",write stack
copy_process,0x114b,0xffffffff811b0320,CALL 0xffffffff811b0320,direct call
copy_process,0x1162,ctx->r14 + 0xc58,"MOV qword ptr [R14 + 0xc58],RAX",write other [TODO]
copy_process,0x1169,ctx->r14 + 0xc60,"MOV qword ptr [R14 + 0xc60],RDX",write other [TODO]
copy_process,0x11a1,ctx->r14 + 0xf30,"MOV qword ptr [R14 + 0xf30],0x0",write other [TODO]
copy_process,0x11ae,ctx->r14 + 0xf38,"MOV dword ptr [R14 + 0xf38],0x0",write other [TODO]
copy_process,0x11b9,ctx->r14 + 0xf40,"MOV qword ptr [R14 + 0xf40],RAX",write other [TODO]
copy_process,0x11fe,ctx->r14 + 0xa20,"MOV qword ptr [R14 + 0xa20],0x0",write other [TODO]
copy_process,0x1209,ctx->r14 + 0xa28,"MOV qword ptr [R14 + 0xa28],0x0",write other [TODO]
copy_process,0x1214,ctx->r14 + 0xa30,"MOV qword ptr [R14 + 0xa30],0x0",write other [TODO]
copy_process,0x121f,ctx->r14 + 0xa38,"MOV qword ptr [R14 + 0xa38],0x0",write other [TODO]
copy_process,0x122a,ctx->r14 + 0xa40,"MOV qword ptr [R14 + 0xa40],0x0",write other [TODO]
copy_process,0x1235,ctx->r14 + 0xa48,"MOV qword ptr [R14 + 0xa48],0x0",write other [TODO]
copy_process,0x1240,ctx->r14 + 0xa50,"MOV qword ptr [R14 + 0xa50],0x0",write other [TODO]
copy_process,0x124b,ctx->r14 + 0xa58,"MOV qword ptr [R14 + 0xa58],0x0",write other [TODO]
copy_process,0x1285,ctx->r14 + 0xa08,"MOV qword ptr [R14 + 0xa08],RDX",write other [TODO]
copy_process,0x128c,ctx->r14 + 0x958,"MOV qword ptr [R14 + 0x958],0x0",write other [TODO]
copy_process,0x1297,ctx->r14 + 0xa10,"MOV qword ptr [R14 + 0xa10],RDX",write other [TODO]
copy_process,0x129e,ctx->r14 + 0x30,"MOV dword ptr [R14 + 0x30],0x0",write other [TODO]
copy_process,0x12a6,ctx->r14 + 0x9f8,"MOV qword ptr [R14 + 0x9f8],RAX",write other [TODO]
copy_process,0x12ad,ctx->r14 + 0x9c8,"MOV qword ptr [R14 + 0x9c8],RCX",write other [TODO]
copy_process,0x12b4,ctx->r14 + 0xa00,"MOV qword ptr [R14 + 0xa00],RAX",write other [TODO]
copy_process,0x12ce,ctx->r14 + 0xb68,"MOV qword ptr [R14 + 0xb68],0x0",write other [TODO]
copy_process,0x12e1,ctx->r14 + 0xa18,"MOV qword ptr [R14 + 0xa18],R12",write other [TODO]
copy_process,0x12f5,ctx->rax + 0x170,"MOV qword ptr [RAX + 0x170],R12",write other [TODO]
copy_process,0x131a,ctx->rdx + 0x178,"MOV qword ptr [RDX + 0x178],RCX",write other [TODO]
copy_process,0x1336,ctx->rax + 0x180,"MOV qword ptr [RAX + 0x180],RDX",write other [TODO]
copy_process,0x135f,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],RDX",write other [TODO]
copy_process,0x1389,ctx->rsp + 0x30,"MOV qword ptr [RSP + 0x30],RAX",write stack
copy_process,0x138e,0xffffffff810a0b90,CALL 0xffffffff810a0b90,direct call
copy_process,0x1398,ctx->rax + 0x198,"MOV qword ptr [RAX + 0x198],R12",write other [TODO]
copy_process,0x13cc,ctx->rcx + 0x80,"MOV byte ptr [RCX + 0x80],AL",write other [TODO]
copy_process,0x13eb,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
copy_process,0x13ef,ctx->r14 + 0x9e0,"MOV qword ptr [R14 + 0x9e0],RAX",write other [TODO]
copy_process,0x13fd,ctx->r14 + 0x9e8,"MOV qword ptr [R14 + 0x9e8],RDX",write other [TODO]
copy_process,0x1404,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
copy_process,0x1407,ctx->rdx,"MOV RDX,qword ptr [0xffffffff82e19298]",write other [TODO]
copy_process,0x140e,ctx->r14 + 0x8d0,"MOV qword ptr [R14 + 0x8d0],-0x7d1e6d70",write other [TODO]
copy_process,0x1419,ctx->r14 + 0x8d8,"MOV qword ptr [R14 + 0x8d8],RDX",write other [TODO]
copy_process,0x1420,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
copy_process,0x142b,0xffffffff82e19298,"MOV qword ptr [0xffffffff82e19298],RAX",write .data
copy_process,0x1432,0xffffffff810ca260,CALL 0xffffffff810ca260,direct call
copy_process,0x143f,0xffffffff810ca260,CALL 0xffffffff810ca260,direct call
copy_process,0x144c,0xffffffff810ca260,CALL 0xffffffff810ca260,direct call
copy_process,0x145e,0xffffffff810ca260,CALL 0xffffffff810ca260,direct call
copy_process,0x1481,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
copy_process,0x1489,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
copy_process,0x148d,ctx->rsp + 0x48,"MOV qword ptr [RSP + 0x48],0x0",write stack
copy_process,0x1496,ctx->rsp + 0x50,"MOV qword ptr [RSP + 0x50],0x0",write stack
copy_process,0x14b0,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
copy_process,0x14cf,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
copy_process,0x14e3,0xffffffff8138a700,CALL 0xffffffff8138a700,direct call
copy_process,0x14eb,0xffffffff817eef30,CALL 0xffffffff817eef30,direct call
copy_process,0x14f3,0xffffffff810e5460,CALL 0xffffffff810e5460,direct call
copy_process,0x14fe,0xffffffff8117fe90,CALL 0xffffffff8117fe90,direct call
copy_process,0x1506,0xffffffff81274400,CALL 0xffffffff81274400,direct call
copy_process,0x1516,0xffffffff8127ce90,CALL 0xffffffff8127ce90,direct call
copy_process,0x154a,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
copy_process,0x1585,ctx->wordctx->ptrctx->rdx + 0x3fa,"MOV word ptr [RDX + 0x3fa],CX",write other [TODO]
copy_process,0x15a1,ctx->wordctx->ptrctx->rdx + 0x3fc,"MOV word ptr [RDX + 0x3fc],AX",write other [TODO]
copy_process,0x15a8,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
copy_process,0x161b,ctx->r14 + 0x30,"MOV dword ptr [R14 + 0x30],EDX",write other [TODO]
copy_process,0x162d,0xffffffff810b2700,CALL 0xffffffff810b2700,direct call
copy_process,0x1656,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],R14",write other [TODO]
copy_process,0x1681,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R8D",write stack
copy_process,0x1686,0xffffffff81110d00,CALL 0xffffffff81110d00,direct call
copy_process,0x169b,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
copy_process,0x16a7,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
copy_process,0x16b2,0xffffffff8117fe40,CALL 0xffffffff8117fe40,direct call
copy_process,0x16d0,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R8D",write stack
copy_process,0x16d5,0xffffffff810c9d30,CALL 0xffffffff810c9d30,direct call
copy_process,0x16e2,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R8D",write stack
copy_process,0x16e7,0xffffffff81041a20,CALL 0xffffffff81041a20,direct call
copy_process,0x1702,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x1707,0xffffffff815a5ab0,CALL 0xffffffff815a5ab0,direct call
copy_process,0x171e,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R8D",write stack
copy_process,0x1723,0xffffffff81366540,CALL 0xffffffff81366540,direct call
copy_process,0x172a,0xffffffff8138ac80,CALL 0xffffffff8138ac80,direct call
copy_process,0x1772,0xffffffff810a0b90,CALL 0xffffffff810a0b90,direct call
copy_process,0x177a,0xffffffff810b6ec0,CALL 0xffffffff810b6ec0,direct call
copy_process,0x1794,ctx->r14 + 0xa60,"MOV qword ptr [R14 + 0xa60],RCX",write other [TODO]
copy_process,0x179b,ctx->r14 + 0xa68,"MOV qword ptr [R14 + 0xa68],RDX",write other [TODO]
copy_process,0x17a7,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
copy_process,0x17b1,ctx->rax + 0xa68,"MOV qword ptr [RAX + 0xa68],RCX",write other [TODO]
copy_process,0x17c7,ctx->r14 + 0xa70,"MOV qword ptr [R14 + 0xa70],RSI",write other [TODO]
copy_process,0x17ce,ctx->r14 + 0xa78,"MOV qword ptr [R14 + 0xa78],RCX",write other [TODO]
copy_process,0x17d5,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
copy_process,0x17d8,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
copy_process,0x17e9,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
copy_process,0x17f6,0xffffffff8138ac80,CALL 0xffffffff8138ac80,direct call
copy_process,0x1805,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],0x0",write stack
copy_process,0x1816,ctx->rdi + 0x390,"MOV qword ptr [RDI + 0x390],0x0",write other [TODO]
copy_process,0x1835,ctx->rsp,"MOV dword ptr [RSP],R11D",write stack
copy_process,0x1839,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],R8D",write stack
copy_process,0x183e,0xffffffff81605660,CALL 0xffffffff81605660,direct call
copy_process,0x1859,ctx->rsp,"MOV dword ptr [RSP],R11D",write stack
copy_process,0x185d,ctx->rsp + 0x8,"MOV dword ptr [RSP + 0x8],R8D",write stack
copy_process,0x1862,0xffffffff81605660,CALL 0xffffffff81605660,direct call
copy_process,0x188c,ctx->r14 + 0xf30,"MOV qword ptr [R14 + 0xf30],RDX",write other [TODO]
copy_process,0x1899,ctx->r14 + 0xf38,"MOV dword ptr [R14 + 0xf38],EDX",write other [TODO]
copy_process,0x18b5,ctx->r14 + 0x9c0,"MOV qword ptr [R14 + 0x9c0],RAX",write other [TODO]
copy_process,0x18c3,ctx->r14 + 0xc88,"MOV qword ptr [R14 + 0xc88],RAX",write other [TODO]
copy_process,0x18d5,ctx->r14 + 0xa08,"MOV qword ptr [R14 + 0xa08],RDX",write other [TODO]
copy_process,0x18dc,ctx->r14 + 0x958,"MOV qword ptr [R14 + 0x958],0x0",write other [TODO]
copy_process,0x18e7,ctx->r14 + 0xa10,"MOV qword ptr [R14 + 0xa10],RDX",write other [TODO]
copy_process,0x18ee,ctx->r14 + 0x30,"MOV dword ptr [R14 + 0x30],0x0",write other [TODO]
copy_process,0x18f6,ctx->r14 + 0x9f8,"MOV qword ptr [R14 + 0x9f8],RAX",write other [TODO]
copy_process,0x18fd,ctx->r14 + 0x9c8,"MOV qword ptr [R14 + 0x9c8],RCX",write other [TODO]
copy_process,0x1904,ctx->r14 + 0xa00,"MOV qword ptr [R14 + 0xa00],RAX",write other [TODO]
copy_process,0x1910,ctx->r14 + 0x9f0,"MOV qword ptr [R14 + 0x9f0],R14",write other [TODO]
copy_process,0x1959,0xffffffff81605660,CALL 0xffffffff81605660,direct call
copy_process,0x1968,0xffffffff810b7090,CALL 0xffffffff810b7090,direct call
copy_process,0x1975,0xffffffff810a20b0,CALL 0xffffffff810a20b0,direct call
copy_process,0x1996,0xffffffff81605660,CALL 0xffffffff81605660,direct call
copy_process,0x19b7,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
copy_process,0x19e2,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x19e7,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
copy_process,0x19f4,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x19f9,0xffffffff81111f30,CALL 0xffffffff81111f30,direct call
copy_process,0x1a20,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x1a25,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
copy_process,0x1a40,ctx->rax + 0x3f8,"MOV qword ptr [RAX + 0x3f8],-0x7ef5f190",write other [TODO]
copy_process,0x1a5b,ctx->rsp + 0x30,"MOV dword ptr [RSP + 0x30],R11D",write stack
copy_process,0x1a60,ctx->rax + 0x3e8,"MOV qword ptr [RAX + 0x3e8],RDX",write other [TODO]
copy_process,0x1a67,ctx->rax + 0x3e0,"MOV qword ptr [RAX + 0x3e0],RBX",write other [TODO]
copy_process,0x1a6e,ctx->rax + 0x3f0,"MOV qword ptr [RAX + 0x3f0],RDX",write other [TODO]
copy_process,0x1a7c,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
pidfd_pid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pidfd_pid,0x1b,,RET,ret
pidfd_pid,0x24,,RET,ret
copy_init_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_init_mm,0x12,0xffffffff810a20b0,CALL 0xffffffff810a20b0,direct call
copy_init_mm,0x18,,RET,ret
create_io_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
create_io_thread,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
create_io_thread,0x2e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
create_io_thread,0x42,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R8",write stack
create_io_thread,0x46,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
create_io_thread,0x4d,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x1",write stack
create_io_thread,0x54,0xffffffff810a23e0,CALL 0xffffffff810a23e0,direct call
create_io_thread,0x69,,RET,ret
create_io_thread,0x6a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kernel_clone,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_clone,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
kernel_clone,0x98,0xffffffff810a23e0,CALL 0xffffffff810a23e0,direct call
kernel_clone,0xbf,0xffffffff810c98e0,CALL 0xffffffff810c98e0,direct call
kernel_clone,0xca,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
kernel_clone,0xcf,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
kernel_clone,0xe2,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R15",write stack
kernel_clone,0xeb,0xffffffff810e5560,CALL 0xffffffff810e5560,direct call
kernel_clone,0xfc,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
kernel_clone,0x125,,RET,ret
kernel_clone,0x12a,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
kernel_clone,0x136,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R15",write stack
kernel_clone,0x152,ctx->r14 + 0xa80,"MOV qword ptr [R14 + 0xa80],RBX",write other [TODO]
kernel_clone,0x15d,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
kernel_clone,0x164,0xffffffff81103ab0,CALL 0xffffffff81103ab0,direct call
kernel_clone,0x18a,0xffffffff810e5560,CALL 0xffffffff810e5560,direct call
kernel_clone,0x198,0xffffffff811843d0,CALL 0xffffffff811843d0,direct call
kernel_clone,0x1a5,0xffffffff81d0e7f0,CALL 0xffffffff81d0e7f0,direct call
kernel_clone,0x1ae,0xffffffff81184430,CALL 0xffffffff81184430,direct call
kernel_clone,0x1de,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kernel_clone,0x1f6,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
kernel_clone,0x206,0xffffffff810c9640,CALL 0xffffffff810c9640,direct call
kernel_clone,0x20e,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kernel_clone,0x22e,0xffffffff810b9c80,CALL 0xffffffff810b9c80,direct call
kernel_clone,0x293,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0xffffffea",write stack
kernel_clone,0x2b9,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
kernel_clone,0x2c1,ctx->r14 + 0xa80,"MOV qword ptr [R14 + 0xa80],0x0",write other [TODO]
kernel_clone,0x2cc,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kernel_clone,0x2d6,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
kernel_clone,0x2e1,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
kernel_clone,0x2eb,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kernel_clone,0x303,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
kernel_clone,0x313,0xffffffff810c9640,CALL 0xffffffff810c9640,direct call
kernel_clone,0x31b,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kernel_clone,0x35a,0xffffffff81605660,CALL 0xffffffff81605660,direct call
kernel_clone,0x36c,0xffffffff81605660,CALL 0xffffffff81605660,direct call
kernel_clone,0x37e,0xffffffff81605660,CALL 0xffffffff81605660,direct call
kernel_clone,0x394,0xffffffff810b9c80,CALL 0xffffffff810b9c80,direct call
kernel_clone,0x39b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_fork,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_fork,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__x64_sys_fork,0x35,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],0x11",write stack
__x64_sys_fork,0x3c,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
__x64_sys_fork,0x53,,RET,ret
__x64_sys_fork,0x54,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_vfork,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_vfork,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__ia32_sys_vfork,0x28,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],0x4100",write stack
__ia32_sys_vfork,0x3d,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],0x11",write stack
__ia32_sys_vfork,0x44,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
__ia32_sys_vfork,0x5b,,RET,ret
__ia32_sys_vfork,0x5c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_clone,0x1f,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__do_sys_clone,0x29,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDX",write stack
__do_sys_clone,0x2d,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
__do_sys_clone,0x31,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R10",write stack
__do_sys_clone,0x42,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RSI",write stack
__do_sys_clone,0x52,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
__do_sys_clone,0x56,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
__do_sys_clone,0x5d,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],R9D",write stack
__do_sys_clone,0x61,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
__do_sys_clone,0x78,,RET,ret
__do_sys_clone,0x79,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_clone,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_clone,0x20,0xffffffff810a43a0,CALL 0xffffffff810a43a0,direct call
__x64_sys_clone,0x26,,RET,ret
__ia32_sys_clone,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_clone,0x1d,0xffffffff810a43a0,CALL 0xffffffff810a43a0,direct call
__ia32_sys_clone,0x23,,RET,ret
__do_sys_clone3,0x1a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__do_sys_clone3,0x2e,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RAX",write stack
__do_sys_clone3,0x35,0xffffffff810a08d0,CALL 0xffffffff810a08d0,direct call
__do_sys_clone3,0x54,,RET,ret
__do_sys_clone3,0xbf,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
__do_sys_clone3,0xf4,ctx->rbp - 0xe0,"MOV qword ptr [RBP + -0xe0],RDX",write stack
__do_sys_clone3,0xfd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_clone3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_clone3,0x11,0xffffffff810a4480,CALL 0xffffffff810a4480,direct call
__x64_sys_clone3,0x17,,RET,ret
__ia32_sys_clone3,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_clone3,0xf,0xffffffff810a4480,CALL 0xffffffff810a4480,direct call
__ia32_sys_clone3,0x15,,RET,ret
kernel_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_thread,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
kernel_thread,0x37,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R8",write stack
kernel_thread,0x46,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x1",write stack
kernel_thread,0x52,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],EDX",write stack
kernel_thread,0x55,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
kernel_thread,0x5c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
kernel_thread,0x60,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
kernel_thread,0x75,,RET,ret
kernel_thread,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
user_mode_thread,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
user_mode_thread,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
user_mode_thread,0x37,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R8",write stack
user_mode_thread,0x46,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
user_mode_thread,0x4f,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],EDX",write stack
user_mode_thread,0x52,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
user_mode_thread,0x59,0xffffffff810a3f30,CALL 0xffffffff810a3f30,direct call
user_mode_thread,0x6e,,RET,ret
user_mode_thread,0x6f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
walk_process_tree,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
walk_process_tree,0x26,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
walk_process_tree,0x71,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
walk_process_tree,0x7b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
walk_process_tree,0x7f,ctx->r14,CALL R14,in-direct call
walk_process_tree,0xf2,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
walk_process_tree,0x105,,RET,ret
unshare_fd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unshare_fd,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
unshare_fd,0x20,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],0x0",write stack
unshare_fd,0x62,,RET,ret
unshare_fd,0x6a,0xffffffff8138b6f0,CALL 0xffffffff8138b6f0,direct call
unshare_fd,0x6f,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
unshare_fd,0x7c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ksys_unshare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ksys_unshare,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ksys_unshare,0x2b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0x0",write stack
ksys_unshare,0x3f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
ksys_unshare,0x4b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
ksys_unshare,0xe2,0xffffffff813a8e80,CALL 0xffffffff813a8e80,direct call
ksys_unshare,0xfd,0xffffffff810a47e0,CALL 0xffffffff810a47e0,direct call
ksys_unshare,0x10c,0xffffffff813a8da0,CALL 0xffffffff813a8da0,direct call
ksys_unshare,0x135,,RET,ret
ksys_unshare,0x169,0xffffffff810a47e0,CALL 0xffffffff810a47e0,direct call
ksys_unshare,0x17c,0xffffffff8118ec00,CALL 0xffffffff8118ec00,direct call
ksys_unshare,0x19a,0xffffffff810d2080,CALL 0xffffffff810d2080,direct call
ksys_unshare,0x1b3,0xffffffff810d45d0,CALL 0xffffffff810d45d0,direct call
ksys_unshare,0x1ea,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x38]",write other [TODO]
ksys_unshare,0x1fc,0xffffffff810d2130,CALL 0xffffffff810d2130,direct call
ksys_unshare,0x211,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
ksys_unshare,0x226,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
ksys_unshare,0x22a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
ksys_unshare,0x22f,ctx->rbx + 0xbc8,"MOV qword ptr [RBX + 0xbc8],R13",write other [TODO]
ksys_unshare,0x24a,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
ksys_unshare,0x264,ctx->rax + 0xbd0,"MOV qword ptr [RAX + 0xbd0],R14",write other [TODO]
ksys_unshare,0x26b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
ksys_unshare,0x27f,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
ksys_unshare,0x28d,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
ksys_unshare,0x292,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
ksys_unshare,0x2a3,0xffffffff812745e0,CALL 0xffffffff812745e0,direct call
ksys_unshare,0x2b6,0xffffffff810d3a10,CALL 0xffffffff810d3a10,direct call
ksys_unshare,0x2c4,0xffffffff8138b9d0,CALL 0xffffffff8138b9d0,direct call
ksys_unshare,0x2d5,0xffffffff813a8da0,CALL 0xffffffff813a8da0,direct call
ksys_unshare,0x2df,0xffffffff81c69b60,CALL 0xffffffff81c69b60,direct call
ksys_unshare,0x2fa,0xffffffff814e88c0,CALL 0xffffffff814e88c0,direct call
ksys_unshare,0x31d,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x38]",write other [TODO]
ksys_unshare,0x342,0xffffffff814eac00,CALL 0xffffffff814eac00,direct call
ksys_unshare,0x34e,ctx->rbx + 0xba8,"MOV qword ptr [RBX + 0xba8],RAX",write other [TODO]
ksys_unshare,0x355,ctx->rbx + 0xbb0,"MOV qword ptr [RBX + 0xbb0],RAX",write other [TODO]
ksys_unshare,0x374,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_unshare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_unshare,0xd,0xffffffff810a4870,CALL 0xffffffff810a4870,direct call
__x64_sys_unshare,0x15,,RET,ret
__ia32_sys_unshare,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_unshare,0xc,0xffffffff810a4870,CALL 0xffffffff810a4870,direct call
__ia32_sys_unshare,0x14,,RET,ret
unshare_files,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unshare_files,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
unshare_files,0x33,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],0x0",write stack
unshare_files,0x63,,RET,ret
unshare_files,0x6d,0xffffffff8138b6f0,CALL 0xffffffff8138b6f0,direct call
unshare_files,0x8b,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
unshare_files,0x90,ctx->rbx + 0xbd0,"MOV qword ptr [RBX + 0xbd0],R13",write other [TODO]
unshare_files,0x9a,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
unshare_files,0xa2,0xffffffff8138b9d0,CALL 0xffffffff8138b9d0,direct call
unshare_files,0xae,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sysctl_max_threads,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sysctl_max_threads,0x1d,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RSI",write stack
sysctl_max_threads,0x27,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x1",write stack
sysctl_max_threads,0x2e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
sysctl_max_threads,0x36,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
sysctl_max_threads,0x3e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sysctl_max_threads,0x46,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0x3fffffff",write stack
sysctl_max_threads,0x4d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
sysctl_max_threads,0x51,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],ESI",write stack
sysctl_max_threads,0x57,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RSI",write stack
sysctl_max_threads,0x5f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RSI",write stack
sysctl_max_threads,0x67,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
sysctl_max_threads,0x73,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
sysctl_max_threads,0x79,0xffffffff810b0610,CALL 0xffffffff810b0610,direct call
sysctl_max_threads,0x89,0xffffffff8346b3d0,"MOV dword ptr [0xffffffff8346b3d0],EAX",write .data
sysctl_max_threads,0xa5,,RET,ret
sysctl_max_threads,0xa6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_personality,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_personality,0x21,ctx->rdx + 0x960,"MOV dword ptr [RDX + 0x960],ECX",write other [TODO]
__x64_sys_personality,0x28,,RET,ret
__ia32_sys_personality,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_personality,0x21,ctx->rdx + 0x960,"MOV dword ptr [RDX + 0x960],ECX",write other [TODO]
__ia32_sys_personality,0x28,,RET,ret
execdomains_proc_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
execdomains_proc_show,0x10,0xffffffff81394cb0,CALL 0xffffffff81394cb0,direct call
execdomains_proc_show,0x18,,RET,ret
no_blink,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
no_blink,0xc,,RET,ret
test_taint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
test_taint,0x19,,RET,ret
clear_warn_once_fops_open,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_warn_once_fops_open,0x19,0xffffffff81399a60,CALL 0xffffffff81399a60,direct call
clear_warn_once_fops_open,0x1f,,RET,ret
clear_warn_once_set,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_warn_once_set,0x9,0xffffffff81c67a20,CALL 0xffffffff81c67a20,direct call
clear_warn_once_set,0x25,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
clear_warn_once_set,0x2d,,RET,ret
do_oops_enter_exit.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_oops_enter_exit.part.0,0x13,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
do_oops_enter_exit.part.0,0x25,0xffffffff8346b868,"MOV dword ptr [0xffffffff8346b868],0x1",write .data
do_oops_enter_exit.part.0,0x39,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
do_oops_enter_exit.part.0,0x42,,RET,ret
do_oops_enter_exit.part.0,0x53,0xffffffff8346b420,"MOV dword ptr [0xffffffff8346b420],EAX",write .data
do_oops_enter_exit.part.0,0x65,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
do_oops_enter_exit.part.0,0x6a,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
do_oops_enter_exit.part.0,0x6f,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
do_oops_enter_exit.part.0,0x79,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
do_oops_enter_exit.part.0,0x8a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
do_oops_enter_exit.part.0,0x98,0xffffffff8346b868,"MOV dword ptr [0xffffffff8346b868],0x0",write .data
do_oops_enter_exit.part.0,0xab,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
do_oops_enter_exit.part.0,0xb0,0xffffffff811ad7c0,CALL 0xffffffff811ad7c0,direct call
do_oops_enter_exit.part.0,0xb5,0xffffffff811acda0,CALL 0xffffffff811acda0,direct call
do_oops_enter_exit.part.0,0xbf,0xffffffff81c8a480,CALL 0xffffffff81c8a480,direct call
do_oops_enter_exit.part.0,0xcb,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
panic_smp_self_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a4f90,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a4f90,0x9,0xffffffff810a4f80,CALL 0xffffffff810a4f80,direct call
FUN_ffffffff810a4f90,0xf,,RET,ret
FUN_ffffffff810a4fa0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a4fa0,0x15,0xffffffff82e425b8,CALL qword ptr [0xffffffff82e425b8],in-direct call
FUN_ffffffff810a4fa0,0x1c,0xffffffff8346b860,"MOV dword ptr [0xffffffff8346b860],0x1",write .data
FUN_ffffffff810a4fa0,0x26,,RET,ret
FUN_ffffffff810a4fa0,0x27,,RET,ret
nmi_panic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
nmi_panic,0x2b,,RET,ret
nmi_panic,0x2c,0xffffffff8106c8c0,CALL 0xffffffff8106c8c0,direct call
nmi_panic,0x32,,RET,ret
add_taint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
add_taint,0x33,,RET,ret
add_taint,0xbf076d,0xffffffff8346b410,"MOV qword ptr [0xffffffff8346b410],0x0",write .data
add_taint,0xbf0778,0xffffffff81c954cb,CALL 0xffffffff81c954cb,direct call
print_tainted,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
print_tainted,0x24,0xffffffff8346b430,"MOV qword ptr [0xffffffff8346b430],RAX",write .data
print_tainted,0x30,ctx->wordctx->ptr0xffffffff8346b438,"MOV word ptr [0xffffffff8346b438],AX",write .data
print_tainted,0x53,ctx->rax - 0x7cb94bc8,"MOV byte ptr [RAX + -0x7cb94bc8],CL",write other [TODO]
print_tainted,0x66,0xffffffff8346b44c,"MOV byte ptr [0xffffffff8346b44c],0x0",write .data
print_tainted,0x6e,,RET,ret
print_tainted,0x7a,0xffffffff8346b438,"MOV dword ptr [0xffffffff8346b438],0x646574",write .data
print_tainted,0x84,0xffffffff8346b430,"MOV qword ptr [0xffffffff8346b430],RAX",write .data
print_tainted,0x92,,RET,ret
get_taint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_taint,0x11,,RET,ret
oops_may_print,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
oops_may_print,0x15,,RET,ret
oops_enter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
oops_enter,0x9,0xffffffff811c5850,CALL 0xffffffff811c5850,direct call
oops_enter,0xe,0xffffffff815f9610,CALL 0xffffffff815f9610,direct call
oops_enter,0x1d,0xffffffff810a4ea0,CALL 0xffffffff810a4ea0,direct call
oops_enter,0x2d,,RET,ret
oops_enter,0x37,0xffffffff81072ce0,CALL 0xffffffff81072ce0,direct call
oops_enter,0x3d,,RET,ret
oops_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
oops_exit,0x17,0xffffffff810a4ea0,CALL 0xffffffff810a4ea0,direct call
__warn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__warn,0x25,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ECX",write stack
__warn,0x28,0xffffffff811cba40,CALL 0xffffffff811cba40,direct call
__warn,0x5c,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__warn,0x6d,0xffffffff81120e90,CALL 0xffffffff81120e90,direct call
__warn,0x72,0xffffffff81c9e9fa,CALL 0xffffffff81c9e9fa,direct call
__warn,0x83,0xffffffff8103a660,CALL 0xffffffff8103a660,direct call
__warn,0xb1,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__warn,0xbf060e,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__warn,0xbf061a,0xffffffff810a5010,CALL 0xffffffff810a5010,direct call
__warn,0xbf062a,,RET,ret
__traceiter_cpuhp_enter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_cpuhp_enter,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_cpuhp_enter,0x55,,RET,ret
__traceiter_cpuhp_multi_enter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_cpuhp_multi_enter,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
__traceiter_cpuhp_multi_enter,0x49,ctx->rax,CALL RAX,in-direct call
__traceiter_cpuhp_multi_enter,0x65,,RET,ret
__traceiter_cpuhp_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_cpuhp_exit,0x41,ctx->rax,CALL RAX,in-direct call
__traceiter_cpuhp_exit,0x55,,RET,ret
cpu_smt_possible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_smt_possible,0x19,,RET,ret
cpuhp_next_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_next_state,0x18,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
cpuhp_next_state,0x1a,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
cpuhp_next_state,0x33,,RET,ret
cpuhp_next_state,0x3c,ctx->rdx,"MOV dword ptr [RDX],R8D",write other [TODO]
cpuhp_next_state,0x3f,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
cpuhp_next_state,0x5a,,RET,ret
cpuhp_should_run,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_should_run,0x1d,,RET,ret
cpu_mitigations_off,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_mitigations_off,0x15,,RET,ret
cpu_mitigations_auto_nosmt,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_mitigations_auto_nosmt,0x14,,RET,ret
perf_trace_cpuhp_enter,0x1d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
perf_trace_cpuhp_enter,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_cpuhp_enter,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_cpuhp_enter,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_cpuhp_enter,0x8a,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_cpuhp_enter,0x91,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_cpuhp_enter,0x9c,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_cpuhp_enter,0xa7,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
perf_trace_cpuhp_enter,0xab,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_cpuhp_enter,0xaf,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_cpuhp_enter,0xb3,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_cpuhp_enter,0xba,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_cpuhp_enter,0xde,,RET,ret
perf_trace_cpuhp_enter,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_cpuhp_multi_enter,0x1d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
perf_trace_cpuhp_multi_enter,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_cpuhp_multi_enter,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_cpuhp_multi_enter,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_cpuhp_multi_enter,0x8a,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_cpuhp_multi_enter,0x91,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_cpuhp_multi_enter,0x9c,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_cpuhp_multi_enter,0xa7,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
perf_trace_cpuhp_multi_enter,0xab,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_cpuhp_multi_enter,0xaf,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_cpuhp_multi_enter,0xb3,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_cpuhp_multi_enter,0xba,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_cpuhp_multi_enter,0xde,,RET,ret
perf_trace_cpuhp_multi_enter,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_cpuhp_exit,0x1d,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R8D",write stack
perf_trace_cpuhp_exit,0x36,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_cpuhp_exit,0x59,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_cpuhp_exit,0x7f,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_cpuhp_exit,0x89,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_cpuhp_exit,0x90,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_cpuhp_exit,0x9b,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_cpuhp_exit,0xa6,ctx->rdi + 0x14,"MOV dword ptr [RDI + 0x14],EAX",write other [TODO]
perf_trace_cpuhp_exit,0xa9,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_cpuhp_exit,0xad,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_cpuhp_exit,0xb1,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],R12D",write other [TODO]
perf_trace_cpuhp_exit,0xb8,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_cpuhp_exit,0xdc,,RET,ret
perf_trace_cpuhp_exit,0xeb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_cpuhp_enter,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_cpuhp_enter,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_cpuhp_enter,0x4e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
trace_event_raw_event_cpuhp_enter,0x56,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
trace_event_raw_event_cpuhp_enter,0x5a,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_cpuhp_enter,0x5e,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RBX",write other [TODO]
trace_event_raw_event_cpuhp_enter,0x62,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_cpuhp_enter,0x84,,RET,ret
trace_event_raw_event_cpuhp_enter,0x8a,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_cpuhp_enter,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_cpuhp_multi_enter,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_cpuhp_multi_enter,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_cpuhp_multi_enter,0x4e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
trace_event_raw_event_cpuhp_multi_enter,0x56,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
trace_event_raw_event_cpuhp_multi_enter,0x5a,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_cpuhp_multi_enter,0x5e,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RBX",write other [TODO]
trace_event_raw_event_cpuhp_multi_enter,0x62,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_cpuhp_multi_enter,0x84,,RET,ret
trace_event_raw_event_cpuhp_multi_enter,0x8a,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_cpuhp_multi_enter,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_cpuhp_exit,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
trace_event_raw_event_cpuhp_exit,0x44,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_cpuhp_exit,0x4e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R14D",write other [TODO]
trace_event_raw_event_cpuhp_exit,0x56,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],R13D",write other [TODO]
trace_event_raw_event_cpuhp_exit,0x5a,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
trace_event_raw_event_cpuhp_exit,0x5e,ctx->rax + 0x14,"MOV dword ptr [RAX + 0x14],EBX",write other [TODO]
trace_event_raw_event_cpuhp_exit,0x61,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_cpuhp_exit,0x83,,RET,ret
trace_event_raw_event_cpuhp_exit,0x89,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_cpuhp_exit,0x94,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_cpuhp_enter,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_cpuhp_enter,0x22,,RET,ret
trace_raw_output_cpuhp_enter,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_cpuhp_enter,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_cpuhp_enter,0x56,,RET,ret
trace_raw_output_cpuhp_multi_enter,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_cpuhp_multi_enter,0x22,,RET,ret
trace_raw_output_cpuhp_multi_enter,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_cpuhp_multi_enter,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_cpuhp_multi_enter,0x56,,RET,ret
trace_raw_output_cpuhp_exit,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_cpuhp_exit,0x22,,RET,ret
trace_raw_output_cpuhp_exit,0x41,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_cpuhp_exit,0x4d,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_cpuhp_exit,0x56,,RET,ret
__cpu_hotplug_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpu_hotplug_enable,0x12,0xffffffff8346bca8,"MOV dword ptr [0xffffffff8346bca8],EAX",write .data
__cpu_hotplug_enable,0x18,,RET,ret
__cpu_hotplug_enable,0x22,,RET,ret
__cpu_hotplug_enable,0x2b,0xffffffff830c7c3a,"MOV byte ptr [0xffffffff830c7c3a],0x1",write .data
__cpu_hotplug_enable,0x35,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__bpf_trace_cpuhp_enter,0xa,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_cpuhp_enter,0x10,,RET,ret
__bpf_trace_cpuhp_exit,0xd,0xffffffff811f9700,CALL 0xffffffff811f9700,direct call
__bpf_trace_cpuhp_exit,0x13,,RET,ret
__bpf_trace_cpuhp_multi_enter,0xa,0xffffffff811f97c0,CALL 0xffffffff811f97c0,direct call
__bpf_trace_cpuhp_multi_enter,0x10,,RET,ret
finish_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
finish_cpu,0x9,0xffffffff810d6600,CALL 0xffffffff810d6600,direct call
finish_cpu,0x1e,ctx->rax + 0x928,"MOV qword ptr [RAX + 0x928],-0x7d024660",write other [TODO]
finish_cpu,0x32,,RET,ret
finish_cpu,0x33,0xffffffff810a0d20,CALL 0xffffffff810a0d20,direct call
finish_cpu,0x3b,,RET,ret
cpuhp_complete_idle_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_complete_idle_dead,0xd,0xffffffff81105880,CALL 0xffffffff81105880,direct call
cpuhp_complete_idle_dead,0x13,,RET,ret
find_next_bit,0x4,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
find_next_bit,0xa,,RET,ret
cpu_hotplug_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_hotplug_disable,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_hotplug_disable,0x23,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_hotplug_disable,0x29,,RET,ret
cpu_hotplug_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_hotplug_enable,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_hotplug_enable,0x15,0xffffffff810a5a70,CALL 0xffffffff810a5a70,direct call
cpu_hotplug_enable,0x21,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_hotplug_enable,0x27,,RET,ret
remove_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
remove_cpu,0xe,0xffffffff817f42c0,CALL 0xffffffff817f42c0,direct call
remove_cpu,0x16,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
remove_cpu,0x1e,0xffffffff817f6250,CALL 0xffffffff817f6250,direct call
remove_cpu,0x26,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
remove_cpu,0x33,,RET,ret
add_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
add_cpu,0xe,0xffffffff817f42c0,CALL 0xffffffff817f42c0,direct call
add_cpu,0x16,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
add_cpu,0x1e,0xffffffff817f6360,CALL 0xffffffff817f6360,direct call
add_cpu,0x26,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
add_cpu,0x33,,RET,ret
fail_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fail_store,0x34,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
fail_store,0x49,0xffffffff81608040,CALL 0xffffffff81608040,direct call
fail_store,0x8f,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
fail_store,0xb2,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
fail_store,0xba,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EAX",write other [TODO]
fail_store,0xda,,RET,ret
fail_store,0xe6,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
fail_store,0xf4,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],0xffffffff",write other [TODO]
fail_store,0x10a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
fail_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
fail_show,0x30,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
fail_show,0x38,,RET,ret
target_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
target_show,0x30,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
target_show,0x38,,RET,ret
state_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
state_show,0x2f,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
state_show,0x37,,RET,ret
states_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
states_show,0x26,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
states_show,0x2b,ctx->rcx,"MOV RCX,qword ptr [R12]",write other [TODO]
states_show,0x40,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
states_show,0x63,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
states_show,0x73,,RET,ret
active_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
active_show,0x1f,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
active_show,0x2a,,RET,ret
control_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
control_show,0x26,0xffffffff81c85630,CALL 0xffffffff81c85630,direct call
control_show,0x2e,,RET,ret
cpus_read_trylock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpus_read_trylock,0x33,,RET,ret
cpus_read_trylock,0x34,0xffffffff82000810,CALL 0xffffffff82000810,direct call
cpus_read_trylock,0x3a,,RET,ret
cpus_read_trylock,0x47,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
cpu_hotplug_pm_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_hotplug_pm_callback,0x24,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_hotplug_pm_callback,0x29,0xffffffff810a5a70,CALL 0xffffffff810a5a70,direct call
cpu_hotplug_pm_callback,0x35,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_hotplug_pm_callback,0x40,,RET,ret
cpu_hotplug_pm_callback,0x4a,,RET,ret
cpu_hotplug_pm_callback,0x52,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_hotplug_pm_callback,0x65,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_hotplug_pm_callback,0x70,,RET,ret
trace_suspend_resume,0x2,,RET,ret
takedown_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
takedown_cpu,0x26,0xffffffff810cc690,CALL 0xffffffff810cc690,direct call
takedown_cpu,0x2b,0xffffffff81122ab0,CALL 0xffffffff81122ab0,direct call
takedown_cpu,0x5b,0xffffffff81190580,CALL 0xffffffff81190580,direct call
takedown_cpu,0x75,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
takedown_cpu,0x7f,0xffffffff81122ad0,CALL 0xffffffff81122ad0,direct call
takedown_cpu,0x87,0xffffffff81166940,CALL 0xffffffff81166940,direct call
takedown_cpu,0x8f,0xffffffff82e425e0,CALL qword ptr [0xffffffff82e425e0],in-direct call
takedown_cpu,0x98,0xffffffff81164d30,CALL 0xffffffff81164d30,direct call
takedown_cpu,0xa0,0xffffffff8113da30,CALL 0xffffffff8113da30,direct call
takedown_cpu,0xb0,,RET,ret
takedown_cpu,0xb1,0xffffffff81122ad0,CALL 0xffffffff81122ad0,direct call
takedown_cpu,0xba,0xffffffff810cca10,CALL 0xffffffff810cca10,direct call
takedown_cpu,0xca,,RET,ret
cpus_read_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpus_read_lock,0x9,0xffffffff82000828,CALL 0xffffffff82000828,direct call
cpus_read_lock,0x1f,ctx->rax,"MOV RAX,qword ptr [0xffffffff82e5e390]",write other [TODO]
cpus_read_lock,0x33,,RET,ret
cpus_read_lock,0x34,0xffffffff82000810,CALL 0xffffffff82000810,direct call
cpus_read_lock,0x3a,,RET,ret
cpus_read_lock,0x44,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
cpus_read_unlock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpus_read_unlock,0x1a,ctx->rax,"MOV RAX,qword ptr [0xffffffff82e5e390]",write other [TODO]
cpus_read_unlock,0x2e,,RET,ret
cpus_read_unlock,0x2f,0xffffffff82000810,CALL 0xffffffff82000810,direct call
cpus_read_unlock,0x35,,RET,ret
cpus_read_unlock,0x4d,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
cpuhp_kick_ap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_kick_ap,0x8,ctx->rsi + 0x28,"MOV qword ptr [RSI + 0x28],0x0",write other [TODO]
cpuhp_kick_ap,0x10,ctx->rsi + 0x4,"MOV dword ptr [RSI + 0x4],EDX",write other [TODO]
cpuhp_kick_ap,0x29,ctx->wordctx->ptrctx->rsi + 0x19,"MOV word ptr [RSI + 0x19],AX",write other [TODO]
cpuhp_kick_ap,0x53,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],0x0",write other [TODO]
cpuhp_kick_ap,0x60,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],0x1",write other [TODO]
cpuhp_kick_ap,0x68,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
cpuhp_kick_ap,0x77,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
cpuhp_kick_ap,0x90,,RET,ret
cpuhp_kick_ap,0xb3,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],R13D",write other [TODO]
cpuhp_kick_ap,0xbe,ctx->rbx + 0x19,"MOV byte ptr [RBX + 0x19],0x1",write other [TODO]
cpuhp_kick_ap,0xc9,ctx->rbx + 0x1b,"MOV byte ptr [RBX + 0x1b],DL",write other [TODO]
cpuhp_kick_ap,0xe8,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],0x0",write other [TODO]
cpuhp_kick_ap,0xf5,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],0x1",write other [TODO]
cpuhp_kick_ap,0xfd,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
cpuhp_kick_ap,0x110,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
cpuhp_kick_ap,0x120,,RET,ret
cpuhp_kick_ap,0x14b,ctx->rbx,"MOV dword ptr [RBX],EDX",write other [TODO]
bringup_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bringup_cpu,0x13,0xffffffff810d6600,CALL 0xffffffff810d6600,direct call
bringup_cpu,0x1b,0xffffffff81122ab0,CALL 0xffffffff81122ab0,direct call
bringup_cpu,0x26,0xffffffff82e425d0,CALL qword ptr [0xffffffff82e425d0],in-direct call
bringup_cpu,0x2f,0xffffffff81122ad0,CALL 0xffffffff81122ad0,direct call
bringup_cpu,0x44,,RET,ret
bringup_cpu,0x5b,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
bringup_cpu,0x6e,0xffffffff810cca10,CALL 0xffffffff810cca10,direct call
bringup_cpu,0x80,0xffffffff8106d150,CALL 0xffffffff8106d150,direct call
bringup_cpu,0xa5,0xffffffff810a61d0,CALL 0xffffffff810a61d0,direct call
bringup_cpu,0xb8,,RET,ret
cpuhp_kick_ap_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_kick_ap_work,0x32,0xffffffff810a61d0,CALL 0xffffffff810a61d0,direct call
cpuhp_kick_ap_work,0x49,,RET,ret
cpuhp_invoke_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_invoke_callback,0x2d,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDX",write stack
cpuhp_invoke_callback,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
cpuhp_invoke_callback,0x7d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
cpuhp_invoke_callback,0xa5,ctx->rax,CALL RAX,in-direct call
cpuhp_invoke_callback,0xc0,,RET,ret
cpuhp_invoke_callback,0xe2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
cpuhp_invoke_callback,0xfe,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R12D",write stack
cpuhp_invoke_callback,0x138,ctx->rax,CALL RAX,in-direct call
cpuhp_invoke_callback,0x159,ctx->r14,"MOV qword ptr [R14],R13",write other [TODO]
cpuhp_invoke_callback,0x2ee,ctx->r13,CALL R13,in-direct call
cpuhp_invoke_callback,0x361,ctx->r14,"MOV qword ptr [R14],0x0",write other [TODO]
cpuhp_invoke_callback,0x3a4,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R12D",write stack
cpuhp_invoke_callback,0x3d1,ctx->r12,CALL R12,in-direct call
cpuhp_invoke_callback,0x490,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],0xffffffff",write other [TODO]
cpuhp_thread_fun,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_thread_fun,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
cpuhp_thread_fun,0x5b,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],0x0",write other [TODO]
cpuhp_thread_fun,0x5f,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ESI",write stack
cpuhp_thread_fun,0x8d,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
cpuhp_thread_fun,0x92,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],EAX",write other [TODO]
cpuhp_thread_fun,0xa3,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],0x0",write other [TODO]
cpuhp_thread_fun,0xb6,0xffffffff81105880,CALL 0xffffffff81105880,direct call
cpuhp_thread_fun,0xd6,,RET,ret
cpuhp_thread_fun,0xd7,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
cpuhp_thread_fun,0xea,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
cpuhp_thread_fun,0xef,ctx->rbx + 0x34,"MOV dword ptr [RBX + 0x34],EAX",write other [TODO]
cpuhp_thread_fun,0xf2,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
cpuhp_thread_fun,0x114,0xffffffff810a53c0,CALL 0xffffffff810a53c0,direct call
cpuhp_thread_fun,0x119,ctx->rbx + 0x18,"MOV byte ptr [RBX + 0x18],AL",write other [TODO]
cpuhp_thread_fun,0x120,ctx->esi,"MOV ESI,dword ptr [RBP + -0x2c]",write other [TODO]
cpuhp_thread_fun,0x141,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
take_cpu_down,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
take_cpu_down,0x22,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
take_cpu_down,0x3c,0xffffffff82e425d8,CALL qword ptr [0xffffffff82e425d8],in-direct call
take_cpu_down,0x5c,ctx->esi,"MOV ESI,dword ptr [RBP + -0x24]",write other [TODO]
take_cpu_down,0x69,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
take_cpu_down,0x7e,0xffffffff810a53c0,CALL 0xffffffff810a53c0,direct call
take_cpu_down,0x87,0xffffffff81165450,CALL 0xffffffff81165450,direct call
take_cpu_down,0x8f,0xffffffff81164cf0,CALL 0xffffffff81164cf0,direct call
take_cpu_down,0x97,0xffffffff81190520,CALL 0xffffffff81190520,direct call
take_cpu_down,0xb7,,RET,ret
take_cpu_down,0xc0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpuhp_issue_call,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_issue_call,0x89,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RCX",write other [TODO]
cpuhp_issue_call,0x8e,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],0x0",write other [TODO]
cpuhp_issue_call,0x97,ctx->r12 + 0x1b,"MOV byte ptr [R12 + 0x1b],BL",write other [TODO]
cpuhp_issue_call,0x9c,ctx->r12 + 0x30,"MOV dword ptr [R12 + 0x30],ESI",write other [TODO]
cpuhp_issue_call,0xa1,ctx->wordctx->ptrctx->r12 + 0x19,"MOV word ptr [R12 + 0x19],AX",write other [TODO]
cpuhp_issue_call,0xa7,ctx->r12 + 0x34,"MOV dword ptr [R12 + 0x34],0x0",write other [TODO]
cpuhp_issue_call,0xb6,ctx->r12 + 0x18,"MOV byte ptr [R12 + 0x18],0x1",write other [TODO]
cpuhp_issue_call,0xc1,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
cpuhp_issue_call,0xd8,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
cpuhp_issue_call,0xf5,ctx->r12 + 0x19,"MOV byte ptr [R12 + 0x19],0x1",write other [TODO]
cpuhp_issue_call,0xfb,ctx->r12 + 0x1b,"MOV byte ptr [R12 + 0x1b],R13B",write other [TODO]
cpuhp_issue_call,0x10d,ctx->r12 + 0x34,"MOV dword ptr [R12 + 0x34],0x0",write other [TODO]
cpuhp_issue_call,0x11c,ctx->r12 + 0x18,"MOV byte ptr [R12 + 0x18],0x1",write other [TODO]
cpuhp_issue_call,0x127,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
cpuhp_issue_call,0x13e,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
cpuhp_issue_call,0x143,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],0x0",write other [TODO]
cpuhp_issue_call,0x14c,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],0x0",write other [TODO]
cpuhp_issue_call,0x170,,RET,ret
cpuhp_issue_call,0x177,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
cpuhp_issue_call,0x192,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
cpuhp_rollback_install,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_rollback_install,0x29,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpuhp_rollback_install,0x39,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpuhp_rollback_install,0x6c,0xffffffff810a6bd0,CALL 0xffffffff810a6bd0,direct call
cpuhp_rollback_install,0x7d,,RET,ret
__cpuhp_state_remove_instance,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_state_remove_instance,0x47,0xffffffff82000828,CALL 0xffffffff82000828,direct call
__cpuhp_state_remove_instance,0x7f,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
__cpuhp_state_remove_instance,0x9d,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__cpuhp_state_remove_instance,0xad,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__cpuhp_state_remove_instance,0xd8,0xffffffff810a6bd0,CALL 0xffffffff810a6bd0,direct call
__cpuhp_state_remove_instance,0xe7,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__cpuhp_state_remove_instance,0xef,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
__cpuhp_state_remove_instance,0x104,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
__cpuhp_state_remove_instance,0x10c,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
__cpuhp_state_remove_instance,0x110,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_state_remove_instance,0x146,,RET,ret
__cpuhp_state_remove_instance,0x160,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
__cpuhp_state_remove_instance,0x167,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_state_remove_instance,0x177,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
__cpuhp_state_remove_instance,0x181,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_setup_state_cpuslocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_setup_state_cpuslocked,0x19,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__cpuhp_setup_state_cpuslocked,0x20,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],R9D",write stack
__cpuhp_setup_state_cpuslocked,0x33,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
__cpuhp_setup_state_cpuslocked,0x49,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
__cpuhp_setup_state_cpuslocked,0x6a,ctx->rbp - 0x3d,"MOV byte ptr [RBP + -0x3d],R14B",write stack
__cpuhp_setup_state_cpuslocked,0x98,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],RDX",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x9c,ctx->r8 + 0x10,"MOV qword ptr [R8 + 0x10],R15",write other [TODO]
__cpuhp_setup_state_cpuslocked,0xa0,ctx->rcx - 0x7d1a1c20,"MOV qword ptr [RCX + -0x7d1a1c20],RSI",write other [TODO]
__cpuhp_setup_state_cpuslocked,0xa7,ctx->r8 + 0x21,"MOV byte ptr [R8 + 0x21],AL",write other [TODO]
__cpuhp_setup_state_cpuslocked,0xab,ctx->r8 + 0x18,"MOV qword ptr [R8 + 0x18],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0xf1,0xffffffff810a6bd0,CALL 0xffffffff810a6bd0,direct call
__cpuhp_setup_state_cpuslocked,0x101,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x111,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__cpuhp_setup_state_cpuslocked,0x12d,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__cpuhp_setup_state_cpuslocked,0x130,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_setup_state_cpuslocked,0x14e,,RET,ret
__cpuhp_setup_state_cpuslocked,0x15b,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__cpuhp_setup_state_cpuslocked,0x15e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_setup_state_cpuslocked,0x174,,RET,ret
__cpuhp_setup_state_cpuslocked,0x1ce,ctx->r8 - 0x7d1a1c18,"MOV qword ptr [R8 + -0x7d1a1c18],RDX",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x1d5,ctx->r8 - 0x7d1a1c10,"MOV qword ptr [R8 + -0x7d1a1c10],R15",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x1dc,ctx->r8 - 0x7d1a1c20,"MOV qword ptr [R8 + -0x7d1a1c20],RSI",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x1e3,ctx->r8 - 0x7d1a1bff,"MOV byte ptr [R8 + -0x7d1a1bff],AL",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x1ea,ctx->r8 - 0x7d1a1c08,"MOV qword ptr [R8 + -0x7d1a1c08],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x20b,ctx->rbp - 0x3d,"MOV byte ptr [RBP + -0x3d],R13B",write stack
__cpuhp_setup_state_cpuslocked,0x21b,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_setup_state_cpuslocked,0x231,,RET,ret
__cpuhp_setup_state_cpuslocked,0x23f,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__cpuhp_setup_state_cpuslocked,0x242,0xffffffff810a6d70,CALL 0xffffffff810a6d70,direct call
__cpuhp_setup_state_cpuslocked,0x254,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__cpuhp_setup_state_cpuslocked,0x25f,ctx->rcx - 0x7d1a1c18,"MOV qword ptr [RCX + -0x7d1a1c18],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x26a,ctx->rcx - 0x7d1a1c10,"MOV qword ptr [RCX + -0x7d1a1c10],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x275,ctx->rcx - 0x7d1a1c20,"MOV qword ptr [RCX + -0x7d1a1c20],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x280,ctx->rcx - 0x7d1a1bff,"MOV byte ptr [RCX + -0x7d1a1bff],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x287,ctx->rcx - 0x7d1a1c08,"MOV qword ptr [RCX + -0x7d1a1c08],0x0",write other [TODO]
__cpuhp_setup_state_cpuslocked,0x292,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_setup_state_cpuslocked,0x2a8,,RET,ret
__cpuhp_setup_state_cpuslocked,0x2b0,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__cpuhp_setup_state_cpuslocked,0x2c8,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_setup_state_cpuslocked,0x2f1,ctx->rbp - 0x3d,"MOV byte ptr [RBP + -0x3d],R14B",write stack
__cpuhp_setup_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_setup_state,0x24,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__cpuhp_setup_state,0x28,0xffffffff82000828,CALL 0xffffffff82000828,direct call
__cpuhp_setup_state,0x65,0xffffffff810a6f80,CALL 0xffffffff810a6f80,direct call
__cpuhp_setup_state,0xa2,,RET,ret
__cpuhp_setup_state,0xac,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__cpuhp_setup_state,0xb0,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
__cpuhp_setup_state,0xbb,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_setup_state,0xd9,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
__cpuhp_setup_state,0xe0,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_remove_state_cpuslocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_remove_state_cpuslocked,0x3e,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
__cpuhp_remove_state_cpuslocked,0x63,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__cpuhp_remove_state_cpuslocked,0x73,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__cpuhp_remove_state_cpuslocked,0x9d,0xffffffff810a6bd0,CALL 0xffffffff810a6bd0,direct call
__cpuhp_remove_state_cpuslocked,0xb4,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],0x0",write other [TODO]
__cpuhp_remove_state_cpuslocked,0xbc,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],0x0",write other [TODO]
__cpuhp_remove_state_cpuslocked,0xc4,ctx->r14 - 0x7d1a1c20,"MOV qword ptr [R14 + -0x7d1a1c20],0x0",write other [TODO]
__cpuhp_remove_state_cpuslocked,0xcf,ctx->r13 + 0x21,"MOV byte ptr [R13 + 0x21],0x0",write other [TODO]
__cpuhp_remove_state_cpuslocked,0xd4,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],0x0",write other [TODO]
__cpuhp_remove_state_cpuslocked,0xdc,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_remove_state_cpuslocked,0xeb,,RET,ret
__cpuhp_remove_state_cpuslocked,0xf8,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
__cpuhp_remove_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_remove_state,0x11,0xffffffff82000828,CALL 0xffffffff82000828,direct call
__cpuhp_remove_state,0x40,0xffffffff810a7370,CALL 0xffffffff810a7370,direct call
__cpuhp_remove_state,0x56,ctx->rax,"MOV RAX,qword ptr [0xffffffff82e5e390]",write other [TODO]
__cpuhp_remove_state,0x6d,,RET,ret
__cpuhp_remove_state,0x77,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
__cpuhp_remove_state,0x7e,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_remove_state,0x9c,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
__cpuhp_remove_state,0xa3,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_remove_state,0xac,,RET,ret
cpu_maps_update_begin,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_maps_update_begin,0x10,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_maps_update_begin,0x16,,RET,ret
cpu_maps_update_done,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_maps_update_done,0x10,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_maps_update_done,0x16,,RET,ret
cpus_write_lock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpus_write_lock,0x10,0xffffffff81d114e0,CALL 0xffffffff81d114e0,direct call
cpus_write_lock,0x16,,RET,ret
cpus_write_unlock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpus_write_unlock,0x10,0xffffffff81113210,CALL 0xffffffff81113210,direct call
cpus_write_unlock,0x16,,RET,ret
lockdep_assert_cpus_held,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lockdep_assert_cpus_held,0xa,,RET,ret
FUN_ffffffff810a75c0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a75c0,0xa,,RET,ret
_cpu_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_cpu_up,0x2a,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],ESI",write stack
_cpu_up,0x3e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
_cpu_up,0x44,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R15",write stack
_cpu_up,0x48,0xffffffff81d114e0,CALL 0xffffffff81d114e0,direct call
_cpu_up,0x73,0xffffffff810d6600,CALL 0xffffffff810d6600,direct call
_cpu_up,0x91,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],R12D",write other [TODO]
_cpu_up,0x95,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],0x0",write other [TODO]
_cpu_up,0x9d,0xffffffff8346b884,"MOV byte ptr [0xffffffff8346b884],AL",write .data
_cpu_up,0xac,ctx->wordctx->ptrctx->rbx + 0x19,"MOV word ptr [RBX + 0x19],DX",write other [TODO]
_cpu_up,0xeb,ctx->esi,"MOV ESI,dword ptr [RBP + -0x34]",write other [TODO]
_cpu_up,0xfb,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
_cpu_up,0x11a,0xffffffff810a53c0,CALL 0xffffffff810a53c0,direct call
_cpu_up,0x12d,0xffffffff81113210,CALL 0xffffffff81113210,direct call
_cpu_up,0x132,0xffffffff8104cb90,CALL 0xffffffff8104cb90,direct call
_cpu_up,0x162,,RET,ret
_cpu_up,0x166,0xffffffff810a6410,CALL 0xffffffff810a6410,direct call
_cpu_up,0x19f,0xffffffff8118c3b0,CALL 0xffffffff8118c3b0,direct call
_cpu_up,0x1b3,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],R15D",write other [TODO]
_cpu_up,0x1be,ctx->rbx + 0x19,"MOV byte ptr [RBX + 0x19],0x1",write other [TODO]
_cpu_up,0x1d1,ctx->rbx + 0x1b,"MOV byte ptr [RBX + 0x1b],DL",write other [TODO]
_cpu_up,0x1fa,ctx->esi,"MOV ESI,dword ptr [RBP + -0x34]",write other [TODO]
_cpu_up,0x207,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
_cpu_up,0x220,0xffffffff810a53c0,CALL 0xffffffff810a53c0,direct call
_cpu_up,0x295,ctx->rbx,"MOV dword ptr [RBX],EDX",write other [TODO]
_cpu_up,0x2bc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpu_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_up,0x3b,0xffffffff812f6160,CALL 0xffffffff812f6160,direct call
cpu_up,0x52,,RET,ret
cpu_up,0x60,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_up,0x81,0xffffffff810a75d0,CALL 0xffffffff810a75d0,direct call
cpu_up,0x90,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_up,0xa0,,RET,ret
cpu_up,0xa3,0xffffffff8106d150,CALL 0xffffffff8106d150,direct call
target_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
target_store,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
target_store,0x4c,0xffffffff81608040,CALL 0xffffffff81608040,direct call
target_store,0x67,0xffffffff817f4300,CALL 0xffffffff817f4300,direct call
target_store,0x93,,RET,ret
target_store,0x9b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
target_store,0xca,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
target_store,0xcf,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
target_store,0xdd,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
target_store,0xfa,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
target_store,0x104,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
target_store,0x11f,0xffffffff81d04db0,CALL 0xffffffff81d04db0,direct call
target_store,0x12d,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
target_store,0x132,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
target_store,0x14e,0xffffffff810a78a0,CALL 0xffffffff810a78a0,direct call
target_store,0x16a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
target_store,0x16f,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
target_store,0x187,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
target_store,0x18c,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
target_store,0x19d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
clear_tasks_mm_cpumask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
clear_tasks_mm_cpumask,0x18,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
clear_tasks_mm_cpumask,0x33,ctx->rdi,"MOV RDI,R12",write other [TODO]
clear_tasks_mm_cpumask,0x36,0xffffffff8128c040,CALL 0xffffffff8128c040,direct call
clear_tasks_mm_cpumask,0x57,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
clear_tasks_mm_cpumask,0x73,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
clear_tasks_mm_cpumask,0x7c,,RET,ret
cpuhp_report_idle_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_report_idle_dead,0x28,0xffffffff8113d8d0,CALL 0xffffffff8113d8d0,direct call
cpuhp_report_idle_dead,0x2d,ctx->r12,"MOV dword ptr [R12],0x5d",write other [TODO]
cpuhp_report_idle_dead,0x35,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpuhp_report_idle_dead,0x42,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
cpuhp_report_idle_dead,0x55,0xffffffff8116e6d0,CALL 0xffffffff8116e6d0,direct call
cpuhp_report_idle_dead,0x5f,,RET,ret
cpu_device_down,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_device_down,0x19,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpu_device_down,0x23,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
cpu_device_down,0x3d,0xffffffff81d04db0,CALL 0xffffffff81d04db0,direct call
cpu_device_down,0x4c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpu_device_down,0x59,,RET,ret
smp_shutdown_nonboot_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
smp_shutdown_nonboot_cpus,0x18,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
smp_shutdown_nonboot_cpus,0x38,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
smp_shutdown_nonboot_cpus,0x56,0xffffffff81d04db0,CALL 0xffffffff81d04db0,direct call
smp_shutdown_nonboot_cpus,0x62,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
smp_shutdown_nonboot_cpus,0x6f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
smp_shutdown_nonboot_cpus,0x9b,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
smp_shutdown_nonboot_cpus,0xa6,,RET,ret
smp_shutdown_nonboot_cpus,0xa7,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
smp_shutdown_nonboot_cpus,0xb4,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
smp_shutdown_nonboot_cpus,0xd2,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
notify_cpu_starting,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
notify_cpu_starting,0x35,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
notify_cpu_starting,0x4b,0xffffffff8113d710,CALL 0xffffffff8113d710,direct call
notify_cpu_starting,0x5b,ctx->esi,"MOV ESI,dword ptr [RBP + -0x2c]",write other [TODO]
notify_cpu_starting,0x6b,0xffffffff810a6500,CALL 0xffffffff810a6500,direct call
notify_cpu_starting,0x83,0xffffffff810a53c0,CALL 0xffffffff810a53c0,direct call
notify_cpu_starting,0xa7,,RET,ret
notify_cpu_starting,0xac,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cpuhp_online_idle,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_online_idle,0x26,,RET,ret
cpuhp_online_idle,0x2e,0xffffffff81190550,CALL 0xffffffff81190550,direct call
cpuhp_online_idle,0x33,ctx->rbx,"MOV dword ptr [RBX],0x9a",write other [TODO]
cpuhp_online_idle,0x3d,0xffffffff81105880,CALL 0xffffffff81105880,direct call
cpuhp_online_idle,0x47,,RET,ret
cpu_device_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpu_device_up,0x14,0xffffffff810a78a0,CALL 0xffffffff810a78a0,direct call
cpu_device_up,0x1a,,RET,ret
bringup_hibernate_cpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bringup_hibernate_cpu,0x26,,RET,ret
bringup_nonboot_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
bringup_nonboot_cpus,0x16,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
bringup_nonboot_cpus,0x23,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
bringup_nonboot_cpus,0x51,0xffffffff810a78a0,CALL 0xffffffff810a78a0,direct call
bringup_nonboot_cpus,0x5c,,RET,ret
freeze_secondary_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
freeze_secondary_cpus,0x19,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
freeze_secondary_cpus,0x4d,0xffffffff81c8cc30,CALL 0xffffffff81c8cc30,direct call
freeze_secondary_cpus,0x59,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
freeze_secondary_cpus,0x63,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
freeze_secondary_cpus,0x70,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
freeze_secondary_cpus,0x7b,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
freeze_secondary_cpus,0x88,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
freeze_secondary_cpus,0xbed9ad,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
freeze_secondary_cpus,0xbed9bd,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
freeze_secondary_cpus,0xbed9d8,0xffffffff8180fa30,CALL 0xffffffff8180fa30,direct call
freeze_secondary_cpus,0xbed9f4,0xffffffff81d04db0,CALL 0xffffffff81d04db0,direct call
freeze_secondary_cpus,0xbeda26,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
freeze_secondary_cpus,0xbeda36,,RET,ret
freeze_secondary_cpus,0xbeda44,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
freeze_secondary_cpus,0xbeda50,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
freeze_secondary_cpus,0xbedab8,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
FUN_ffffffff810a7fe0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a7fe0,0xa,,RET,ret
FUN_ffffffff810a7ff0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a7ff0,0xa,,RET,ret
thaw_secondary_cpus,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
thaw_secondary_cpus,0x15,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
thaw_secondary_cpus,0x1a,0xffffffff810a5a70,CALL 0xffffffff810a5a70,direct call
thaw_secondary_cpus,0x2c,ctx->rsi,"MOV RSI,RBX",write other [TODO]
thaw_secondary_cpus,0x2f,0xffffffff81601d10,CALL 0xffffffff81601d10,direct call
thaw_secondary_cpus,0x44,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
thaw_secondary_cpus,0x4f,,RET,ret
__cpuhp_state_add_instance_cpuslocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_state_add_instance_cpuslocked,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__cpuhp_state_add_instance_cpuslocked,0x42,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
__cpuhp_state_add_instance_cpuslocked,0x80,0xffffffff810a6bd0,CALL 0xffffffff810a6bd0,direct call
__cpuhp_state_add_instance_cpuslocked,0x8c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
__cpuhp_state_add_instance_cpuslocked,0x9c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
__cpuhp_state_add_instance_cpuslocked,0xb7,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
__cpuhp_state_add_instance_cpuslocked,0xc0,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
__cpuhp_state_add_instance_cpuslocked,0xcc,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],R13",write other [TODO]
__cpuhp_state_add_instance_cpuslocked,0xd2,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],R15",write other [TODO]
__cpuhp_state_add_instance_cpuslocked,0xdd,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__cpuhp_state_add_instance_cpuslocked,0xe0,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
__cpuhp_state_add_instance_cpuslocked,0xf6,,RET,ret
__cpuhp_state_add_instance_cpuslocked,0x10b,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__cpuhp_state_add_instance_cpuslocked,0x10e,0xffffffff810a6d70,CALL 0xffffffff810a6d70,direct call
__cpuhp_state_add_instance,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__cpuhp_state_add_instance,0x16,0xffffffff82000828,CALL 0xffffffff82000828,direct call
__cpuhp_state_add_instance,0x48,0xffffffff810a8050,CALL 0xffffffff810a8050,direct call
__cpuhp_state_add_instance,0x7d,,RET,ret
__cpuhp_state_add_instance,0x87,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
__cpuhp_state_add_instance,0x8e,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_state_add_instance,0xac,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
__cpuhp_state_add_instance,0xb3,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__cpuhp_state_add_instance,0xc1,,RET,ret
cpuhp_smt_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_smt_disable,0x1c,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpuhp_smt_disable,0x28,0xffffffff8106d150,CALL 0xffffffff8106d150,direct call
cpuhp_smt_disable,0x36,0xffffffff810021e0,CALL 0xffffffff810021e0,direct call
cpuhp_smt_disable,0x54,0xffffffff81d04db0,CALL 0xffffffff81d04db0,direct call
cpuhp_smt_disable,0x60,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
cpuhp_smt_disable,0x74,0xffffffff81c6c2c0,CALL 0xffffffff81c6c2c0,direct call
cpuhp_smt_disable,0x7c,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpuhp_smt_disable,0x8c,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpuhp_smt_disable,0x9f,0xffffffff8311b460,"MOV dword ptr [0xffffffff8311b460],R13D",write .data
cpuhp_smt_disable,0xaf,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EAX",write stack
cpuhp_smt_disable,0xb2,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpuhp_smt_disable,0xc4,,RET,ret
cpuhp_smt_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cpuhp_smt_enable,0x1e,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
cpuhp_smt_enable,0x25,0xffffffff8311b460,"MOV dword ptr [0xffffffff8311b460],0x0",write .data
cpuhp_smt_enable,0x2f,ctx->esi,"MOV ESI,dword ptr [0xffffffff8311b690]",write other [TODO]
cpuhp_smt_enable,0x3f,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
cpuhp_smt_enable,0x5c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
cpuhp_smt_enable,0x6c,,RET,ret
cpuhp_smt_enable,0x9c,0xffffffff810a75d0,CALL 0xffffffff810a75d0,direct call
cpuhp_smt_enable,0xab,0xffffffff817fcf20,CALL 0xffffffff817fcf20,direct call
cpuhp_smt_enable,0xbf,0xffffffff81c6c2c0,CALL 0xffffffff81c6c2c0,direct call
control_store,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
control_store,0x21,0xffffffff81606350,CALL 0xffffffff81606350,direct call
control_store,0x42,0xffffffff817f4300,CALL 0xffffffff817f4300,direct call
control_store,0x5d,0xffffffff810a8320,CALL 0xffffffff810a8320,direct call
control_store,0x65,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
control_store,0x78,,RET,ret
control_store,0x79,0xffffffff817f42e0,CALL 0xffffffff817f42e0,direct call
control_store,0x87,,RET,ret
control_store,0x90,,RET,ret
control_store,0xa1,0xffffffff81606350,CALL 0xffffffff81606350,direct call
control_store,0xb4,0xffffffff81606350,CALL 0xffffffff81606350,direct call
control_store,0xcb,0xffffffff810a8240,CALL 0xffffffff810a8240,direct call
init_cpu_present,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_cpu_present,0x34,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
init_cpu_present,0x3a,,RET,ret
init_cpu_possible,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_cpu_possible,0x34,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
init_cpu_possible,0x3a,,RET,ret
init_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_cpu_online,0x34,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
init_cpu_online,0x3a,,RET,ret
set_cpu_online,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_cpu_online,0x23,,RET,ret
set_cpu_online,0x37,,RET,ret
will_become_orphaned_pgrp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
will_become_orphaned_pgrp,0xa2,,RET,ret
will_become_orphaned_pgrp,0xaa,,RET,ret
rcuwait_wake_up,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rcuwait_wake_up,0xf,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
rcuwait_wake_up,0x25,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
rcuwait_wake_up,0x2d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
rcuwait_wake_up,0x39,,RET,ret
kill_orphaned_pgrp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_orphaned_pgrp,0x45,,RET,ret
kill_orphaned_pgrp,0x55,0xffffffff810a85e0,CALL 0xffffffff810a85e0,direct call
kill_orphaned_pgrp,0x9d,0xffffffff810b87b0,CALL 0xffffffff810b87b0,direct call
kill_orphaned_pgrp,0xaf,0xffffffff810b87b0,CALL 0xffffffff810b87b0,direct call
thread_group_exited,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
thread_group_exited,0xe,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
thread_group_exited,0x1e,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
thread_group_exited,0x49,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
thread_group_exited,0x56,,RET,ret
child_wait_callback,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
child_wait_callback,0x28,,RET,ret
child_wait_callback,0x42,0xffffffff810e46c0,CALL 0xffffffff810e46c0,direct call
child_wait_callback,0x48,,RET,ret
find_alive_thread.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_alive_thread.isra.0,0x39,,RET,ret
find_alive_thread.isra.0,0x3d,,RET,ret
delayed_put_task_struct,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
delayed_put_task_struct,0x19,0xffffffff81209f90,CALL 0xffffffff81209f90,direct call
delayed_put_task_struct,0x21,0xffffffff812768d0,CALL 0xffffffff812768d0,direct call
delayed_put_task_struct,0x49,,RET,ret
delayed_put_task_struct,0x8f,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
delayed_put_task_struct,0x98,,RET,ret
delayed_put_task_struct,0x9e,0xffffffff81605660,CALL 0xffffffff81605660,direct call
delayed_put_task_struct,0xa7,,RET,ret
put_task_struct_rcu_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
put_task_struct_rcu_user,0x27,,RET,ret
put_task_struct_rcu_user,0x32,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
put_task_struct_rcu_user,0x38,,RET,ret
put_task_struct_rcu_user,0x41,0xffffffff81605660,CALL 0xffffffff81605660,direct call
put_task_struct_rcu_user,0x47,,RET,ret
FUN_ffffffff810a8990,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810a8990,0xa,,RET,ret
release_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_task,0x19,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
release_task,0x1e,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
release_task,0x31,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
release_task,0x40,0xffffffff810d7050,CALL 0xffffffff810d7050,direct call
release_task,0x45,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
release_task,0x4d,0xffffffff811802b0,CALL 0xffffffff811802b0,direct call
release_task,0x59,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
release_task,0xda,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
release_task,0xe2,0xffffffff811626a0,CALL 0xffffffff811626a0,direct call
release_task,0xf6,ctx->r14 + 0x64,"MOV dword ptr [R14 + 0x64],EAX",write other [TODO]
release_task,0x113,ctx->r14 + 0x38,"MOV qword ptr [R14 + 0x38],RAX",write other [TODO]
release_task,0x11c,0xffffffff81162760,CALL 0xffffffff81162760,direct call
release_task,0x128,ctx->r14 + 0x198,"MOV qword ptr [R14 + 0x198],0x0",write other [TODO]
release_task,0x133,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
release_task,0x143,0xffffffff817b5f50,CALL 0xffffffff817b5f50,direct call
release_task,0x160,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
release_task,0x164,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
release_task,0x168,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
release_task,0x16c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
release_task,0x27a,0xffffffff810ca2c0,CALL 0xffffffff810ca2c0,direct call
release_task,0x2a3,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
release_task,0x2a7,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
release_task,0x2b8,ctx->r15 + 0xa68,"MOV qword ptr [R15 + 0xa68],RSI",write other [TODO]
release_task,0x2bf,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
release_task,0x2c3,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
release_task,0x2c6,ctx->r15 + 0xa78,"MOV qword ptr [R15 + 0xa78],RSI",write other [TODO]
release_task,0x2d8,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
release_task,0x2e4,0xffffffff810b6f10,CALL 0xffffffff810b6f10,direct call
release_task,0x2ec,ctx->r15 + 0xbf0,"MOV qword ptr [R15 + 0xbf0],0x0",write other [TODO]
release_task,0x2f7,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
release_task,0x2ff,0xffffffff810a2380,CALL 0xffffffff810a2380,direct call
release_task,0x311,0xffffffff810b6f10,CALL 0xffffffff810b6f10,direct call
release_task,0x31a,0xffffffff8177d970,CALL 0xffffffff8177d970,direct call
release_task,0x349,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
release_task,0x351,0xffffffff811b02d0,CALL 0xffffffff811b02d0,direct call
release_task,0x359,0xffffffff81405aa0,CALL 0xffffffff81405aa0,direct call
release_task,0x361,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
release_task,0x369,0xffffffff810354a0,CALL 0xffffffff810354a0,direct call
release_task,0x371,0xffffffff810a8940,CALL 0xffffffff810a8940,direct call
release_task,0x384,,RET,ret
release_task,0x38d,0xffffffff810ca2c0,CALL 0xffffffff810ca2c0,direct call
release_task,0x39a,0xffffffff810ca2c0,CALL 0xffffffff810ca2c0,direct call
release_task,0x3a7,0xffffffff810ca2c0,CALL 0xffffffff810ca2c0,direct call
release_task,0x3be,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
release_task,0x3c2,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
release_task,0x3dd,ctx->r15 + 0x8d8,"MOV qword ptr [R15 + 0x8d8],RAX",write other [TODO]
release_task,0x3eb,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RCX",write other [TODO]
release_task,0x3ef,ctx->rcx,"MOV qword ptr [RCX],RSI",write other [TODO]
release_task,0x3f2,ctx->r15 + 0x9e0,"MOV qword ptr [R15 + 0x9e0],RAX",write other [TODO]
release_task,0x401,ctx->r15 + 0x9e8,"MOV qword ptr [R15 + 0x9e8],RAX",write other [TODO]
release_task,0x423,0xffffffff810b75c0,CALL 0xffffffff810b75c0,direct call
release_task,0x430,ctx->rbx + 0x944,"MOV dword ptr [RBX + 0x944],0x10",write other [TODO]
release_task,0x441,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
release_task,0x449,0xffffffff811b02d0,CALL 0xffffffff811b02d0,direct call
release_task,0x451,0xffffffff81405aa0,CALL 0xffffffff81405aa0,direct call
release_task,0x459,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
release_task,0x461,0xffffffff810354a0,CALL 0xffffffff810354a0,direct call
release_task,0x46c,0xffffffff810a8940,CALL 0xffffffff810a8940,direct call
release_task,0x47a,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
release_task,0x48c,0xffffffff81605660,CALL 0xffffffff81605660,direct call
release_task,0x49b,0xffffffff810b2770,CALL 0xffffffff810b2770,direct call
release_task,0x4af,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wait_consider_task,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
wait_consider_task,0x81,,RET,ret
wait_consider_task,0xda,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],0x0",write other [TODO]
wait_consider_task,0x10f,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
wait_consider_task,0x143,ctx->r14,"MOV dword ptr [R14],0x0",write other [TODO]
wait_consider_task,0x14a,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
wait_consider_task,0x15b,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
wait_consider_task,0x17a,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
wait_consider_task,0x187,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
wait_consider_task,0x18a,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
wait_consider_task,0x194,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
wait_consider_task,0x1be,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
wait_consider_task,0x1cd,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
wait_consider_task,0x1e3,0xffffffff810c0fc0,CALL 0xffffffff810c0fc0,direct call
wait_consider_task,0x214,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
wait_consider_task,0x228,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
wait_consider_task,0x22f,ctx->rax,"MOV dword ptr [RAX],R14D",write other [TODO]
wait_consider_task,0x232,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EDX",write other [TODO]
wait_consider_task,0x235,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],ECX",write other [TODO]
wait_consider_task,0x267,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
wait_consider_task,0x288,ctx->rdx + 0x74,"MOV dword ptr [RDX + 0x74],EAX",write other [TODO]
wait_consider_task,0x28b,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
wait_consider_task,0x2a1,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
wait_consider_task,0x2c0,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
wait_consider_task,0x2d0,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
wait_consider_task,0x2dc,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
wait_consider_task,0x30a,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
wait_consider_task,0x320,0xffffffff810c0fc0,CALL 0xffffffff810c0fc0,direct call
wait_consider_task,0x359,ctx->rax,"MOV dword ptr [RAX],R14D",write other [TODO]
wait_consider_task,0x35c,ctx->rax + 0x4,"MOV dword ptr [RAX + 0x4],R13D",write other [TODO]
wait_consider_task,0x360,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RCX",write other [TODO]
wait_consider_task,0x369,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],0x0",write other [TODO]
wait_consider_task,0x38a,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],0x0",write other [TODO]
wait_consider_task,0x3cb,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
wait_consider_task,0x3fc,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
wait_consider_task,0x436,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
wait_consider_task,0x43e,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
wait_consider_task,0x44f,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
wait_consider_task,0x46e,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
wait_consider_task,0x473,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
wait_consider_task,0x4e5,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
wait_consider_task,0x505,0xffffffff810c0fc0,CALL 0xffffffff810c0fc0,direct call
wait_consider_task,0x520,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],R15D",write other [TODO]
wait_consider_task,0x531,0xffffffff810a89a0,CALL 0xffffffff810a89a0,direct call
wait_consider_task,0x55a,ctx->rdx + 0xc,"MOV dword ptr [RDX + 0xc],EAX",write other [TODO]
wait_consider_task,0x560,ctx->rdx + 0x8,"MOV dword ptr [RDX + 0x8],ECX",write other [TODO]
wait_consider_task,0x563,ctx->rdx,"MOV dword ptr [RDX],R14D",write other [TODO]
wait_consider_task,0x566,ctx->rdx + 0x4,"MOV dword ptr [RDX + 0x4],EAX",write other [TODO]
wait_consider_task,0x59c,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],0x0",write other [TODO]
wait_consider_task,0x5d8,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],0x0",write other [TODO]
wait_consider_task,0x5f0,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
wait_consider_task,0x623,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0x636,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0x666,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0x69c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
wait_consider_task,0x6a7,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RCX",write stack
wait_consider_task,0x6ab,0xffffffff81102510,CALL 0xffffffff81102510,direct call
wait_consider_task,0x6bb,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
wait_consider_task,0x6ca,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R11",write stack
wait_consider_task,0x6ce,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
wait_consider_task,0x7f8,ctx->r15 + 0x260,"MOV qword ptr [R15 + 0x260],RDX",write other [TODO]
wait_consider_task,0x80e,ctx->r15 + 0x268,"MOV qword ptr [R15 + 0x268],R9",write other [TODO]
wait_consider_task,0x824,ctx->r15 + 0x270,"MOV qword ptr [R15 + 0x270],RDI",write other [TODO]
wait_consider_task,0x83a,ctx->r15 + 0x278,"MOV qword ptr [R15 + 0x278],RSI",write other [TODO]
wait_consider_task,0x850,ctx->r15 + 0x280,"MOV qword ptr [R15 + 0x280],RCX",write other [TODO]
wait_consider_task,0x866,ctx->r15 + 0x288,"MOV qword ptr [R15 + 0x288],RDX",write other [TODO]
wait_consider_task,0x87c,ctx->r15 + 0x290,"MOV qword ptr [R15 + 0x290],R10",write other [TODO]
wait_consider_task,0x895,ctx->r15 + 0x298,"MOV qword ptr [R15 + 0x298],R10",write other [TODO]
wait_consider_task,0x8a3,ctx->r15 + 0x268,"MOV qword ptr [R15 + 0x268],R9",write other [TODO]
wait_consider_task,0x8b1,ctx->r15 + 0x270,"MOV qword ptr [R15 + 0x270],RDI",write other [TODO]
wait_consider_task,0x8bf,ctx->r15 + 0x278,"MOV qword ptr [R15 + 0x278],RSI",write other [TODO]
wait_consider_task,0x8cd,ctx->r15 + 0x280,"MOV qword ptr [R15 + 0x280],RCX",write other [TODO]
wait_consider_task,0x8db,ctx->r15 + 0x288,"MOV qword ptr [R15 + 0x288],RDX",write other [TODO]
wait_consider_task,0x8ec,ctx->r15 + 0x290,"MOV qword ptr [R15 + 0x290],RDX",write other [TODO]
wait_consider_task,0x8fa,ctx->r15 + 0x298,"MOV qword ptr [R15 + 0x298],R10",write other [TODO]
wait_consider_task,0x90c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
wait_consider_task,0x921,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
wait_consider_task,0x96c,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
wait_consider_task,0x982,0xffffffff810c0fc0,CALL 0xffffffff810c0fc0,direct call
wait_consider_task,0x9ac,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0x9cc,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
wait_consider_task,0x9e9,0xffffffff810b75c0,CALL 0xffffffff810b75c0,direct call
wait_consider_task,0x9f2,ctx->r12 + 0x944,"MOV dword ptr [R12 + 0x944],0x10",write other [TODO]
wait_consider_task,0xa05,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
wait_consider_task,0xa1f,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
wait_consider_task,0xa2c,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
wait_consider_task,0xa36,ctx->r12 + 0x944,"MOV dword ptr [R12 + 0x944],0x20",write other [TODO]
wait_consider_task,0xa49,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
wait_consider_task,0xa53,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],0xffff",write other [TODO]
wait_consider_task,0xa67,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
wait_consider_task,0xa79,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0xa8b,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0xa9d,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0xaaf,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0xac1,0xffffffff81605660,CALL 0xffffffff81605660,direct call
wait_consider_task,0xace,0xffffffff810b2770,CALL 0xffffffff810b2770,direct call
wait_consider_task,0xad8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_wait,0x2b,ctx->rbx + 0x28,"MOV dword ptr [RBX + 0x28],0x0",write other [TODO]
do_wait,0x36,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],-0x7ef57810",write other [TODO]
do_wait,0x3e,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],R14",write other [TODO]
do_wait,0x49,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RSI",write stack
do_wait,0x51,0xffffffff81106bf0,CALL 0xffffffff81106bf0,direct call
do_wait,0x58,ctx->rbx + 0x50,"MOV dword ptr [RBX + 0x50],0xfffffff6",write other [TODO]
do_wait,0x92,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
do_wait,0xaa,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
do_wait,0xe3,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
do_wait,0x125,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
do_wait,0x15d,0xffffffff810a8e60,CALL 0xffffffff810a8e60,direct call
do_wait,0x181,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],0x0",write other [TODO]
do_wait,0x18c,0xffffffff81103ce0,CALL 0xffffffff81103ce0,direct call
do_wait,0x1a2,,RET,ret
do_wait,0x1aa,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
do_wait,0x1ee,0xffffffff810a8e60,CALL 0xffffffff810a8e60,direct call
do_wait,0x236,0xffffffff810a8e60,CALL 0xffffffff810a8e60,direct call
do_wait,0x281,0xffffffff810a8e60,CALL 0xffffffff810a8e60,direct call
kernel_waitid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_waitid,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
kernel_waitid,0x2b,ctx->rbp - 0x8c,"MOV dword ptr [RBP + -0x8c],0x0",write stack
kernel_waitid,0x70,0xffffffff810c99f0,CALL 0xffffffff810c99f0,direct call
kernel_waitid,0x95,0xffffffff810ca570,CALL 0xffffffff810ca570,direct call
kernel_waitid,0xb6,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],R15D",write stack
kernel_waitid,0xc2,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R13",write stack
kernel_waitid,0xc8,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R12",write stack
kernel_waitid,0xcf,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R14",write stack
kernel_waitid,0xd3,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EAX",write stack
kernel_waitid,0x106,,RET,ret
kernel_waitid,0x107,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],0x4",write stack
kernel_waitid,0x114,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],0x0",write stack
kernel_waitid,0x11c,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],ECX",write stack
kernel_waitid,0x122,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R12",write stack
kernel_waitid,0x126,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
kernel_waitid,0x131,0xffffffff810a9940,CALL 0xffffffff810a9940,direct call
kernel_waitid,0x158,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
kernel_waitid,0x169,0xffffffff810c99f0,CALL 0xffffffff810c99f0,direct call
kernel_waitid,0x19b,0xffffffff810c98e0,CALL 0xffffffff810c98e0,direct call
kernel_waitid,0x1bb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_waitid,0x1e,ctx->rsp + 0xa8,"MOV qword ptr [RSP + 0xa8],RAX",write stack
__do_sys_waitid,0x28,ctx->rsp,"MOV qword ptr [RSP],0x0",write stack
__do_sys_waitid,0x30,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],0x0",write stack
__do_sys_waitid,0x4d,0xffffffff810a9c30,CALL 0xffffffff810a9c30,direct call
__do_sys_waitid,0x7d,ctx->rbx,"MOV dword ptr [RBX],ECX",write other [TODO]
__do_sys_waitid,0x7f,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],0x0",write other [TODO]
__do_sys_waitid,0x8a,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EDX",write other [TODO]
__do_sys_waitid,0x90,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EDX",write other [TODO]
__do_sys_waitid,0x97,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EDX",write other [TODO]
__do_sys_waitid,0x9e,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EDX",write other [TODO]
__do_sys_waitid,0xbf,,RET,ret
__do_sys_waitid,0xcd,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_waitid,0xf5,0xffffffff810a9c30,CALL 0xffffffff810a9c30,direct call
__do_sys_waitid,0x104,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_waitid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_waitid,0x1a,0xffffffff810a9df0,CALL 0xffffffff810a9df0,direct call
__x64_sys_waitid,0x20,,RET,ret
__ia32_sys_waitid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_waitid,0x19,0xffffffff810a9df0,CALL 0xffffffff810a9df0,direct call
__ia32_sys_waitid,0x1f,,RET,ret
__do_compat_sys_waitid,0x1e,ctx->rsp + 0xa8,"MOV qword ptr [RSP + 0xa8],RAX",write stack
__do_compat_sys_waitid,0x28,ctx->rsp,"MOV qword ptr [RSP],0x0",write stack
__do_compat_sys_waitid,0x30,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],0x0",write stack
__do_compat_sys_waitid,0x4d,0xffffffff810a9c30,CALL 0xffffffff810a9c30,direct call
__do_compat_sys_waitid,0x7d,ctx->rbx,"MOV dword ptr [RBX],ECX",write other [TODO]
__do_compat_sys_waitid,0x7f,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],0x0",write other [TODO]
__do_compat_sys_waitid,0x8a,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],EDX",write other [TODO]
__do_compat_sys_waitid,0x90,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EDX",write other [TODO]
__do_compat_sys_waitid,0x97,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EDX",write other [TODO]
__do_compat_sys_waitid,0x9e,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EDX",write other [TODO]
__do_compat_sys_waitid,0xbf,,RET,ret
__do_compat_sys_waitid,0xc8,0xffffffff81175250,CALL 0xffffffff81175250,direct call
__do_compat_sys_waitid,0xef,0xffffffff810a9c30,CALL 0xffffffff810a9c30,direct call
__do_compat_sys_waitid,0xfe,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_waitid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_waitid,0x19,0xffffffff810a9f50,CALL 0xffffffff810a9f50,direct call
__ia32_compat_sys_waitid,0x1f,,RET,ret
is_current_pgrp_orphaned,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
is_current_pgrp_orphaned,0x12,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
is_current_pgrp_orphaned,0x30,0xffffffff810a85e0,CALL 0xffffffff810a85e0,direct call
is_current_pgrp_orphaned,0x3f,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
is_current_pgrp_orphaned,0x4c,,RET,ret
mm_update_next_owner,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
mm_update_next_owner,0x49,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
mm_update_next_owner,0xbd,ctx->rdi,"MOV RDI,R8",write other [TODO]
mm_update_next_owner,0xc0,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
mm_update_next_owner,0xc4,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
mm_update_next_owner,0xd0,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
mm_update_next_owner,0xdd,ctx->r8,"MOV R8,qword ptr [RBP + -0x30]",write other [TODO]
mm_update_next_owner,0xe7,ctx->rdi,"MOV RDI,R8",write other [TODO]
mm_update_next_owner,0xea,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mm_update_next_owner,0x10f,ctx->rdi,"MOV RDI,R15",write other [TODO]
mm_update_next_owner,0x112,0xffffffff81605660,CALL 0xffffffff81605660,direct call
mm_update_next_owner,0x132,,RET,ret
mm_update_next_owner,0x201,ctx->rdi,"MOV RDI,R12",write other [TODO]
mm_update_next_owner,0x204,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
mm_update_next_owner,0x213,ctx->rdi,"MOV RDI,R15",write other [TODO]
mm_update_next_owner,0x216,0xffffffff81605660,CALL 0xffffffff81605660,direct call
mm_update_next_owner,0x227,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
mm_update_next_owner,0x22c,ctx->rbx + 0x390,"MOV qword ptr [RBX + 0x390],0x0",write other [TODO]
mm_update_next_owner,0x245,,RET,ret
mm_update_next_owner,0x24b,ctx->rdi,"MOV RDI,R15",write other [TODO]
mm_update_next_owner,0x24e,0xffffffff81605660,CALL 0xffffffff81605660,direct call
mm_update_next_owner,0x258,ctx->rbx + 0x390,"MOV qword ptr [RBX + 0x390],R12",write other [TODO]
mm_update_next_owner,0x25f,ctx->rdi,"MOV RDI,R8",write other [TODO]
mm_update_next_owner,0x262,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
mm_update_next_owner,0x283,ctx->rdi,"MOV RDI,R15",write other [TODO]
mm_update_next_owner,0x286,0xffffffff81605660,CALL 0xffffffff81605660,direct call
mm_update_next_owner,0x290,ctx->rdi,"MOV RDI,R12",write other [TODO]
mm_update_next_owner,0x293,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
do_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_exit,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_exit,0x42,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_exit,0x5e,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_exit,0x78,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_exit,0x93,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_exit,0xa6,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
do_exit,0xb4,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
do_exit,0xe1,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
do_exit,0x100,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],0x0",write other [TODO]
do_exit,0x12d,0xffffffff815ef710,CALL 0xffffffff815ef710,direct call
do_exit,0x134,0xffffffff81cb2eb0,CALL 0xffffffff81cb2eb0,direct call
do_exit,0x13c,0xffffffff810ba0a0,CALL 0xffffffff810ba0a0,direct call
do_exit,0x14d,0xffffffff812c42f0,CALL 0xffffffff812c42f0,direct call
do_exit,0x155,0xffffffff811b4010,CALL 0xffffffff811b4010,direct call
do_exit,0x195,0xffffffff81155570,CALL 0xffffffff81155570,direct call
do_exit,0x19d,0xffffffff81160b20,CALL 0xffffffff81160b20,direct call
do_exit,0x20d,0xffffffff81171580,CALL 0xffffffff81171580,direct call
do_exit,0x212,0xffffffff8178ad70,CALL 0xffffffff8178ad70,direct call
do_exit,0x225,ctx->rbx + 0x948,"MOV dword ptr [RBX + 0x948],R13D",write other [TODO]
do_exit,0x232,0xffffffff811b3880,CALL 0xffffffff811b3880,direct call
do_exit,0x24a,0xffffffff810a2320,CALL 0xffffffff810a2320,direct call
do_exit,0x25b,0xffffffff812c42f0,CALL 0xffffffff812c42f0,direct call
do_exit,0x26d,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
do_exit,0x29d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
do_exit,0x2a1,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
do_exit,0x2a6,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
do_exit,0x2ac,ctx->r13 + 0x920,"MOV qword ptr [R13 + 0x920],0x0",write other [TODO]
do_exit,0x2b9,0xffffffff81111d90,CALL 0xffffffff81111d90,direct call
do_exit,0x2c4,0xffffffff8108c6c0,CALL 0xffffffff8108c6c0,direct call
do_exit,0x2c9,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
do_exit,0x2d3,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
do_exit,0x2e0,0xffffffff81113020,CALL 0xffffffff81113020,direct call
do_exit,0x2e8,0xffffffff810aa0d0,CALL 0xffffffff810aa0d0,direct call
do_exit,0x2f0,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
do_exit,0x31d,0xffffffff814e88c0,CALL 0xffffffff814e88c0,direct call
do_exit,0x325,0xffffffff814eac00,CALL 0xffffffff814eac00,direct call
do_exit,0x32d,0xffffffff8138baa0,CALL 0xffffffff8138baa0,direct call
do_exit,0x335,0xffffffff813a8de0,CALL 0xffffffff813a8de0,direct call
do_exit,0x34a,0xffffffff810d27d0,CALL 0xffffffff810d27d0,direct call
do_exit,0x34f,0xffffffff810cab70,CALL 0xffffffff810cab70,direct call
do_exit,0x357,0xffffffff81041a20,CALL 0xffffffff81041a20,direct call
do_exit,0x35f,0xffffffff812763c0,CALL 0xffffffff812763c0,direct call
do_exit,0x367,0xffffffff81111e20,CALL 0xffffffff81111e20,direct call
do_exit,0x36f,0xffffffff81180150,CALL 0xffffffff81180150,direct call
do_exit,0x377,0xffffffff81040070,CALL 0xffffffff81040070,direct call
do_exit,0x37c,0xffffffff81133f20,CALL 0xffffffff81133f20,direct call
do_exit,0x388,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R13",write stack
do_exit,0x38c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R13",write stack
do_exit,0x390,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
do_exit,0x3af,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
do_exit,0x3cb,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
do_exit,0x3ec,0xffffffff810a8850,CALL 0xffffffff810a8850,direct call
do_exit,0x45d,ctx->r12 + 0x9c0,"MOV qword ptr [R12 + 0x9c0],R15",write other [TODO]
do_exit,0x480,ctx->r12 + 0x9c8,"MOV qword ptr [R12 + 0x9c8],R15",write other [TODO]
do_exit,0x49e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
do_exit,0x4a2,0xffffffff810b7f90,CALL 0xffffffff810b7f90,direct call
do_exit,0x4b6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_exit,0x4c4,ctx->r12 + 0x60,"MOV dword ptr [R12 + 0x60],R13D",write other [TODO]
do_exit,0x4cd,ctx->r12 + 0x70,"MOV qword ptr [R12 + 0x70],RAX",write other [TODO]
do_exit,0x565,ctx->r9 + 0x94c,"MOV dword ptr [R9 + 0x94c],0x11",write other [TODO]
do_exit,0x586,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
do_exit,0x58a,0xffffffff810a86d0,CALL 0xffffffff810a86d0,direct call
do_exit,0x5cd,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
do_exit,0x5d1,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
do_exit,0x5db,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
do_exit,0x5de,ctx->r15 + 0x9d8,"MOV qword ptr [R15 + 0x9d8],RAX",write other [TODO]
do_exit,0x5e9,ctx->rbx + 0x9d0,"MOV qword ptr [RBX + 0x9d0],RAX",write other [TODO]
do_exit,0x5f0,ctx->rbx + 0x9d8,"MOV qword ptr [RBX + 0x9d8],RAX",write other [TODO]
do_exit,0x60a,ctx->rbx + 0x944,"MOV dword ptr [RBX + 0x944],0x20",write other [TODO]
do_exit,0x63e,ctx->rbx + 0x944,"MOV dword ptr [RBX + 0x944],0x10",write other [TODO]
do_exit,0x653,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
do_exit,0x657,ctx->rbx + 0xa08,"MOV qword ptr [RBX + 0xa08],RDX",write other [TODO]
do_exit,0x65e,ctx->rbx + 0xa10,"MOV qword ptr [RBX + 0xa10],R13",write other [TODO]
do_exit,0x665,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
do_exit,0x681,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
do_exit,0x6a7,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RCX",write other [TODO]
do_exit,0x6ab,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
do_exit,0x6ae,ctx->rdi + 0xa08,"MOV qword ptr [RDI + 0xa08],RAX",write other [TODO]
do_exit,0x6b5,ctx->rdi + 0xa10,"MOV qword ptr [RDI + 0xa10],RAX",write other [TODO]
do_exit,0x6bc,0xffffffff810a89a0,CALL 0xffffffff810a89a0,direct call
do_exit,0x6e2,0xffffffff817ef660,CALL 0xffffffff817ef660,direct call
do_exit,0x6ea,0xffffffff81317890,CALL 0xffffffff81317890,direct call
do_exit,0x713,0xffffffff815a5ab0,CALL 0xffffffff815a5ab0,direct call
do_exit,0x724,0xffffffff81370a90,CALL 0xffffffff81370a90,direct call
do_exit,0x751,0xffffffff81293980,CALL 0xffffffff81293980,direct call
do_exit,0x759,0xffffffff810a1730,CALL 0xffffffff810a1730,direct call
do_exit,0x776,0xffffffff8113dfc0,CALL 0xffffffff8113dfc0,direct call
do_exit,0x77b,0xffffffff81133f70,CALL 0xffffffff81133f70,direct call
do_exit,0x780,0xffffffff810e5e20,CALL 0xffffffff810e5e20,direct call
do_exit,0x78a,0xffffffff81171580,CALL 0xffffffff81171580,direct call
do_exit,0x7a3,0xffffffff81171790,CALL 0xffffffff81171790,direct call
do_exit,0x7b2,0xffffffff81789560,CALL 0xffffffff81789560,direct call
do_exit,0x7ff,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDX",write stack
do_exit,0x802,0xffffffff810a8850,CALL 0xffffffff810a8850,direct call
do_exit,0x83f,0xffffffff81105880,CALL 0xffffffff81105880,direct call
do_exit,0x849,0xffffffff8128c4b0,CALL 0xffffffff8128c4b0,direct call
do_exit,0x853,ctx->rdi + 0x258,"MOV qword ptr [RDI + 0x258],RAX",write other [TODO]
do_exit,0x868,0xffffffff810a86d0,CALL 0xffffffff810a86d0,direct call
do_exit,0x87a,0xffffffff810b9c80,CALL 0xffffffff810b9c80,direct call
do_exit,0x88e,0xffffffff81199f70,CALL 0xffffffff81199f70,direct call
do_exit,0x89f,0xffffffff810a8850,CALL 0xffffffff810a8850,direct call
do_exit,0x8ad,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
do_exit,0x8c0,0xffffffff810b2900,CALL 0xffffffff810b2900,direct call
do_exit,0x931,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
do_exit,0x95e,0xffffffff810b75c0,CALL 0xffffffff810b75c0,direct call
do_exit,0x96f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
do_exit,0x97c,0xffffffff810b75c0,CALL 0xffffffff810b75c0,direct call
do_exit,0x9a8,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
do_exit,0x9ac,0xffffffff810b75c0,CALL 0xffffffff810b75c0,direct call
do_exit,0x9bd,ctx->r9 + 0x944,"MOV dword ptr [R9 + 0x944],0x10",write other [TODO]
do_exit,0x9d3,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
do_exit,0x9d7,ctx->r9 + 0xa08,"MOV qword ptr [R9 + 0xa08],RDX",write other [TODO]
do_exit,0x9de,ctx->r9 + 0xa10,"MOV qword ptr [R9 + 0xa10],R13",write other [TODO]
do_exit,0x9e5,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
do_exit,0x9f5,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
do_exit,0xa05,ctx->rax,"MOV RAX,qword ptr [RAX]",write other [TODO]
do_exit,0xa1f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
do_exit,0xa23,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
do_exit,0xa27,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
do_exit,0xa2a,ctx->rdi + 0xa08,"MOV qword ptr [RDI + 0xa08],RAX",write other [TODO]
do_exit,0xa31,ctx->rdi + 0xa10,"MOV qword ptr [RDI + 0xa10],RAX",write other [TODO]
do_exit,0xa38,0xffffffff810a89a0,CALL 0xffffffff810a89a0,direct call
do_exit,0xa61,0xffffffff8118f8a0,CALL 0xffffffff8118f8a0,direct call
do_exit,0xa6d,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
__ia32_sys_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_exit,0x16,0xffffffff810aa370,CALL 0xffffffff810aa370,direct call
__x64_sys_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_exit,0x16,0xffffffff810aa370,CALL 0xffffffff810aa370,direct call
make_task_dead,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
make_task_dead,0x55,0xffffffff810aa370,CALL 0xffffffff810aa370,direct call
make_task_dead,0xbeacbd,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
make_task_dead,0xbeacc5,0xffffffff81169eb0,CALL 0xffffffff81169eb0,direct call
make_task_dead,0xbeacd7,ctx->r12 + 0x944,"MOV dword ptr [R12 + 0x944],0x10",write other [TODO]
make_task_dead,0xbeacf6,0xffffffff81605660,CALL 0xffffffff81605660,direct call
make_task_dead,0xbeacfb,0xffffffff810e5e20,CALL 0xffffffff810e5e20,direct call
make_task_dead,0xbead17,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
make_task_dead,0xbead45,0xffffffff81c954cb,CALL 0xffffffff81c954cb,direct call
make_task_dead,0xbead56,0xffffffff81605660,CALL 0xffffffff81605660,direct call
do_group_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_group_exit,0x30,0xffffffff810aa370,CALL 0xffffffff810aa370,direct call
do_group_exit,0x4b,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_group_exit,0x65,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_group_exit,0x73,ctx->r12 + 0x60,"MOV dword ptr [R12 + 0x60],EBX",write other [TODO]
do_group_exit,0x7b,ctx->r12 + 0x74,"MOV dword ptr [R12 + 0x74],0x4",write other [TODO]
do_group_exit,0x84,0xffffffff810b7160,CALL 0xffffffff810b7160,direct call
__x64_sys_exit_group,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_exit_group,0x13,0xffffffff810aaeb0,CALL 0xffffffff810aaeb0,direct call
__ia32_sys_exit_group,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_exit_group,0x13,0xffffffff810aaeb0,CALL 0xffffffff810aaeb0,direct call
__wake_up_parent,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__wake_up_parent,0x1c,0xffffffff81104400,CALL 0xffffffff81104400,direct call
__wake_up_parent,0x22,,RET,ret
kernel_wait4,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_wait4,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
kernel_wait4,0x74,0xffffffff810c98e0,CALL 0xffffffff810c98e0,direct call
kernel_wait4,0x86,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R14",write stack
kernel_wait4,0x8a,ctx->rbp - 0x88,"MOV dword ptr [RBP + -0x88],R13D",write stack
kernel_wait4,0x91,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EBX",write stack
kernel_wait4,0x97,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],0x0",write stack
kernel_wait4,0x9f,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],0x0",write stack
kernel_wait4,0xa6,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R15",write stack
kernel_wait4,0xaa,0xffffffff810a9940,CALL 0xffffffff810a9940,direct call
kernel_wait4,0xb5,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
kernel_wait4,0xca,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
kernel_wait4,0xfc,,RET,ret
kernel_wait4,0x10b,0xffffffff810c99f0,CALL 0xffffffff810c99f0,direct call
kernel_wait4,0x120,0xffffffff810c99f0,CALL 0xffffffff810c99f0,direct call
kernel_wait4,0x13f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_wait4,0x1c,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RAX",write stack
__do_sys_wait4,0x31,0xffffffff810aafb0,CALL 0xffffffff810aafb0,direct call
__do_sys_wait4,0x5d,,RET,ret
__do_sys_wait4,0x69,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_wait4,0x80,0xffffffff810aafb0,CALL 0xffffffff810aafb0,direct call
__do_sys_wait4,0x8a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_wait4,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_wait4,0x17,0xffffffff810ab100,CALL 0xffffffff810ab100,direct call
__x64_sys_wait4,0x1d,,RET,ret
__ia32_sys_wait4,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_wait4,0x15,0xffffffff810ab100,CALL 0xffffffff810ab100,direct call
__ia32_sys_wait4,0x1b,,RET,ret
__x64_sys_waitpid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_waitpid,0x15,0xffffffff810aafb0,CALL 0xffffffff810aafb0,direct call
__x64_sys_waitpid,0x1b,,RET,ret
__ia32_sys_waitpid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_waitpid,0x14,0xffffffff810aafb0,CALL 0xffffffff810aafb0,direct call
__ia32_sys_waitpid,0x1a,,RET,ret
__do_compat_sys_wait4,0x1c,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RAX",write stack
__do_compat_sys_wait4,0x31,0xffffffff810aafb0,CALL 0xffffffff810aafb0,direct call
__do_compat_sys_wait4,0x5d,,RET,ret
__do_compat_sys_wait4,0x64,0xffffffff81175250,CALL 0xffffffff81175250,direct call
__do_compat_sys_wait4,0x7a,0xffffffff810aafb0,CALL 0xffffffff810aafb0,direct call
__do_compat_sys_wait4,0x84,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_wait4,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_wait4,0x15,0xffffffff810ab210,CALL 0xffffffff810ab210,direct call
__ia32_compat_sys_wait4,0x1b,,RET,ret
kernel_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_wait,0x28,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
kernel_wait,0x34,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],0x4",write stack
kernel_wait,0x3b,0xffffffff810c99f0,CALL 0xffffffff810c99f0,direct call
kernel_wait,0x44,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
kernel_wait,0x48,0xffffffff810a9940,CALL 0xffffffff810a9940,direct call
kernel_wait,0x5f,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
kernel_wait,0x7e,,RET,ret
kernel_wait,0x7f,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
kernel_wait,0x83,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__traceiter_irq_handler_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_irq_handler_entry,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_irq_handler_entry,0x41,,RET,ret
__traceiter_irq_handler_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_irq_handler_exit,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_irq_handler_exit,0x4b,,RET,ret
__traceiter_softirq_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_softirq_entry,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_softirq_entry,0x37,,RET,ret
__traceiter_softirq_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_softirq_exit,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_softirq_exit,0x37,,RET,ret
__traceiter_softirq_raise,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_softirq_raise,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_softirq_raise,0x37,,RET,ret
tasklet_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_setup,0x6,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
tasklet_setup,0xd,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
tasklet_setup,0x18,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],0x0",write other [TODO]
tasklet_setup,0x20,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RSI",write other [TODO]
tasklet_setup,0x24,ctx->rdi + 0x14,"MOV byte ptr [RDI + 0x14],0x1",write other [TODO]
tasklet_setup,0x28,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x0",write other [TODO]
tasklet_setup,0x30,,RET,ret
tasklet_init,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_init,0x6,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
tasklet_init,0xd,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],0x0",write other [TODO]
tasklet_init,0x18,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],0x0",write other [TODO]
tasklet_init,0x20,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RSI",write other [TODO]
tasklet_init,0x24,ctx->rdi + 0x14,"MOV byte ptr [RDI + 0x14],0x0",write other [TODO]
tasklet_init,0x28,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RDX",write other [TODO]
tasklet_init,0x2c,,RET,ret
ksoftirqd_should_run,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ksoftirqd_should_run,0x15,,RET,ret
tasklet_unlock_spin_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_unlock_spin_wait,0x1c,,RET,ret
perf_trace_irq_handler_exit,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_irq_handler_exit,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_irq_handler_exit,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_irq_handler_exit,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_irq_handler_exit,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_irq_handler_exit,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_irq_handler_exit,0x9a,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_irq_handler_exit,0x9e,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],R13D",write other [TODO]
perf_trace_irq_handler_exit,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_irq_handler_exit,0xc7,,RET,ret
perf_trace_irq_handler_exit,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_softirq,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_softirq,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_softirq,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_softirq,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_softirq,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_softirq,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_softirq,0x91,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R13D",write other [TODO]
perf_trace_softirq,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_softirq,0xb8,,RET,ret
perf_trace_softirq,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_irq_handler_exit,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_irq_handler_exit,0x39,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_irq_handler_exit,0x43,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_irq_handler_exit,0x4b,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EBX",write other [TODO]
trace_event_raw_event_irq_handler_exit,0x4e,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_irq_handler_exit,0x6c,,RET,ret
trace_event_raw_event_irq_handler_exit,0x72,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_irq_handler_exit,0x7d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_softirq,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_softirq,0x34,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_softirq,0x3e,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],EBX",write other [TODO]
trace_event_raw_event_softirq,0x45,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_softirq,0x61,,RET,ret
trace_event_raw_event_softirq,0x67,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_softirq,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_irq_handler_entry,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_irq_handler_entry,0x22,,RET,ret
trace_raw_output_irq_handler_entry,0x3b,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_irq_handler_entry,0x47,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_irq_handler_entry,0x50,,RET,ret
trace_raw_output_irq_handler_exit,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_irq_handler_exit,0x46,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_irq_handler_exit,0x52,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_irq_handler_exit,0x5b,,RET,ret
trace_raw_output_softirq,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_softirq,0x22,,RET,ret
trace_raw_output_softirq,0x36,0xffffffff811d01e0,CALL 0xffffffff811d01e0,direct call
trace_raw_output_softirq,0x4d,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_softirq,0x59,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_softirq,0x62,,RET,ret
__bpf_trace_irq_handler_entry,0x6,0xffffffff811f9590,CALL 0xffffffff811f9590,direct call
__bpf_trace_irq_handler_entry,0xc,,RET,ret
__bpf_trace_irq_handler_exit,0x8,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_irq_handler_exit,0xe,,RET,ret
__bpf_trace_softirq,0x6,0xffffffff811f94d0,CALL 0xffffffff811f94d0,direct call
__bpf_trace_softirq,0xc,,RET,ret
tasklet_unlock_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_unlock_wait,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
tasklet_unlock_wait,0x24,0xffffffff82000828,CALL 0xffffffff82000828,direct call
tasklet_unlock_wait,0x4a,,RET,ret
tasklet_unlock_wait,0x52,0xffffffff81103bf0,CALL 0xffffffff81103bf0,direct call
tasklet_unlock_wait,0x63,0xffffffff81103c20,CALL 0xffffffff81103c20,direct call
tasklet_unlock_wait,0x6a,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
tasklet_unlock_wait,0x7b,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
tasklet_unlock_wait,0x8f,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
tasklet_unlock_wait,0x96,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tasklet_unlock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_unlock,0x15,0xffffffff81106df0,CALL 0xffffffff81106df0,direct call
tasklet_unlock,0x1b,,RET,ret
perf_trace_irq_handler_entry,0x17,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],ESI",write stack
perf_trace_irq_handler_entry,0x27,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_irq_handler_entry,0x36,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
perf_trace_irq_handler_entry,0x4a,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],R15D",write stack
perf_trace_irq_handler_entry,0x81,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_irq_handler_entry,0x9a,ctx->rax + 0x80,"MOV qword ptr [RAX + 0x80],RDX",write other [TODO]
perf_trace_irq_handler_entry,0xa1,ctx->rax + 0x98,"MOV qword ptr [RAX + 0x98],RBP",write other [TODO]
perf_trace_irq_handler_entry,0xa8,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],0x10",write other [TODO]
perf_trace_irq_handler_entry,0xb3,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],0x0",write other [TODO]
perf_trace_irq_handler_entry,0xc1,ctx->r13 + 0xc,"MOV dword ptr [R13 + 0xc],EAX",write other [TODO]
perf_trace_irq_handler_entry,0xc8,ctx->r13 + 0x8,"MOV dword ptr [R13 + 0x8],EAX",write other [TODO]
perf_trace_irq_handler_entry,0xde,0xffffffff81c7f820,CALL 0xffffffff81c7f820,direct call
perf_trace_irq_handler_entry,0xfd,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_irq_handler_entry,0x121,,RET,ret
perf_trace_irq_handler_entry,0x130,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x70010",write stack
perf_trace_irq_handler_entry,0x142,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tasklet_clear_sched,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_clear_sched,0x29,,RET,ret
tasklet_clear_sched,0x31,0xffffffff81106df0,CALL 0xffffffff81106df0,direct call
tasklet_clear_sched,0x3e,,RET,ret
tasklet_clear_sched,0x60,0xffffffff830c7c3b,"MOV byte ptr [0xffffffff830c7c3b],0x1",write .data
tasklet_clear_sched,0x67,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
tasklet_kill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_kill,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
tasklet_kill,0x3d,0xffffffff82000828,CALL 0xffffffff82000828,direct call
tasklet_kill,0x56,0xffffffff810ab980,CALL 0xffffffff810ab980,direct call
tasklet_kill,0x5e,0xffffffff810abb90,CALL 0xffffffff810abb90,direct call
tasklet_kill,0x7c,,RET,ret
tasklet_kill,0x80,0xffffffff81103bf0,CALL 0xffffffff81103bf0,direct call
tasklet_kill,0x91,0xffffffff81103c20,CALL 0xffffffff81103c20,direct call
tasklet_kill,0x98,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
tasklet_kill,0xa9,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
tasklet_kill,0xbe,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
tasklet_kill,0xc5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
_local_bh_enable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
_local_bh_enable,0x23,,RET,ret
__irq_exit_rcu,0x4,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__irq_exit_rcu,0x37,0xffffffff810e62f0,CALL 0xffffffff810e62f0,direct call
__irq_exit_rcu,0x41,,RET,ret
__irq_exit_rcu,0x60,0xffffffff811677e0,CALL 0xffffffff811677e0,direct call
__irq_exit_rcu,0x66,,RET,ret
__irq_exit_rcu,0x81,0xffffffff82000000,CALL 0xffffffff82000000,direct call
__irq_exit_rcu,0x9c,0xffffffff810cc300,CALL 0xffffffff810cc300,direct call
do_softirq.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_softirq.part.0,0xa,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
do_softirq.part.0,0x13,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
do_softirq.part.0,0x2b,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
do_softirq.part.0,0x36,,RET,ret
do_softirq.part.0,0x4f,ctx->gs + 0x1fb84,"MOV byte ptr GS:[0x1fb84],0x1",write other [TODO]
do_softirq.part.0,0x5f,ctx->r11,"MOV qword ptr [R11],RSP",write other [TODO]
do_softirq.part.0,0x65,0xffffffff82000000,CALL 0xffffffff82000000,direct call
do_softirq.part.0,0x6b,ctx->gs + 0x1fb84,"MOV byte ptr GS:[0x1fb84],0x0",write other [TODO]
do_softirq.part.0,0x75,0xffffffff810cc300,CALL 0xffffffff810cc300,direct call
trace_event_raw_event_irq_handler_entry,0x21,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_irq_handler_entry,0x48,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
trace_event_raw_event_irq_handler_entry,0x64,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_irq_handler_entry,0x6e,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EBX",write other [TODO]
trace_event_raw_event_irq_handler_entry,0x7c,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_irq_handler_entry,0x8c,0xffffffff81c7f820,CALL 0xffffffff81c7f820,direct call
trace_event_raw_event_irq_handler_entry,0x95,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_irq_handler_entry,0xb5,,RET,ret
trace_event_raw_event_irq_handler_entry,0xbf,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_irq_handler_entry,0xce,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
tasklet_action_common.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_action_common.constprop.0,0x19,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],ESI",write stack
tasklet_action_common.constprop.0,0x1c,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
tasklet_action_common.constprop.0,0x25,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDI",write other [TODO]
tasklet_action_common.constprop.0,0x29,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
tasklet_action_common.constprop.0,0x30,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
tasklet_action_common.constprop.0,0x6d,0xffffffff81106df0,CALL 0xffffffff81106df0,direct call
tasklet_action_common.constprop.0,0x72,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
tasklet_action_common.constprop.0,0x78,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
tasklet_action_common.constprop.0,0x83,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
tasklet_action_common.constprop.0,0x86,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RBX",write other [TODO]
tasklet_action_common.constprop.0,0x95,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
tasklet_action_common.constprop.0,0xae,,RET,ret
tasklet_action_common.constprop.0,0xf4,0xffffffff810abb90,CALL 0xffffffff810abb90,direct call
tasklet_action_common.constprop.0,0x10a,ctx->rax,CALL RAX,in-direct call
tasklet_action_common.constprop.0,0x114,0xffffffff81106df0,CALL 0xffffffff81106df0,direct call
tasklet_action_common.constprop.0,0x122,ctx->rax,CALL RAX,in-direct call
tasklet_action,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_action,0x1d,0xffffffff810abf10,CALL 0xffffffff810abf10,direct call
tasklet_action,0x23,,RET,ret
tasklet_hi_action,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
tasklet_hi_action,0x1a,0xffffffff810abf10,CALL 0xffffffff810abf10,direct call
tasklet_hi_action,0x20,,RET,ret
run_ksoftirqd,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
run_ksoftirqd,0x9,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
run_ksoftirqd,0x1c,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
run_ksoftirqd,0x23,,RET,ret
run_ksoftirqd,0x24,0xffffffff82000000,CALL 0xffffffff82000000,direct call
run_ksoftirqd,0x29,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
run_ksoftirqd,0x2f,0xffffffff82000820,CALL 0xffffffff82000820,direct call
run_ksoftirqd,0x35,,RET,ret
__tasklet_schedule_common,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__tasklet_schedule_common,0xf,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
__tasklet_schedule_common,0x18,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
__tasklet_schedule_common,0x26,ctx->rdi,"MOV qword ptr [RDI],0x0",write other [TODO]
__tasklet_schedule_common,0x31,ctx->rax,"MOV qword ptr [RAX],RDI",write other [TODO]
__tasklet_schedule_common,0x34,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RDI",write other [TODO]
__tasklet_schedule_common,0x60,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
__tasklet_schedule_common,0x6a,,RET,ret
__tasklet_schedule_common,0xb9,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
__tasklet_schedule,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__tasklet_schedule,0x15,0xffffffff810ac0e0,CALL 0xffffffff810ac0e0,direct call
__tasklet_schedule,0x1b,,RET,ret
__tasklet_hi_schedule,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__tasklet_hi_schedule,0x12,0xffffffff810ac0e0,CALL 0xffffffff810ac0e0,direct call
__tasklet_hi_schedule,0x18,,RET,ret
takeover_tasklets,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
takeover_tasklets,0xa,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
takeover_tasklets,0x38,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
takeover_tasklets,0x48,ctx->gs + 0x20298,"MOV qword ptr GS:[0x20298],RCX",write other [TODO]
takeover_tasklets,0x50,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],0x0",write other [TODO]
takeover_tasklets,0x64,ctx->rax + ctx->rdx * 0x1 + 0x8,"MOV qword ptr [RAX + RDX*0x1 + 0x8],RCX",write other [TODO]
takeover_tasklets,0xaf,ctx->rcx,"MOV qword ptr [RCX],RDX",write other [TODO]
takeover_tasklets,0xbf,ctx->gs + 0x20288,"MOV qword ptr GS:[0x20288],RCX",write other [TODO]
takeover_tasklets,0xc7,ctx->rdx + ctx->rax * 0x1,"MOV qword ptr [RDX + RAX*0x1],0x0",write other [TODO]
takeover_tasklets,0xdb,ctx->rdx + ctx->rax * 0x1 + 0x8,"MOV qword ptr [RDX + RAX*0x1 + 0x8],RCX",write other [TODO]
takeover_tasklets,0xfd,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
takeover_tasklets,0x10a,,RET,ret
takeover_tasklets,0x1ac,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
takeover_tasklets,0x1c7,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
__local_bh_enable_ip,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__local_bh_enable_ip,0x44,,RET,ret
__local_bh_enable_ip,0x45,0xffffffff82000810,CALL 0xffffffff82000810,direct call
__local_bh_enable_ip,0x4b,,RET,ret
__local_bh_enable_ip,0x5d,0xffffffff810abdb0,CALL 0xffffffff810abdb0,direct call
do_softirq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_softirq,0x17,0xffffffff810abdb0,CALL 0xffffffff810abdb0,direct call
do_softirq,0x1d,,RET,ret
do_softirq,0x1e,,RET,ret
irq_enter_rcu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_enter_rcu,0x32,,RET,ret
irq_enter_rcu,0x37,0xffffffff81167b40,CALL 0xffffffff81167b40,direct call
irq_enter_rcu,0x3d,,RET,ret
irq_enter,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_enter,0x9,0xffffffff81d03bd0,CALL 0xffffffff81d03bd0,direct call
irq_enter,0x3c,,RET,ret
irq_enter,0x3d,0xffffffff81167b40,CALL 0xffffffff81167b40,direct call
irq_enter,0x43,,RET,ret
irq_exit_rcu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_exit_rcu,0x9,0xffffffff810abd00,CALL 0xffffffff810abd00,direct call
irq_exit_rcu,0xf,,RET,ret
irq_exit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
irq_exit,0x9,0xffffffff810abd00,CALL 0xffffffff810abd00,direct call
irq_exit,0xe,0xffffffff81d03be0,CALL 0xffffffff81d03be0,direct call
irq_exit,0x14,,RET,ret
raise_softirq_irqoff,0x31,,RET,ret
raise_softirq_irqoff,0x81,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
raise_softirq_irqoff,0x8b,,RET,ret
raise_softirq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
raise_softirq,0xf,0xffffffff82e4b950,CALL qword ptr [0xffffffff82e4b950],in-direct call
raise_softirq,0x18,0xffffffff82e4b958,CALL qword ptr [0xffffffff82e4b958],in-direct call
raise_softirq,0x46,0xffffffff82e4b960,CALL qword ptr [0xffffffff82e4b960],in-direct call
raise_softirq,0x50,,RET,ret
raise_softirq,0xa0,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
__raise_softirq_irqoff,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__raise_softirq_irqoff,0x28,,RET,ret
open_softirq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
open_softirq,0x9, - 0x7d1f9f40 + ctx->rdi * 0x8,"MOV qword ptr [-0x7d1f9f40 + RDI*0x8],RSI",write other [TODO]
open_softirq,0x15,,RET,ret
FUN_ffffffff810ac6e0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810ac6e0,0xc,,RET,ret
r_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
r_stop,0x10,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
r_stop,0x16,,RET,ret
__request_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__request_resource,0x3f,,RET,ret
__request_resource,0x4d,ctx->rsi + 0x30,"MOV qword ptr [RSI + 0x30],RDI",write other [TODO]
__request_resource,0x51,ctx->r8,"MOV qword ptr [R8],RSI",write other [TODO]
__request_resource,0x55,ctx->rsi + 0x28,"MOV qword ptr [RSI + 0x28],RAX",write other [TODO]
__request_resource,0x5b,,RET,ret
__release_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__release_resource,0x34,,RET,ret
__release_resource,0x4b,ctx->rcx + 0x28,"MOV qword ptr [RCX + 0x28],RSI",write other [TODO]
__release_resource,0x5f,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
__release_resource,0x66,ctx->rsi + 0x30,"MOV qword ptr [RSI + 0x30],RAX",write other [TODO]
__release_resource,0x70,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
__release_resource,0x75,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],0x0",write other [TODO]
__release_resource,0x7e,,RET,ret
release_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_resource,0x15,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
release_resource,0x22,0xffffffff810ac770,CALL 0xffffffff810ac770,direct call
release_resource,0x31,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
release_resource,0x3e,,RET,ret
simple_align_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
simple_align_resource,0xd,,RET,ret
remove_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
remove_resource,0x15,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
remove_resource,0x1f,0xffffffff810ac770,CALL 0xffffffff810ac770,direct call
remove_resource,0x2e,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
remove_resource,0x3b,,RET,ret
__adjust_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__adjust_resource,0x70,,RET,ret
__adjust_resource,0x73,ctx->rdi,"MOV qword ptr [RDI],RSI",write other [TODO]
__adjust_resource,0x77,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDX",write other [TODO]
__adjust_resource,0x7b,,RET,ret
adjust_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
adjust_resource,0x1f,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
adjust_resource,0x2d,0xffffffff810ac890,CALL 0xffffffff810ac890,direct call
adjust_resource,0x3c,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
adjust_resource,0x4b,,RET,ret
devm_resource_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_resource_match,0x12,,RET,ret
devm_region_match,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_region_match,0x14,,RET,ret
devm_region_match,0x2e,,RET,ret
r_show,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
r_show,0x5d,0xffffffff810b1080,CALL 0xffffffff810b1080,direct call
r_show,0x9a,0xffffffff813954e0,CALL 0xffffffff813954e0,direct call
r_show,0xad,,RET,ret
__release_child_resources,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__release_child_resources,0x10,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],0x0",write other [TODO]
__release_child_resources,0x21,,RET,ret
__release_child_resources,0x29,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],0x0",write other [TODO]
__release_child_resources,0x35,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],0x0",write other [TODO]
__release_child_resources,0x3e,0xffffffff810aca70,CALL 0xffffffff810aca70,direct call
__release_child_resources,0x4d,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__release_child_resources,0x5b,ctx->r12,"MOV qword ptr [R12],0x0",write other [TODO]
__release_child_resources,0x63,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
resource_list_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resource_list_free,0x36,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
resource_list_free,0x3a,ctx->rax,"MOV qword ptr [RAX],RBX",write other [TODO]
resource_list_free,0x3d,ctx->rdi,"MOV qword ptr [RDI],R14",write other [TODO]
resource_list_free,0x40,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
resource_list_free,0x44,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
resource_list_free,0x5c,,RET,ret
__request_region_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__request_region_locked,0x2f,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],R9D",write stack
__request_region_locked,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__request_region_locked,0x47,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R12",write stack
__request_region_locked,0x4b,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0x0",write stack
__request_region_locked,0x53,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
__request_region_locked,0x5b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
__request_region_locked,0x63,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],-0x7ef1b940",write stack
__request_region_locked,0x6b,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R8",write other [TODO]
__request_region_locked,0x6f,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
__request_region_locked,0x72,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
__request_region_locked,0x88,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
__request_region_locked,0x90,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],RAX",write other [TODO]
__request_region_locked,0x94,0xffffffff810ac710,CALL 0xffffffff810ac710,direct call
__request_region_locked,0xd6,0xffffffff81106bf0,CALL 0xffffffff81106bf0,direct call
__request_region_locked,0xe2,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
__request_region_locked,0xf1,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
__request_region_locked,0x101,0xffffffff81103ce0,CALL 0xffffffff81103ce0,direct call
__request_region_locked,0x10d,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
__request_region_locked,0x141,,RET,ret
__request_region_locked,0x146,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
devm_release_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_release_resource,0x1a,0xffffffff817febf0,CALL 0xffffffff817febf0,direct call
devm_release_resource,0x24,,RET,ret
iomem_fs_init_fs_context,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iomem_fs_init_fs_context,0xe,0xffffffff8139a0c0,CALL 0xffffffff8139a0c0,direct call
iomem_fs_init_fs_context,0x1d,,RET,ret
find_next_iomem_res,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_next_iomem_res,0x31,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
find_next_iomem_res,0x8c,ctx->r14 + 0x18,"MOV qword ptr [R14 + 0x18],R8",write other [TODO]
find_next_iomem_res,0x9e,ctx->r14 + 0x20,"MOV qword ptr [R14 + 0x20],R9",write other [TODO]
find_next_iomem_res,0xa6,ctx->r14 + 0x28,"MOV qword ptr [R14 + 0x28],R10",write other [TODO]
find_next_iomem_res,0xaa,ctx->r14,"MOV qword ptr [R14],RDX",write other [TODO]
find_next_iomem_res,0xad,ctx->r14 + 0x8,"MOV qword ptr [R14 + 0x8],RSI",write other [TODO]
find_next_iomem_res,0xb1,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
find_next_iomem_res,0xc2,,RET,ret
find_next_iomem_res,0xef,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
find_next_iomem_res,0x103,,RET,ret
find_next_iomem_res,0x109,,RET,ret
__region_intersects.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__region_intersects.isra.0,0x7e,,RET,ret
__region_intersects.isra.0,0x85,,RET,ret
region_intersects,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
region_intersects,0x23,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
region_intersects,0x3b,0xffffffff810acdf0,CALL 0xffffffff810acdf0,direct call
region_intersects,0x4a,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
region_intersects,0x5a,,RET,ret
r_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
r_start,0x25,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
r_start,0x57,,RET,ret
r_start,0x6e,,RET,ret
devm_resource_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_resource_release,0x15,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
devm_resource_release,0x22,0xffffffff810ac770,CALL 0xffffffff810ac770,direct call
devm_resource_release,0x2e,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
devm_resource_release,0x38,,RET,ret
r_next,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
r_next,0x17,,RET,ret
r_next,0x2b,,RET,ret
resource_list_create_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resource_list_create_entry,0x16,0xffffffff812b40e0,CALL 0xffffffff812b40e0,direct call
resource_list_create_entry,0x27,ctx->rax,"MOV qword ptr [RAX],RAX",write other [TODO]
resource_list_create_entry,0x2e,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RAX",write other [TODO]
resource_list_create_entry,0x32,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
resource_list_create_entry,0x3b,,RET,ret
devm_request_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_request_resource,0x37,0xffffffff817fdb40,CALL 0xffffffff817fdb40,direct call
devm_request_resource,0x41,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
devm_request_resource,0x4e,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
devm_request_resource,0x59,0xffffffff810ac710,CALL 0xffffffff810ac710,direct call
devm_request_resource,0x68,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
devm_request_resource,0x7c,0xffffffff817fe110,CALL 0xffffffff817fe110,direct call
devm_request_resource,0x8c,,RET,ret
walk_iomem_res_desc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
walk_iomem_res_desc,0x1c,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R9",write stack
walk_iomem_res_desc,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
walk_iomem_res_desc,0x50,ctx->rax,CALL RAX,in-direct call
walk_iomem_res_desc,0x73,0xffffffff810acce0,CALL 0xffffffff810acce0,direct call
walk_iomem_res_desc,0x9c,,RET,ret
walk_iomem_res_desc,0x9d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
free_resource.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_resource.part.0,0x54,,RET,ret
free_resource.part.0,0xb4,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
free_resource.part.0,0xba,,RET,ret
remove_free_mem_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
remove_free_mem_region,0x1c,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
remove_free_mem_region,0x26,0xffffffff810ac770,CALL 0xffffffff810ac770,direct call
remove_free_mem_region,0x32,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
remove_free_mem_region,0x3f,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
remove_free_mem_region,0x49,,RET,ret
__request_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__request_region,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
__request_region,0x37,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
__request_region,0x4b,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
__request_region,0x63,0xffffffff810acb40,CALL 0xffffffff810acb40,direct call
__request_region,0x71,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
__request_region,0x8b,,RET,ret
__request_region,0x92,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
__devm_request_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__devm_request_region,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__devm_request_region,0x43,0xffffffff817fdb40,CALL 0xffffffff817fdb40,direct call
__devm_request_region,0x4d,ctx->rax,"MOV qword ptr [RAX],R13",write other [TODO]
__devm_request_region,0x5a,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R14",write other [TODO]
__devm_request_region,0x67,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
__devm_request_region,0x6b,0xffffffff810ad270,CALL 0xffffffff810ad270,direct call
__devm_request_region,0x7e,0xffffffff817fe110,CALL 0xffffffff817fe110,direct call
__devm_request_region,0x94,,RET,ret
__devm_request_region,0x98,0xffffffff817fdba0,CALL 0xffffffff817fdba0,direct call
__release_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__release_region,0x26,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
__release_region,0x66,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
__release_region,0x69,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
__release_region,0x79,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
__release_region,0x86,,RET,ret
__release_region,0x9b,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
__release_region,0xad,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
__release_region,0xce,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
devm_region_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_region_release,0x17,0xffffffff810ad3c0,CALL 0xffffffff810ad3c0,direct call
devm_region_release,0x1d,,RET,ret
__devm_release_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__devm_release_region,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__devm_release_region,0x2a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDI",write stack
__devm_release_region,0x2e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RSI",write stack
__devm_release_region,0x32,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RCX",write stack
__devm_release_region,0x36,0xffffffff810ad3c0,CALL 0xffffffff810ad3c0,direct call
__devm_release_region,0x50,0xffffffff817febb0,CALL 0xffffffff817febb0,direct call
__devm_release_region,0x6d,,RET,ret
__devm_release_region,0x72,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
page_is_ram,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
page_is_ram,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RDX",write stack
page_is_ram,0x37,0xffffffff810acce0,CALL 0xffffffff810acce0,direct call
page_is_ram,0x79,,RET,ret
page_is_ram,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__insert_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__insert_resource,0x68,,RET,ret
__insert_resource,0x76,ctx->r8 + 0x30,"MOV qword ptr [R8 + 0x30],RDX",write other [TODO]
__insert_resource,0x7a,ctx->r9,"MOV qword ptr [R9],R8",write other [TODO]
__insert_resource,0x7e,ctx->r8 + 0x28,"MOV qword ptr [R8 + 0x28],RAX",write other [TODO]
__insert_resource,0x84,,RET,ret
__insert_resource,0xb4,,RET,ret
__insert_resource,0xb5,ctx->r8 + 0x28,"MOV qword ptr [R8 + 0x28],RAX",write other [TODO]
__insert_resource,0xbd,ctx->r8 + 0x38,"MOV qword ptr [R8 + 0x38],RDX",write other [TODO]
__insert_resource,0xc1,ctx->r8 + 0x30,"MOV qword ptr [R8 + 0x30],RCX",write other [TODO]
__insert_resource,0xc8,ctx->r10 + 0x30,"MOV qword ptr [R10 + 0x30],0x0",write other [TODO]
__insert_resource,0xd0,ctx->rcx + 0x28,"MOV qword ptr [RCX + 0x28],R8",write other [TODO]
__insert_resource,0xf2,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],R8",write other [TODO]
__insert_resource,0xf9,,RET,ret
__insert_resource,0xfa,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],R8",write other [TODO]
__insert_resource,0x101,,RET,ret
insert_resource_expand_to_fit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
insert_resource_expand_to_fit,0xc,,RET,ret
insert_resource_expand_to_fit,0x21,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
insert_resource_expand_to_fit,0x2c,0xffffffff810ad5d0,CALL 0xffffffff810ad5d0,direct call
insert_resource_expand_to_fit,0x3d,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
insert_resource_expand_to_fit,0x46,,RET,ret
insert_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
insert_resource,0x1b,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
insert_resource,0x26,0xffffffff810ad5d0,CALL 0xffffffff810ad5d0,direct call
insert_resource,0x35,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
insert_resource,0x48,,RET,ret
get_free_mem_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_free_mem_region,0x3e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R8",write stack
get_free_mem_region,0x42,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R9",write stack
get_free_mem_region,0x46,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
get_free_mem_region,0x4a,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
get_free_mem_region,0x62,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
get_free_mem_region,0x81,0xffffffff817fe540,CALL 0xffffffff817fe540,direct call
get_free_mem_region,0x98,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
get_free_mem_region,0xa2,0xffffffff810ac770,CALL 0xffffffff810ac770,direct call
get_free_mem_region,0xae,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
get_free_mem_region,0xbd,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
get_free_mem_region,0xd4,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
get_free_mem_region,0xe3,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
get_free_mem_region,0x1fc,0xffffffff817fdb40,CALL 0xffffffff817fdb40,direct call
get_free_mem_region,0x201,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
FUN_ffffffff810ad933,-0xd0,,RET,ret
FUN_ffffffff810ad933,-0x86,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
FUN_ffffffff810ad933,-0x59,0xffffffff817fed90,CALL 0xffffffff817fed90,direct call
FUN_ffffffff810ad933,0x2a,0xffffffff810acdf0,CALL 0xffffffff810acdf0,direct call
FUN_ffffffff810ad933,0x8e,0xffffffff810acb40,CALL 0xffffffff810acb40,direct call
FUN_ffffffff810ad933,0xa2,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
FUN_ffffffff810ad933,0xb1,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
FUN_ffffffff810ad933,0xba,0xffffffff817fdba0,CALL 0xffffffff817fdba0,direct call
FUN_ffffffff810ad933,0xc9,ctx->r15,"MOV qword ptr [R15],R13",write other [TODO]
FUN_ffffffff810ad933,0xd2,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
FUN_ffffffff810ad933,0xda,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],0x200",write other [TODO]
FUN_ffffffff810ad933,0xe2,ctx->r15 + 0x10,"MOV qword ptr [R15 + 0x10],RAX",write other [TODO]
FUN_ffffffff810ad933,0xea,ctx->r15 + 0x20,"MOV qword ptr [R15 + 0x20],RAX",write other [TODO]
FUN_ffffffff810ad933,0xee,0xffffffff810ad5d0,CALL 0xffffffff810ad5d0,direct call
FUN_ffffffff810ad933,0x103,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
FUN_ffffffff810ad933,0x13f,ctx->rax,"MOV qword ptr [RAX],-0x7d19e140",write other [TODO]
FUN_ffffffff810ad933,0x149,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
FUN_ffffffff810ad933,0x14d,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
FUN_ffffffff810ad933,0x151,0xffffffff817fe110,CALL 0xffffffff817fe110,direct call
FUN_ffffffff810ad933,0x161,ctx->r15 + 0x20,"MOV qword ptr [R15 + 0x20],RAX",write other [TODO]
FUN_ffffffff810ad933,0x165,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
FUN_ffffffff810ad933,0x197,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
FUN_ffffffff810adaa2,-0x1a3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R9",write stack
FUN_ffffffff810adaa2,-0x19f,0xffffffff810acdf0,CALL 0xffffffff810acdf0,direct call
devm_request_free_mem_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
devm_request_free_mem_region,0x22,0xffffffff810ad790,CALL 0xffffffff810ad790,direct call
devm_request_free_mem_region,0x28,,RET,ret
request_free_mem_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
request_free_mem_region,0x21,0xffffffff810ad790,CALL 0xffffffff810ad790,direct call
request_free_mem_region,0x27,,RET,ret
alloc_free_mem_region,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_free_mem_region,0x1e,0xffffffff810ad790,CALL 0xffffffff810ad790,direct call
alloc_free_mem_region,0x28,,RET,ret
request_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
request_resource,0x19,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
request_resource,0x56,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
request_resource,0x69,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
request_resource,0x7a,,RET,ret
request_resource,0x88,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RCX",write other [TODO]
request_resource,0x94,ctx->rsi,"MOV qword ptr [RSI],R12",write other [TODO]
request_resource,0x97,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RBX",write other [TODO]
request_resource,0x9c,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
release_child_resources,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_child_resources,0x16,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
release_child_resources,0x1f,ctx->rbx + 0x38,"MOV qword ptr [RBX + 0x38],0x0",write other [TODO]
release_child_resources,0x33,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
release_child_resources,0x3c,,RET,ret
release_child_resources,0x45,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],0x0",write other [TODO]
release_child_resources,0x50,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],0x0",write other [TODO]
release_child_resources,0x58,0xffffffff810aca70,CALL 0xffffffff810aca70,direct call
release_child_resources,0x67,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
release_child_resources,0x73,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
release_child_resources,0x7a,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
request_resource_conflict,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
request_resource_conflict,0x19,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
request_resource_conflict,0x5b,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
request_resource_conflict,0x67,,RET,ret
request_resource_conflict,0x75,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RCX",write other [TODO]
request_resource_conflict,0x79,ctx->rsi,"MOV qword ptr [RSI],RBX",write other [TODO]
request_resource_conflict,0x7c,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],R12",write other [TODO]
walk_system_ram_res,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
walk_system_ram_res,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
walk_system_ram_res,0x48,ctx->r12,CALL R12,in-direct call
walk_system_ram_res,0x6b,0xffffffff810acce0,CALL 0xffffffff810acce0,direct call
walk_system_ram_res,0x94,,RET,ret
walk_system_ram_res,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
walk_mem_res,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
walk_mem_res,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
walk_mem_res,0x48,ctx->r12,CALL R12,in-direct call
walk_mem_res,0x6b,0xffffffff810acce0,CALL 0xffffffff810acce0,direct call
walk_mem_res,0x94,,RET,ret
walk_mem_res,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
walk_system_ram_range,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
walk_system_ram_range,0x37,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RCX",write stack
walk_system_ram_range,0x44,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
walk_system_ram_range,0x5b,0xffffffff810acce0,CALL 0xffffffff810acce0,direct call
walk_system_ram_range,0x91,ctx->rax,CALL RAX,in-direct call
walk_system_ram_range,0xc0,,RET,ret
walk_system_ram_range,0xc1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
FUN_ffffffff810adf50,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810adf50,0xa,,RET,ret
__find_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__find_resource,0x25,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RCX",write stack
__find_resource,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__find_resource,0x43,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RAX",write stack
__find_resource,0x4e,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
__find_resource,0x59,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
__find_resource,0x64,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RAX",write stack
__find_resource,0x6f,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RAX",write stack
__find_resource,0x7a,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
__find_resource,0x82,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
__find_resource,0x89,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RAX",write stack
__find_resource,0xb7,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RDX",write stack
__find_resource,0xd3,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RSI",write stack
__find_resource,0xdf,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RCX",write stack
__find_resource,0xed,0xffffffff810415d0,CALL 0xffffffff810415d0,direct call
__find_resource,0x11d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R9",write stack
__find_resource,0x121,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__find_resource,0x125,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RSI",write stack
__find_resource,0x139,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],R9",write stack
__find_resource,0x144,ctx->r14 + 0x18,CALL qword ptr [R14 + 0x18],in-direct call
__find_resource,0x19d,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RAX",write stack
__find_resource,0x1b5,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RDX",write stack
__find_resource,0x1ea,,RET,ret
__find_resource,0x212,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
__find_resource,0x217,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RCX",write other [TODO]
__find_resource,0x21d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
reallocate_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
reallocate_resource,0x31,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
reallocate_resource,0x38,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
reallocate_resource,0x40,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
reallocate_resource,0x48,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
reallocate_resource,0x50,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
reallocate_resource,0x58,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
reallocate_resource,0x60,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
reallocate_resource,0x68,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
reallocate_resource,0x70,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
reallocate_resource,0x74,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
reallocate_resource,0x89,0xffffffff810adf60,CALL 0xffffffff810adf60,direct call
reallocate_resource,0xd3,0xffffffff810ac770,CALL 0xffffffff810ac770,direct call
reallocate_resource,0xe2,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
reallocate_resource,0xea,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
reallocate_resource,0xf3,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
reallocate_resource,0xfc,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
reallocate_resource,0x105,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
reallocate_resource,0x10e,ctx->r12 + 0x28,"MOV qword ptr [R12 + 0x28],RAX",write other [TODO]
reallocate_resource,0x117,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
reallocate_resource,0x120,ctx->r12 + 0x38,"MOV qword ptr [R12 + 0x38],RAX",write other [TODO]
reallocate_resource,0x125,0xffffffff810ac710,CALL 0xffffffff810ac710,direct call
reallocate_resource,0x13a,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
reallocate_resource,0x15e,,RET,ret
reallocate_resource,0x1a9,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
reallocate_resource,0x1ad,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RDX",write other [TODO]
reallocate_resource,0x1b9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
allocate_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
allocate_resource,0x29,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
allocate_resource,0x36,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
allocate_resource,0x3d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
allocate_resource,0x4a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
allocate_resource,0x4e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
allocate_resource,0x56,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
allocate_resource,0x63,0xffffffff810ae190,CALL 0xffffffff810ae190,direct call
allocate_resource,0x88,,RET,ret
allocate_resource,0x90,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
allocate_resource,0xa4,0xffffffff810adf60,CALL 0xffffffff810adf60,direct call
allocate_resource,0xb6,0xffffffff810ac710,CALL 0xffffffff810ac710,direct call
allocate_resource,0xce,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
allocate_resource,0xd5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
lookup_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
lookup_resource,0x19,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
lookup_resource,0x41,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
lookup_resource,0x4d,,RET,ret
insert_resource_conflict,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
insert_resource_conflict,0x1a,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
insert_resource_conflict,0x25,0xffffffff810ad5d0,CALL 0xffffffff810ad5d0,direct call
insert_resource_conflict,0x34,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
insert_resource_conflict,0x41,,RET,ret
resource_alignment,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
resource_alignment,0x26,,RET,ret
resource_alignment,0x2a,,RET,ret
resource_alignment,0x37,,RET,ret
iomem_get_mapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iomem_get_mapping,0x15,,RET,ret
release_mem_region_adjustable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
release_mem_region_adjustable,0x27,,RET,ret
release_mem_region_adjustable,0x53,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
release_mem_region_adjustable,0x62,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
release_mem_region_adjustable,0xe9,ctx->r13,"MOV qword ptr [R13],R14",write other [TODO]
release_mem_region_adjustable,0xf0,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RAX",write other [TODO]
release_mem_region_adjustable,0xf9,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RAX",write other [TODO]
release_mem_region_adjustable,0x102,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RAX",write other [TODO]
release_mem_region_adjustable,0x10b,ctx->r13 + 0x20,"MOV qword ptr [R13 + 0x20],RAX",write other [TODO]
release_mem_region_adjustable,0x114,ctx->r13 + 0x28,"MOV qword ptr [R13 + 0x28],RAX",write other [TODO]
release_mem_region_adjustable,0x11d,ctx->r13 + 0x38,"MOV qword ptr [R13 + 0x38],0x0",write other [TODO]
release_mem_region_adjustable,0x125,ctx->r13 + 0x30,"MOV qword ptr [R13 + 0x30],RAX",write other [TODO]
release_mem_region_adjustable,0x133,0xffffffff810ac890,CALL 0xffffffff810ac890,direct call
release_mem_region_adjustable,0x13c,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],R13",write other [TODO]
release_mem_region_adjustable,0x148,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
release_mem_region_adjustable,0x157,,RET,ret
release_mem_region_adjustable,0x170,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
release_mem_region_adjustable,0x181,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
release_mem_region_adjustable,0x190,,RET,ret
release_mem_region_adjustable,0x1a6,0xffffffff810ac890,CALL 0xffffffff810ac890,direct call
release_mem_region_adjustable,0x1cc,0xffffffff810ac890,CALL 0xffffffff810ac890,direct call
release_mem_region_adjustable,0x1e1,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
release_mem_region_adjustable,0x1e4,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
release_mem_region_adjustable,0x1ff,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
release_mem_region_adjustable,0x217,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
merge_system_ram_resource,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
merge_system_ram_resource,0x2c,0xffffffff81d14e80,CALL 0xffffffff81d14e80,direct call
merge_system_ram_resource,0x41,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
merge_system_ram_resource,0x78,0xffffffff81d14bd0,CALL 0xffffffff81d14bd0,direct call
merge_system_ram_resource,0x82,,RET,ret
merge_system_ram_resource,0xc6,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
merge_system_ram_resource,0xcf,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],RDX",write other [TODO]
merge_system_ram_resource,0xdb,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
merge_system_ram_resource,0x12d,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
merge_system_ram_resource,0x136,ctx->r12 + 0x30,"MOV qword ptr [R12 + 0x30],RAX",write other [TODO]
merge_system_ram_resource,0x13b,0xffffffff810ad150,CALL 0xffffffff810ad150,direct call
iomem_map_sanity_check,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iomem_map_sanity_check,0x19,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
iomem_map_sanity_check,0xa3,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
iomem_map_sanity_check,0xaf,,RET,ret
iomem_is_exclusive,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
iomem_is_exclusive,0x1d,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
iomem_is_exclusive,0x8c,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
iomem_is_exclusive,0x98,,RET,ret
do_proc_dobool_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dobool_conv,0x17,,RET,ret
do_proc_dobool_conv,0x1c,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
do_proc_dobool_conv,0x21,ctx->rdi,"MOV byte ptr [RDI],0x0",write other [TODO]
do_proc_dobool_conv,0x24,,RET,ret
do_proc_douintvec_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_douintvec_conv,0x19,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
do_proc_douintvec_conv,0x1e,,RET,ret
do_proc_douintvec_conv,0x22,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
do_proc_douintvec_conv,0x27,,RET,ret
do_proc_douintvec_conv,0x2e,,RET,ret
do_proc_douintvec_minmax_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_douintvec_minmax_conv,0x32,ctx->rsi,"MOV dword ptr [RSI],EAX",write other [TODO]
do_proc_douintvec_minmax_conv,0x37,,RET,ret
do_proc_douintvec_minmax_conv,0x3a,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
do_proc_douintvec_minmax_conv,0x40,,RET,ret
do_proc_douintvec_minmax_conv,0x47,,RET,ret
do_proc_douintvec_minmax_conv,0x4e,,RET,ret
proc_put_long,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_put_long,0x39,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
proc_put_long,0x4f,0xffffffff81c85690,CALL 0xffffffff81c85690,direct call
proc_put_long,0x5c,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
proc_put_long,0x90,ctx->rdx,"MOV byte ptr [RDX],CL",write other [TODO]
proc_put_long,0xb6,,RET,ret
proc_put_long,0xbb,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
proc_put_long,0xc5,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],RSI",write other [TODO]
proc_put_long,0xf1,ctx->rsi + ctx->rdi * 0x1,"MOV qword ptr [RSI + RDI*0x1],R8",write other [TODO]
proc_put_long,0xfe,ctx->rdx,"MOV dword ptr [RDX],ECX",write other [TODO]
proc_put_long,0x107,ctx->rdx + ctx->rcx * 0x1 - 0x4,"MOV dword ptr [RDX + RCX*0x1 + -0x4],ESI",write other [TODO]
proc_put_long,0x115,ctx->wordctx->ptrctx->rdx + ctx->rcx * 0x1 - 0x2,"MOV word ptr [RDX + RCX*0x1 + -0x2],SI",write other [TODO]
proc_put_long,0x11f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_put_long,0xbe7188,0xffffffff81cb4d33,CALL 0xffffffff81cb4d33,direct call
proc_first_pos_non_zero_ignore.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_first_pos_non_zero_ignore.part.0,0x24,,RET,ret
proc_first_pos_non_zero_ignore.part.0,0x41,,RET,ret
proc_dostring,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dostring,0x2c,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ESI",write stack
proc_dostring,0x2f,0xffffffff810aec10,CALL 0xffffffff810aec10,direct call
proc_dostring,0x79,ctx->r14,"MOV qword ptr [R14],RAX",write other [TODO]
proc_dostring,0xbd,ctx->rcx,"MOV byte ptr [RCX],DL",write other [TODO]
proc_dostring,0xd3,ctx->rsi,"MOV byte ptr [RSI],0x0",write other [TODO]
proc_dostring,0xdb,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
proc_dostring,0xdf,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
proc_dostring,0xf3,ctx->r13,"MOV qword ptr [R13],0x0",write other [TODO]
proc_dostring,0x10b,,RET,ret
proc_dostring,0x11f,ctx->r12 + ctx->rbx * 0x1,"MOV byte ptr [R12 + RBX*0x1],0xa",write other [TODO]
proc_dostring,0x128,ctx->r13,"MOV qword ptr [R13],RBX",write other [TODO]
proc_dostring,0x134,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
proc_dostring,0x138,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
proc_dostring,0x16e,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
proc_get_long.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_get_long.constprop.0,0x19,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
proc_get_long.constprop.0,0x20,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R9",write stack
proc_get_long.constprop.0,0x2d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
proc_get_long.constprop.0,0x70,ctx->rbp - 0x46,"MOV byte ptr [RBP + -0x46],DL",write stack
proc_get_long.constprop.0,0x7b,ctx->rbp + ctx->rax * 0x1 - 0x46,"MOV byte ptr [RBP + RAX*0x1 + -0x46],0x0",write stack
proc_get_long.constprop.0,0x9e,ctx->r10,"MOV byte ptr [R10],DL",write other [TODO]
proc_get_long.constprop.0,0xae,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],0x0",write stack
proc_get_long.constprop.0,0xb5,0xffffffff816079b0,CALL 0xffffffff816079b0,direct call
proc_get_long.constprop.0,0xba,ctx->esi,"MOV ESI,dword ptr [RBP + -0x54]",write other [TODO]
proc_get_long.constprop.0,0xc7,0xffffffff81607ab0,CALL 0xffffffff81607ab0,direct call
proc_get_long.constprop.0,0xdf,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
proc_get_long.constprop.0,0x103,ctx->rbp - 0x69,"MOV byte ptr [RBP + -0x69],SIL",write stack
proc_get_long.constprop.0,0x107,0xffffffff81c7fcb0,CALL 0xffffffff81c7fcb0,direct call
proc_get_long.constprop.0,0x124,ctx->rax,"MOV byte ptr [RAX],CL",write other [TODO]
proc_get_long.constprop.0,0x150,,RET,ret
proc_get_long.constprop.0,0x158,ctx->rbp - 0x46,"MOV qword ptr [RBP + -0x46],RDX",write stack
proc_get_long.constprop.0,0x163,ctx->r14 + ctx->rdx * 0x1 - 0x8,"MOV qword ptr [R14 + RDX*0x1 + -0x8],RSI",write other [TODO]
proc_get_long.constprop.0,0x18e,ctx->r11 + ctx->r8 * 0x1,"MOV qword ptr [R11 + R8*0x1],R9",write other [TODO]
proc_get_long.constprop.0,0x1aa,ctx->rbp - 0x46,"MOV dword ptr [RBP + -0x46],EDX",write stack
proc_get_long.constprop.0,0x1b3,ctx->r14 + ctx->rdx * 0x1 - 0x4,"MOV dword ptr [R14 + RDX*0x1 + -0x4],ESI",write other [TODO]
proc_get_long.constprop.0,0x1ce,ctx->wordctx->ptrctx->r14 + ctx->rdx * 0x1 - 0x2,"MOV word ptr [R14 + RDX*0x1 + -0x2],SI",write other [TODO]
proc_get_long.constprop.0,0x1d9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_proc_dointvec_userhz_jiffies_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dointvec_userhz_jiffies_conv,0x3e,0xffffffff8114ff90,CALL 0xffffffff8114ff90,direct call
do_proc_dointvec_userhz_jiffies_conv,0x43,ctx->r12,"MOV dword ptr [R12],EAX",write other [TODO]
do_proc_dointvec_userhz_jiffies_conv,0x4d,,RET,ret
do_proc_dointvec_userhz_jiffies_conv,0x57,ctx->r8,"MOV byte ptr [R8],DL",write other [TODO]
do_proc_dointvec_userhz_jiffies_conv,0x5a,0xffffffff8114ff60,CALL 0xffffffff8114ff60,direct call
do_proc_dointvec_userhz_jiffies_conv,0x5f,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
do_proc_dointvec_userhz_jiffies_conv,0x68,,RET,ret
do_proc_dointvec_userhz_jiffies_conv,0x71,ctx->r8,"MOV byte ptr [R8],DL",write other [TODO]
do_proc_dointvec_userhz_jiffies_conv,0x74,0xffffffff8114ff60,CALL 0xffffffff8114ff60,direct call
do_proc_dointvec_userhz_jiffies_conv,0x79,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
do_proc_dointvec_ms_jiffies_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dointvec_ms_jiffies_conv,0x25,0xffffffff8114fe70,CALL 0xffffffff8114fe70,direct call
do_proc_dointvec_ms_jiffies_conv,0x3b,ctx->r12,"MOV dword ptr [R12],EDX",write other [TODO]
do_proc_dointvec_ms_jiffies_conv,0x45,,RET,ret
do_proc_dointvec_ms_jiffies_conv,0x58,ctx->rdi,"MOV byte ptr [RDI],DL",write other [TODO]
do_proc_dointvec_ms_jiffies_conv,0x5d,0xffffffff8114fd40,CALL 0xffffffff8114fd40,direct call
do_proc_dointvec_ms_jiffies_conv,0x64,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
do_proc_dointvec_ms_jiffies_conv,0x6d,,RET,ret
do_proc_dointvec_jiffies_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dointvec_jiffies_conv,0x2b,ctx->rdx,"MOV dword ptr [RDX],ECX",write other [TODO]
do_proc_dointvec_jiffies_conv,0x2e,,RET,ret
do_proc_dointvec_jiffies_conv,0x45,ctx->rdi,"MOV byte ptr [RDI],CL",write other [TODO]
do_proc_dointvec_jiffies_conv,0x51,ctx->rsi,"MOV qword ptr [RSI],RDX",write other [TODO]
do_proc_dointvec_jiffies_conv,0x54,,RET,ret
do_proc_dointvec_jiffies_conv,0x67,ctx->rdx,"MOV dword ptr [RDX],ECX",write other [TODO]
do_proc_dointvec_jiffies_conv,0x6a,,RET,ret
do_proc_dointvec_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dointvec_conv,0x22,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
do_proc_dointvec_conv,0x26,,RET,ret
do_proc_dointvec_conv,0x2e,ctx->rdi,"MOV byte ptr [RDI],0x0",write other [TODO]
do_proc_dointvec_conv,0x32,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
do_proc_dointvec_conv,0x37,,RET,ret
do_proc_dointvec_conv,0x40,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
do_proc_dointvec_conv,0x45,,RET,ret
do_proc_dointvec_conv,0x49,ctx->rdi,"MOV byte ptr [RDI],0x1",write other [TODO]
do_proc_dointvec_conv,0x4d,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
do_proc_dointvec_conv,0x52,,RET,ret
do_proc_dointvec_conv,0x59,,RET,ret
do_proc_dointvec_minmax_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dointvec_minmax_conv,0x36,ctx->rdx,"MOV dword ptr [RDX],EAX",write other [TODO]
do_proc_dointvec_minmax_conv,0x3b,,RET,ret
do_proc_dointvec_minmax_conv,0x51,ctx->rdi,"MOV byte ptr [RDI],0x0",write other [TODO]
do_proc_dointvec_minmax_conv,0x55,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
do_proc_dointvec_minmax_conv,0x5a,,RET,ret
do_proc_dointvec_minmax_conv,0x5e,ctx->rdi,"MOV byte ptr [RDI],0x1",write other [TODO]
do_proc_dointvec_minmax_conv,0x62,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
do_proc_dointvec_minmax_conv,0x67,,RET,ret
do_proc_dointvec_minmax_conv,0x6e,,RET,ret
do_proc_dointvec_ms_jiffies_minmax_conv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_dointvec_ms_jiffies_minmax_conv,0x2b,0xffffffff8114fe70,CALL 0xffffffff8114fe70,direct call
do_proc_dointvec_ms_jiffies_minmax_conv,0x58,ctx->r12,"MOV dword ptr [R12],EAX",write other [TODO]
do_proc_dointvec_ms_jiffies_minmax_conv,0x68,,RET,ret
do_proc_dointvec_ms_jiffies_minmax_conv,0x7a,ctx->rax,"MOV byte ptr [RAX],DL",write other [TODO]
do_proc_dointvec_ms_jiffies_minmax_conv,0x7c,0xffffffff8114fd40,CALL 0xffffffff8114fd40,direct call
do_proc_dointvec_ms_jiffies_minmax_conv,0x86,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
do_proc_dointvec_ms_jiffies_minmax_conv,0x92,,RET,ret
proc_do_large_bitmap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_do_large_bitmap,0x1d,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RCX",write stack
proc_do_large_bitmap,0x25,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
proc_do_large_bitmap,0x2c,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R8",write stack
proc_do_large_bitmap,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
proc_do_large_bitmap,0x43,ctx->wordctx->ptrctx->rbp - 0x33,"MOV word ptr [RBP + -0x33],SI",write stack
proc_do_large_bitmap,0x47,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
proc_do_large_bitmap,0x53,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],R13D",write stack
proc_do_large_bitmap,0x5a,ctx->wordctx->ptrctx->rbp - 0x36,"MOV word ptr [RBP + -0x36],DX",write stack
proc_do_large_bitmap,0x61,ctx->rbp - 0x34,"MOV byte ptr [RBP + -0x34],0xa",write stack
proc_do_large_bitmap,0x6b,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x0",write stack
proc_do_large_bitmap,0x85,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
proc_do_large_bitmap,0xaf,,RET,ret
proc_do_large_bitmap,0xbe,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],0x0",write stack
proc_do_large_bitmap,0xcd,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R12",write stack
proc_do_large_bitmap,0xe1,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],0xfff",write stack
proc_do_large_bitmap,0xe9,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RAX",write stack
proc_do_large_bitmap,0xfb,ctx->rbp - 0x85,"MOV byte ptr [RBP + -0x85],DL",write stack
proc_do_large_bitmap,0x101,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],R9",write stack
proc_do_large_bitmap,0x108,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R10",write stack
proc_do_large_bitmap,0x10c,0xffffffff815faa40,CALL 0xffffffff815faa40,direct call
proc_do_large_bitmap,0x174,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
proc_do_large_bitmap,0x180,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
proc_do_large_bitmap,0x18d,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R13",write stack
proc_do_large_bitmap,0x199,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],R14",write stack
proc_do_large_bitmap,0x1c2,0xffffffff810aede0,CALL 0xffffffff810aede0,direct call
proc_do_large_bitmap,0x202,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R11",write stack
proc_do_large_bitmap,0x214,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
proc_do_large_bitmap,0x235,0xffffffff815f9db0,CALL 0xffffffff815f9db0,direct call
proc_do_large_bitmap,0x27e,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R14",write stack
proc_do_large_bitmap,0x287,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
proc_do_large_bitmap,0x2c2,0xffffffff81601ef0,CALL 0xffffffff81601ef0,direct call
proc_do_large_bitmap,0x2dd,0xffffffff81602030,CALL 0xffffffff81602030,direct call
proc_do_large_bitmap,0x2ff,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
proc_do_large_bitmap,0x303,ctx->rdx,"MOV byte ptr [RDX],0x2c",write other [TODO]
proc_do_large_bitmap,0x30a,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
proc_do_large_bitmap,0x317,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R8",write stack
proc_do_large_bitmap,0x31f,0xffffffff810aeae0,CALL 0xffffffff810aeae0,direct call
proc_do_large_bitmap,0x33e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
proc_do_large_bitmap,0x342,ctx->rdx,"MOV byte ptr [RDX],0x2d",write other [TODO]
proc_do_large_bitmap,0x349,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
proc_do_large_bitmap,0x35a,0xffffffff810aeae0,CALL 0xffffffff810aeae0,direct call
proc_do_large_bitmap,0x379,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RCX",write stack
proc_do_large_bitmap,0x384,ctx->rdi,"MOV qword ptr [RDI],RDX",write other [TODO]
proc_do_large_bitmap,0x38f,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],EAX",write stack
proc_do_large_bitmap,0x392,0xffffffff815fa2d0,CALL 0xffffffff815fa2d0,direct call
proc_do_large_bitmap,0x39f,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
proc_do_large_bitmap,0x3a3,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
proc_do_large_bitmap,0x3b4,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],R11",write stack
proc_do_large_bitmap,0x3cb,0xffffffff810aede0,CALL 0xffffffff810aede0,direct call
proc_do_large_bitmap,0x41e,0xffffffff815f9db0,CALL 0xffffffff815f9db0,direct call
proc_do_large_bitmap,0x42c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
proc_do_large_bitmap,0x43b,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R13",write stack
proc_do_large_bitmap,0x45c,ctx->rdx,"MOV byte ptr [RDX],0xa",write other [TODO]
proc_do_large_bitmap,0x47c,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RBX",write stack
proc_do_large_bitmap,0x4a1,0xffffffff815f9bd0,CALL 0xffffffff815f9bd0,direct call
proc_do_large_bitmap,0x4c7,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
proc_do_large_bitmap,0x4e7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_proc_douintvec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__do_proc_douintvec,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
__do_proc_douintvec,0x94,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R9",write stack
__do_proc_douintvec,0xa0,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R8",write stack
__do_proc_douintvec,0xa8,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R10",write stack
__do_proc_douintvec,0xac,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R10",write stack
__do_proc_douintvec,0xb0,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
__do_proc_douintvec,0xb4,ctx->r13,CALL R13,in-direct call
__do_proc_douintvec,0xc1,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],EAX",write stack
__do_proc_douintvec,0xdc,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R9",write stack
__do_proc_douintvec,0xe0,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R8",write stack
__do_proc_douintvec,0xe4,0xffffffff810aeae0,CALL 0xffffffff810aeae0,direct call
__do_proc_douintvec,0x105,ctx->rdx,"MOV byte ptr [RDX],0xa",write other [TODO]
__do_proc_douintvec,0x10e,ctx->r8,"MOV qword ptr [R8],RDX",write other [TODO]
__do_proc_douintvec,0x116,ctx->r8,"MOV qword ptr [R8],0x0",write other [TODO]
__do_proc_douintvec,0x140,,RET,ret
__do_proc_douintvec,0x141,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R9",write stack
__do_proc_douintvec,0x145,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R8",write stack
__do_proc_douintvec,0x149,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
__do_proc_douintvec,0x14d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
__do_proc_douintvec,0x156,ctx->rbp - 0x6c,"MOV byte ptr [RBP + -0x6c],DL",write stack
__do_proc_douintvec,0x159,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R10",write stack
__do_proc_douintvec,0x15d,0xffffffff810aec10,CALL 0xffffffff810aec10,direct call
__do_proc_douintvec,0x1b2,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R15",write stack
__do_proc_douintvec,0x1b6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__do_proc_douintvec,0x1d4,0xffffffff810aede0,CALL 0xffffffff810aede0,direct call
__do_proc_douintvec,0x1f2,ctx->r13,CALL R13,in-direct call
__do_proc_douintvec,0x22d,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0xfff",write stack
__do_proc_douintvec,0x257,ctx->r8,"MOV qword ptr [R8],0x0",write other [TODO]
__do_proc_douintvec,0x272,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_douintvec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_douintvec,0x27,0xffffffff810af790,CALL 0xffffffff810af790,direct call
proc_douintvec,0x31,,RET,ret
proc_douintvec_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_douintvec_minmax,0x29,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
proc_douintvec_minmax,0x31,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
proc_douintvec_minmax,0x3d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
proc_douintvec_minmax,0x4b,0xffffffff810af790,CALL 0xffffffff810af790,direct call
proc_douintvec_minmax,0x64,,RET,ret
proc_douintvec_minmax,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_dou8vec_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dou8vec_minmax,0x23,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RCX",write stack
proc_dou8vec_minmax,0x31,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],0x0",write stack
proc_dou8vec_minmax,0x38,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RCX",write stack
proc_dou8vec_minmax,0x40,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],0xff",write stack
proc_dou8vec_minmax,0x47,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RCX",write stack
proc_dou8vec_minmax,0x64,ctx->rbp - 0x74,"MOV dword ptr [RBP + -0x74],ECX",write stack
proc_dou8vec_minmax,0x7e,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],ECX",write stack
proc_dou8vec_minmax,0x9d,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDI",write stack
proc_dou8vec_minmax,0xa1,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
proc_dou8vec_minmax,0xa9,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
proc_dou8vec_minmax,0xb1,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x4",write stack
proc_dou8vec_minmax,0xb8,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RCX",write stack
proc_dou8vec_minmax,0xc0,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RCX",write stack
proc_dou8vec_minmax,0xc8,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
proc_dou8vec_minmax,0xd4,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RCX",write stack
proc_dou8vec_minmax,0xdb,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
proc_dou8vec_minmax,0xe4,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],EAX",write stack
proc_dou8vec_minmax,0xf1,0xffffffff810af790,CALL 0xffffffff810af790,direct call
proc_dou8vec_minmax,0x117,,RET,ret
proc_dou8vec_minmax,0x11b,ctx->r12,"MOV byte ptr [R12],DL",write other [TODO]
proc_dou8vec_minmax,0x128,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_proc_doulongvec_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__do_proc_doulongvec_minmax,0x19,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
__do_proc_doulongvec_minmax,0x1d,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R9",write stack
__do_proc_doulongvec_minmax,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_proc_doulongvec_minmax,0x66,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
__do_proc_doulongvec_minmax,0x6e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__do_proc_doulongvec_minmax,0x76,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__do_proc_doulongvec_minmax,0x8e,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R14",write stack
__do_proc_doulongvec_minmax,0xce,0xffffffff810aeae0,CALL 0xffffffff810aeae0,direct call
__do_proc_doulongvec_minmax,0x13e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R15",write stack
__do_proc_doulongvec_minmax,0x142,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_doulongvec_minmax,0x151,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],R11D",write stack
__do_proc_doulongvec_minmax,0x164,0xffffffff810aede0,CALL 0xffffffff810aede0,direct call
__do_proc_doulongvec_minmax,0x191,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__do_proc_doulongvec_minmax,0x1b5,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
__do_proc_doulongvec_minmax,0x1bd,ctx->r14,"MOV qword ptr [R14],0x0",write other [TODO]
__do_proc_doulongvec_minmax,0x1e7,,RET,ret
__do_proc_doulongvec_minmax,0x1f3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
__do_proc_doulongvec_minmax,0x1fb,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RCX",write stack
__do_proc_doulongvec_minmax,0x1ff,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__do_proc_doulongvec_minmax,0x207,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__do_proc_doulongvec_minmax,0x20b,0xffffffff810aec10,CALL 0xffffffff810aec10,direct call
__do_proc_doulongvec_minmax,0x22d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0xfff",write stack
__do_proc_doulongvec_minmax,0x23a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_doulongvec_minmax,0x24b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
__do_proc_doulongvec_minmax,0x24f,ctx->rdx,"MOV byte ptr [RDX],0x9",write other [TODO]
__do_proc_doulongvec_minmax,0x256,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
__do_proc_doulongvec_minmax,0x25f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R15",write stack
__do_proc_doulongvec_minmax,0x26a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_doulongvec_minmax,0x2b7,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
__do_proc_doulongvec_minmax,0x2bb,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_doulongvec_minmax,0x2d9,ctx->r14,"MOV qword ptr [R14],RDX",write other [TODO]
__do_proc_doulongvec_minmax,0x328,ctx->rax,"MOV byte ptr [RAX],0xa",write other [TODO]
__do_proc_doulongvec_minmax,0x340,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_doulongvec_minmax,0x350,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],R8",write stack
__do_proc_doulongvec_minmax,0x357,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
__do_proc_doulongvec_minmax,0x35b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_doulongvec_minmax,0x37a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_doulongvec_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_doulongvec_minmax,0x24,0xffffffff810afbf0,CALL 0xffffffff810afbf0,direct call
proc_doulongvec_minmax,0x2e,,RET,ret
proc_doulongvec_ms_jiffies_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_doulongvec_ms_jiffies_minmax,0x2a,0xffffffff810afbf0,CALL 0xffffffff810afbf0,direct call
proc_doulongvec_ms_jiffies_minmax,0x34,,RET,ret
proc_taint,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_taint,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
proc_taint,0x34,0xffffffff810a5100,CALL 0xffffffff810a5100,direct call
proc_taint,0x39,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
proc_taint,0x4b,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
proc_taint,0x6f,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
proc_taint,0x73,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
proc_taint,0x7b,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
proc_taint,0x83,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
proc_taint,0x8b,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
proc_taint,0x93,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
proc_taint,0x9b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
proc_taint,0xa7,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
proc_taint,0xab,0xffffffff810afbf0,CALL 0xffffffff810afbf0,direct call
proc_taint,0xe8,0xffffffff810a5010,CALL 0xffffffff810a5010,direct call
proc_taint,0x105,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDI",write stack
proc_taint,0x109,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
proc_taint,0x111,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
proc_taint,0x119,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
proc_taint,0x121,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
proc_taint,0x129,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
proc_taint,0x131,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
proc_taint,0x13d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
proc_taint,0x141,0xffffffff810afbf0,CALL 0xffffffff810afbf0,direct call
proc_taint,0x16b,,RET,ret
proc_taint,0x18c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_proc_dointvec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__do_proc_dointvec,0x1d,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EDX",write stack
__do_proc_dointvec,0x20,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
__do_proc_dointvec,0x28,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R8",write stack
__do_proc_dointvec,0x2c,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R9",write stack
__do_proc_dointvec,0x30,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
__do_proc_dointvec,0x3d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_proc_dointvec,0x7f,ctx->rbp - 0x65,"MOV byte ptr [RBP + -0x65],R8B",write stack
__do_proc_dointvec,0x94,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
__do_proc_dointvec,0xad,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
__do_proc_dointvec,0xd2,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__do_proc_dointvec,0xec,ctx->rax,CALL RAX,in-direct call
__do_proc_dointvec,0x103,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R13",write stack
__do_proc_dointvec,0x107,ctx->rax,"MOV byte ptr [RAX],0x9",write other [TODO]
__do_proc_dointvec,0x10e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__do_proc_dointvec,0x122,0xffffffff810aeae0,CALL 0xffffffff810aeae0,direct call
__do_proc_dointvec,0x195,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
__do_proc_dointvec,0x199,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_dointvec,0x1b7,0xffffffff810aede0,CALL 0xffffffff810aede0,direct call
__do_proc_dointvec,0x1db,ctx->rax,CALL RAX,in-direct call
__do_proc_dointvec,0x1f9,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
__do_proc_dointvec,0x224,,RET,ret
__do_proc_dointvec,0x22a,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RDX",write stack
__do_proc_dointvec,0x231,ctx->rbp - 0x70,"MOV dword ptr [RBP + -0x70],R14D",write stack
__do_proc_dointvec,0x235,0xffffffff810aec10,CALL 0xffffffff810aec10,direct call
__do_proc_dointvec,0x25e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],0xfff",write stack
__do_proc_dointvec,0x26c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_dointvec,0x281,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RBX",write stack
__do_proc_dointvec,0x288,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_dointvec,0x2e6,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
__do_proc_dointvec,0x366,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
__do_proc_dointvec,0x36a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_dointvec,0x384,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_dointvec,0x3aa,ctx->rax,"MOV byte ptr [RAX],0xa",write other [TODO]
__do_proc_dointvec,0x3eb,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RDI",write stack
__do_proc_dointvec,0x3f2,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDI",write stack
__do_proc_dointvec,0x3f6,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_proc_dointvec,0x40f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_dobool,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dobool,0x27,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dobool,0x31,,RET,ret
proc_dointvec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec,0x24,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec,0x2e,,RET,ret
proc_dointvec_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec_minmax,0x29,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
proc_dointvec_minmax,0x31,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
proc_dointvec_minmax,0x3d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
proc_dointvec_minmax,0x4b,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec_minmax,0x64,,RET,ret
proc_dointvec_minmax,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_dointvec_jiffies,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec_jiffies,0x27,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec_jiffies,0x31,,RET,ret
proc_dointvec_userhz_jiffies,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec_userhz_jiffies,0x27,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec_userhz_jiffies,0x31,,RET,ret
proc_dointvec_ms_jiffies,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec_ms_jiffies,0x27,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec_ms_jiffies,0x31,,RET,ret
proc_do_cad_pid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_do_cad_pid,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
proc_do_cad_pid,0x3a,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
proc_do_cad_pid,0x55,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
proc_do_cad_pid,0x58,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_do_cad_pid,0x67,ctx->edi,"MOV EDI,dword ptr [RBP + -0x34]",write other [TODO]
proc_do_cad_pid,0x6a,0xffffffff810c99f0,CALL 0xffffffff810c99f0,direct call
proc_do_cad_pid,0x7e,0xffffffff810c98a0,CALL 0xffffffff810c98a0,direct call
proc_do_cad_pid,0xa2,,RET,ret
proc_do_cad_pid,0xaa,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sysrq_sysctl_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sysrq_sysctl_handler,0x2d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
sysrq_sysctl_handler,0x33,0xffffffff8178b240,CALL 0xffffffff8178b240,direct call
sysrq_sysctl_handler,0x4e,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
sysrq_sysctl_handler,0x51,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
sysrq_sysctl_handler,0x60,ctx->edi,"MOV EDI,dword ptr [RBP + -0x34]",write other [TODO]
sysrq_sysctl_handler,0x63,0xffffffff8178b820,CALL 0xffffffff8178b820,direct call
sysrq_sysctl_handler,0x87,,RET,ret
sysrq_sysctl_handler,0x88,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_dointvec_minmax_warn_RT_change,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec_minmax_warn_RT_change,0x29,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
proc_dointvec_minmax_warn_RT_change,0x31,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
proc_dointvec_minmax_warn_RT_change,0x3d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
proc_dointvec_minmax_warn_RT_change,0x4b,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec_minmax_warn_RT_change,0x64,,RET,ret
proc_dointvec_minmax_warn_RT_change,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_proc_douintvec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_proc_douintvec,0x25,0xffffffff810af790,CALL 0xffffffff810af790,direct call
do_proc_douintvec,0x2f,,RET,ret
proc_dointvec_ms_jiffies_minmax,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_dointvec_ms_jiffies_minmax,0x29,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
proc_dointvec_ms_jiffies_minmax,0x31,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
proc_dointvec_ms_jiffies_minmax,0x3d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
proc_dointvec_ms_jiffies_minmax,0x4b,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_dointvec_ms_jiffies_minmax,0x64,,RET,ret
proc_dointvec_ms_jiffies_minmax,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_do_static_key,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_do_static_key,0x32,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RDX",write stack
proc_do_static_key,0x49,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
proc_do_static_key,0x4f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],-0x7ddd6f20",write stack
proc_do_static_key,0x57,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],-0x7ddd6f1c",write stack
proc_do_static_key,0x67,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R14",write stack
proc_do_static_key,0x6b,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],0x4",write stack
proc_do_static_key,0x72,ctx->wordctx->ptrctx->rbp - 0x5c,"MOV word ptr [RBP + -0x5c],AX",write stack
proc_do_static_key,0x84,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
proc_do_static_key,0x98,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
proc_do_static_key,0xa0,0xffffffff8127f390,CALL 0xffffffff8127f390,direct call
proc_do_static_key,0xc1,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],-0x7ddd6f20",write stack
proc_do_static_key,0xcc,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],-0x7ddd6f1c",write stack
proc_do_static_key,0xd4,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EAX",write stack
proc_do_static_key,0xe4,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_do_static_key,0x103,0xffffffff8127f930,CALL 0xffffffff8127f930,direct call
proc_do_static_key,0x10f,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
proc_do_static_key,0x138,,RET,ret
proc_do_static_key,0x140,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
proc_do_static_key,0x148,0xffffffff8127f390,CALL 0xffffffff8127f390,direct call
proc_do_static_key,0x163,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],-0x7ddd6f20",write stack
proc_do_static_key,0x170,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],-0x7ddd6f1c",write stack
proc_do_static_key,0x17b,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EAX",write stack
proc_do_static_key,0x18b,0xffffffff810b0180,CALL 0xffffffff810b0180,direct call
proc_do_static_key,0x19a,0xffffffff8127f9f0,CALL 0xffffffff8127f9f0,direct call
proc_do_static_key,0x1af,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
cap_validate_magic,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
cap_validate_magic,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
cap_validate_magic,0x20,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
cap_validate_magic,0x4f,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
cap_validate_magic,0x7c,,RET,ret
cap_validate_magic,0x86,ctx->rbx,"MOV dword ptr [RBX],0x2",write other [TODO]
cap_validate_magic,0x97,ctx->rbx,"MOV dword ptr [RBX],0x1",write other [TODO]
cap_validate_magic,0xb0,0xffffffff830c7c3d,"MOV byte ptr [0xffffffff830c7c3d],0x1",write .data
cap_validate_magic,0xc0,0xffffffff8136c410,CALL 0xffffffff8136c410,direct call
cap_validate_magic,0xcf,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
cap_validate_magic,0xdf,0xffffffff830c7c3e,"MOV byte ptr [0xffffffff830c7c3e],0x1",write .data
cap_validate_magic,0xef,0xffffffff8136c410,CALL 0xffffffff8136c410,direct call
cap_validate_magic,0xfe,0xffffffff81c9b7df,CALL 0xffffffff81c9b7df,direct call
cap_validate_magic,0x105,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_capget,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__do_sys_capget,0x26,0xffffffff810b0b50,CALL 0xffffffff810b0b50,direct call
__do_sys_capget,0x40,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
__do_sys_capget,0x73,0xffffffff81502cc0,CALL 0xffffffff81502cc0,direct call
__do_sys_capget,0x8d,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EDX",write stack
__do_sys_capget,0x93,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDX",write stack
__do_sys_capget,0x99,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
__do_sys_capget,0xa4,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
__do_sys_capget,0xaa,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],EDX",write stack
__do_sys_capget,0xb0,ctx->rbp - 0x24,"MOV dword ptr [RBP + -0x24],EDX",write stack
__do_sys_capget,0xc7,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__do_sys_capget,0xd6,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_capget,0x102,,RET,ret
__do_sys_capget,0x110,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__do_sys_capget,0x11e,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_capget,0x126,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__do_sys_capget,0x13f,0xffffffff81502cc0,CALL 0xffffffff81502cc0,direct call
__do_sys_capget,0x144,ctx->rbp - 0x5c,"MOV dword ptr [RBP + -0x5c],EAX",write stack
__do_sys_capget,0x147,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_capget,0x165,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_capget,0x18e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_capget,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_capget,0x11,0xffffffff810b0c60,CALL 0xffffffff810b0c60,direct call
__x64_sys_capget,0x17,,RET,ret
__ia32_sys_capget,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_capget,0xf,0xffffffff810b0c60,CALL 0xffffffff810b0c60,direct call
__ia32_sys_capget,0x15,,RET,ret
__do_sys_capset,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__do_sys_capset,0x26,0xffffffff810b0b50,CALL 0xffffffff810b0b50,direct call
__do_sys_capset,0x37,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
__do_sys_capset,0x70,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__do_sys_capset,0x7f,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__do_sys_capset,0x94,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
__do_sys_capset,0x9a,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
__do_sys_capset,0xa0,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
__do_sys_capset,0xaf,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EAX",write stack
__do_sys_capset,0xb5,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
__do_sys_capset,0xbb,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
__do_sys_capset,0xdc,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__do_sys_capset,0x10c,0xffffffff81502d20,CALL 0xffffffff81502d20,direct call
__do_sys_capset,0x134,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__do_sys_capset,0x158,,RET,ret
__do_sys_capset,0x159,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
__do_sys_capset,0x160,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0x0",write stack
__do_sys_capset,0x167,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0x0",write stack
__do_sys_capset,0x16e,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],0x0",write stack
__do_sys_capset,0x175,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],0x0",write stack
__do_sys_capset,0x17c,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],0x0",write stack
__do_sys_capset,0x195,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__do_sys_capset,0x1ab,ctx->rbp + ctx->rbx * 0x4 - 0x40,"MOV dword ptr [RBP + RBX*0x4 + -0x40],0x0",write stack
__do_sys_capset,0x1b3,ctx->rbp + ctx->rbx * 0x4 - 0x48,"MOV dword ptr [RBP + RBX*0x4 + -0x48],0x0",write stack
__do_sys_capset,0x1bb,ctx->rbp + ctx->rbx * 0x4 - 0x50,"MOV dword ptr [RBP + RBX*0x4 + -0x50],0x0",write stack
__do_sys_capset,0x1c8,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__do_sys_capset,0x1df,0xffffffff8119b180,CALL 0xffffffff8119b180,direct call
__do_sys_capset,0x1f5,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_capset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_capset,0x11,0xffffffff810b0e40,CALL 0xffffffff810b0e40,direct call
__x64_sys_capset,0x17,,RET,ret
__ia32_sys_capset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_capset,0xf,0xffffffff810b0e40,CALL 0xffffffff810b0e40,direct call
__ia32_sys_capset,0x15,,RET,ret
file_ns_capable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
file_ns_capable,0x17,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
file_ns_capable,0x22,,RET,ret
has_capability,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
has_capability,0x12,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
has_capability,0x2a,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
has_capability,0x31,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
has_capability,0x3f,,RET,ret
has_capability_noaudit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
has_capability_noaudit,0x12,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
has_capability_noaudit,0x2d,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
has_capability_noaudit,0x34,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
has_capability_noaudit,0x42,,RET,ret
capable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
capable,0x2e,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
capable,0x4e,,RET,ret
ns_capable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ns_capable,0x2d,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
ns_capable,0x4d,,RET,ret
ns_capable_noaudit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ns_capable_noaudit,0x30,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
ns_capable_noaudit,0x50,,RET,ret
ns_capable_setid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ns_capable_setid,0x30,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
ns_capable_setid,0x50,,RET,ret
has_ns_capability,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
has_ns_capability,0x17,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
has_ns_capability,0x2b,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
has_ns_capability,0x32,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
has_ns_capability,0x42,,RET,ret
has_ns_capability_noaudit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
has_ns_capability_noaudit,0x17,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
has_ns_capability_noaudit,0x2e,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
has_ns_capability_noaudit,0x35,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
has_ns_capability_noaudit,0x45,,RET,ret
privileged_wrt_inode_uidgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
privileged_wrt_inode_uidgid,0x45,0xffffffff8118d880,CALL 0xffffffff8118d880,direct call
privileged_wrt_inode_uidgid,0x54,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
privileged_wrt_inode_uidgid,0x5e,0xffffffff8118d880,CALL 0xffffffff8118d880,direct call
privileged_wrt_inode_uidgid,0x76,,RET,ret
privileged_wrt_inode_uidgid,0x98,0xffffffff8118d8b0,CALL 0xffffffff8118d8b0,direct call
privileged_wrt_inode_uidgid,0xa7,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
privileged_wrt_inode_uidgid,0xb1,0xffffffff8118d8b0,CALL 0xffffffff8118d8b0,direct call
privileged_wrt_inode_uidgid,0xc4,,RET,ret
capable_wrt_inode_uidgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
capable_wrt_inode_uidgid,0x3b,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
capable_wrt_inode_uidgid,0x5a,0xffffffff810b1340,CALL 0xffffffff810b1340,direct call
capable_wrt_inode_uidgid,0x67,,RET,ret
ptracer_capable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptracer_capable,0x1a,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
ptracer_capable,0x38,0xffffffff81502d90,CALL 0xffffffff81502d90,direct call
ptracer_capable,0x43,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
ptracer_capable,0x51,,RET,ret
ptrace_unfreeze_traced,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_unfreeze_traced,0x1e,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
ptrace_unfreeze_traced,0x24,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
ptrace_unfreeze_traced,0x3f,ctx->rbx + 0x958,"MOV qword ptr [RBX + 0x958],RDX",write other [TODO]
ptrace_unfreeze_traced,0x56,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x18]",write other [TODO]
ptrace_unfreeze_traced,0x5a,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ptrace_unfreeze_traced,0x73,,RET,ret
ptrace_unfreeze_traced,0x82,ctx->rbx + 0x958,"MOV qword ptr [RBX + 0x958],RAX",write other [TODO]
ptrace_unfreeze_traced,0x89,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
ptrace_unfreeze_traced,0x90,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_check_attach,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_check_attach,0x18,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
ptrace_check_attach,0x40,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
ptrace_check_attach,0x4e,,RET,ret
ptrace_check_attach,0x5a,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
ptrace_check_attach,0x65,,RET,ret
ptrace_check_attach,0x79,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
ptrace_check_attach,0x95,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_check_attach,0xc9,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_check_attach,0xd5,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
ptrace_check_attach,0xe2,0xffffffff810e4810,CALL 0xffffffff810e4810,direct call
ptrace_check_attach,0x103,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
check_ptrace_options,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_ptrace_options,0x18,,RET,ret
check_ptrace_options,0x22,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
check_ptrace_options,0x47,,RET,ret
check_ptrace_options,0x4d,,RET,ret
check_ptrace_options,0x54,,RET,ret
__ptrace_detach.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ptrace_detach.part.0,0x36,,RET,ret
__ptrace_detach.part.0,0x54,0xffffffff810b75c0,CALL 0xffffffff810b75c0,direct call
__ptrace_detach.part.0,0x5d,ctx->rbx + 0x944,"MOV dword ptr [RBX + 0x944],0x10",write other [TODO]
__ptrace_detach.part.0,0x72,,RET,ret
__ptrace_detach.part.0,0x7d,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__ptrace_detach.part.0,0x99,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ptrace_detach.part.0,0xa2,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ptrace_detach.part.0,0xad,0xffffffff810aaf80,CALL 0xffffffff810aaf80,direct call
ptrace_regset,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_regset,0x1b,0xffffffff810482b0,CALL 0xffffffff810482b0,direct call
ptrace_regset,0xaa,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],R8",write other [TODO]
ptrace_regset,0xfe,ctx->r11,CALL R11,in-direct call
ptrace_regset,0x109,,RET,ret
ptrace_regset,0x117,,RET,ret
ptrace_regset,0x11d,0xffffffff810d7380,CALL 0xffffffff810d7380,direct call
ptrace_regset,0x12a,,RET,ret
ptrace_get_syscall_info_entry,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_get_syscall_info_entry,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
ptrace_get_syscall_info_entry,0x1f,ctx->rdx,"MOV byte ptr [RDX],0x1",write other [TODO]
ptrace_get_syscall_info_entry,0x26,ctx->rdx + 0x18,"MOV qword ptr [RDX + 0x18],RAX",write other [TODO]
ptrace_get_syscall_info_entry,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_get_syscall_info_entry,0x40,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
ptrace_get_syscall_info_entry,0x48,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
ptrace_get_syscall_info_entry,0x50,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ptrace_get_syscall_info_entry,0x58,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
ptrace_get_syscall_info_entry,0x65,ctx->rcx + ctx->rax * 0x1 + 0x20,"MOV qword ptr [RCX + RAX*0x1 + 0x20],RDX",write other [TODO]
ptrace_get_syscall_info_entry,0x89,,RET,ret
ptrace_get_syscall_info_entry,0x92,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_get_syscall_info_entry,0x9a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
ptrace_get_syscall_info_entry,0xa2,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
ptrace_get_syscall_info_entry,0xaa,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
ptrace_get_syscall_info_entry,0xb4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_get_syscall_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_get_syscall_info,0x39,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_get_syscall_info,0x64,ctx->rbp - 0x84,"MOV dword ptr [RBP + -0x84],EAX",write stack
ptrace_get_syscall_info,0x71,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
ptrace_get_syscall_info,0x7c,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
ptrace_get_syscall_info,0xc2,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
ptrace_get_syscall_info,0xd0,0xffffffff81605960,CALL 0xffffffff81605960,direct call
ptrace_get_syscall_info,0x102,,RET,ret
ptrace_get_syscall_info,0x10f,0xffffffff810b1900,CALL 0xffffffff810b1900,direct call
ptrace_get_syscall_info,0x11c,ctx->rbp - 0x88,"MOV byte ptr [RBP + -0x88],0x3",write stack
ptrace_get_syscall_info,0x123,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],EAX",write stack
ptrace_get_syscall_info,0x151,ctx->rbp - 0x88,"MOV byte ptr [RBP + -0x88],0x2",write stack
ptrace_get_syscall_info,0x167,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RCX",write stack
ptrace_get_syscall_info,0x179,0xffffffff810b1900,CALL 0xffffffff810b1900,direct call
ptrace_get_syscall_info,0x19d,0xffffffff8128d060,CALL 0xffffffff8128d060,direct call
ptrace_get_syscall_info,0x1ac,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
ptrace_get_syscall_info,0x1be,ctx->rbp - 0x68,"MOV byte ptr [RBP + -0x68],0x1",write stack
ptrace_get_syscall_info,0x1ce,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ptrace_may_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ptrace_may_access,0x59,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__ptrace_may_access,0x94,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__ptrace_may_access,0xa1,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__ptrace_may_access,0xd2,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__ptrace_may_access,0xe1,0xffffffff81502c40,CALL 0xffffffff81502c40,direct call
__ptrace_may_access,0xee,,RET,ret
__ptrace_may_access,0xfa,0xffffffff810b11e0,CALL 0xffffffff810b11e0,direct call
__ptrace_may_access,0x101,0xffffffff810b11e0,CALL 0xffffffff810b11e0,direct call
__ptrace_may_access,0x138,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__ptrace_may_access,0x14b,0xffffffff81c953d8,CALL 0xffffffff81c953d8,direct call
ptrace_traceme,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_traceme,0x1c,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
ptrace_traceme,0x33,0xffffffff81502c80,CALL 0xffffffff81502c80,direct call
ptrace_traceme,0x53,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
ptrace_traceme,0x5f,,RET,ret
ptrace_traceme,0x6e,ctx->rbx + 0x30,"MOV dword ptr [RBX + 0x30],0x1",write other [TODO]
ptrace_traceme,0x88,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RCX",write other [TODO]
ptrace_traceme,0x8c,ctx->rbx + 0xa08,"MOV qword ptr [RBX + 0xa08],RSI",write other [TODO]
ptrace_traceme,0x9a,ctx->rbx + 0xa10,"MOV qword ptr [RBX + 0xa10],RSI",write other [TODO]
ptrace_traceme,0xa1,ctx->rax + 0x9f8,"MOV qword ptr [RAX + 0x9f8],RCX",write other [TODO]
ptrace_traceme,0xa8,ctx->rbx + 0x9c8,"MOV qword ptr [RBX + 0x9c8],RAX",write other [TODO]
ptrace_traceme,0xb4,ctx->rdx + 0xa0,"MOV dword ptr [RDX + 0xa0],0x0",write other [TODO]
ptrace_traceme,0xc1,ctx->rbx + 0xb68,"MOV qword ptr [RBX + 0xb68],RDX",write other [TODO]
ptrace_peek_siginfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_peek_siginfo,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_peek_siginfo,0x34,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
ptrace_peek_siginfo,0x39,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],EAX",write stack
ptrace_peek_siginfo,0x8f,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RSI",write stack
ptrace_peek_siginfo,0x93,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
ptrace_peek_siginfo,0xc4,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_peek_siginfo,0xf6,,RET,ret
ptrace_peek_siginfo,0x106,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
ptrace_peek_siginfo,0x10e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
ptrace_peek_siginfo,0x116,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
ptrace_peek_siginfo,0x11e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
ptrace_peek_siginfo,0x126,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
ptrace_peek_siginfo,0x12e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
ptrace_peek_siginfo,0x132,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_peek_siginfo,0x144,0xffffffff810bb230,CALL 0xffffffff810bb230,direct call
ptrace_peek_siginfo,0x170,0xffffffff82000820,CALL 0xffffffff82000820,direct call
ptrace_peek_siginfo,0x18b,0xffffffff810bac30,CALL 0xffffffff810bac30,direct call
ptrace_peek_siginfo,0x194,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],0xfffffff2",write stack
ptrace_peek_siginfo,0x1bb,ctx->rbp - 0x7c,"MOV dword ptr [RBP + -0x7c],0x0",write stack
ptrace_peek_siginfo,0x1d2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_attach,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_attach,0x41,0xffffffff810b16a0,CALL 0xffffffff810b16a0,direct call
ptrace_attach,0x7a,0xffffffff8119ade0,CALL 0xffffffff8119ade0,direct call
ptrace_attach,0xb0,0xffffffff81d0ffa0,CALL 0xffffffff81d0ffa0,direct call
ptrace_attach,0xc8,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
ptrace_attach,0xcc,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
ptrace_attach,0xd9,0xffffffff810b1ba0,CALL 0xffffffff810b1ba0,direct call
ptrace_attach,0xe5,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
ptrace_attach,0xf6,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
ptrace_attach,0x11e,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
ptrace_attach,0x132,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
ptrace_attach,0x148,,RET,ret
ptrace_attach,0x162,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
ptrace_attach,0x179,ctx->r12 + 0x30,"MOV dword ptr [R12 + 0x30],EBX",write other [TODO]
ptrace_attach,0x195,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
ptrace_attach,0x199,ctx->r12 + 0xa08,"MOV qword ptr [R12 + 0xa08],RCX",write other [TODO]
ptrace_attach,0x1a8,ctx->r12 + 0xa10,"MOV qword ptr [R12 + 0xa10],RCX",write other [TODO]
ptrace_attach,0x1b0,ctx->r15 + 0x9f8,"MOV qword ptr [R15 + 0x9f8],RDX",write other [TODO]
ptrace_attach,0x1b7,ctx->r12 + 0x9c8,"MOV qword ptr [R12 + 0x9c8],R15",write other [TODO]
ptrace_attach,0x1c4,ctx->rax + 0xa0,"MOV dword ptr [RAX + 0xa0],0x0",write other [TODO]
ptrace_attach,0x1d1,ctx->r12 + 0xb68,"MOV qword ptr [R12 + 0xb68],RAX",write other [TODO]
ptrace_attach,0x1ef,0xffffffff810b8000,CALL 0xffffffff810b8000,direct call
ptrace_attach,0x1fc,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
ptrace_attach,0x21c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
ptrace_attach,0x228,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
ptrace_attach,0x23c,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
ptrace_attach,0x241,0xffffffff82000828,CALL 0xffffffff82000828,direct call
ptrace_attach,0x26a,0xffffffff81d0e410,CALL 0xffffffff81d0e410,direct call
ptrace_attach,0x277,0xffffffff817ef350,CALL 0xffffffff817ef350,direct call
ptrace_attach,0x29f,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
ptrace_attach,0x2c0,0xffffffff810b7120,CALL 0xffffffff810b7120,direct call
__ia32_sys_ptrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ptrace,0x2d,0xffffffff810ca4c0,CALL 0xffffffff810ca4c0,direct call
__ia32_sys_ptrace,0x6d,0xffffffff810b1580,CALL 0xffffffff810b1580,direct call
__ia32_sys_ptrace,0x86,0xffffffff81047e30,CALL 0xffffffff81047e30,direct call
__ia32_sys_ptrace,0xaa,0xffffffff810b1fc0,CALL 0xffffffff810b1fc0,direct call
__ia32_sys_ptrace,0xd9,,RET,ret
__ia32_sys_ptrace,0xda,0xffffffff810b1d00,CALL 0xffffffff810b1d00,direct call
__ia32_sys_ptrace,0xef,,RET,ret
__ia32_sys_ptrace,0xf3,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
__ia32_sys_ptrace,0x105,,RET,ret
__ia32_sys_ptrace,0x109,0xffffffff810b14e0,CALL 0xffffffff810b14e0,direct call
__ia32_sys_ptrace,0x115,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__ia32_compat_sys_ptrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_ptrace,0x30,0xffffffff810ca4c0,CALL 0xffffffff810ca4c0,direct call
__ia32_compat_sys_ptrace,0x67,0xffffffff810b1580,CALL 0xffffffff810b1580,direct call
__ia32_compat_sys_ptrace,0x9f,,RET,ret
__ia32_compat_sys_ptrace,0xac,0xffffffff810b1fc0,CALL 0xffffffff810b1fc0,direct call
__ia32_compat_sys_ptrace,0xb6,0xffffffff810b1d00,CALL 0xffffffff810b1d00,direct call
__ia32_compat_sys_ptrace,0xc0,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__ia32_compat_sys_ptrace,0xc7,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
__ia32_compat_sys_ptrace,0xdd,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__ia32_compat_sys_ptrace,0xe1,0xffffffff810480b0,CALL 0xffffffff810480b0,direct call
__ia32_compat_sys_ptrace,0xfe,0xffffffff810b14e0,CALL 0xffffffff810b14e0,direct call
__ia32_compat_sys_ptrace,0x110,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__ia32_compat_sys_ptrace,0x114,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__x64_sys_ptrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ptrace,0x2d,0xffffffff810ca4c0,CALL 0xffffffff810ca4c0,direct call
__x64_sys_ptrace,0x68,0xffffffff810b1580,CALL 0xffffffff810b1580,direct call
__x64_sys_ptrace,0x81,0xffffffff81047e30,CALL 0xffffffff81047e30,direct call
__x64_sys_ptrace,0xa5,0xffffffff810b1fc0,CALL 0xffffffff810b1fc0,direct call
__x64_sys_ptrace,0xd4,,RET,ret
__x64_sys_ptrace,0xd5,0xffffffff810b1d00,CALL 0xffffffff810b1d00,direct call
__x64_sys_ptrace,0xea,,RET,ret
__x64_sys_ptrace,0xee,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
__x64_sys_ptrace,0x100,,RET,ret
__x64_sys_ptrace,0x104,0xffffffff810b14e0,CALL 0xffffffff810b14e0,direct call
__x64_sys_ptrace,0x110,0xffffffff81605660,CALL 0xffffffff81605660,direct call
ptrace_access_vm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_access_vm,0x25,0xffffffff810a0050,CALL 0xffffffff810a0050,direct call
ptrace_access_vm,0x55,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
ptrace_access_vm,0x6a,,RET,ret
ptrace_access_vm,0x84,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R9",write stack
ptrace_access_vm,0x88,0xffffffff810b1480,CALL 0xffffffff810b1480,direct call
ptrace_access_vm,0xa4,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
ptrace_access_vm,0xa8,0xffffffff812cd450,CALL 0xffffffff812cd450,direct call
ptrace_access_vm,0xb1,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
ptrace_access_vm,0xb4,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
ptrace_access_vm,0xca,,RET,ret
ptrace_access_vm,0xdb,,RET,ret
__ptrace_link,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ptrace_link,0x23,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
__ptrace_link,0x27,ctx->rdi + 0xa08,"MOV qword ptr [RDI + 0xa08],RCX",write other [TODO]
__ptrace_link,0x35,ctx->rdi + 0xa10,"MOV qword ptr [RDI + 0xa10],RCX",write other [TODO]
__ptrace_link,0x3c,ctx->rsi + 0x9f8,"MOV qword ptr [RSI + 0x9f8],RAX",write other [TODO]
__ptrace_link,0x43,ctx->rdi + 0x9c8,"MOV qword ptr [RDI + 0x9c8],RSI",write other [TODO]
__ptrace_link,0x4f,ctx->rdx + 0xa0,"MOV dword ptr [RDX + 0xa0],0x0",write other [TODO]
__ptrace_link,0x5c,ctx->rdi + 0xb68,"MOV qword ptr [RDI + 0xb68],RDX",write other [TODO]
__ptrace_link,0x64,,RET,ret
__ptrace_unlink,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ptrace_unlink,0x37,ctx->rdi + 0x9c8,"MOV qword ptr [RDI + 0x9c8],RAX",write other [TODO]
__ptrace_unlink,0x45,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
__ptrace_unlink,0x49,ctx->rdx,"MOV qword ptr [RDX],RCX",write other [TODO]
__ptrace_unlink,0x4c,ctx->rdi + 0xa08,"MOV qword ptr [RDI + 0xa08],RAX",write other [TODO]
__ptrace_unlink,0x53,ctx->rdi + 0xa10,"MOV qword ptr [RDI + 0xa10],RAX",write other [TODO]
__ptrace_unlink,0x61,ctx->rbx + 0xb68,"MOV qword ptr [RBX + 0xb68],0x0",write other [TODO]
__ptrace_unlink,0x81,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__ptrace_unlink,0x86,ctx->rbx + 0x30,"MOV dword ptr [RBX + 0x30],0x0",write other [TODO]
__ptrace_unlink,0x95,0xffffffff810b6e50,CALL 0xffffffff810b6e50,direct call
__ptrace_unlink,0x9d,0xffffffff810b6e10,CALL 0xffffffff810b6e10,direct call
__ptrace_unlink,0xd1,ctx->rbx + 0x958,"MOV qword ptr [RBX + 0x958],RAX",write other [TODO]
__ptrace_unlink,0xe6,ctx->rbx + 0x958,"MOV qword ptr [RBX + 0x958],RAX",write other [TODO]
__ptrace_unlink,0xed,0xffffffff810b7120,CALL 0xffffffff810b7120,direct call
__ptrace_unlink,0xf9,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ptrace_unlink,0x103,,RET,ret
__ptrace_unlink,0x123,0xffffffff810d3a10,CALL 0xffffffff810d3a10,direct call
ptrace_may_access,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_may_access,0x1f,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
ptrace_may_access,0x2a,0xffffffff810b1ba0,CALL 0xffffffff810b1ba0,direct call
ptrace_may_access,0x35,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
ptrace_may_access,0x47,,RET,ret
exit_ptrace,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exit_ptrace,0x3d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
exit_ptrace,0x54,0xffffffff810b2770,CALL 0xffffffff810b2770,direct call
exit_ptrace,0x68,0xffffffff810b1700,CALL 0xffffffff810b1700,direct call
exit_ptrace,0x75,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R12",write other [TODO]
exit_ptrace,0x79,ctx->rbx + 0xa08,"MOV qword ptr [RBX + 0xa08],RAX",write other [TODO]
exit_ptrace,0x80,ctx->rbx + 0xa10,"MOV qword ptr [RBX + 0xa10],R13",write other [TODO]
exit_ptrace,0x87,ctx->r13,"MOV qword ptr [R13],R12",write other [TODO]
exit_ptrace,0xb6,,RET,ret
exit_ptrace,0xc4,0xffffffff810b8000,CALL 0xffffffff810b8000,direct call
ptrace_readdata,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_readdata,0x19,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RDI",write stack
ptrace_readdata,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_readdata,0x37,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],0x0",write stack
ptrace_readdata,0x5b,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
ptrace_readdata,0x6d,0xffffffff81605960,CALL 0xffffffff81605960,direct call
ptrace_readdata,0xb2,0xffffffff810b2620,CALL 0xffffffff810b2620,direct call
ptrace_readdata,0xd1,0xffffffff8128d060,CALL 0xffffffff8128d060,direct call
ptrace_readdata,0xd6,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],0xfffffff2",write stack
ptrace_readdata,0x106,,RET,ret
ptrace_readdata,0x117,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],EAX",write stack
ptrace_readdata,0x11f,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],0x0",write stack
ptrace_readdata,0x12b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_readdata,0x130,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],0xfffffff2",write stack
ptrace_writedata,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_writedata,0x19,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RDI",write stack
ptrace_writedata,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_writedata,0x62,0xffffffff810b2620,CALL 0xffffffff810b2620,direct call
ptrace_writedata,0x97,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],ECX",write stack
ptrace_writedata,0xa0,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
ptrace_writedata,0xb2,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
ptrace_writedata,0xe5,,RET,ret
ptrace_writedata,0xf9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_request,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_request,0x29,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
ptrace_request,0x7d,,RET,ret
ptrace_request,0xcc,0xffffffff81048f60,CALL 0xffffffff81048f60,direct call
ptrace_request,0xdb,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
ptrace_request,0xe0,ctx->r13 + 0x948,"MOV dword ptr [R13 + 0x948],R14D",write other [TODO]
ptrace_request,0xfa,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
ptrace_request,0x106,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_request,0x134,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
ptrace_request,0x139,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
ptrace_request,0x14c,0xffffffff81c8a780,CALL 0xffffffff81c8a780,direct call
ptrace_request,0x151,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RDX",write stack
ptrace_request,0x167,0xffffffff810b17c0,CALL 0xffffffff810b17c0,direct call
ptrace_request,0x17e,0xffffffff81c8cdcf,CALL 0xffffffff81c8cdcf,direct call
ptrace_request,0x192,0xffffffff810bafd0,CALL 0xffffffff810bafd0,direct call
ptrace_request,0x1a9,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
ptrace_request,0x1cb,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
ptrace_request,0x1d2,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
ptrace_request,0x1da,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
ptrace_request,0x1e2,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
ptrace_request,0x1ea,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RDX",write other [TODO]
ptrace_request,0x1f2,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RDX",write other [TODO]
ptrace_request,0x1fd,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x70]",write other [TODO]
ptrace_request,0x201,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ptrace_request,0x212,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
ptrace_request,0x227,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x70]",write other [TODO]
ptrace_request,0x23e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
ptrace_request,0x246,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
ptrace_request,0x24e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
ptrace_request,0x256,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
ptrace_request,0x25e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
ptrace_request,0x266,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_request,0x26a,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ptrace_request,0x276,0xffffffff810bac30,CALL 0xffffffff810bac30,direct call
ptrace_request,0x28c,0xffffffff811b0620,CALL 0xffffffff811b0620,direct call
ptrace_request,0x2a3,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
ptrace_request,0x2b3,0xffffffff810b16a0,CALL 0xffffffff810b16a0,direct call
ptrace_request,0x2d6,ctx->r13 + 0x30,"MOV dword ptr [R13 + 0x30],ECX",write other [TODO]
ptrace_request,0x2fa,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],0x0",write stack
ptrace_request,0x306,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RDX",write stack
ptrace_request,0x30f,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],EAX",write stack
ptrace_request,0x315,ctx->rbp - 0x68,"MOV dword ptr [RBP + -0x68],0x20",write stack
ptrace_request,0x31c,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
ptrace_request,0x32b,0xffffffff81605960,CALL 0xffffffff81605960,direct call
ptrace_request,0x34d,0xffffffff810b19c0,CALL 0xffffffff810b19c0,direct call
ptrace_request,0x369,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
ptrace_request,0x37f,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
ptrace_request,0x3a3,ctx->r13 + 0x958,"MOV qword ptr [R13 + 0x958],RAX",write other [TODO]
ptrace_request,0x3ad,0xffffffff810b7120,CALL 0xffffffff810b7120,direct call
ptrace_request,0x3c0,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ptrace_request,0x3ec,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
ptrace_request,0x40c,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
ptrace_request,0x41c,ctx->r13 + 0xbf8,"MOV qword ptr [R13 + 0xbf8],RAX",write other [TODO]
ptrace_request,0x423,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_request,0x461,0xffffffff81605960,CALL 0xffffffff81605960,direct call
ptrace_request,0x47e,0xffffffff810b1de0,CALL 0xffffffff810b1de0,direct call
ptrace_request,0x49a,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
ptrace_request,0x4e4,ctx->r13 + 0x958,"MOV qword ptr [R13 + 0x958],RAX",write other [TODO]
ptrace_request,0x4f9,0xffffffff811b0500,CALL 0xffffffff811b0500,direct call
ptrace_request,0x506,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RCX",write stack
ptrace_request,0x522,0xffffffff810b2620,CALL 0xffffffff810b2620,direct call
ptrace_request,0x54d,0xffffffff810b2620,CALL 0xffffffff810b2620,direct call
ptrace_request,0x562,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
ptrace_request,0x57b,0xffffffff81047e20,CALL 0xffffffff81047e20,direct call
ptrace_request,0x587,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
ptrace_request,0x59a,ctx->r13 + 0x948,"MOV dword ptr [R13 + 0x948],R14D",write other [TODO]
ptrace_request,0x5ad,0xffffffff810b2770,CALL 0xffffffff810b2770,direct call
ptrace_request,0x5c2,0xffffffff810b1700,CALL 0xffffffff810b1700,direct call
ptrace_request,0x5d1,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
ptrace_request,0x5de,0xffffffff817ef350,CALL 0xffffffff817ef350,direct call
ptrace_request,0x5f5,0xffffffff810b8000,CALL 0xffffffff810b8000,direct call
ptrace_request,0x623,0xffffffff81048f10,CALL 0xffffffff81048f10,direct call
ptrace_request,0x641,0xffffffff81048ed0,CALL 0xffffffff81048ed0,direct call
ptrace_request,0x662,ctx->r13 + 0x958,"MOV qword ptr [R13 + 0x958],RAX",write other [TODO]
ptrace_request,0x669,0xffffffff810b7120,CALL 0xffffffff810b7120,direct call
ptrace_request,0x68b,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ptrace_request,0x6b6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
generic_ptrace_peekdata,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_ptrace_peekdata,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
generic_ptrace_peekdata,0x2e,0xffffffff810a0050,CALL 0xffffffff810a0050,direct call
generic_ptrace_peekdata,0x58,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
generic_ptrace_peekdata,0x7f,,RET,ret
generic_ptrace_peekdata,0x99,0xffffffff810b1480,CALL 0xffffffff810b1480,direct call
generic_ptrace_peekdata,0xb7,0xffffffff812cd450,CALL 0xffffffff812cd450,direct call
generic_ptrace_peekdata,0xc2,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
generic_ptrace_peekdata,0xd4,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
generic_ptrace_peekdata,0xdd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
generic_ptrace_pokedata,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
generic_ptrace_pokedata,0x19,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
generic_ptrace_pokedata,0x1d,0xffffffff810a0050,CALL 0xffffffff810a0050,direct call
generic_ptrace_pokedata,0x4d,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
generic_ptrace_pokedata,0x62,,RET,ret
generic_ptrace_pokedata,0x7c,0xffffffff810b1480,CALL 0xffffffff810b1480,direct call
generic_ptrace_pokedata,0x9a,0xffffffff812cd450,CALL 0xffffffff812cd450,direct call
generic_ptrace_pokedata,0xa5,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
generic_ptrace_pokedata,0xbd,,RET,ret
generic_ptrace_pokedata,0xce,,RET,ret
compat_ptrace_request,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
compat_ptrace_request,0x1a,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],ECX",write stack
compat_ptrace_request,0x26,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
compat_ptrace_request,0x68,0xffffffff810b2620,CALL 0xffffffff810b2620,direct call
compat_ptrace_request,0x7c,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
compat_ptrace_request,0xa6,,RET,ret
compat_ptrace_request,0xca,0xffffffff810b2c10,CALL 0xffffffff810b2c10,direct call
compat_ptrace_request,0xf4,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
compat_ptrace_request,0x107,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
compat_ptrace_request,0x112,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RCX",write stack
compat_ptrace_request,0x11d,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RDX",write stack
compat_ptrace_request,0x124,0xffffffff810b17c0,CALL 0xffffffff810b17c0,direct call
compat_ptrace_request,0x13a,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
compat_ptrace_request,0x15c,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
compat_ptrace_request,0x188,0xffffffff810b2620,CALL 0xffffffff810b2620,direct call
compat_ptrace_request,0x1a8,0xffffffff810bb420,CALL 0xffffffff810bb420,direct call
compat_ptrace_request,0x1bf,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
compat_ptrace_request,0x1e1,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
compat_ptrace_request,0x1e8,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
compat_ptrace_request,0x1f0,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
compat_ptrace_request,0x1f8,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
compat_ptrace_request,0x200,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RDX",write other [TODO]
compat_ptrace_request,0x208,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],RDX",write other [TODO]
compat_ptrace_request,0x213,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x68]",write other [TODO]
compat_ptrace_request,0x217,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
compat_ptrace_request,0x225,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
compat_ptrace_request,0x23a,ctx->rsi,"MOV RSI,qword ptr [RBP + -0x68]",write other [TODO]
compat_ptrace_request,0x24d,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RDX",write stack
compat_ptrace_request,0x255,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RDX",write stack
compat_ptrace_request,0x25d,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
compat_ptrace_request,0x265,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
compat_ptrace_request,0x26d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDX",write stack
compat_ptrace_request,0x275,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
compat_ptrace_request,0x279,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
compat_ptrace_request,0x285,0xffffffff810bb230,CALL 0xffffffff810bb230,direct call
compat_ptrace_request,0x29f,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
compat_ptrace_request,0x2bf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
uid_hash_find.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
uid_hash_find.isra.0,0x48,,RET,ret
uid_hash_find.isra.0,0x49,,RET,ret
uid_hash_find.isra.0,0x52,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
uid_hash_find.isra.0,0x56,0xffffffff81605660,CALL 0xffffffff81605660,direct call
uid_hash_find.isra.0,0x60,,RET,ret
uid_hash_find.isra.0,0x61,,RET,ret
uid_hash_find.isra.0,0x6a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
uid_hash_find.isra.0,0x6e,0xffffffff81605660,CALL 0xffffffff81605660,direct call
uid_hash_find.isra.0,0x78,,RET,ret
find_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
find_user,0x17,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
find_user,0x36,0xffffffff810b3760,CALL 0xffffffff810b3760,direct call
find_user,0x48,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
find_user,0x55,,RET,ret
free_uid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
free_uid,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
free_uid,0x31,0xffffffff816058c0,CALL 0xffffffff816058c0,direct call
free_uid,0x4e,,RET,ret
free_uid,0x62,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
free_uid,0x6a,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
free_uid,0x6e,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],0x0",write other [TODO]
free_uid,0x77,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],0x0",write other [TODO]
free_uid,0x87,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
free_uid,0x91,0xffffffff816331c0,CALL 0xffffffff816331c0,direct call
free_uid,0xa0,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
free_uid,0xa7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
alloc_uid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
alloc_uid,0x2a,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
alloc_uid,0x3a,0xffffffff810b3760,CALL 0xffffffff810b3760,direct call
alloc_uid,0x49,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
alloc_uid,0x64,,RET,ret
alloc_uid,0x71,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
alloc_uid,0x7e,ctx->rax + 0x50,"MOV dword ptr [RAX + 0x50],R12D",write other [TODO]
alloc_uid,0x8d,ctx->rax - 0x8,"MOV dword ptr [RAX + -0x8],0x1",write other [TODO]
alloc_uid,0x9e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
alloc_uid,0xa2,0xffffffff816330e0,CALL 0xffffffff816330e0,direct call
alloc_uid,0xb6,ctx->r15 + 0x68,"MOV qword ptr [R15 + 0x68],0x0",write other [TODO]
alloc_uid,0xc8,ctx->r15 + 0x70,"MOV qword ptr [R15 + 0x70],0x0",write other [TODO]
alloc_uid,0xd0,ctx->r15 + 0x78,"MOV qword ptr [R15 + 0x78],0x0",write other [TODO]
alloc_uid,0xd8,ctx->r15 + 0x6c,"MOV qword ptr [R15 + 0x6c],RAX",write other [TODO]
alloc_uid,0xdc,ctx->r15 + 0x80,"MOV qword ptr [R15 + 0x80],0x0",write other [TODO]
alloc_uid,0xe7,ctx->r15 + 0x88,"MOV qword ptr [R15 + 0x88],0x1",write other [TODO]
alloc_uid,0xf2,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
alloc_uid,0x102,0xffffffff810b3760,CALL 0xffffffff810b3760,direct call
alloc_uid,0x113,0xffffffff816331c0,CALL 0xffffffff816331c0,direct call
alloc_uid,0x122,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
alloc_uid,0x12e,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
alloc_uid,0x14c,ctx->r15 + 0x40,"MOV qword ptr [R15 + 0x40],RAX",write other [TODO]
alloc_uid,0x155,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
alloc_uid,0x159, - 0x7cb94180 + ctx->rbx * 0x8,"MOV qword ptr [-0x7cb94180 + RBX*0x8],RDX",write other [TODO]
alloc_uid,0x164,ctx->r15 + 0x48,"MOV qword ptr [R15 + 0x48],R14",write other [TODO]
alloc_uid,0x174,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
__traceiter_signal_generate,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_signal_generate,0x39,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],R9D",write stack
__traceiter_signal_generate,0x49,ctx->rax,CALL RAX,in-direct call
__traceiter_signal_generate,0x65,,RET,ret
__traceiter_signal_deliver,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_signal_deliver,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_signal_deliver,0x4b,,RET,ret
__x64_sys_restart_syscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_restart_syscall,0x19,ctx->rax + 0x980,CALL qword ptr [RAX + 0x980],in-direct call
__x64_sys_restart_syscall,0x20,,RET,ret
do_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_sigpending,0x20,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_sigpending,0x39,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
do_sigpending,0x44,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigpending,0x58,,RET,ret
known_siginfo_layout,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
known_siginfo_layout,0x3d,,RET,ret
known_siginfo_layout,0x4d,,RET,ret
known_siginfo_layout,0x55,,RET,ret
__x64_sys_sgetmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sgetmask,0x1a,,RET,ret
__ia32_compat_sys_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_sigpending,0x21,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_sigpending,0x27,0xffffffff810b3b60,CALL 0xffffffff810b3b60,direct call
__ia32_compat_sys_sigpending,0x32,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_compat_sys_sigpending,0x51,,RET,ret
__ia32_compat_sys_sigpending,0x52,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_signal_deliver,0x29,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
perf_trace_signal_deliver,0x54,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_signal_deliver,0x69,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_signal_deliver,0x70,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_signal_deliver,0x77,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_signal_deliver,0x82,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_signal_deliver,0x8d,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],EBX",write other [TODO]
perf_trace_signal_deliver,0x9f,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],EAX",write other [TODO]
perf_trace_signal_deliver,0xa6,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EAX",write other [TODO]
perf_trace_signal_deliver,0xbd,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
perf_trace_signal_deliver,0xc5,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
perf_trace_signal_deliver,0xcd,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_signal_deliver,0xf1,,RET,ret
perf_trace_signal_deliver,0x101,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],0x0",write other [TODO]
perf_trace_signal_deliver,0x10c,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],0x0",write other [TODO]
perf_trace_signal_deliver,0x11a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_signal_generate,0x1f,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],R8D",write stack
perf_trace_signal_generate,0x27,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],R9D",write stack
perf_trace_signal_generate,0x3c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
perf_trace_signal_generate,0x5f,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_signal_generate,0x78,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_signal_generate,0x7f,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_signal_generate,0x86,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_signal_generate,0x91,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_signal_generate,0x9c,ctx->rdi + 0x8,"MOV dword ptr [RDI + 0x8],R14D",write other [TODO]
perf_trace_signal_generate,0xb7,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],EAX",write other [TODO]
perf_trace_signal_generate,0xbe,ctx->rdi + 0x10,"MOV dword ptr [RDI + 0x10],EAX",write other [TODO]
perf_trace_signal_generate,0xdd,ctx->rdi + 0x14,"MOV qword ptr [RDI + 0x14],RAX",write other [TODO]
perf_trace_signal_generate,0xe1,ctx->rdi + 0x1c,"MOV qword ptr [RDI + 0x1c],RDX",write other [TODO]
perf_trace_signal_generate,0xef,ctx->rdi + 0x24,"MOV dword ptr [RDI + 0x24],EAX",write other [TODO]
perf_trace_signal_generate,0xf5,ctx->rdi + 0x28,"MOV dword ptr [RDI + 0x28],EAX",write other [TODO]
perf_trace_signal_generate,0xfb,ctx->rdi + 0x2c,"MOV dword ptr [RDI + 0x2c],EAX",write other [TODO]
perf_trace_signal_generate,0x101,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_signal_generate,0x127,,RET,ret
perf_trace_signal_generate,0x136,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],0x0",write other [TODO]
perf_trace_signal_generate,0x144,ctx->rdi + 0xc,"MOV dword ptr [RDI + 0xc],0x0",write other [TODO]
perf_trace_signal_generate,0x155,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_signal_generate,0x2c,ctx->rsp + 0x38,"MOV qword ptr [RSP + 0x38],RAX",write stack
trace_event_raw_event_signal_generate,0x4d,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_signal_generate,0x57,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_signal_generate,0x6a,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EDX",write other [TODO]
trace_event_raw_event_signal_generate,0x71,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
trace_event_raw_event_signal_generate,0x82,ctx->rax + 0x1c,"MOV qword ptr [RAX + 0x1c],RDI",write other [TODO]
trace_event_raw_event_signal_generate,0x8b,ctx->rax + 0x14,"MOV qword ptr [RAX + 0x14],RSI",write other [TODO]
trace_event_raw_event_signal_generate,0x96,ctx->rax + 0x28,"MOV dword ptr [RAX + 0x28],R12D",write other [TODO]
trace_event_raw_event_signal_generate,0x9a,ctx->rax + 0x24,"MOV dword ptr [RAX + 0x24],EDX",write other [TODO]
trace_event_raw_event_signal_generate,0x9d,ctx->rax + 0x2c,"MOV dword ptr [RAX + 0x2c],EBX",write other [TODO]
trace_event_raw_event_signal_generate,0xa0,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_signal_generate,0xc3,,RET,ret
trace_event_raw_event_signal_generate,0xc4,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],0x0",write other [TODO]
trace_event_raw_event_signal_generate,0xcf,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],0x0",write other [TODO]
trace_event_raw_event_signal_generate,0xe6,ctx->rsp,"MOV qword ptr [RSP],RDI",write stack
trace_event_raw_event_signal_generate,0xea,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_signal_generate,0xfd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_signal_deliver,0x24,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
trace_event_raw_event_signal_deliver,0x3f,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_signal_deliver,0x49,ctx->rax + 0x8,"MOV dword ptr [RAX + 0x8],R13D",write other [TODO]
trace_event_raw_event_signal_deliver,0x5b,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],EDX",write other [TODO]
trace_event_raw_event_signal_deliver,0x61,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],EDX",write other [TODO]
trace_event_raw_event_signal_deliver,0x6b,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],RDX",write other [TODO]
trace_event_raw_event_signal_deliver,0x73,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],RDX",write other [TODO]
trace_event_raw_event_signal_deliver,0x77,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_signal_deliver,0x97,,RET,ret
trace_event_raw_event_signal_deliver,0x98,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],0x0",write other [TODO]
trace_event_raw_event_signal_deliver,0xa3,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],0x0",write other [TODO]
trace_event_raw_event_signal_deliver,0xba,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_signal_deliver,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_raw_output_signal_generate,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_signal_generate,0x26,,RET,ret
trace_raw_output_signal_generate,0x57,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_signal_generate,0x63,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_signal_generate,0x74,,RET,ret
trace_raw_output_signal_deliver,0x14,0xffffffff811d0e90,CALL 0xffffffff811d0e90,direct call
trace_raw_output_signal_deliver,0x26,,RET,ret
trace_raw_output_signal_deliver,0x4a,0xffffffff811d07d0,CALL 0xffffffff811d07d0,direct call
trace_raw_output_signal_deliver,0x56,0xffffffff811c3880,CALL 0xffffffff811c3880,direct call
trace_raw_output_signal_deliver,0x64,,RET,ret
__bpf_trace_signal_generate,0xc,0xffffffff811f97c0,CALL 0xffffffff811f97c0,direct call
__bpf_trace_signal_generate,0x12,,RET,ret
__bpf_trace_signal_deliver,0x6,0xffffffff811f9640,CALL 0xffffffff811f9640,direct call
__bpf_trace_signal_deliver,0xc,,RET,ret
copy_siginfo,0x3,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
copy_siginfo,0xa,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
copy_siginfo,0x12,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
copy_siginfo,0x1a,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],RAX",write other [TODO]
copy_siginfo,0x22,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],RAX",write other [TODO]
copy_siginfo,0x2a,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],RAX",write other [TODO]
copy_siginfo,0x2e,,RET,ret
__sigqueue_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sigqueue_alloc,0x22,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDI",write stack
__sigqueue_alloc,0x25,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__sigqueue_alloc,0x2a,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__sigqueue_alloc,0x3d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__sigqueue_alloc,0x4a,0xffffffff810d70d0,CALL 0xffffffff810d70d0,direct call
__sigqueue_alloc,0x4f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__sigqueue_alloc,0x53,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__sigqueue_alloc,0x83,0xffffffff81323f60,CALL 0xffffffff81323f60,direct call
__sigqueue_alloc,0x8d,ctx->rax,"MOV qword ptr [RAX],RAX",write other [TODO]
__sigqueue_alloc,0x90,ctx->rax + 0x10,"MOV dword ptr [RAX + 0x10],R12D",write other [TODO]
__sigqueue_alloc,0x94,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RAX",write other [TODO]
__sigqueue_alloc,0x98,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],R13",write other [TODO]
__sigqueue_alloc,0xd6,,RET,ret
__sigqueue_alloc,0xe5,0xffffffff81c7ce60,CALL 0xffffffff81c7ce60,direct call
__ia32_sys_rt_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigpending,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_sys_rt_sigpending,0x32,0xffffffff810b3b60,CALL 0xffffffff810b3b60,direct call
__ia32_sys_rt_sigpending,0x43,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__ia32_sys_rt_sigpending,0x52,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_rt_sigpending,0x79,,RET,ret
__ia32_sys_rt_sigpending,0x83,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_sigpending,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__ia32_sys_sigpending,0x26,0xffffffff810b3b60,CALL 0xffffffff810b3b60,direct call
__ia32_sys_sigpending,0x37,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_sigpending,0x5a,,RET,ret
__ia32_sys_sigpending,0x5b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
check_kill_permission,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
check_kill_permission,0x42,,RET,ret
check_kill_permission,0x49,0xffffffff81194320,CALL 0xffffffff81194320,direct call
check_kill_permission,0xa0,0xffffffff81504bf0,CALL 0xffffffff81504bf0,direct call
check_kill_permission,0xad,,RET,ret
check_kill_permission,0xba,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
check_kill_permission,0xfb,,RET,ret
recalc_sigpending_tsk,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
recalc_sigpending_tsk,0x49,,RET,ret
recalc_sigpending_tsk,0x54,,RET,ret
__x64_sys_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sigpending,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__x64_sys_sigpending,0x26,0xffffffff810b3b60,CALL 0xffffffff810b3b60,direct call
__x64_sys_sigpending,0x37,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_sigpending,0x5a,,RET,ret
__x64_sys_sigpending,0x5b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_sigaltstack.constprop.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_sigaltstack.constprop.0,0x2b,ctx->rsi,"MOV qword ptr [RSI],0x0",write other [TODO]
do_sigaltstack.constprop.0,0x37,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],0x0",write other [TODO]
do_sigaltstack.constprop.0,0x3f,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],0x0",write other [TODO]
do_sigaltstack.constprop.0,0x4e,ctx->rsi,"MOV qword ptr [RSI],RCX",write other [TODO]
do_sigaltstack.constprop.0,0x58,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],RCX",write other [TODO]
do_sigaltstack.constprop.0,0xab,ctx->rsi + 0x8,"MOV dword ptr [RSI + 0x8],ECX",write other [TODO]
do_sigaltstack.constprop.0,0x11d,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EDX",write stack
do_sigaltstack.constprop.0,0x120,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_sigaltstack.constprop.0,0x13d,0xffffffff81036990,CALL 0xffffffff81036990,direct call
do_sigaltstack.constprop.0,0x15c,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigaltstack.constprop.0,0x172,,RET,ret
do_sigaltstack.constprop.0,0x194,ctx->rbx + 0xc28,"MOV qword ptr [RBX + 0xc28],R15",write other [TODO]
do_sigaltstack.constprop.0,0x19e,ctx->rbx + 0xc30,"MOV qword ptr [RBX + 0xc30],R14",write other [TODO]
do_sigaltstack.constprop.0,0x1a5,ctx->rbx + 0xc38,"MOV dword ptr [RBX + 0xc38],R13D",write other [TODO]
do_sigaltstack.constprop.0,0x1c8,0xffffffff81036990,CALL 0xffffffff81036990,direct call
do_compat_sigaltstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_compat_sigaltstack,0x1d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
do_compat_sigaltstack,0x3b,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
do_compat_sigaltstack,0x50,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
do_compat_sigaltstack,0x57,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EAX",write stack
do_compat_sigaltstack,0x5d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_compat_sigaltstack,0x78,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
do_compat_sigaltstack,0xa4,,RET,ret
do_compat_sigaltstack,0xb5,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],EAX",write stack
do_compat_sigaltstack,0xbb,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
do_compat_sigaltstack,0xc2,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
do_compat_sigaltstack,0xc5,0xffffffff81605960,CALL 0xffffffff81605960,direct call
do_compat_sigaltstack,0xfa,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_sigaltstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_sigaltstack,0xf,0xffffffff810b47e0,CALL 0xffffffff810b47e0,direct call
__ia32_compat_sys_sigaltstack,0x17,,RET,ret
__ia32_sys_sigaltstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_sigaltstack,0x1f,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__ia32_sys_sigaltstack,0x37,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_sigaltstack,0x66,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__ia32_sys_sigaltstack,0x85,,RET,ret
__ia32_sys_sigaltstack,0x92,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_sigaltstack,0xa5,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__ia32_sys_sigaltstack,0xcd,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__ia32_sys_sigaltstack,0xdc,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__ia32_sys_sigaltstack,0xec,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_pause,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_pause,0x20,,RET,ret
__ia32_sys_pause,0x30,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],0x1",write other [TODO]
__ia32_sys_pause,0x37,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
__ia32_sys_pause,0x56,,RET,ret
__x64_sys_rt_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigpending,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__x64_sys_rt_sigpending,0x32,0xffffffff810b3b60,CALL 0xffffffff810b3b60,direct call
__x64_sys_rt_sigpending,0x43,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__x64_sys_rt_sigpending,0x52,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_rt_sigpending,0x79,,RET,ret
__x64_sys_rt_sigpending,0x83,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigpending,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_compat_sys_rt_sigpending,0x35,0xffffffff810b3b60,CALL 0xffffffff810b3b60,direct call
__ia32_compat_sys_rt_sigpending,0x53,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__ia32_compat_sys_rt_sigpending,0x62,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_compat_sys_rt_sigpending,0x8d,,RET,ret
__ia32_compat_sys_rt_sigpending,0xa3,0xffffffff8128d060,CALL 0xffffffff8128d060,direct call
__ia32_compat_sys_rt_sigpending,0xb1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
flush_sigqueue_mask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_sigqueue_mask,0x2f,ctx->rsi + 0x10,"MOV qword ptr [RSI + 0x10],RAX",write other [TODO]
flush_sigqueue_mask,0x66,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
flush_sigqueue_mask,0x6a,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
flush_sigqueue_mask,0x6d,ctx->r12,"MOV qword ptr [R12],R12",write other [TODO]
flush_sigqueue_mask,0x71,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],R12",write other [TODO]
flush_sigqueue_mask,0x8d,0xffffffff810d70b0,CALL 0xffffffff810d70b0,direct call
flush_sigqueue_mask,0x92,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],0x0",write other [TODO]
flush_sigqueue_mask,0xa8,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
flush_sigqueue_mask,0xbd,,RET,ret
flush_sigqueue_mask,0xbe,,RET,ret
__x64_sys_sigaltstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sigaltstack,0x20,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__x64_sys_sigaltstack,0x38,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_sigaltstack,0x67,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__x64_sys_sigaltstack,0x86,,RET,ret
__x64_sys_sigaltstack,0x93,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_sigaltstack,0xa6,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__x64_sys_sigaltstack,0xce,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__x64_sys_sigaltstack,0xdd,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
__x64_sys_sigaltstack,0xed,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
retarget_shared_pending.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
retarget_shared_pending.isra.0,0x87,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
retarget_shared_pending.isra.0,0x93,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
retarget_shared_pending.isra.0,0xa3,,RET,ret
retarget_shared_pending.isra.0,0xa4,,RET,ret
__flush_itimer_signals,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__flush_itimer_signals,0x5e,ctx->r14 + 0x10,"MOV qword ptr [R14 + 0x10],RDX",write other [TODO]
__flush_itimer_signals,0x70,,RET,ret
__flush_itimer_signals,0x80,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RAX",write other [TODO]
__flush_itimer_signals,0x84,ctx->rax,"MOV qword ptr [RAX],RCX",write other [TODO]
__flush_itimer_signals,0x87,ctx->r12,"MOV qword ptr [R12],R12",write other [TODO]
__flush_itimer_signals,0x8b,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],R12",write other [TODO]
__flush_itimer_signals,0xa7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
__flush_itimer_signals,0xab,0xffffffff810d70b0,CALL 0xffffffff810d70b0,direct call
__flush_itimer_signals,0xb4,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],0x0",write other [TODO]
__flush_itimer_signals,0xc7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
__flush_itimer_signals,0xcb,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
task_participate_group_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_participate_group_stop,0x39,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RDX",write other [TODO]
task_participate_group_stop,0x56,ctx->rbx + 0x70,"MOV dword ptr [RBX + 0x70],EAX",write other [TODO]
task_participate_group_stop,0x6f,,RET,ret
task_participate_group_stop,0x7d,ctx->rbx + 0x74,"MOV dword ptr [RBX + 0x74],EAX",write other [TODO]
task_participate_group_stop,0x89,,RET,ret
task_participate_group_stop,0x97,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RAX",write other [TODO]
task_participate_group_stop,0xb0,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
recalc_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
recalc_sigpending,0x5b,,RET,ret
recalc_sigpending,0x60,,RET,ret
kernel_sigaction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kernel_sigaction,0x30,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
kernel_sigaction,0x36,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
kernel_sigaction,0x50,ctx->rax,"MOV qword ptr [RAX],R12",write other [TODO]
kernel_sigaction,0x69,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
kernel_sigaction,0x87,,RET,ret
kernel_sigaction,0x96,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R12",write stack
kernel_sigaction,0x9e,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
kernel_sigaction,0xae,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
kernel_sigaction,0xb3,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
kernel_sigaction,0xba,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__set_task_blocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__set_task_blocked,0x1d,ctx->rdi + 0xbf8,"MOV qword ptr [RDI + 0xbf8],RAX",write other [TODO]
__set_task_blocked,0x24,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
__set_task_blocked,0x2e,,RET,ret
__set_task_blocked,0x52,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDI",write stack
__set_task_blocked,0x5d,0xffffffff810b4d70,CALL 0xffffffff810b4d70,direct call
__x64_sys_ssetmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_ssetmask,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__x64_sys_ssetmask,0x3a,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
__x64_sys_ssetmask,0x4a,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
__x64_sys_ssetmask,0x56,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
__x64_sys_ssetmask,0x62,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__x64_sys_ssetmask,0x81,,RET,ret
__x64_sys_ssetmask,0x82,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_ssetmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_ssetmask,0x2d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_sys_ssetmask,0x3a,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
__ia32_sys_ssetmask,0x4a,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
__ia32_sys_ssetmask,0x56,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
__ia32_sys_ssetmask,0x62,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__ia32_sys_ssetmask,0x81,,RET,ret
__ia32_sys_ssetmask,0x82,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_trap_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_trap_notify,0x33,ctx->r12 + 0x958,"MOV qword ptr [R12 + 0x958],RAX",write other [TODO]
ptrace_trap_notify,0x50,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
ptrace_trap_notify,0x5e,,RET,ret
ptrace_trap_notify,0x6a,ctx->r12 + 0x958,"MOV qword ptr [R12 + 0x958],RAX",write other [TODO]
ptrace_trap_notify,0x77,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
ptrace_trap_notify,0x81,,RET,ret
prepare_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prepare_signal,0x19,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDX",write stack
prepare_signal,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
prepare_signal,0x67,,RET,ret
prepare_signal,0x145,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x3c0000",write stack
prepare_signal,0x150,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
prepare_signal,0x187,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
prepare_signal,0x196,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
prepare_signal,0x1cb,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
prepare_signal,0x1cf,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
prepare_signal,0x1e9,ctx->rdx + 0x958,"MOV qword ptr [RDX + 0x958],RSI",write other [TODO]
prepare_signal,0x20c,ctx->rdx + 0x958,"MOV qword ptr [RDX + 0x958],RAX",write other [TODO]
prepare_signal,0x225,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
prepare_signal,0x229,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
prepare_signal,0x23f,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x20000",write stack
prepare_signal,0x24a,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
prepare_signal,0x278,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
prepare_signal,0x2ce,ctx->r13 + 0x70,"MOV dword ptr [R13 + 0x70],0x0",write other [TODO]
prepare_signal,0x2d8,ctx->r13 + 0x60,"MOV dword ptr [R13 + 0x60],0x0",write other [TODO]
prepare_signal,0x2e3,ctx->r13 + 0x74,"MOV dword ptr [R13 + 0x74],EAX",write other [TODO]
prepare_signal,0x2ef,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
prepare_signal,0x2f3,0xffffffff810b5290,CALL 0xffffffff810b5290,direct call
prepare_signal,0x379,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sigprocmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sigprocmask,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
sigprocmask,0x34,ctx->rdx,"MOV qword ptr [RDX],RAX",write other [TODO]
sigprocmask,0x69,,RET,ret
sigprocmask,0x77,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sigprocmask,0x97,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
sigprocmask,0xa3,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
sigprocmask,0xaf,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
sigprocmask,0xc0,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sigprocmask,0xc9,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
sigprocmask,0xcf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_rt_sigprocmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigprocmask,0x20,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_sys_rt_sigprocmask,0x44,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_rt_sigprocmask,0x56,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigprocmask,0x70,0xffffffff810b56b0,CALL 0xffffffff810b56b0,direct call
__ia32_sys_rt_sigprocmask,0x8a,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_rt_sigprocmask,0xad,,RET,ret
__ia32_sys_rt_sigprocmask,0xc4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigprocmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigprocmask,0x20,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_rt_sigprocmask,0x3e,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_compat_sys_rt_sigprocmask,0x4d,0xffffffff81175230,CALL 0xffffffff81175230,direct call
__ia32_compat_sys_rt_sigprocmask,0x78,,RET,ret
__ia32_compat_sys_rt_sigprocmask,0x8a,0xffffffff810b56b0,CALL 0xffffffff810b56b0,direct call
__ia32_compat_sys_rt_sigprocmask,0xa6,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_compat_sys_rt_sigprocmask,0xc4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_sigprocmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigprocmask,0x21,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__x64_sys_rt_sigprocmask,0x46,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_rt_sigprocmask,0x58,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigprocmask,0x72,0xffffffff810b56b0,CALL 0xffffffff810b56b0,direct call
__x64_sys_rt_sigprocmask,0x8c,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_rt_sigprocmask,0xaf,,RET,ret
__x64_sys_rt_sigprocmask,0xc6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
sigsuspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sigsuspend,0x1c,ctx->rbx + 0xc08,"MOV qword ptr [RBX + 0xc08],RAX",write other [TODO]
sigsuspend,0x2c,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
sigsuspend,0x42,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
sigsuspend,0x4d,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
sigsuspend,0x59,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
sigsuspend,0x8e,,RET,ret
sigsuspend,0x96,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],0x1",write other [TODO]
sigsuspend,0x9d,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
__ia32_sys_rt_sigsuspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigsuspend,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__ia32_sys_rt_sigsuspend,0x2e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigsuspend,0x3c,0xffffffff810b5a00,CALL 0xffffffff810b5a00,direct call
__ia32_sys_rt_sigsuspend,0x53,,RET,ret
__ia32_sys_rt_sigsuspend,0x66,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigsuspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigsuspend,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__ia32_compat_sys_rt_sigsuspend,0x29,0xffffffff81175230,CALL 0xffffffff81175230,direct call
__ia32_compat_sys_rt_sigsuspend,0x36,0xffffffff810b5a00,CALL 0xffffffff810b5a00,direct call
__ia32_compat_sys_rt_sigsuspend,0x4d,,RET,ret
__ia32_compat_sys_rt_sigsuspend,0x60,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_sigsuspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sigsuspend,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__x64_sys_sigsuspend,0x22,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__x64_sys_sigsuspend,0x26,0xffffffff810b5a00,CALL 0xffffffff810b5a00,direct call
__x64_sys_sigsuspend,0x3d,,RET,ret
__x64_sys_sigsuspend,0x3e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_sigsuspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_sigsuspend,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__ia32_sys_sigsuspend,0x23,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__ia32_sys_sigsuspend,0x27,0xffffffff810b5a00,CALL 0xffffffff810b5a00,direct call
__ia32_sys_sigsuspend,0x3e,,RET,ret
__ia32_sys_sigsuspend,0x3f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_sigsuspend,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigsuspend,0x1a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__x64_sys_rt_sigsuspend,0x30,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigsuspend,0x3e,0xffffffff810b5a00,CALL 0xffffffff810b5a00,direct call
__x64_sys_rt_sigsuspend,0x55,,RET,ret
__x64_sys_rt_sigsuspend,0x68,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
complete_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
complete_signal,0xbf,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
complete_signal,0xc3,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
complete_signal,0xc7,0xffffffff810e2250,CALL 0xffffffff810e2250,direct call
complete_signal,0xd8,ctx->r15 + 0x38,"MOV qword ptr [R15 + 0x38],R12",write other [TODO]
complete_signal,0x116,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
complete_signal,0x122,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
complete_signal,0x135,,RET,ret
complete_signal,0x165,,RET,ret
complete_signal,0x1a1,ctx->r12 + 0x958,"MOV qword ptr [R12 + 0x958],RAX",write other [TODO]
complete_signal,0x1c5,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RSI",write stack
complete_signal,0x1cc,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EDX",write stack
complete_signal,0x1cf,0xffffffff810e2250,CALL 0xffffffff810e2250,direct call
complete_signal,0x246,ctx->r15 + 0x60,"MOV dword ptr [R15 + 0x60],R13D",write other [TODO]
complete_signal,0x24d,ctx->r15 + 0x70,"MOV qword ptr [R15 + 0x70],RAX",write other [TODO]
complete_signal,0x27c,ctx->r12 + 0x958,"MOV qword ptr [R12 + 0x958],RAX",write other [TODO]
complete_signal,0x2af,ctx->r12 + 0x958,"MOV qword ptr [R12 + 0x958],RAX",write other [TODO]
complete_signal,0x2c0,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
complete_signal,0x2cc,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
complete_signal,0x2ea,ctx->r12 + 0x958,"MOV qword ptr [R12 + 0x958],RDX",write other [TODO]
complete_signal,0x305,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
__x64_sys_sigprocmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sigprocmask,0x2c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__x64_sys_sigprocmask,0x3e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__x64_sys_sigprocmask,0x54,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_sigprocmask,0x6a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_sigprocmask,0xa8,,RET,ret
__x64_sys_sigprocmask,0xb7,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_sigprocmask,0xd4,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
__x64_sys_sigprocmask,0xe0,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
__x64_sys_sigprocmask,0xec,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__x64_sys_sigprocmask,0x102,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_sigprocmask,0x132,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_sigprocmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_sigprocmask,0x2b,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_sys_sigprocmask,0x3d,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__ia32_sys_sigprocmask,0x53,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_sigprocmask,0x69,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_sigprocmask,0xa7,,RET,ret
__ia32_sys_sigprocmask,0xb6,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_sigprocmask,0xd3,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
__ia32_sys_sigprocmask,0xdf,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
__ia32_sys_sigprocmask,0xeb,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__ia32_sys_sigprocmask,0x101,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_sigprocmask,0x131,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
collect_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
collect_signal,0x72,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
collect_signal,0x76,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
collect_signal,0x79,ctx->r12,"MOV qword ptr [R12],R12",write other [TODO]
collect_signal,0x7d,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],R12",write other [TODO]
collect_signal,0x82,0xffffffff810b4220,CALL 0xffffffff810b4220,direct call
collect_signal,0x91,ctx->r13,"MOV byte ptr [R13],AL",write other [TODO]
collect_signal,0xac,0xffffffff810d70b0,CALL 0xffffffff810d70b0,direct call
collect_signal,0xb1,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],0x0",write other [TODO]
collect_signal,0xc4,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
collect_signal,0xcf,,RET,ret
collect_signal,0xfa,ctx->rbx,"MOV qword ptr [RBX],0x0",write other [TODO]
collect_signal,0x105,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],0x0",write other [TODO]
collect_signal,0x119,ctx->rbx,"MOV dword ptr [RBX],R8D",write other [TODO]
collect_signal,0x122,,RET,ret
dequeue_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
dequeue_signal,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
dequeue_signal,0x2e,ctx->rcx,"MOV dword ptr [RCX],0x0",write other [TODO]
dequeue_signal,0x37,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x0",write stack
dequeue_signal,0x47,ctx->rcx,"MOV dword ptr [RCX],0x1",write other [TODO]
dequeue_signal,0x64,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
dequeue_signal,0x90,,RET,ret
dequeue_signal,0xbd,0xffffffff810b6250,CALL 0xffffffff810b6250,direct call
dequeue_signal,0xc2,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
dequeue_signal,0xde,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
dequeue_signal,0xe6,0xffffffff81160a30,CALL 0xffffffff81160a30,direct call
dequeue_signal,0xf2,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
dequeue_signal,0xf7,ctx->r14 + 0x20,"MOV dword ptr [R14 + 0x20],0x0",write other [TODO]
dequeue_signal,0x130,0xffffffff810b6250,CALL 0xffffffff810b6250,direct call
dequeue_signal,0x13b,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
dequeue_signal,0x173,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
dequeue_signal,0x177,ctx->rax + 0x30,CALL qword ptr [RAX + 0x30],in-direct call
dequeue_signal,0x184,0xffffffff81154570,CALL 0xffffffff81154570,direct call
dequeue_signal,0x1a0,0xffffffff81154f40,CALL 0xffffffff81154f40,direct call
dequeue_signal,0x1a5,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
dequeue_signal,0x1dc,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
dequeue_signal,0x1e6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_sigtimedwait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_sigtimedwait,0x2f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
do_sigtimedwait,0x3d,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
do_sigtimedwait,0x41,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_sigtimedwait,0x85,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_sigtimedwait,0xa1,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_sigtimedwait,0xa5,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_sigtimedwait,0xb8,0xffffffff810b6380,CALL 0xffffffff810b6380,direct call
do_sigtimedwait,0xd8,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigtimedwait,0xff,,RET,ret
do_sigtimedwait,0x107,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigtimedwait,0x115,ctx->rbx + 0xc00,"MOV qword ptr [RBX + 0xc00],RAX",write other [TODO]
do_sigtimedwait,0x127,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
do_sigtimedwait,0x133,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigtimedwait,0x149,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],0x2001",write other [TODO]
do_sigtimedwait,0x157,0xffffffff81d138b0,CALL 0xffffffff81d138b0,direct call
do_sigtimedwait,0x166,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_sigtimedwait,0x175,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
do_sigtimedwait,0x184,ctx->rbx + 0xc00,"MOV qword ptr [RBX + 0xc00],0x0",write other [TODO]
do_sigtimedwait,0x193,0xffffffff810b6380,CALL 0xffffffff810b6380,direct call
do_sigtimedwait,0x1a2,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigtimedwait,0x1c4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__send_signal_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__send_signal_locked,0x28,0xffffffff810b5330,CALL 0xffffffff810b5330,direct call
__send_signal_locked,0x60,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
__send_signal_locked,0x7e,0xffffffff810b4250,CALL 0xffffffff810b4250,direct call
__send_signal_locked,0x9b,ctx->r10 + 0x8,"MOV qword ptr [R10 + 0x8],R15",write other [TODO]
__send_signal_locked,0x9f,ctx->r15,"MOV qword ptr [R15],R10",write other [TODO]
__send_signal_locked,0xa2,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RAX",write other [TODO]
__send_signal_locked,0xa6,ctx->rax,"MOV qword ptr [RAX],R15",write other [TODO]
__send_signal_locked,0xc2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R10",write stack
__send_signal_locked,0xca,0xffffffff810b4220,CALL 0xffffffff810b4220,direct call
__send_signal_locked,0x167,ctx->rsi,"MOV qword ptr [RSI],RCX",write other [TODO]
__send_signal_locked,0x18c,ctx->rsi,"MOV qword ptr [RSI],RCX",write other [TODO]
__send_signal_locked,0x1a0,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R9D",write stack
__send_signal_locked,0x1a4,0xffffffff810b5cb0,CALL 0xffffffff810b5cb0,direct call
__send_signal_locked,0x1ce,,RET,ret
__send_signal_locked,0x24a,0xffffffff810b4250,CALL 0xffffffff810b4250,direct call
__send_signal_locked,0x288,ctx->r8,"MOV qword ptr [R8],0x0",write other [TODO]
__send_signal_locked,0x298,ctx->r15 + 0x40,"MOV qword ptr [R15 + 0x40],0x0",write other [TODO]
__send_signal_locked,0x2ad,ctx->r15 + 0x18,"MOV dword ptr [R15 + 0x18],R13D",write other [TODO]
__send_signal_locked,0x2b1,ctx->r15 + 0x20,"MOV dword ptr [R15 + 0x20],0x80",write other [TODO]
__send_signal_locked,0x2c9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R10",write stack
__send_signal_locked,0x2d1,ctx->r15 + 0x18,"MOV qword ptr [R15 + 0x18],0x0",write other [TODO]
__send_signal_locked,0x2dc,ctx->r15 + 0x40,"MOV qword ptr [R15 + 0x40],0x0",write other [TODO]
__send_signal_locked,0x2ee,ctx->r15 + 0x18,"MOV dword ptr [R15 + 0x18],R13D",write other [TODO]
__send_signal_locked,0x2f5,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
__send_signal_locked,0x30e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__send_signal_locked,0x312,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__send_signal_locked,0x317,ctx->r15 + 0x28,"MOV dword ptr [R15 + 0x28],EAX",write other [TODO]
__send_signal_locked,0x31b,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__send_signal_locked,0x32b,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__send_signal_locked,0x32f,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__send_signal_locked,0x342,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
__send_signal_locked,0x346,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__send_signal_locked,0x356,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__send_signal_locked,0x35b,ctx->r15 + 0x2c,"MOV dword ptr [R15 + 0x2c],EAX",write other [TODO]
__send_signal_locked,0x363,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__send_signal_locked,0x380,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R10",write stack
__send_signal_locked,0x384,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R9D",write stack
__send_signal_locked,0x388,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
kill_pid_usb_asyncio,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_pid_usb_asyncio,0x1d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
kill_pid_usb_asyncio,0x33,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EDI",write stack
kill_pid_usb_asyncio,0x3c,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],0x0",write stack
kill_pid_usb_asyncio,0x44,ctx->rbp - 0x54,"MOV dword ptr [RBP + -0x54],ESI",write stack
kill_pid_usb_asyncio,0x47,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
kill_pid_usb_asyncio,0x4b,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
kill_pid_usb_asyncio,0x53,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
kill_pid_usb_asyncio,0x5b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
kill_pid_usb_asyncio,0x63,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],0xfffffffc",write stack
kill_pid_usb_asyncio,0x6a,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_pid_usb_asyncio,0x7a,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
kill_pid_usb_asyncio,0xc5,0xffffffff81504bf0,CALL 0xffffffff81504bf0,direct call
kill_pid_usb_asyncio,0xd6,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid_usb_asyncio,0xfd,,RET,ret
kill_pid_usb_asyncio,0xfe,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_pid_usb_asyncio,0x112,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
kill_pid_usb_asyncio,0x126,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid_usb_asyncio,0x13d,0xffffffff810b6740,CALL 0xffffffff810b6740,direct call
kill_pid_usb_asyncio,0x14f,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
kill_pid_usb_asyncio,0x167,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
kill_pid_usb_asyncio,0x178,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid_usb_asyncio,0x188,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
recalc_sigpending_and_wake,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
recalc_sigpending_and_wake,0x5b,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
recalc_sigpending_and_wake,0x69,,RET,ret
recalc_sigpending_and_wake,0x6d,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
recalc_sigpending_and_wake,0x77,,RET,ret
calculate_sigpending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
calculate_sigpending,0x1a,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
calculate_sigpending,0x23,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
calculate_sigpending,0x2f,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
calculate_sigpending,0x39,,RET,ret
next_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
next_signal,0x1c,,RET,ret
next_signal,0x37,,RET,ret
task_set_jobctl_pending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_set_jobctl_pending,0x47,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RAX",write other [TODO]
task_set_jobctl_pending,0x53,,RET,ret
task_set_jobctl_pending,0x64,,RET,ret
task_clear_jobctl_trapping,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_clear_jobctl_trapping,0x13,,RET,ret
task_clear_jobctl_trapping,0x1b,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RAX",write other [TODO]
task_clear_jobctl_trapping,0x37,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
task_clear_jobctl_trapping,0x3d,,RET,ret
task_clear_jobctl_pending,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_clear_jobctl_pending,0x2b,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RSI",write other [TODO]
task_clear_jobctl_pending,0x3a,,RET,ret
task_clear_jobctl_pending,0x4b,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RSI",write other [TODO]
task_clear_jobctl_pending,0x67,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
task_clear_jobctl_pending,0x6d,,RET,ret
task_join_group_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
task_join_group_stop,0x2d,ctx->rdx + 0x70,"MOV dword ptr [RDX + 0x70],EAX",write other [TODO]
task_join_group_stop,0x3b,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
task_join_group_stop,0x41,,RET,ret
task_join_group_stop,0x48,,RET,ret
flush_sigqueue,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_sigqueue,0xf,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],0x0",write other [TODO]
flush_sigqueue,0x2b,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
flush_sigqueue,0x2f,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
flush_sigqueue,0x32,ctx->r12,"MOV qword ptr [R12],R12",write other [TODO]
flush_sigqueue,0x36,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],R12",write other [TODO]
flush_sigqueue,0x52,0xffffffff810d70b0,CALL 0xffffffff810d70b0,direct call
flush_sigqueue,0x57,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],0x0",write other [TODO]
flush_sigqueue,0x6a,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
flush_sigqueue,0x7b,,RET,ret
flush_signals,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_signals,0x16,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
flush_signals,0x29,0xffffffff810b6f10,CALL 0xffffffff810b6f10,direct call
flush_signals,0x39,0xffffffff810b6f10,CALL 0xffffffff810b6f10,direct call
flush_signals,0x48,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
flush_signals,0x51,,RET,ret
flush_itimer_signals,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_itimer_signals,0x1c,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
flush_itimer_signals,0x2b,0xffffffff810b4e20,CALL 0xffffffff810b4e20,direct call
flush_itimer_signals,0x3b,0xffffffff810b4e20,CALL 0xffffffff810b4e20,direct call
flush_itimer_signals,0x4a,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
flush_itimer_signals,0x53,,RET,ret
ignore_signals,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ignore_signals,0x20,ctx->rax,"MOV qword ptr [RAX],0x1",write other [TODO]
ignore_signals,0x2c,0xffffffff810b6f90,CALL 0xffffffff810b6f90,direct call
ignore_signals,0x32,,RET,ret
flush_signal_handlers,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_signal_handlers,0x25,ctx->rax,"MOV qword ptr [RAX],0x0",write other [TODO]
flush_signal_handlers,0x2c,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],0x0",write other [TODO]
flush_signal_handlers,0x38,ctx->rax - 0x10,"MOV qword ptr [RAX + -0x10],0x0",write other [TODO]
flush_signal_handlers,0x40,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],0x0",write other [TODO]
flush_signal_handlers,0x4e,,RET,ret
unhandled_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
unhandled_signal,0x3d,,RET,ret
signal_wake_up_state,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
signal_wake_up_state,0x15,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
signal_wake_up_state,0x23,,RET,ret
signal_wake_up_state,0x27,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
signal_wake_up_state,0x31,,RET,ret
zap_other_threads,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
zap_other_threads,0x17,ctx->rax + 0x70,"MOV dword ptr [RAX + 0x70],0x0",write other [TODO]
zap_other_threads,0x66,ctx->rbx - 0x108,"MOV qword ptr [RBX + -0x108],RDX",write other [TODO]
zap_other_threads,0xab,ctx->rbx - 0x108,"MOV qword ptr [RBX + -0x108],RAX",write other [TODO]
zap_other_threads,0xbb,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
zap_other_threads,0xcb,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
zap_other_threads,0xe3,,RET,ret
zap_other_threads,0xea,ctx->rbx - 0x108,"MOV qword ptr [RBX + -0x108],RAX",write other [TODO]
zap_other_threads,0x103,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
__lock_task_sighand,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__lock_task_sighand,0x16,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__lock_task_sighand,0x2a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
__lock_task_sighand,0x2f,ctx->r13,"MOV qword ptr [R13],RAX",write other [TODO]
__lock_task_sighand,0x3f,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__lock_task_sighand,0x4f,,RET,ret
__lock_task_sighand,0x56,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
sigqueue_alloc,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sigqueue_alloc,0x24,0xffffffff810b4250,CALL 0xffffffff810b4250,direct call
sigqueue_alloc,0x2a,,RET,ret
sigqueue_free,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
sigqueue_free,0x29,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
sigqueue_free,0x43,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
sigqueue_free,0x4d,,RET,ret
sigqueue_free,0x4e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
sigqueue_free,0x6f,0xffffffff810d70b0,CALL 0xffffffff810d70b0,direct call
sigqueue_free,0x74,ctx->r12 + 0x48,"MOV qword ptr [R12 + 0x48],0x0",write other [TODO]
sigqueue_free,0x87,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
sigqueue_free,0x91,,RET,ret
send_sigqueue,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sigqueue,0x34,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
send_sigqueue,0x3f,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
send_sigqueue,0x50,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
send_sigqueue,0x65,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RDI",write stack
send_sigqueue,0x69,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
send_sigqueue,0x72,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
send_sigqueue,0x86,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
send_sigqueue,0x93,0xffffffff810b5330,CALL 0xffffffff810b5330,direct call
send_sigqueue,0xac,ctx->rbx + 0x2c,"MOV dword ptr [RBX + 0x2c],0x0",write other [TODO]
send_sigqueue,0xe7,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
send_sigqueue,0xee,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
send_sigqueue,0xf4,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
send_sigqueue,0xf8,ctx->rdx,"MOV qword ptr [RDX],RBX",write other [TODO]
send_sigqueue,0x10a,0xffffffff810b5cb0,CALL 0xffffffff810b5cb0,direct call
send_sigqueue,0x11f,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
send_sigqueue,0x124,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
send_sigqueue,0x13a,,RET,ret
send_sigqueue,0x13f,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
send_sigqueue,0x154,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
send_sigqueue,0x1ff,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
do_notify_parent,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_notify_parent,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_notify_parent,0x8b,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
do_notify_parent,0xc8,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],R13D",write stack
do_notify_parent,0xcc,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_notify_parent,0xd9,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
do_notify_parent,0xe6,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
do_notify_parent,0xeb,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
do_notify_parent,0xee,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_notify_parent,0xfe,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_notify_parent,0x103,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_notify_parent,0x11e,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_notify_parent,0x128,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
do_notify_parent,0x12d,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
do_notify_parent,0x130,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_notify_parent,0x154,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_notify_parent,0x159,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
do_notify_parent,0x16f,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_notify_parent,0x174,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_notify_parent,0x185,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDX",write stack
do_notify_parent,0x190,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x3",write stack
do_notify_parent,0x1a9,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
do_notify_parent,0x1dc,0xffffffff810aaf80,CALL 0xffffffff810aaf80,direct call
do_notify_parent,0x1e7,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
do_notify_parent,0x210,,RET,ret
do_notify_parent,0x215,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x2",write stack
do_notify_parent,0x224,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0x1",write stack
do_notify_parent,0x22b,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
do_notify_parent,0x28d,0xffffffff810b6740,CALL 0xffffffff810b6740,direct call
do_notify_parent,0x2ac,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_no_restart_syscall,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_no_restart_syscall,0x11,,RET,ret
set_current_blocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_current_blocked,0x1e,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
set_current_blocked,0x34,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
set_current_blocked,0x3f,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
set_current_blocked,0x4b,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
set_current_blocked,0x54,,RET,ret
__set_current_blocked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__set_current_blocked,0x2b,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
__set_current_blocked,0x36,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
__set_current_blocked,0x42,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
__set_current_blocked,0x4b,,RET,ret
set_user_sigmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_user_sigmask,0x17,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
set_user_sigmask,0x38,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
set_user_sigmask,0x59,ctx->rbx + 0xc08,"MOV qword ptr [RBX + 0xc08],RAX",write other [TODO]
set_user_sigmask,0x6a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
set_user_sigmask,0x7e,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
set_user_sigmask,0x8a,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
set_user_sigmask,0x96,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
set_user_sigmask,0xb1,,RET,ret
set_user_sigmask,0xc0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
set_compat_user_sigmask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_compat_user_sigmask,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
set_compat_user_sigmask,0x39,0xffffffff81175230,CALL 0xffffffff81175230,direct call
set_compat_user_sigmask,0x60,ctx->rbx + 0xc08,"MOV qword ptr [RBX + 0xc08],RAX",write other [TODO]
set_compat_user_sigmask,0x71,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
set_compat_user_sigmask,0x85,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
set_compat_user_sigmask,0x91,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
set_compat_user_sigmask,0x9d,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
set_compat_user_sigmask,0xbc,,RET,ret
set_compat_user_sigmask,0xd2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
siginfo_layout,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
siginfo_layout,0x41,,RET,ret
siginfo_layout,0x4d,,RET,ret
siginfo_layout,0x6b,,RET,ret
siginfo_layout,0x9e,,RET,ret
post_copy_siginfo_from_user32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
post_copy_siginfo_from_user32,0x18,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
post_copy_siginfo_from_user32,0x23,ctx->rdi + 0x20,"MOV qword ptr [RDI + 0x20],0x0",write other [TODO]
post_copy_siginfo_from_user32,0x3d,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x42,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x48,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],ESI",write other [TODO]
post_copy_siginfo_from_user32,0x4f,0xffffffff810b7b00,CALL 0xffffffff810b7b00,direct call
post_copy_siginfo_from_user32,0x67,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x6f,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x77,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x80,,RET,ret
post_copy_siginfo_from_user32,0x86,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0x8f,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x99,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xa4,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xad,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
post_copy_siginfo_from_user32,0xb7,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xc1,ctx->wordctx->ptrctx->rbx + 0x18,"MOV word ptr [RBX + 0x18],AX",write other [TODO]
post_copy_siginfo_from_user32,0xcc,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xd5,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xde,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xe9,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0xf2,ctx->rbx + 0x20,"MOV dword ptr [RBX + 0x20],EAX",write other [TODO]
post_copy_siginfo_from_user32,0xfc,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0x105,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
post_copy_siginfo_from_user32,0x10e,ctx->rbx + 0x20,"MOV dword ptr [RBX + 0x20],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x116,ctx->rbx + 0x24,"MOV dword ptr [RBX + 0x24],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x123,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x12b,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x133,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x13b,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],RAX",write other [TODO]
post_copy_siginfo_from_user32,0x144,ctx->rbx + 0x28,"MOV qword ptr [RBX + 0x28],RAX",write other [TODO]
post_copy_siginfo_from_user32,0x152,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
post_copy_siginfo_from_user32,0x15b,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x163,ctx->rbx + 0x1c,"MOV dword ptr [RBX + 0x1c],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x170,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
post_copy_siginfo_from_user32,0x178,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
__copy_siginfo_from_user32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__copy_siginfo_from_user32,0x30,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__copy_siginfo_from_user32,0x36,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__copy_siginfo_from_user32,0x4a,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],EBX",write stack
__copy_siginfo_from_user32,0x50,0xffffffff810b7ba0,CALL 0xffffffff810b7ba0,direct call
__copy_siginfo_from_user32,0x6f,,RET,ret
__copy_siginfo_from_user32,0x77,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
send_signal_locked,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_signal_locked,0x3e,0xffffffff810b7b00,CALL 0xffffffff810b7b00,direct call
send_signal_locked,0x56,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
send_signal_locked,0x5b,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
send_signal_locked,0x6e,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
send_signal_locked,0x98,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
send_signal_locked,0xa2,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
send_signal_locked,0xa7,ctx->r12 + 0x14,"MOV dword ptr [R12 + 0x14],EAX",write other [TODO]
send_signal_locked,0xac,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
send_signal_locked,0xb9,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
send_signal_locked,0xcc,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
send_signal_locked,0xee,0xffffffff810b6740,CALL 0xffffffff810b6740,direct call
send_signal_locked,0xfd,,RET,ret
send_signal_locked,0x101,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
send_signal_locked,0x114,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
send_signal_locked,0x124,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],0x0",write other [TODO]
do_send_sig_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_send_sig_info,0x22,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_send_sig_info,0x36,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
do_send_sig_info,0x4a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
do_send_sig_info,0x4e,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_send_sig_info,0x5f,0xffffffff810b7da0,CALL 0xffffffff810b7da0,direct call
do_send_sig_info,0x72,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
do_send_sig_info,0x88,,RET,ret
do_send_sig_info,0x8f,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
do_send_sig_info,0xa0,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
group_send_sig_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
group_send_sig_info,0x1d,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
group_send_sig_info,0x2a,0xffffffff810b4440,CALL 0xffffffff810b4440,direct call
group_send_sig_info,0x32,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
group_send_sig_info,0x4d,,RET,ret
group_send_sig_info,0x59,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
group_send_sig_info,0x6e,,RET,ret
send_sig_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sig_info,0x14,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
send_sig_info,0x1a,,RET,ret
send_sig_info,0x20,,RET,ret
send_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sig,0x24,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
send_sig,0x2a,,RET,ret
send_sig,0x30,,RET,ret
send_sig_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sig_fault,0x27,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
send_sig_fault,0x3a,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R8D",write stack
send_sig_fault,0x3e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R10D",write stack
send_sig_fault,0x42,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R9",write stack
send_sig_fault,0x4f,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
send_sig_fault,0x64,,RET,ret
send_sig_fault,0x6c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
send_sig_mceerr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sig_mceerr,0x22,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
send_sig_mceerr,0x46,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x7",write stack
send_sig_mceerr,0x4d,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R8D",write stack
send_sig_mceerr,0x51,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R10",write stack
send_sig_mceerr,0x55,ctx->wordctx->ptrctx->rbp - 0x20,"MOV word ptr [RBP + -0x20],R9W",write stack
send_sig_mceerr,0x5a,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
send_sig_mceerr,0x6f,,RET,ret
send_sig_mceerr,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
send_sig_perf,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sig_perf,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
send_sig_perf,0x31,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RDX",write stack
send_sig_perf,0x4a,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x5",write stack
send_sig_perf,0x51,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x6",write stack
send_sig_perf,0x5c,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R9",write stack
send_sig_perf,0x63,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],R8D",write stack
send_sig_perf,0x67,ctx->rbp - 0x14,"MOV dword ptr [RBP + -0x14],EAX",write stack
send_sig_perf,0x6a,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
send_sig_perf,0x7f,,RET,ret
send_sig_perf,0x80,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
send_sig_fault_trapno,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
send_sig_fault_trapno,0x2d,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
send_sig_fault_trapno,0x39,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R9D",write stack
send_sig_fault_trapno,0x3d,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R12D",write stack
send_sig_fault_trapno,0x41,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
send_sig_fault_trapno,0x45,ctx->rbp - 0x28,"MOV dword ptr [RBP + -0x28],R10D",write stack
send_sig_fault_trapno,0x55,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
send_sig_fault_trapno,0x6e,,RET,ret
send_sig_fault_trapno,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_send_specific,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_send_specific,0x1d,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_send_specific,0x25,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
do_send_specific,0x41,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
do_send_specific,0x54,0xffffffff810b4440,CALL 0xffffffff810b4440,direct call
do_send_specific,0x65,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_send_specific,0x76,,RET,ret
do_send_specific,0x82,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
do_tkill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_tkill,0x42,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_tkill,0x4b,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],EDX",write stack
do_tkill,0x53,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],0xfffffffa",write stack
do_tkill,0x5a,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
do_tkill,0x5f,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
do_tkill,0x73,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
do_tkill,0x84,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
do_tkill,0x87,0xffffffff810b8280,CALL 0xffffffff810b8280,direct call
do_tkill,0xa9,,RET,ret
do_tkill,0xaa,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_tgkill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_tgkill,0x24,0xffffffff810b8320,CALL 0xffffffff810b8320,direct call
__ia32_sys_tgkill,0x2c,,RET,ret
__ia32_sys_tgkill,0x34,,RET,ret
__x64_sys_tkill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_tkill,0x18,0xffffffff810b8320,CALL 0xffffffff810b8320,direct call
__x64_sys_tkill,0x20,,RET,ret
__x64_sys_tkill,0x28,,RET,ret
__ia32_sys_tkill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_tkill,0x18,0xffffffff810b8320,CALL 0xffffffff810b8320,direct call
__ia32_sys_tkill,0x20,,RET,ret
__ia32_sys_tkill,0x28,,RET,ret
__x64_sys_tgkill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_tgkill,0x24,0xffffffff810b8320,CALL 0xffffffff810b8320,direct call
__x64_sys_tgkill,0x2c,,RET,ret
__x64_sys_tgkill,0x34,,RET,ret
do_rt_tgsigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_rt_tgsigqueueinfo,0x3d,0xffffffff810b8280,CALL 0xffffffff810b8280,direct call
do_rt_tgsigqueueinfo,0x4b,,RET,ret
do_rt_tgsigqueueinfo,0x59,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
do_rt_tgsigqueueinfo,0x76,,RET,ret
__ia32_sys_rt_tgsigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_tgsigqueueinfo,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__ia32_sys_rt_tgsigqueueinfo,0x46,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_tgsigqueueinfo,0x5d,ctx->rbp - 0xb0,"MOV dword ptr [RBP + -0xb0],R15D",write stack
__ia32_sys_rt_tgsigqueueinfo,0x67,0xffffffff810b3bc0,CALL 0xffffffff810b3bc0,direct call
__ia32_sys_rt_tgsigqueueinfo,0x80,0xffffffff810b84b0,CALL 0xffffffff810b84b0,direct call
__ia32_sys_rt_tgsigqueueinfo,0x87,ctx->rdx,"MOV RDX,qword ptr [RBP + -0x30]",write other [TODO]
__ia32_sys_rt_tgsigqueueinfo,0xa7,,RET,ret
__ia32_sys_rt_tgsigqueueinfo,0xb5,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_tgsigqueueinfo,0xf3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_tgsigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_tgsigqueueinfo,0x27,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_compat_sys_rt_tgsigqueueinfo,0x38,0xffffffff810b7d20,CALL 0xffffffff810b7d20,direct call
__ia32_compat_sys_rt_tgsigqueueinfo,0x4e,0xffffffff810b84b0,CALL 0xffffffff810b84b0,direct call
__ia32_compat_sys_rt_tgsigqueueinfo,0x6f,,RET,ret
__ia32_compat_sys_rt_tgsigqueueinfo,0x70,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_tgsigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_tgsigqueueinfo,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__x64_sys_rt_tgsigqueueinfo,0x47,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_tgsigqueueinfo,0x5e,ctx->rbp - 0xb0,"MOV dword ptr [RBP + -0xb0],R15D",write stack
__x64_sys_rt_tgsigqueueinfo,0x68,0xffffffff810b3bc0,CALL 0xffffffff810b3bc0,direct call
__x64_sys_rt_tgsigqueueinfo,0x81,0xffffffff810b84b0,CALL 0xffffffff810b84b0,direct call
__x64_sys_rt_tgsigqueueinfo,0x88,ctx->rdx,"MOV RDX,qword ptr [RBP + -0x30]",write other [TODO]
__x64_sys_rt_tgsigqueueinfo,0xa8,,RET,ret
__x64_sys_rt_tgsigqueueinfo,0xb6,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_tgsigqueueinfo,0xf4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__kill_pgrp_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__kill_pgrp_info,0x4a,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__kill_pgrp_info,0x58,0xffffffff810b4440,CALL 0xffffffff810b4440,direct call
__kill_pgrp_info,0x60,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__kill_pgrp_info,0x83,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
__kill_pgrp_info,0xc5,,RET,ret
kill_pgrp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_pgrp,0x1d,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
kill_pgrp,0x30,0xffffffff810b87b0,CALL 0xffffffff810b87b0,direct call
kill_pgrp,0x3f,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
kill_pgrp,0x4d,,RET,ret
kill_pid_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_pid_info,0x1a,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_pid_info,0x24,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
kill_pid_info,0x31,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_pid_info,0x3e,0xffffffff810b4440,CALL 0xffffffff810b4440,direct call
kill_pid_info,0x46,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid_info,0x54,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid_info,0x6c,,RET,ret
kill_pid_info,0x6d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid_info,0x85,,RET,ret
kill_pid_info,0x93,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
kill_pid_info,0x9b,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_rt_sigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_rt_sigqueueinfo,0x24,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_rt_sigqueueinfo,0x2c,0xffffffff810c9730,CALL 0xffffffff810c9730,direct call
do_rt_sigqueueinfo,0x3a,0xffffffff810b88d0,CALL 0xffffffff810b88d0,direct call
do_rt_sigqueueinfo,0x42,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_rt_sigqueueinfo,0x51,,RET,ret
do_rt_sigqueueinfo,0x5f,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__ia32_sys_rt_sigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigqueueinfo,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_rt_sigqueueinfo,0x41,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigqueueinfo,0x57,ctx->rbp - 0xa8,"MOV dword ptr [RBP + -0xa8],EBX",write stack
__ia32_sys_rt_sigqueueinfo,0x60,0xffffffff810b3bc0,CALL 0xffffffff810b3bc0,direct call
__ia32_sys_rt_sigqueueinfo,0x76,0xffffffff810b8980,CALL 0xffffffff810b8980,direct call
__ia32_sys_rt_sigqueueinfo,0x7d,ctx->rdx,"MOV RDX,qword ptr [RBP + -0x28]",write other [TODO]
__ia32_sys_rt_sigqueueinfo,0x9b,,RET,ret
__ia32_sys_rt_sigqueueinfo,0xa9,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigqueueinfo,0xe7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigqueueinfo,0x25,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_rt_sigqueueinfo,0x32,0xffffffff810b7d20,CALL 0xffffffff810b7d20,direct call
__ia32_compat_sys_rt_sigqueueinfo,0x45,0xffffffff810b8980,CALL 0xffffffff810b8980,direct call
__ia32_compat_sys_rt_sigqueueinfo,0x64,,RET,ret
__ia32_compat_sys_rt_sigqueueinfo,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_sigqueueinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigqueueinfo,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_rt_sigqueueinfo,0x41,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigqueueinfo,0x57,ctx->rbp - 0xa8,"MOV dword ptr [RBP + -0xa8],EBX",write stack
__x64_sys_rt_sigqueueinfo,0x60,0xffffffff810b3bc0,CALL 0xffffffff810b3bc0,direct call
__x64_sys_rt_sigqueueinfo,0x76,0xffffffff810b8980,CALL 0xffffffff810b8980,direct call
__x64_sys_rt_sigqueueinfo,0x7d,ctx->rdx,"MOV RDX,qword ptr [RBP + -0x28]",write other [TODO]
__x64_sys_rt_sigqueueinfo,0x9b,,RET,ret
__x64_sys_rt_sigqueueinfo,0xa9,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigqueueinfo,0xe7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
kill_pid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_pid,0x20,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_pid,0x2a,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
kill_pid,0x37,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_pid,0x44,0xffffffff810b4440,CALL 0xffffffff810b4440,direct call
kill_pid,0x4c,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid,0x5a,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid,0x72,,RET,ret
kill_pid,0x73,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_pid,0x8b,,RET,ret
kill_pid,0x99,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
kill_pid,0xa1,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_something_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kill_something_info,0x3a,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
kill_something_info,0x6b,0xffffffff810b87b0,CALL 0xffffffff810b87b0,direct call
kill_something_info,0x7a,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
kill_something_info,0x90,,RET,ret
kill_something_info,0x98,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
kill_something_info,0xb2,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
kill_something_info,0xc7,ctx->rdi,"MOV RDI,RBX",write other [TODO]
kill_something_info,0xca,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
kill_something_info,0xe8,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_something_info,0xed,ctx->rdx,"MOV RDX,RBX",write other [TODO]
kill_something_info,0xf6,0xffffffff810b4440,CALL 0xffffffff810b4440,direct call
kill_something_info,0xfe,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_something_info,0x112,ctx->rdx,"MOV RDX,RBX",write other [TODO]
kill_something_info,0x11b,0xffffffff810b7ee0,CALL 0xffffffff810b7ee0,direct call
kill_something_info,0x160,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
kill_something_info,0x168,0xffffffff810c9730,CALL 0xffffffff810c9730,direct call
kill_something_info,0x176,0xffffffff810b88d0,CALL 0xffffffff810b88d0,direct call
kill_something_info,0x17e,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
kill_something_info,0x18d,0xffffffff810c9730,CALL 0xffffffff810c9730,direct call
__ia32_sys_kill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_kill,0x3f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_kill,0x4b,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EDX",write stack
__ia32_sys_kill,0x53,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__ia32_sys_kill,0x58,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
__ia32_sys_kill,0x6c,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__ia32_sys_kill,0x7a,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
__ia32_sys_kill,0x7d,0xffffffff810b8d10,CALL 0xffffffff810b8d10,direct call
__ia32_sys_kill,0x9f,,RET,ret
__ia32_sys_kill,0xa0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_kill,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_kill,0x3f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_kill,0x4b,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EDX",write stack
__x64_sys_kill,0x53,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__x64_sys_kill,0x58,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
__x64_sys_kill,0x6c,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__x64_sys_kill,0x7a,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EAX",write stack
__x64_sys_kill,0x7d,0xffffffff810b8d10,CALL 0xffffffff810b8d10,direct call
__x64_sys_kill,0x9f,,RET,ret
__x64_sys_kill,0xa0,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_info_to_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_info_to_task,0x29,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
force_sig_info_to_task,0x37,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
force_sig_info_to_task,0x66,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],0x0",write other [TODO]
force_sig_info_to_task,0xb4,0xffffffff810b4540,CALL 0xffffffff810b4540,direct call
force_sig_info_to_task,0xd2,0xffffffff810b7da0,CALL 0xffffffff810b7da0,direct call
force_sig_info_to_task,0xe5,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
force_sig_info_to_task,0xfb,,RET,ret
force_sig_info_to_task,0x108,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
force_sig_info_to_task,0x114,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
force_sig_info,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_info,0x14,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_info,0x1a,,RET,ret
force_sig_mceerr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_mceerr,0x19,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_mceerr,0x38,ctx->wordctx->ptrctx->rbp - 0x20,"MOV word ptr [RBP + -0x20],DX",write stack
force_sig_mceerr,0x41,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RSI",write stack
force_sig_mceerr,0x45,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x7",write stack
force_sig_mceerr,0x55,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R8D",write stack
force_sig_mceerr,0x59,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_mceerr,0x6e,,RET,ret
force_sig_mceerr,0x73,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_bnderr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_bnderr,0x16,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_bnderr,0x1c,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDI",write stack
force_sig_bnderr,0x24,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RDX",write stack
force_sig_bnderr,0x2a,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
force_sig_bnderr,0x32,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
force_sig_bnderr,0x3a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RSI",write stack
force_sig_bnderr,0x3e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
force_sig_bnderr,0x4f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0xb",write stack
force_sig_bnderr,0x56,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x3",write stack
force_sig_bnderr,0x5d,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_bnderr,0x72,,RET,ret
force_sig_bnderr,0x73,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_pkuerr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_pkuerr,0x20,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_pkuerr,0x33,ctx->rbp - 0x18,"MOV dword ptr [RBP + -0x18],ESI",write stack
force_sig_pkuerr,0x36,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0xb",write stack
force_sig_pkuerr,0x46,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x4",write stack
force_sig_pkuerr,0x4d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],R9",write stack
force_sig_pkuerr,0x51,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_pkuerr,0x66,,RET,ret
force_sig_pkuerr,0x67,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_ptrace_errno_trap,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_ptrace_errno_trap,0x18,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_ptrace_errno_trap,0x1e,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EDI",write stack
force_sig_ptrace_errno_trap,0x25,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
force_sig_ptrace_errno_trap,0x2d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RSI",write stack
force_sig_ptrace_errno_trap,0x31,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],0x0",write stack
force_sig_ptrace_errno_trap,0x42,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],0x0",write stack
force_sig_ptrace_errno_trap,0x4a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],0x0",write stack
force_sig_ptrace_errno_trap,0x52,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x5",write stack
force_sig_ptrace_errno_trap,0x59,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x4",write stack
force_sig_ptrace_errno_trap,0x60,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_ptrace_errno_trap,0x75,,RET,ret
force_sig_ptrace_errno_trap,0x76,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_fault_trapno,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_fault_trapno,0x21,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_fault_trapno,0x31,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
force_sig_fault_trapno,0x3a,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],ESI",write stack
force_sig_fault_trapno,0x3d,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R10D",write stack
force_sig_fault_trapno,0x4a,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],R9D",write stack
force_sig_fault_trapno,0x4e,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_fault_trapno,0x63,,RET,ret
force_sig_fault_trapno,0x64,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_fatal_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_fatal_sig,0x2c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_fatal_sig,0x3f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R9D",write stack
force_fatal_sig,0x43,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80",write stack
force_fatal_sig,0x4a,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_fatal_sig,0x5f,,RET,ret
force_fatal_sig,0x60,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_exit_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_exit_sig,0x2c,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_exit_sig,0x3f,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R9D",write stack
force_exit_sig,0x43,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80",write stack
force_exit_sig,0x4a,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_exit_sig,0x5f,,RET,ret
force_exit_sig,0x60,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_fault_to_task,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_fault_to_task,0x24,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_fault_to_task,0x34,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
force_sig_fault_to_task,0x3d,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R10D",write stack
force_sig_fault_to_task,0x41,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R9D",write stack
force_sig_fault_to_task,0x45,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_fault_to_task,0x5a,,RET,ret
force_sig_fault_to_task,0x5b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_seccomp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_seccomp,0x2d,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_seccomp,0x40,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x1f",write stack
force_sig_seccomp,0x47,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x1",write stack
force_sig_seccomp,0x52,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],R10D",write stack
force_sig_seccomp,0x5d,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
force_sig_seccomp,0x64,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],R9D",write stack
force_sig_seccomp,0x7c,ctx->rbp - 0x1c,"MOV dword ptr [RBP + -0x1c],EAX",write stack
force_sig_seccomp,0x7f,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_seccomp,0x94,,RET,ret
force_sig_seccomp,0x95,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig,0x29,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig,0x3c,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R9D",write stack
force_sig,0x40,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80",write stack
force_sig,0x47,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig,0x5c,,RET,ret
force_sig,0x5d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sig_fault,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sig_fault,0x2a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sig_fault,0x3a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RDX",write stack
force_sig_fault,0x43,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],R10D",write stack
force_sig_fault,0x47,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R9D",write stack
force_sig_fault,0x4b,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sig_fault,0x60,,RET,ret
force_sig_fault,0x61,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
force_sigsegv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
force_sigsegv,0x1b,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
force_sigsegv,0x37,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0xb",write stack
force_sigsegv,0x3e,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80",write stack
force_sigsegv,0x4e,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sigsegv,0x63,,RET,ret
force_sigsegv,0x72,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0xb",write stack
force_sigsegv,0x79,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x80",write stack
force_sigsegv,0x89,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
force_sigsegv,0x90,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_notify_parent_cldstop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_notify_parent_cldstop,0x24,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_notify_parent_cldstop,0x4b,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],0x11",write stack
do_notify_parent_cldstop,0x52,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_notify_parent_cldstop,0x5a,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
do_notify_parent_cldstop,0x67,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
do_notify_parent_cldstop,0x6c,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
do_notify_parent_cldstop,0x6f,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_notify_parent_cldstop,0x7f,ctx->rbp - 0x64,"MOV dword ptr [RBP + -0x64],ESI",write stack
do_notify_parent_cldstop,0x82,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_notify_parent_cldstop,0x87,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_notify_parent_cldstop,0x9a,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_notify_parent_cldstop,0xa5,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
do_notify_parent_cldstop,0xaa,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
do_notify_parent_cldstop,0xad,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_notify_parent_cldstop,0xc2,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_notify_parent_cldstop,0xca,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
do_notify_parent_cldstop,0xce,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_notify_parent_cldstop,0xd3,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],EBX",write stack
do_notify_parent_cldstop,0xd6,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_notify_parent_cldstop,0x113,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EAX",write stack
do_notify_parent_cldstop,0x119,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
do_notify_parent_cldstop,0x13b,0xffffffff810aaf80,CALL 0xffffffff810aaf80,direct call
do_notify_parent_cldstop,0x146,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
do_notify_parent_cldstop,0x168,,RET,ret
do_notify_parent_cldstop,0x196,0xffffffff810b7da0,CALL 0xffffffff810b7da0,direct call
do_notify_parent_cldstop,0x19d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_stop.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_stop.part.0,0x33,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
ptrace_stop.part.0,0x37,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
ptrace_stop.part.0,0x40,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],0x8",write other [TODO]
ptrace_stop.part.0,0x4c,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
ptrace_stop.part.0,0x5d,ctx->r12 + 0x948,"MOV dword ptr [R12 + 0x948],R14D",write other [TODO]
ptrace_stop.part.0,0x68,ctx->r12 + 0xd00,"MOV qword ptr [R12 + 0xd00],R15",write other [TODO]
ptrace_stop.part.0,0x70,ctx->r12 + 0xd08,"MOV qword ptr [R12 + 0xd08],RBX",write other [TODO]
ptrace_stop.part.0,0x9c,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RDX",write other [TODO]
ptrace_stop.part.0,0xf0,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_stop.part.0,0xfc,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
ptrace_stop.part.0,0x14f,0xffffffff810b9720,CALL 0xffffffff810b9720,direct call
ptrace_stop.part.0,0x162,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
ptrace_stop.part.0,0x167,0xffffffff811843d0,CALL 0xffffffff811843d0,direct call
ptrace_stop.part.0,0x173,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
ptrace_stop.part.0,0x186,0xffffffff81184430,CALL 0xffffffff81184430,direct call
ptrace_stop.part.0,0x193,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
ptrace_stop.part.0,0x1af,ctx->r12 + 0xd08,"MOV qword ptr [R12 + 0xd08],0x0",write other [TODO]
ptrace_stop.part.0,0x1bb,ctx->r12 + 0xd00,"MOV qword ptr [R12 + 0xd00],0x0",write other [TODO]
ptrace_stop.part.0,0x1c7,ctx->r12 + 0x948,"MOV dword ptr [R12 + 0x948],0x0",write other [TODO]
ptrace_stop.part.0,0x1d3,0xffffffff810b4540,CALL 0xffffffff810b4540,direct call
ptrace_stop.part.0,0x1e9,,RET,ret
ptrace_stop.part.0,0x1fc,0xffffffff810b4f00,CALL 0xffffffff810b4f00,direct call
ptrace_stop.part.0,0x21a,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RAX",write other [TODO]
ptrace_stop.part.0,0x233,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
ptrace_stop.part.0,0x248,0xffffffff810b9720,CALL 0xffffffff810b9720,direct call
ptrace_stop.part.0,0x26c,ctx->rdx + 0x958,"MOV qword ptr [RDX + 0x958],RCX",write other [TODO]
ptrace_stop.part.0,0x28f,ctx->rdx + 0x958,"MOV qword ptr [RDX + 0x958],RAX",write other [TODO]
ptrace_stop.part.0,0x2a8,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
ptrace_stop.part.0,0x2b8,ctx->rdi + 0x958,"MOV qword ptr [RDI + 0x958],RAX",write other [TODO]
ptrace_stop.part.0,0x2d1,0xffffffff81106f60,CALL 0xffffffff81106f60,direct call
ptrace_do_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_do_notify,0x41,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
ptrace_do_notify,0x4a,ctx->rbp - 0x58,"MOV dword ptr [RBP + -0x58],ESI",write stack
ptrace_do_notify,0x52,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],R8D",write stack
ptrace_do_notify,0x56,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
ptrace_do_notify,0x5b,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
ptrace_do_notify,0x70,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
ptrace_do_notify,0x7a,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
ptrace_do_notify,0x99,0xffffffff810b98d0,CALL 0xffffffff810b98d0,direct call
ptrace_do_notify,0xbb,,RET,ret
ptrace_do_notify,0xbc,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
ptrace_notify,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ptrace_notify,0x45,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
ptrace_notify,0x5a,0xffffffff810b9bb0,CALL 0xffffffff810b9bb0,direct call
ptrace_notify,0x69,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
ptrace_notify,0x77,,RET,ret
ptrace_notify,0x7a,0xffffffff810cab70,CALL 0xffffffff810cab70,direct call
signal_setup_done,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
signal_setup_done,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
signal_setup_done,0x43,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xb",write stack
signal_setup_done,0x4a,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x80",write stack
signal_setup_done,0x5a,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
signal_setup_done,0x7a,,RET,ret
signal_setup_done,0xb5,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
signal_setup_done,0xd4,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
signal_setup_done,0xe0,0xffffffff810b5100,CALL 0xffffffff810b5100,direct call
signal_setup_done,0xed,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
signal_setup_done,0x114,0xffffffff810b9c80,CALL 0xffffffff810b9c80,direct call
signal_setup_done,0x11e,ctx->rax + 0xc28,"MOV qword ptr [RAX + 0xc28],0x0",write other [TODO]
signal_setup_done,0x129,ctx->rax + 0xc30,"MOV qword ptr [RAX + 0xc30],0x0",write other [TODO]
signal_setup_done,0x134,ctx->rax + 0xc38,"MOV dword ptr [RAX + 0xc38],0x2",write other [TODO]
signal_setup_done,0x156,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],0xb",write stack
signal_setup_done,0x15d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x80",write stack
signal_setup_done,0x16d,0xffffffff810b9020,CALL 0xffffffff810b9020,direct call
signal_setup_done,0x177,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
do_signal_stop,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_signal_stop,0x6c,ctx->r13 + 0x60,"MOV dword ptr [R13 + 0x60],EDI",write other [TODO]
do_signal_stop,0x76,ctx->r13 + 0x70,"MOV dword ptr [R13 + 0x70],0x0",write other [TODO]
do_signal_stop,0x8d,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
do_signal_stop,0xe2,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
do_signal_stop,0x10b,0xffffffff810e4ee0,CALL 0xffffffff810e4ee0,direct call
do_signal_stop,0x117,0xffffffff810d9160,CALL 0xffffffff810d9160,direct call
do_signal_stop,0x13f,0xffffffff810b4f00,CALL 0xffffffff810b4f00,direct call
do_signal_stop,0x15a,0xffffffff81d14a40,CALL 0xffffffff81d14a40,direct call
do_signal_stop,0x162,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],0x104",write other [TODO]
do_signal_stop,0x16e,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
do_signal_stop,0x17b,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_signal_stop,0x184,0xffffffff811843d0,CALL 0xffffffff811843d0,direct call
do_signal_stop,0x189,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
do_signal_stop,0x19d,,RET,ret
do_signal_stop,0x1a5,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
do_signal_stop,0x1b4,0xffffffff810b9720,CALL 0xffffffff810b9720,direct call
do_signal_stop,0x1c0,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
do_signal_stop,0x1dd,,RET,ret
do_signal_stop,0x1ed,0xffffffff810b6da0,CALL 0xffffffff810b6da0,direct call
do_signal_stop,0x1f9,0xffffffff810b5290,CALL 0xffffffff810b5290,direct call
exit_signals,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
exit_signals,0xe,0xffffffff82000828,CALL 0xffffffff82000828,direct call
exit_signals,0x7d,ctx->rax,"MOV RAX,qword ptr [0xffffffff82fb6170]",write other [TODO]
exit_signals,0x95,,RET,ret
exit_signals,0x9e,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
exit_signals,0xe5,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
exit_signals,0xef,,RET,ret
exit_signals,0xf0,0xffffffff82000810,CALL 0xffffffff82000810,direct call
exit_signals,0x103,0xffffffff81d113c0,CALL 0xffffffff81d113c0,direct call
exit_signals,0x10d,0xffffffff82000810,CALL 0xffffffff82000810,direct call
exit_signals,0x12e,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
exit_signals,0x14f,0xffffffff810a8690,CALL 0xffffffff810a8690,direct call
exit_signals,0x159,0xffffffff82000810,CALL 0xffffffff82000810,direct call
exit_signals,0x171,0xffffffff810b4d70,CALL 0xffffffff810b4d70,direct call
exit_signals,0x188,0xffffffff810b4f00,CALL 0xffffffff810b4f00,direct call
exit_signals,0x19d,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
exit_signals,0x1a9,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
exit_signals,0x1b8,0xffffffff810b9720,CALL 0xffffffff810b9720,direct call
exit_signals,0x1c4,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
get_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
get_signal,0x22,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
get_signal,0x89,0xffffffff810cab70,CALL 0xffffffff810cab70,direct call
get_signal,0x90,0xffffffff8127d070,CALL 0xffffffff8127d070,direct call
get_signal,0x99,0xffffffff82000828,CALL 0xffffffff82000828,direct call
get_signal,0xb7,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
get_signal,0xd9,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
get_signal,0x131,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0x0",write stack
get_signal,0x187,ctx->rbp - 0x50,"MOV byte ptr [RBP + -0x50],R9B",write stack
get_signal,0x18b,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
get_signal,0x196,0xffffffff810b6380,CALL 0xffffffff810b6380,direct call
get_signal,0x230,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x235,0xffffffff810aa080,CALL 0xffffffff810aa080,direct call
get_signal,0x245,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
get_signal,0x24e,0xffffffff810b9e90,CALL 0xffffffff810b9e90,direct call
get_signal,0x267,ctx->r13 + 0x20,"MOV dword ptr [R13 + 0x20],0x9",write other [TODO]
get_signal,0x288,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
get_signal,0x290,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x33b,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R8D",write stack
get_signal,0x348,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x3b1,ctx->rbp - 0x58,"MOV byte ptr [RBP + -0x58],R9B",write stack
get_signal,0x3b5,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R8",write stack
get_signal,0x3b9,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
get_signal,0x3bd,ctx->rax,"MOV qword ptr [RAX],RDI",write other [TODO]
get_signal,0x3c3,ctx->r8,"MOV qword ptr [R8],R8",write other [TODO]
get_signal,0x3c6,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],R8",write other [TODO]
get_signal,0x3ca,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
get_signal,0x3ce,0xffffffff810b4220,CALL 0xffffffff810b4220,direct call
get_signal,0x3f5,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R10",write stack
get_signal,0x3f9,ctx->rbp - 0x50,"MOV byte ptr [RBP + -0x50],R9B",write stack
get_signal,0x3fd,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
get_signal,0x401,0xffffffff810d70b0,CALL 0xffffffff810d70b0,direct call
get_signal,0x413,ctx->r8 + 0x48,"MOV qword ptr [R8 + 0x48],0x0",write other [TODO]
get_signal,0x425,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R10",write stack
get_signal,0x429,ctx->rbp - 0x48,"MOV byte ptr [RBP + -0x48],R9B",write stack
get_signal,0x42d,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
get_signal,0x44f,0xffffffff810b9e90,CALL 0xffffffff810b9e90,direct call
get_signal,0x490,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x49e,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R10",write stack
get_signal,0x4a2,ctx->r12 + 0xc20,"MOV qword ptr [R12 + 0xc20],RSI",write other [TODO]
get_signal,0x4aa,ctx->rbp - 0x50,"MOV byte ptr [RBP + -0x50],R9B",write stack
get_signal,0x4ae,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R8",write stack
get_signal,0x4b2,0xffffffff810b4fd0,CALL 0xffffffff810b4fd0,direct call
get_signal,0x4cf,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x4d6,0xffffffff81184430,CALL 0xffffffff81184430,direct call
get_signal,0x4ed,ctx->r14 + 0x74,"MOV dword ptr [R14 + 0x74],EAX",write other [TODO]
get_signal,0x4f4,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EDX",write stack
get_signal,0x4f7,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x503,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
get_signal,0x519,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
get_signal,0x51d,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDX",write stack
get_signal,0x520,0xffffffff810b9720,CALL 0xffffffff810b9720,direct call
get_signal,0x556,0xffffffff810b9720,CALL 0xffffffff810b9720,direct call
get_signal,0x562,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
get_signal,0x5a2,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],ESI",write stack
get_signal,0x5bf,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R10",write stack
get_signal,0x5c3,0xffffffff810b98d0,CALL 0xffffffff810b98d0,direct call
get_signal,0x5ee,ctx->rbp - 0x6c,"MOV dword ptr [RBP + -0x6c],R11D",write stack
get_signal,0x5f6,ctx->r10 + 0x28,"MOV qword ptr [R10 + 0x28],0x0",write other [TODO]
get_signal,0x601,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R10",write stack
get_signal,0x60e,ctx->r13 + 0x20,"MOV dword ptr [R13 + 0x20],R8D",write other [TODO]
get_signal,0x612,ctx->r13 + 0x24,"MOV qword ptr [R13 + 0x24],0x0",write other [TODO]
get_signal,0x61a,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],R8D",write stack
get_signal,0x61e,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
get_signal,0x637,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RCX",write stack
get_signal,0x63b,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
get_signal,0x640,ctx->r13 + 0x30,"MOV dword ptr [R13 + 0x30],EAX",write other [TODO]
get_signal,0x644,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
get_signal,0x654,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RCX",write stack
get_signal,0x662,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],ESI",write stack
get_signal,0x665,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
get_signal,0x67f,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
get_signal,0x684,ctx->r13 + 0x34,"MOV dword ptr [R13 + 0x34],EAX",write other [TODO]
get_signal,0x688,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
get_signal,0x6da,0xffffffff810b7da0,CALL 0xffffffff810b7da0,direct call
get_signal,0x75a,0xffffffff810b9bb0,CALL 0xffffffff810b9bb0,direct call
get_signal,0x762,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x781,ctx->r13,"MOV qword ptr [R13],RCX",write other [TODO]
get_signal,0x789,ctx->r13 + 0x8,"MOV qword ptr [R13 + 0x8],RCX",write other [TODO]
get_signal,0x791,ctx->r13 + 0x10,"MOV qword ptr [R13 + 0x10],RCX",write other [TODO]
get_signal,0x799,ctx->r13 + 0x18,"MOV qword ptr [R13 + 0x18],RDX",write other [TODO]
get_signal,0x7a3,ctx->rax + 0x20,"MOV qword ptr [RAX + 0x20],0x0",write other [TODO]
get_signal,0x7ae,ctx->rbp - 0x48,"MOV byte ptr [RBP + -0x48],R9B",write stack
get_signal,0x7b2,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R8D",write stack
get_signal,0x7b6,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x86b,0xffffffff810b98d0,CALL 0xffffffff810b98d0,direct call
get_signal,0x875,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],0x2001",write other [TODO]
get_signal,0x88c,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x891,0xffffffff811843d0,CALL 0xffffffff811843d0,direct call
get_signal,0x896,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
get_signal,0x8a5,0xffffffff81184430,CALL 0xffffffff81184430,direct call
get_signal,0x8bf,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EDX",write stack
get_signal,0x8c2,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
get_signal,0x8c6,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R8D",write stack
get_signal,0x8d3,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
get_signal,0x968,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R8D",write stack
get_signal,0x96c,0xffffffff81184430,CALL 0xffffffff81184430,direct call
FUN_ffffffff810bab84,-0x88c,,RET,ret
FUN_ffffffff810bab84,-0x595,ctx->r13 + 0x50,"MOV dword ptr [R13 + 0x50],R8D",write other [TODO]
FUN_ffffffff810bab84,0x0,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],R8D",write stack
FUN_ffffffff810bab84,0x4,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R10",write stack
FUN_ffffffff810bab84,0x11,0xffffffff817ef560,CALL 0xffffffff817ef560,direct call
FUN_ffffffff810bab84,0x1a,0xffffffff813ea790,CALL 0xffffffff813ea790,direct call
FUN_ffffffff810bab84,0x4a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
FUN_ffffffff810bab84,0x71,0xffffffff810aaeb0,CALL 0xffffffff810aaeb0,direct call
copy_siginfo_to_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_siginfo_to_user,0x12,0xffffffff81605960,CALL 0xffffffff81605960,direct call
copy_siginfo_to_user,0x5a,,RET,ret
__ia32_sys_rt_sigtimedwait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigtimedwait,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_sys_rt_sigtimedwait,0x3f,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigtimedwait,0x55,0xffffffff81150460,CALL 0xffffffff81150460,direct call
__ia32_sys_rt_sigtimedwait,0x6a,0xffffffff810b6570,CALL 0xffffffff810b6570,direct call
__ia32_sys_rt_sigtimedwait,0x97,,RET,ret
__ia32_sys_rt_sigtimedwait,0x9f,0xffffffff810bac30,CALL 0xffffffff810bac30,direct call
__ia32_sys_rt_sigtimedwait,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_rt_sigtimedwait_time32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigtimedwait_time32,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_sys_rt_sigtimedwait_time32,0x3f,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigtimedwait_time32,0x55,0xffffffff811507e0,CALL 0xffffffff811507e0,direct call
__ia32_sys_rt_sigtimedwait_time32,0x6a,0xffffffff810b6570,CALL 0xffffffff810b6570,direct call
__ia32_sys_rt_sigtimedwait_time32,0x97,,RET,ret
__ia32_sys_rt_sigtimedwait_time32,0x9f,0xffffffff810bac30,CALL 0xffffffff810bac30,direct call
__ia32_sys_rt_sigtimedwait_time32,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_sigtimedwait_time32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigtimedwait_time32,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__x64_sys_rt_sigtimedwait_time32,0x41,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigtimedwait_time32,0x57,0xffffffff811507e0,CALL 0xffffffff811507e0,direct call
__x64_sys_rt_sigtimedwait_time32,0x6c,0xffffffff810b6570,CALL 0xffffffff810b6570,direct call
__x64_sys_rt_sigtimedwait_time32,0x99,,RET,ret
__x64_sys_rt_sigtimedwait_time32,0xa1,0xffffffff810bac30,CALL 0xffffffff810bac30,direct call
__x64_sys_rt_sigtimedwait_time32,0xcb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_sigtimedwait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigtimedwait,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__x64_sys_rt_sigtimedwait,0x41,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigtimedwait,0x57,0xffffffff81150460,CALL 0xffffffff81150460,direct call
__x64_sys_rt_sigtimedwait,0x6c,0xffffffff810b6570,CALL 0xffffffff810b6570,direct call
__x64_sys_rt_sigtimedwait,0x99,,RET,ret
__x64_sys_rt_sigtimedwait,0xa1,0xffffffff810bac30,CALL 0xffffffff810bac30,direct call
__x64_sys_rt_sigtimedwait,0xcb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
copy_siginfo_from_user,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_siginfo_from_user,0x24,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
copy_siginfo_from_user,0x2a,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
copy_siginfo_from_user,0x74,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
copy_siginfo_from_user,0xbc,,RET,ret
copy_siginfo_from_user,0xe2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
copy_siginfo_to_external32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_siginfo_to_external32,0x18,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
copy_siginfo_to_external32,0x23,ctx->rdi + 0x70,"MOV qword ptr [RDI + 0x70],0x0",write other [TODO]
copy_siginfo_to_external32,0x3d,ctx->rbx,"MOV dword ptr [RBX],EAX",write other [TODO]
copy_siginfo_to_external32,0x42,ctx->rbx + 0x4,"MOV dword ptr [RBX + 0x4],EAX",write other [TODO]
copy_siginfo_to_external32,0x48,ctx->rbx + 0x8,"MOV dword ptr [RBX + 0x8],ESI",write other [TODO]
copy_siginfo_to_external32,0x4f,0xffffffff810b7b00,CALL 0xffffffff810b7b00,direct call
copy_siginfo_to_external32,0x67,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0x6f,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
copy_siginfo_to_external32,0x77,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
copy_siginfo_to_external32,0x7e,,RET,ret
copy_siginfo_to_external32,0x84,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0x8c,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
copy_siginfo_to_external32,0x93,,RET,ret
copy_siginfo_to_external32,0x99,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0xa2,ctx->wordctx->ptrctx->rbx + 0x10,"MOV word ptr [RBX + 0x10],AX",write other [TODO]
copy_siginfo_to_external32,0xad,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0xb7,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0xbf,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
copy_siginfo_to_external32,0xc9,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0xd1,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
copy_siginfo_to_external32,0xd9,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
copy_siginfo_to_external32,0xe1,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
copy_siginfo_to_external32,0xe9,ctx->rbx + 0x1c,"MOV dword ptr [RBX + 0x1c],EAX",write other [TODO]
copy_siginfo_to_external32,0xf3,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0xfb,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
copy_siginfo_to_external32,0x103,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
copy_siginfo_to_external32,0x110,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0x118,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
copy_siginfo_to_external32,0x125,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0x12d,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
copy_siginfo_to_external32,0x135,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
copy_siginfo_to_external32,0x13d,ctx->rbx + 0x18,"MOV dword ptr [RBX + 0x18],EAX",write other [TODO]
copy_siginfo_to_external32,0x14a,ctx->rbx + 0xc,"MOV dword ptr [RBX + 0xc],EAX",write other [TODO]
copy_siginfo_to_external32,0x152,ctx->rbx + 0x10,"MOV dword ptr [RBX + 0x10],EAX",write other [TODO]
copy_siginfo_to_external32,0x15a,ctx->rbx + 0x14,"MOV dword ptr [RBX + 0x14],EAX",write other [TODO]
__copy_siginfo_to_user32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__copy_siginfo_to_user32,0x25,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__copy_siginfo_to_user32,0x2b,0xffffffff810bb0c0,CALL 0xffffffff810bb0c0,direct call
__copy_siginfo_to_user32,0x3f,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__copy_siginfo_to_user32,0x60,,RET,ret
__copy_siginfo_to_user32,0x61,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigtimedwait_time64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigtimedwait_time64,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_rt_sigtimedwait_time64,0x35,0xffffffff81175230,CALL 0xffffffff81175230,direct call
__ia32_compat_sys_rt_sigtimedwait_time64,0x4a,0xffffffff81150460,CALL 0xffffffff81150460,direct call
__ia32_compat_sys_rt_sigtimedwait_time64,0x5f,0xffffffff810b6570,CALL 0xffffffff810b6570,direct call
__ia32_compat_sys_rt_sigtimedwait_time64,0x8c,,RET,ret
__ia32_compat_sys_rt_sigtimedwait_time64,0x94,0xffffffff810bb230,CALL 0xffffffff810bb230,direct call
__ia32_compat_sys_rt_sigtimedwait_time64,0xb3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigtimedwait_time32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigtimedwait_time32,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_rt_sigtimedwait_time32,0x35,0xffffffff81175230,CALL 0xffffffff81175230,direct call
__ia32_compat_sys_rt_sigtimedwait_time32,0x4a,0xffffffff811507e0,CALL 0xffffffff811507e0,direct call
__ia32_compat_sys_rt_sigtimedwait_time32,0x5f,0xffffffff810b6570,CALL 0xffffffff810b6570,direct call
__ia32_compat_sys_rt_sigtimedwait_time32,0x8c,,RET,ret
__ia32_compat_sys_rt_sigtimedwait_time32,0x94,0xffffffff810bb230,CALL 0xffffffff810bb230,direct call
__ia32_compat_sys_rt_sigtimedwait_time32,0xb3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
copy_siginfo_from_user32,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
copy_siginfo_from_user32,0x2a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
copy_siginfo_from_user32,0x30,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
copy_siginfo_from_user32,0x44,0xffffffff810b7ba0,CALL 0xffffffff810b7ba0,direct call
copy_siginfo_from_user32,0x5d,,RET,ret
copy_siginfo_from_user32,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_pidfd_send_signal,0x1a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_pidfd_send_signal,0x2e,0xffffffff8138ae50,CALL 0xffffffff8138ae50,direct call
__do_sys_pidfd_send_signal,0x46,0xffffffff810a3e70,CALL 0xffffffff810a3e70,direct call
__do_sys_pidfd_send_signal,0x63,0xffffffff810c96e0,CALL 0xffffffff810c96e0,direct call
__do_sys_pidfd_send_signal,0xc0,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
__do_sys_pidfd_send_signal,0xc4,0xffffffff810bb420,CALL 0xffffffff810bb420,direct call
__do_sys_pidfd_send_signal,0x106,0xffffffff810b88d0,CALL 0xffffffff810b88d0,direct call
__do_sys_pidfd_send_signal,0x116,0xffffffff81366540,CALL 0xffffffff81366540,direct call
__do_sys_pidfd_send_signal,0x140,ctx->rax,"MOV RAX,R15",write other [TODO]
__do_sys_pidfd_send_signal,0x14d,,RET,ret
__do_sys_pidfd_send_signal,0x158,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
__do_sys_pidfd_send_signal,0x15c,0xffffffff810bafd0,CALL 0xffffffff810bafd0,direct call
__do_sys_pidfd_send_signal,0x180,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R8",write stack
__do_sys_pidfd_send_signal,0x187,ctx->rbp - 0x60,"MOV dword ptr [RBP + -0x60],R13D",write stack
__do_sys_pidfd_send_signal,0x197,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__do_sys_pidfd_send_signal,0x19c,ctx->rbp - 0x50,"MOV dword ptr [RBP + -0x50],EAX",write stack
__do_sys_pidfd_send_signal,0x1b1,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__do_sys_pidfd_send_signal,0x1c0,ctx->rbp - 0x4c,"MOV dword ptr [RBP + -0x4c],EAX",write stack
__do_sys_pidfd_send_signal,0x1c6,0xffffffff810b88d0,CALL 0xffffffff810b88d0,direct call
__do_sys_pidfd_send_signal,0x1df,0xffffffff81405a70,CALL 0xffffffff81405a70,direct call
__do_sys_pidfd_send_signal,0x213,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_pidfd_send_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_pidfd_send_signal,0x16,0xffffffff810bb490,CALL 0xffffffff810bb490,direct call
__x64_sys_pidfd_send_signal,0x1c,,RET,ret
__ia32_sys_pidfd_send_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_pidfd_send_signal,0x15,0xffffffff810bb490,CALL 0xffffffff810bb490,direct call
__ia32_sys_pidfd_send_signal,0x1b,,RET,ret
FUN_ffffffff810bb6f0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810bb6f0,0xa,,RET,ret
do_sigaction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_sigaction,0x2c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
do_sigaction,0x5b,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
do_sigaction,0x8f,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
do_sigaction,0x97,ctx->r12 + 0x8,"MOV qword ptr [R12 + 0x8],RAX",write other [TODO]
do_sigaction,0xa0,ctx->r12 + 0x10,"MOV qword ptr [R12 + 0x10],RAX",write other [TODO]
do_sigaction,0xa9,ctx->r12 + 0x18,"MOV qword ptr [R12 + 0x18],RAX",write other [TODO]
do_sigaction,0xcb,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
do_sigaction,0xcf,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
do_sigaction,0xd3,0xffffffff81036a00,CALL 0xffffffff81036a00,direct call
do_sigaction,0xef,ctx->rdx + 0x20,"MOV qword ptr [RDX + 0x20],RAX",write other [TODO]
do_sigaction,0xf7,ctx->rdx + 0x28,"MOV qword ptr [RDX + 0x28],RAX",write other [TODO]
do_sigaction,0xff,ctx->rdx + 0x30,"MOV qword ptr [RDX + 0x30],RAX",write other [TODO]
do_sigaction,0x107,ctx->rdx + 0x38,"MOV qword ptr [RDX + 0x38],RAX",write other [TODO]
do_sigaction,0x12a,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigaction,0x152,,RET,ret
do_sigaction,0x178,0xffffffff81036a00,CALL 0xffffffff81036a00,direct call
do_sigaction,0x186,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RCX",write stack
do_sigaction,0x18a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
do_sigaction,0x1a5,0xffffffff81036a00,CALL 0xffffffff81036a00,direct call
do_sigaction,0x1df,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
do_sigaction,0x1ee,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
do_sigaction,0x219,0xffffffff810b4bb0,CALL 0xffffffff810b4bb0,direct call
do_sigaction,0x24c,0xffffffff81036a00,CALL 0xffffffff81036a00,direct call
do_sigaction,0x264,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
do_sigaction,0x273,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_rt_sigaction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_rt_sigaction,0x23,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_sys_rt_sigaction,0x45,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_rt_sigaction,0x66,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_sys_rt_sigaction,0x7a,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_rt_sigaction,0xa0,,RET,ret
__ia32_sys_rt_sigaction,0xb2,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_sys_rt_sigaction,0xc8,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_sys_rt_sigaction,0xdc,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_sys_rt_sigaction,0xfb,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_rt_sigaction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_rt_sigaction,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_compat_sys_rt_sigaction,0x45,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
__ia32_compat_sys_rt_sigaction,0x4e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__ia32_compat_sys_rt_sigaction,0x57,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
__ia32_compat_sys_rt_sigaction,0x69,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__ia32_compat_sys_rt_sigaction,0x6d,0xffffffff81175230,CALL 0xffffffff81175230,direct call
__ia32_compat_sys_rt_sigaction,0x79,0xffffffff81c8a6f0,CALL 0xffffffff81c8a6f0,direct call
__ia32_compat_sys_rt_sigaction,0x82,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RCX",write stack
__ia32_compat_sys_rt_sigaction,0xa0,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_rt_sigaction,0xce,,RET,ret
__ia32_compat_sys_rt_sigaction,0xd5,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_compat_sys_rt_sigaction,0xea,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_compat_sys_rt_sigaction,0x102,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_compat_sys_rt_sigaction,0x116,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_compat_sys_rt_sigaction,0x12b,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_rt_sigaction,0x14b,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_rt_sigaction,0x170,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_sigaction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_sigaction,0x20,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_sigaction,0x64,,RET,ret
__ia32_compat_sys_sigaction,0x71,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
__ia32_compat_sys_sigaction,0x80,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
__ia32_compat_sys_sigaction,0x90,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
__ia32_compat_sys_sigaction,0x97,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RBX",write stack
__ia32_compat_sys_sigaction,0xa3,0xffffffff81c8a770,CALL 0xffffffff81c8a770,direct call
__ia32_compat_sys_sigaction,0xb0,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDX",write stack
__ia32_compat_sys_sigaction,0xb8,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
__ia32_compat_sys_sigaction,0xbf,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__ia32_compat_sys_sigaction,0xd0,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_sigaction,0x104,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__ia32_compat_sys_sigaction,0x119,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__ia32_compat_sys_sigaction,0x12e,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__ia32_compat_sys_sigaction,0x143,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__ia32_compat_sys_sigaction,0x162,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_sigaction,0x178,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_sigaction,0x188,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_compat_sys_sigaction,0x194,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_signal,0x1a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__ia32_sys_signal,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
__ia32_sys_signal,0x36,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__ia32_sys_signal,0x3f,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__ia32_sys_signal,0x43,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__ia32_sys_signal,0x63,,RET,ret
__ia32_sys_signal,0x64,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_signal,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_signal,0x1a,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
__x64_sys_signal,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
__x64_sys_signal,0x37,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__x64_sys_signal,0x40,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__x64_sys_signal,0x44,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__x64_sys_signal,0x64,,RET,ret
__x64_sys_signal,0x65,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_rt_sigaction,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_rt_sigaction,0x24,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__x64_sys_rt_sigaction,0x47,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_rt_sigaction,0x68,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__x64_sys_rt_sigaction,0x7c,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_rt_sigaction,0xa2,,RET,ret
__x64_sys_rt_sigaction,0xb4,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__x64_sys_rt_sigaction,0xca,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__x64_sys_rt_sigaction,0xde,0xffffffff810bb700,CALL 0xffffffff810bb700,direct call
__x64_sys_rt_sigaction,0xfd,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
restore_altstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
restore_altstack,0x1e,ctx->rbp - 0x8,"MOV qword ptr [RBP + -0x8],RAX",write stack
restore_altstack,0x28,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
restore_altstack,0x4c,0xffffffff810b4600,CALL 0xffffffff810b4600,direct call
restore_altstack,0x63,,RET,ret
restore_altstack,0x6b,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__save_altstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__save_altstack,0x1d,0xffffffff81c8cdcf,CALL 0xffffffff81c8cdcf,direct call
__save_altstack,0x2e,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__save_altstack,0x40,0xffffffff81c8cdcf,CALL 0xffffffff81c8cdcf,direct call
__save_altstack,0x4e,,RET,ret
compat_restore_altstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
compat_restore_altstack,0xb,0xffffffff810b47e0,CALL 0xffffffff810b47e0,direct call
compat_restore_altstack,0x18,,RET,ret
__compat_save_altstack,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__compat_save_altstack,0x1c,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__compat_save_altstack,0x2d,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__compat_save_altstack,0x3e,0xffffffff81c8cdaf,CALL 0xffffffff81c8cdaf,direct call
__compat_save_altstack,0x4c,,RET,ret
FUN_ffffffff810bc0c0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810bc0c0,0xc,,RET,ret
kdb_send_sig,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
kdb_send_sig,0x1b,0xffffffff81d14a90,CALL 0xffffffff81d14a90,direct call
kdb_send_sig,0x2e,0xffffffff8346c288,"MOV qword ptr [0xffffffff8346c288],RBX",write .data
kdb_send_sig,0x51,0xffffffff810b6740,CALL 0xffffffff810b6740,direct call
kdb_send_sig,0x60,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kdb_send_sig,0x7a,0xffffffff811a54a0,CALL 0xffffffff811a54a0,direct call
kdb_send_sig,0x85,,RET,ret
kdb_send_sig,0x8d,0xffffffff811a54a0,CALL 0xffffffff811a54a0,direct call
kdb_send_sig,0x98,,RET,ret
kdb_send_sig,0xa0,0xffffffff811a54a0,CALL 0xffffffff811a54a0,direct call
kdb_send_sig,0xab,,RET,ret
kdb_send_sig,0xb3,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
kdb_send_sig,0xbf,0xffffffff811a54a0,CALL 0xffffffff811a54a0,direct call
kdb_send_sig,0xca,,RET,ret
__x64_sys_umask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_umask,0x28,,RET,ret
__ia32_sys_umask,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_umask,0x28,,RET,ret
propagate_has_child_subreaper,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
propagate_has_child_subreaper,0x3c,ctx->rcx + 0x80,"MOV byte ptr [RCX + 0x80],AL",write other [TODO]
propagate_has_child_subreaper,0x46,,RET,ret
__x64_sys_gettid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_gettid,0x16,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__x64_sys_gettid,0x1e,,RET,ret
__ia32_sys_getpid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getpid,0x19,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__ia32_sys_getpid,0x21,,RET,ret
set_one_prio,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
set_one_prio,0x46,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
set_one_prio,0x5a,,RET,ret
set_one_prio,0x6b,0xffffffff815049d0,CALL 0xffffffff815049d0,direct call
set_one_prio,0x82,0xffffffff810e03c0,CALL 0xffffffff810e03c0,direct call
set_one_prio,0x90,,RET,ret
set_one_prio,0x96,0xffffffff810e6290,CALL 0xffffffff810e6290,direct call
__do_sys_setpriority,0x2a,ctx->rax,"MOV RAX,R12",write other [TODO]
__do_sys_setpriority,0x37,,RET,ret
__do_sys_setpriority,0x44,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_sys_setpriority,0x61,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_setpriority,0x8d,0xffffffff810bc2a0,CALL 0xffffffff810bc2a0,direct call
__do_sys_setpriority,0x95,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_setpriority,0x9f,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__do_sys_setpriority,0xce,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
__do_sys_setpriority,0x110,0xffffffff810bc2a0,CALL 0xffffffff810bc2a0,direct call
__do_sys_setpriority,0x154,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
__do_sys_setpriority,0x16c,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__do_sys_setpriority,0x17a,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RSI",write stack
__do_sys_setpriority,0x199,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_setpriority,0x1aa,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0xfffffffd",write stack
__do_sys_setpriority,0x1b8,ctx->rdx,"MOV RDX,qword ptr [RAX + 0x10]",write other [TODO]
__do_sys_setpriority,0x1d5,ctx->rdx,"MOV RDX,qword ptr [RBX + 0xa70]",write other [TODO]
__do_sys_setpriority,0x1ec,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_setpriority,0x1fc,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_setpriority,0x20a,ctx->rdi,"MOV RDI,RBX",write other [TODO]
__do_sys_setpriority,0x20d,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__do_sys_setpriority,0x21c,ctx->rdi,"MOV RDI,RBX",write other [TODO]
__do_sys_setpriority,0x21f,0xffffffff810bc2a0,CALL 0xffffffff810bc2a0,direct call
__do_sys_setpriority,0x224,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],EAX",write stack
__do_sys_setpriority,0x23b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_setpriority,0x262,0xffffffff810b3840,CALL 0xffffffff810b3840,direct call
__do_sys_setpriority,0x28b,0xffffffff810b37e0,CALL 0xffffffff810b37e0,direct call
__do_sys_setpriority,0x290,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__do_sys_setpriority,0x2aa,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_setpriority,0x2c7,0xffffffff810c9730,CALL 0xffffffff810c9730,direct call
__x64_sys_setpriority,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setpriority,0x12,0xffffffff810bc350,CALL 0xffffffff810bc350,direct call
__x64_sys_setpriority,0x18,,RET,ret
__ia32_sys_setpriority,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setpriority,0x12,0xffffffff810bc350,CALL 0xffffffff810bc350,direct call
__ia32_sys_setpriority,0x18,,RET,ret
__do_sys_getpriority,0x21,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__do_sys_getpriority,0x33,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_getpriority,0x78,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_getpriority,0x81,ctx->rax,"MOV RAX,R12",write other [TODO]
__do_sys_getpriority,0x8e,,RET,ret
__do_sys_getpriority,0x9d,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__do_sys_getpriority,0xab,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RDI",write stack
__do_sys_getpriority,0xcb,0xffffffff810b37e0,CALL 0xffffffff810b37e0,direct call
__do_sys_getpriority,0xd0,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_sys_getpriority,0xee,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_getpriority,0x10d,ctx->rdx,"MOV RDX,qword ptr [RAX + 0x10]",write other [TODO]
__do_sys_getpriority,0x12d,ctx->rdx,"MOV RDX,qword ptr [RBX + 0xa70]",write other [TODO]
__do_sys_getpriority,0x148,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_getpriority,0x158,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_getpriority,0x166,ctx->rdi,"MOV RDI,RBX",write other [TODO]
__do_sys_getpriority,0x169,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__do_sys_getpriority,0x1b0,0xffffffff81d14df0,CALL 0xffffffff81d14df0,direct call
__do_sys_getpriority,0x234,0xffffffff81d14ba0,CALL 0xffffffff81d14ba0,direct call
__do_sys_getpriority,0x250,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_getpriority,0x27f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_getpriority,0x2a2,0xffffffff810b3840,CALL 0xffffffff810b3840,direct call
__do_sys_getpriority,0x2af,0xffffffff810c9730,CALL 0xffffffff810c9730,direct call
__do_sys_getpriority,0x2bf,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__x64_sys_getpriority,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getpriority,0xf,0xffffffff810bc670,CALL 0xffffffff810bc670,direct call
__x64_sys_getpriority,0x15,,RET,ret
__ia32_sys_getpriority,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getpriority,0xf,0xffffffff810bc670,CALL 0xffffffff810bc670,direct call
__ia32_sys_getpriority,0x15,,RET,ret
__ia32_sys_getppid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getppid,0xa,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__ia32_sys_getppid,0x26,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__ia32_sys_getppid,0x2d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__ia32_sys_getppid,0x3a,,RET,ret
flag_nproc_exceeded,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flag_nproc_exceeded,0x41,0xffffffff810d71d0,CALL 0xffffffff810d71d0,direct call
flag_nproc_exceeded,0x64,,RET,ret
flag_nproc_exceeded,0x79,,RET,ret
__ia32_sys_getuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getuid,0x23,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__ia32_sys_getuid,0x2b,,RET,ret
__ia32_sys_geteuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_geteuid,0x23,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__ia32_sys_geteuid,0x2b,,RET,ret
__ia32_sys_getresuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getresuid,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__ia32_sys_getresuid,0x3f,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__ia32_sys_getresuid,0x51,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__ia32_sys_getresuid,0x63,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__ia32_sys_getresuid,0x71,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getresuid,0x80,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getresuid,0x90,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getresuid,0xa6,,RET,ret
__ia32_sys_getresuid,0xb8,,RET,ret
__ia32_compat_sys_old_getrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_old_getrlimit,0x45,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__ia32_compat_sys_old_getrlimit,0x73,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ia32_compat_sys_old_getrlimit,0x96,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_compat_sys_old_getrlimit,0xa6,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_compat_sys_old_getrlimit,0xb9,,RET,ret
__ia32_compat_sys_old_getrlimit,0xc9,,RET,ret
__ia32_sys_getresgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getresgid,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__ia32_sys_getresgid,0x3f,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__ia32_sys_getresgid,0x51,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__ia32_sys_getresgid,0x63,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__ia32_sys_getresgid,0x71,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getresgid,0x80,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getresgid,0x90,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getresgid,0xa6,,RET,ret
__x64_sys_getgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getgid,0x23,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__x64_sys_getgid,0x2b,,RET,ret
__x64_sys_getegid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getegid,0x23,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__x64_sys_getegid,0x2b,,RET,ret
do_sys_times,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_sys_times,0x32,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
do_sys_times,0x38,0xffffffff81102510,CALL 0xffffffff81102510,direct call
do_sys_times,0x57,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_sys_times,0x60,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
do_sys_times,0x63,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_sys_times,0x6b,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RAX",write other [TODO]
do_sys_times,0x6f,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_sys_times,0x77,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
do_sys_times,0x7b,0xffffffff811511f0,CALL 0xffffffff811511f0,direct call
do_sys_times,0x80,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RAX",write other [TODO]
do_sys_times,0x9d,,RET,ret
do_sys_times,0x9e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_old_getrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_old_getrlimit,0x1f,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
__ia32_sys_old_getrlimit,0x56,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__ia32_sys_old_getrlimit,0x84,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
__ia32_sys_old_getrlimit,0x89,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
__ia32_sys_old_getrlimit,0x8d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ia32_sys_old_getrlimit,0x9c,ctx->rsp,"MOV qword ptr [RSP],0x7fffffff",write stack
__ia32_sys_old_getrlimit,0xba,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_old_getrlimit,0xe3,,RET,ret
__ia32_sys_old_getrlimit,0xe4,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],0x7fffffff",write stack
__ia32_sys_old_getrlimit,0xf8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_times,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_times,0x1c,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__ia32_sys_times,0x2b,0xffffffff810bcd70,CALL 0xffffffff810bcd70,direct call
__ia32_sys_times,0x3c,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_times,0x4d,0xffffffff8114ffe0,CALL 0xffffffff8114ffe0,direct call
__ia32_sys_times,0x66,,RET,ret
__ia32_sys_times,0x70,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_times,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_times,0x1d,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_times,0x3a,0xffffffff810bcd70,CALL 0xffffffff810bcd70,direct call
__ia32_compat_sys_times,0x3f,ctx->rdi,"MOV RDI,qword ptr [RBP + -0x38]",write other [TODO]
__ia32_compat_sys_times,0x43,0xffffffff8114ff90,CALL 0xffffffff8114ff90,direct call
__ia32_compat_sys_times,0x65,ctx->rbp - 0x48,"MOV dword ptr [RBP + -0x48],EDX",write stack
__ia32_compat_sys_times,0x68,0xffffffff8114ff90,CALL 0xffffffff8114ff90,direct call
__ia32_compat_sys_times,0x8a,ctx->rbp - 0x44,"MOV dword ptr [RBP + -0x44],EDX",write stack
__ia32_compat_sys_times,0x8d,0xffffffff8114ff90,CALL 0xffffffff8114ff90,direct call
__ia32_compat_sys_times,0xaf,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],EDX",write stack
__ia32_compat_sys_times,0xb2,0xffffffff8114ff90,CALL 0xffffffff8114ff90,direct call
__ia32_compat_sys_times,0xd7,ctx->rbp - 0x3c,"MOV dword ptr [RBP + -0x3c],EDX",write stack
__ia32_compat_sys_times,0xdf,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_compat_sys_times,0x12a,,RET,ret
__ia32_compat_sys_times,0x134,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_setpgid,0x3e,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_setpgid,0x4a,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
__do_sys_setpgid,0x51,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__do_sys_setpgid,0xa1,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
__do_sys_setpgid,0xa6,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_setpgid,0xaf,ctx->rax,"MOV RAX,R14",write other [TODO]
__do_sys_setpgid,0xbc,,RET,ret
__do_sys_setpgid,0xc4,0xffffffff810c9770,CALL 0xffffffff810c9770,direct call
__do_sys_setpgid,0xf0,0xffffffff810c9730,CALL 0xffffffff810c9730,direct call
__do_sys_setpgid,0xfd,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_setpgid,0x101,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
__do_sys_setpgid,0x137,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDX",write stack
__do_sys_setpgid,0x13b,0xffffffff81504910,CALL 0xffffffff81504910,direct call
__do_sys_setpgid,0x16e,0xffffffff810ca2e0,CALL 0xffffffff810ca2e0,direct call
__x64_sys_setpgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setpgid,0xf,0xffffffff810bd0e0,CALL 0xffffffff810bd0e0,direct call
__x64_sys_setpgid,0x15,,RET,ret
__ia32_sys_setpgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setpgid,0xf,0xffffffff810bd0e0,CALL 0xffffffff810bd0e0,direct call
__ia32_sys_setpgid,0x15,,RET,ret
do_getpgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_getpgid,0x10,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
do_getpgid,0x34,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
do_getpgid,0x3c,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_getpgid,0x49,,RET,ret
do_getpgid,0x4d,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
do_getpgid,0x6d,0xffffffff81504950,CALL 0xffffffff81504950,direct call
do_getpgid,0x79,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
do_getpgid,0x86,,RET,ret
__x64_sys_getpgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getpgid,0xc,0xffffffff810bd2f0,CALL 0xffffffff810bd2f0,direct call
__x64_sys_getpgid,0x14,,RET,ret
__ia32_sys_getpgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getpgid,0xc,0xffffffff810bd2f0,CALL 0xffffffff810bd2f0,direct call
__ia32_sys_getpgid,0x14,,RET,ret
__ia32_sys_getsid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getsid,0x11,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__ia32_sys_getsid,0x35,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
__ia32_sys_getsid,0x3d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__ia32_sys_getsid,0x4a,,RET,ret
__ia32_sys_getsid,0x4e,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__ia32_sys_getsid,0x75,0xffffffff81504990,CALL 0xffffffff81504990,direct call
prctl_set_auxv,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prctl_set_auxv,0x32,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
prctl_set_auxv,0x56,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
prctl_set_auxv,0x64,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
prctl_set_auxv,0x91,,RET,ret
prctl_set_auxv,0xa2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
prctl_set_auxv,0xad,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],0x0",write stack
prctl_set_auxv,0xb5,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
prctl_set_auxv,0xc7,0xffffffff81d03bf0,CALL 0xffffffff81d03bf0,direct call
prctl_set_auxv,0xcf,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
prctl_set_auxv,0xdf,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_sethostname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_sethostname,0x33,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_sethostname,0x4b,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__ia32_sys_sethostname,0x70,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__ia32_sys_sethostname,0x7e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_sethostname,0xb1,,RET,ret
__ia32_sys_sethostname,0xb8,0xffffffff817b5f50,CALL 0xffffffff817b5f50,direct call
__ia32_sys_sethostname,0xc4,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__ia32_sys_sethostname,0xee,ctx->rax + 0x41,"MOV byte ptr [RAX + 0x41],CL",write other [TODO]
__ia32_sys_sethostname,0x118,ctx->rdx,"MOV byte ptr [RDX],0x0",write other [TODO]
__ia32_sys_sethostname,0x128,0xffffffff811b24a0,CALL 0xffffffff811b24a0,direct call
__ia32_sys_sethostname,0x134,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__ia32_sys_sethostname,0x148,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],RCX",write other [TODO]
__ia32_sys_sethostname,0x157,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],RSI",write other [TODO]
__ia32_sys_sethostname,0x17d,ctx->rax + ctx->rdi * 0x1,"MOV qword ptr [RAX + RDI*0x1],R8",write other [TODO]
__ia32_sys_sethostname,0x18c,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
__ia32_sys_sethostname,0x193,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],0x0",write other [TODO]
__ia32_sys_sethostname,0x1bf,ctx->rcx + ctx->rsi * 0x1,"MOV qword ptr [RCX + RSI*0x1],RDI",write other [TODO]
__ia32_sys_sethostname,0x1cf,ctx->rax + 0x41,"MOV dword ptr [RAX + 0x41],ECX",write other [TODO]
__ia32_sys_sethostname,0x1d9,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],ECX",write other [TODO]
__ia32_sys_sethostname,0x1e4,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
__ia32_sys_sethostname,0x1ea,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],0x0",write other [TODO]
__ia32_sys_sethostname,0x217,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__ia32_sys_sethostname,0x225,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__ia32_sys_sethostname,0x22f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_setdomainname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setdomainname,0x33,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_sys_setdomainname,0x4b,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__ia32_sys_setdomainname,0x70,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__ia32_sys_setdomainname,0x7e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_setdomainname,0xb1,,RET,ret
__ia32_sys_setdomainname,0xb8,0xffffffff817b5f50,CALL 0xffffffff817b5f50,direct call
__ia32_sys_setdomainname,0xc4,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__ia32_sys_setdomainname,0xf1,ctx->rax + 0x145,"MOV byte ptr [RAX + 0x145],CL",write other [TODO]
__ia32_sys_setdomainname,0x122,ctx->rdx,"MOV byte ptr [RDX],0x0",write other [TODO]
__ia32_sys_setdomainname,0x132,0xffffffff811b24a0,CALL 0xffffffff811b24a0,direct call
__ia32_sys_setdomainname,0x13e,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__ia32_sys_setdomainname,0x154,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],RCX",write other [TODO]
__ia32_sys_setdomainname,0x163,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],RSI",write other [TODO]
__ia32_sys_setdomainname,0x189,ctx->rax + ctx->rdi * 0x1,"MOV qword ptr [RAX + RDI*0x1],R8",write other [TODO]
__ia32_sys_setdomainname,0x198,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
__ia32_sys_setdomainname,0x19f,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],0x0",write other [TODO]
__ia32_sys_setdomainname,0x1cb,ctx->rcx + ctx->rsi * 0x1,"MOV qword ptr [RCX + RSI*0x1],RDI",write other [TODO]
__ia32_sys_setdomainname,0x1db,ctx->rax + 0x145,"MOV dword ptr [RAX + 0x145],ECX",write other [TODO]
__ia32_sys_setdomainname,0x1e8,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],ECX",write other [TODO]
__ia32_sys_setdomainname,0x1f3,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
__ia32_sys_setdomainname,0x1f9,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],0x0",write other [TODO]
__ia32_sys_setdomainname,0x226,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__ia32_sys_setdomainname,0x234,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__ia32_sys_setdomainname,0x23e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_gethostname,0x1a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_gethostname,0x34,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
__do_sys_gethostname,0x56,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RDX",write stack
__do_sys_gethostname,0x5d,0xffffffff81c7f9c0,CALL 0xffffffff81c7f9c0,direct call
__do_sys_gethostname,0x9a,ctx->rbp - 0x71,"MOV qword ptr [RBP + -0x71],RAX",write stack
__do_sys_gethostname,0xa6,ctx->r15 + ctx->rax * 0x1 - 0x8,"MOV qword ptr [R15 + RAX*0x1 + -0x8],RDX",write other [TODO]
__do_sys_gethostname,0xcd,ctx->rdi + ctx->rdx * 0x1,"MOV qword ptr [RDI + RDX*0x1],RCX",write other [TODO]
__do_sys_gethostname,0xdc,0xffffffff81113020,CALL 0xffffffff81113020,direct call
__do_sys_gethostname,0xec,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__do_sys_gethostname,0xfa,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_gethostname,0x126,,RET,ret
__do_sys_gethostname,0x136,ctx->rbp - 0x71,"MOV byte ptr [RBP + -0x71],AL",write stack
__do_sys_gethostname,0x148,ctx->wordctx->ptrctx->r15 + ctx->rsi * 0x1 - 0x2,"MOV word ptr [R15 + RSI*0x1 + -0x2],AX",write other [TODO]
__do_sys_gethostname,0x156,ctx->rbp - 0x71,"MOV dword ptr [RBP + -0x71],EAX",write stack
__do_sys_gethostname,0x15e,ctx->r15 + ctx->rsi * 0x1 - 0x4,"MOV dword ptr [R15 + RSI*0x1 + -0x4],EAX",write other [TODO]
__do_sys_gethostname,0x171,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_gethostname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_gethostname,0x13,0xffffffff810bd9d0,CALL 0xffffffff810bd9d0,direct call
__x64_sys_gethostname,0x19,,RET,ret
__ia32_sys_gethostname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_gethostname,0x13,0xffffffff810bd9d0,CALL 0xffffffff810bd9d0,direct call
__ia32_sys_gethostname,0x19,,RET,ret
do_prlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_prlimit,0x19,ctx->rsp,"MOV qword ptr [RSP],RCX",write stack
do_prlimit,0x71,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
do_prlimit,0x85,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
do_prlimit,0xa2,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
do_prlimit,0xb8,,RET,ret
do_prlimit,0xc2,0xffffffff81504ae0,CALL 0xffffffff81504ae0,direct call
do_prlimit,0xe0,ctx->rsi,"MOV qword ptr [RSI],RAX",write other [TODO]
do_prlimit,0xe3,ctx->rsi + 0x8,"MOV qword ptr [RSI + 0x8],RDX",write other [TODO]
do_prlimit,0xee,ctx->r15,"MOV qword ptr [R15],RAX",write other [TODO]
do_prlimit,0xf1,ctx->r15 + 0x8,"MOV qword ptr [R15 + 0x8],RDX",write other [TODO]
do_prlimit,0x103,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
do_prlimit,0x11d,0xffffffff811625b0,CALL 0xffffffff811625b0,direct call
do_prlimit,0x13c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
do_prlimit,0x162,ctx->rcx,"MOV qword ptr [RCX],RAX",write other [TODO]
do_prlimit,0x165,ctx->rcx + 0x8,"MOV qword ptr [RCX + 0x8],RDX",write other [TODO]
__ia32_compat_sys_setrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_setrlimit,0x28,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__ia32_compat_sys_setrlimit,0x2e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_compat_sys_setrlimit,0x4c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_compat_sys_setrlimit,0x69,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__ia32_compat_sys_setrlimit,0x6d,0xffffffff810bdb90,CALL 0xffffffff810bdb90,direct call
__ia32_compat_sys_setrlimit,0x88,,RET,ret
__ia32_compat_sys_setrlimit,0x92,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_setrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setrlimit,0x28,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__ia32_sys_setrlimit,0x2e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__ia32_sys_setrlimit,0x4a,0xffffffff810bdb90,CALL 0xffffffff810bdb90,direct call
__ia32_sys_setrlimit,0x65,,RET,ret
__ia32_sys_setrlimit,0x6f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
override_release.part.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
override_release.part.0,0x28,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
override_release.part.0,0x2e,ctx->rbp - 0x61,"MOV qword ptr [RBP + -0x61],0x0",write stack
override_release.part.0,0x3b,ctx->rbp - 0x59,"MOV qword ptr [RBP + -0x59],0x0",write stack
override_release.part.0,0x43,ctx->rbp - 0x51,"MOV qword ptr [RBP + -0x51],0x0",write stack
override_release.part.0,0x4b,ctx->rbp - 0x49,"MOV qword ptr [RBP + -0x49],0x0",write stack
override_release.part.0,0x53,ctx->rbp - 0x41,"MOV qword ptr [RBP + -0x41],0x0",write stack
override_release.part.0,0x5b,ctx->rbp - 0x39,"MOV qword ptr [RBP + -0x39],0x0",write stack
override_release.part.0,0x63,ctx->rbp - 0x31,"MOV qword ptr [RBP + -0x31],0x0",write stack
override_release.part.0,0x6b,ctx->rbp - 0x29,"MOV qword ptr [RBP + -0x29],0x0",write stack
override_release.part.0,0x73,ctx->rbp - 0x21,"MOV byte ptr [RBP + -0x21],0x0",write stack
override_release.part.0,0xac,0xffffffff81c85810,CALL 0xffffffff81c85810,direct call
override_release.part.0,0xc9,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
override_release.part.0,0xd7,0xffffffff81605960,CALL 0xffffffff81605960,direct call
override_release.part.0,0xfc,,RET,ret
override_release.part.0,0x105,0xffffffff8128d060,CALL 0xffffffff8128d060,direct call
override_release.part.0,0x10c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_olduname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_olduname,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__ia32_sys_olduname,0x35,ctx->rbp - 0x4d,"MOV qword ptr [RBP + -0x4d],0x0",write stack
__ia32_sys_olduname,0x40,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
__ia32_sys_olduname,0x64,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
__ia32_sys_olduname,0x82,ctx->rbp - 0x44,"MOV qword ptr [RBP + -0x44],RDX",write stack
__ia32_sys_olduname,0x8a,ctx->rbp - 0x4d,"MOV qword ptr [RBP + -0x4d],RCX",write stack
__ia32_sys_olduname,0x95,ctx->rbp - 0x3b,"MOV qword ptr [RBP + -0x3b],RDX",write stack
__ia32_sys_olduname,0xa4,ctx->rbp - 0x32,"MOV qword ptr [RBP + -0x32],RDX",write stack
__ia32_sys_olduname,0xb3,ctx->rbp - 0x29,"MOV qword ptr [RBP + -0x29],RAX",write stack
__ia32_sys_olduname,0xb7,0xffffffff81113020,CALL 0xffffffff81113020,direct call
__ia32_sys_olduname,0xc7,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_olduname,0x108,,RET,ret
__ia32_sys_olduname,0x112,0xffffffff810bde50,CALL 0xffffffff810bde50,direct call
__ia32_sys_olduname,0x134,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_olduname,0x140,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_getcpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getcpu,0x1c,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getcpu,0x3f,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__ia32_sys_getcpu,0x51,,RET,ret
prctl_set_mm_exe_file,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prctl_set_mm_exe_file,0x15,0xffffffff8138ae50,CALL 0xffffffff8138ae50,direct call
prctl_set_mm_exe_file,0x4d,,RET,ret
prctl_set_mm_exe_file,0x52,0xffffffff8136e590,CALL 0xffffffff8136e590,direct call
prctl_set_mm_exe_file,0x6c,0xffffffff813730f0,CALL 0xffffffff813730f0,direct call
prctl_set_mm_exe_file,0x7e,0xffffffff810a1930,CALL 0xffffffff810a1930,direct call
prctl_set_mm_exe_file,0x8b,0xffffffff81366540,CALL 0xffffffff81366540,direct call
prctl_set_mm_exe_file,0x9b,,RET,ret
do_sysinfo.isra.0,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
do_sysinfo.isra.0,0x20,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
do_sysinfo.isra.0,0x2f,0xffffffff81157ca0,CALL 0xffffffff81157ca0,direct call
do_sysinfo.isra.0,0x37,0xffffffff81150100,CALL 0xffffffff81150100,direct call
do_sysinfo.isra.0,0x5e,0xffffffff8114fe20,CALL 0xffffffff8114fe20,direct call
do_sysinfo.isra.0,0x7e,ctx->r12,"MOV qword ptr [R12],RAX",write other [TODO]
do_sysinfo.isra.0,0x82,0xffffffff8110d490,CALL 0xffffffff8110d490,direct call
do_sysinfo.isra.0,0x90,ctx->wordctx->ptrctx->r12 + 0x50,"MOV word ptr [R12 + 0x50],AX",write other [TODO]
do_sysinfo.isra.0,0x96,0xffffffff812ebc70,CALL 0xffffffff812ebc70,direct call
do_sysinfo.isra.0,0x9e,0xffffffff81302230,CALL 0xffffffff81302230,direct call
do_sysinfo.isra.0,0xd5,,RET,ret
do_sysinfo.isra.0,0xf5,ctx->r12 + 0x68,"MOV dword ptr [R12 + 0x68],0x1",write other [TODO]
do_sysinfo.isra.0,0x104,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],R8",write other [TODO]
do_sysinfo.isra.0,0x109,ctx->r12 + 0x40,"MOV qword ptr [R12 + 0x40],RDI",write other [TODO]
do_sysinfo.isra.0,0x12e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_compat_sys_sysinfo,0x21,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__do_compat_sys_sysinfo,0x27,0xffffffff810be1e0,CALL 0xffffffff810be1e0,direct call
__do_compat_sys_sysinfo,0x65,ctx->rbp - 0xa8,"MOV dword ptr [RBP + -0xa8],EDX",write stack
__do_compat_sys_sysinfo,0x6f,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],0x0",write stack
__do_compat_sys_sysinfo,0x7a,ctx->rbp - 0xc8,"MOV dword ptr [RBP + -0xc8],EBX",write stack
__do_compat_sys_sysinfo,0x83,ctx->rbp - 0xb8,"MOV dword ptr [RBP + -0xb8],ESI",write stack
__do_compat_sys_sysinfo,0x90,ctx->rbp - 0xc4,"MOV dword ptr [RBP + -0xc4],EBX",write stack
__do_compat_sys_sysinfo,0x99,ctx->wordctx->ptrctx->rbp - 0xa0,"MOV word ptr [RBP + -0xa0],DX",write stack
__do_compat_sys_sysinfo,0xa5,ctx->rbp - 0xc0,"MOV dword ptr [RBP + -0xc0],EBX",write stack
__do_compat_sys_sysinfo,0xae,ctx->rbp - 0x9c,"MOV dword ptr [RBP + -0x9c],EDI",write stack
__do_compat_sys_sysinfo,0xb7,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],0x0",write stack
__do_compat_sys_sysinfo,0xc2,ctx->rbp - 0xbc,"MOV dword ptr [RBP + -0xbc],EBX",write stack
__do_compat_sys_sysinfo,0xc8,ctx->rbp - 0xb4,"MOV dword ptr [RBP + -0xb4],R11D",write stack
__do_compat_sys_sysinfo,0xcf,ctx->rbp - 0xb0,"MOV dword ptr [RBP + -0xb0],R10D",write stack
__do_compat_sys_sysinfo,0xd6,ctx->rbp - 0xac,"MOV dword ptr [RBP + -0xac],R9D",write stack
__do_compat_sys_sysinfo,0xdd,ctx->rbp - 0xa4,"MOV dword ptr [RBP + -0xa4],R8D",write stack
__do_compat_sys_sysinfo,0xe4,ctx->rbp - 0x98,"MOV dword ptr [RBP + -0x98],ECX",write stack
__do_compat_sys_sysinfo,0xea,ctx->rbp - 0x94,"MOV dword ptr [RBP + -0x94],EAX",write stack
__do_compat_sys_sysinfo,0xf0,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_compat_sys_sysinfo,0x119,,RET,ret
__do_compat_sys_sysinfo,0x132,ctx->rbp - 0x20,"MOV dword ptr [RBP + -0x20],EAX",write stack
__do_compat_sys_sysinfo,0x143,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RSI",write stack
__do_compat_sys_sysinfo,0x14f,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RDX",write stack
__do_compat_sys_sysinfo,0x167,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R11",write stack
__do_compat_sys_sysinfo,0x171,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R10",write stack
__do_compat_sys_sysinfo,0x175,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R9",write stack
__do_compat_sys_sysinfo,0x17c,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],R8",write stack
__do_compat_sys_sysinfo,0x180,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RDI",write stack
__do_compat_sys_sysinfo,0x184,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RBX",write stack
__do_compat_sys_sysinfo,0x18d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_sysinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_sysinfo,0xc,0xffffffff810be320,CALL 0xffffffff810be320,direct call
__ia32_compat_sys_sysinfo,0x12,,RET,ret
__do_sys_sysinfo,0x1a,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__do_sys_sysinfo,0x20,0xffffffff810be1e0,CALL 0xffffffff810be1e0,direct call
__do_sys_sysinfo,0x31,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_sysinfo,0x54,,RET,ret
__do_sys_sysinfo,0x55,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_sysinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sysinfo,0xd,0xffffffff810be4e0,CALL 0xffffffff810be4e0,direct call
__x64_sys_sysinfo,0x13,,RET,ret
__ia32_sys_sysinfo,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_sysinfo,0xc,0xffffffff810be4e0,CALL 0xffffffff810be4e0,direct call
__ia32_sys_sysinfo,0x12,,RET,ret
__x64_sys_setrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setrlimit,0x29,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__x64_sys_setrlimit,0x2f,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_setrlimit,0x4b,0xffffffff810bdb90,CALL 0xffffffff810bdb90,direct call
__x64_sys_setrlimit,0x66,,RET,ret
__x64_sys_setrlimit,0x70,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_getcpu,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getcpu,0x1e,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getcpu,0x41,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getcpu,0x53,,RET,ret
__x64_sys_times,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_times,0x1c,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__x64_sys_times,0x2b,0xffffffff810bcd70,CALL 0xffffffff810bcd70,direct call
__x64_sys_times,0x3c,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_times,0x4d,0xffffffff8114ffe0,CALL 0xffffffff8114ffe0,direct call
__x64_sys_times,0x66,,RET,ret
__x64_sys_times,0x70,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
validate_prctl_map_addr,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
validate_prctl_map_addr,0xef,,RET,ret
validate_prctl_map_addr,0xf6,,RET,ret
__do_sys_newuname,0x2a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__do_sys_newuname,0x30,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
__do_sys_newuname,0x52,ctx->rbp - 0x19e,"MOV qword ptr [RBP + -0x19e],RAX",write stack
__do_sys_newuname,0x6c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__do_sys_newuname,0x70,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
__do_sys_newuname,0x7a,0xffffffff81113020,CALL 0xffffffff81113020,direct call
__do_sys_newuname,0x8e,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_newuname,0xaf,0xffffffff810bde50,CALL 0xffffffff810bde50,direct call
__do_sys_newuname,0xe6,,RET,ret
__do_sys_newuname,0xfa,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_newuname,0x10d,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_newuname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_newuname,0xd,0xffffffff810be800,CALL 0xffffffff810be800,direct call
__x64_sys_newuname,0x13,,RET,ret
__ia32_sys_newuname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_newuname,0xc,0xffffffff810be800,CALL 0xffffffff810be800,direct call
__ia32_sys_newuname,0x12,,RET,ret
__do_sys_uname,0x17,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
__do_sys_uname,0x30,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
__do_sys_uname,0x5b,ctx->rbp - 0x15d,"MOV qword ptr [RBP + -0x15d],RAX",write stack
__do_sys_uname,0x75,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__do_sys_uname,0x79,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
__do_sys_uname,0x83,0xffffffff81113020,CALL 0xffffffff81113020,direct call
__do_sys_uname,0x97,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_uname,0xb8,0xffffffff810bde50,CALL 0xffffffff810bde50,direct call
__do_sys_uname,0xef,,RET,ret
__do_sys_uname,0x103,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_uname,0x116,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_uname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_uname,0xd,0xffffffff810be960,CALL 0xffffffff810be960,direct call
__x64_sys_uname,0x13,,RET,ret
__ia32_sys_uname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_uname,0xc,0xffffffff810be960,CALL 0xffffffff810be960,direct call
__ia32_sys_uname,0x12,,RET,ret
prctl_set_mm_map,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prctl_set_mm_map,0x34,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
prctl_set_mm_map,0x4d,ctx->rdi,"MOV dword ptr [RDI],0x0",write other [TODO]
prctl_set_mm_map,0x53,ctx->rbp - 0x1b4,"MOV dword ptr [RBP + -0x1b4],0xffffffff",write stack
prctl_set_mm_map,0x79,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
prctl_set_mm_map,0x8d,0xffffffff810be6f0,CALL 0xffffffff810be6f0,direct call
prctl_set_mm_map,0xe3,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
prctl_set_mm_map,0xf1,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
prctl_set_mm_map,0xff,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
prctl_set_mm_map,0x107,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
prctl_set_mm_map,0x137,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
prctl_set_mm_map,0x14d,0xffffffff810be130,CALL 0xffffffff810be130,direct call
prctl_set_mm_map,0x166,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
prctl_set_mm_map,0x17a,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
prctl_set_mm_map,0x189,ctx->r13 + 0xf8,"MOV qword ptr [R13 + 0xf8],RAX",write other [TODO]
prctl_set_mm_map,0x197,ctx->r13 + 0x100,"MOV qword ptr [R13 + 0x100],RAX",write other [TODO]
prctl_set_mm_map,0x1a5,ctx->r13 + 0x108,"MOV qword ptr [R13 + 0x108],RAX",write other [TODO]
prctl_set_mm_map,0x1b3,ctx->r13 + 0x110,"MOV qword ptr [R13 + 0x110],RAX",write other [TODO]
prctl_set_mm_map,0x1c1,ctx->r13 + 0x118,"MOV qword ptr [R13 + 0x118],RAX",write other [TODO]
prctl_set_mm_map,0x1cf,ctx->r13 + 0x120,"MOV qword ptr [R13 + 0x120],RAX",write other [TODO]
prctl_set_mm_map,0x1dd,ctx->r13 + 0x128,"MOV qword ptr [R13 + 0x128],RAX",write other [TODO]
prctl_set_mm_map,0x1eb,ctx->r13 + 0x130,"MOV qword ptr [R13 + 0x130],RAX",write other [TODO]
prctl_set_mm_map,0x1f9,ctx->r13 + 0x138,"MOV qword ptr [R13 + 0x138],RAX",write other [TODO]
prctl_set_mm_map,0x207,ctx->r13 + 0x140,"MOV qword ptr [R13 + 0x140],RAX",write other [TODO]
prctl_set_mm_map,0x215,ctx->r13 + 0x148,"MOV qword ptr [R13 + 0x148],RAX",write other [TODO]
prctl_set_mm_map,0x21c,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
prctl_set_mm_map,0x24e,ctx->r13 + 0x150,"MOV qword ptr [R13 + 0x150],RAX",write other [TODO]
prctl_set_mm_map,0x262,ctx->r13 + 0x2c8,"MOV qword ptr [R13 + 0x2c8],RAX",write other [TODO]
prctl_set_mm_map,0x26c,ctx->rdi,"MOVSQ.REP RDI,RSI",write other [TODO]
prctl_set_mm_map,0x274,0xffffffff81113020,CALL 0xffffffff81113020,direct call
prctl_set_mm_map,0x2a0,,RET,ret
prctl_set_mm_map,0x2a9,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
prctl_set_mm_map,0x2f7,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
prctl_set_mm_map,0x325,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
prctl_set_mm,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
prctl_set_mm,0x37,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
prctl_set_mm,0x52,ctx->rdi,"MOV dword ptr [RDI],0x0",write other [TODO]
prctl_set_mm,0x58,ctx->rbp - 0x34,"MOV dword ptr [RBP + -0x34],0xffffffff",write stack
prctl_set_mm,0x8f,0xffffffff810beac0,CALL 0xffffffff810beac0,direct call
prctl_set_mm,0xbe,,RET,ret
prctl_set_mm,0xc9,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
prctl_set_mm,0x12f,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
prctl_set_mm,0x13f,0xffffffff812d2300,CALL 0xffffffff812d2300,direct call
prctl_set_mm,0x144,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],RAX",write stack
prctl_set_mm,0x156,ctx->rbp - 0xa0,"MOV qword ptr [RBP + -0xa0],RAX",write stack
prctl_set_mm,0x15d,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
prctl_set_mm,0x182,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RAX",write stack
prctl_set_mm,0x191,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
prctl_set_mm,0x1ad,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],RSI",write stack
prctl_set_mm,0x1b4,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RAX",write stack
prctl_set_mm,0x1c3,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
prctl_set_mm,0x1cf,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],RCX",write stack
prctl_set_mm,0x1d6,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
prctl_set_mm,0x1dd,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
prctl_set_mm,0x1e9,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],RDX",write stack
prctl_set_mm,0x1f0,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R10",write stack
prctl_set_mm,0x1f4,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R9",write stack
prctl_set_mm,0x1f8,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R8",write stack
prctl_set_mm,0x1fc,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RAX",write stack
prctl_set_mm,0x203,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
prctl_set_mm,0x207,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R11",write stack
prctl_set_mm,0x263,0xffffffff810bd450,CALL 0xffffffff810bd450,direct call
prctl_set_mm,0x276,0xffffffff810be130,CALL 0xffffffff810be130,direct call
prctl_set_mm,0x283,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],R14",write stack
prctl_set_mm,0x28a,ctx->rbp - 0xd8,"MOV qword ptr [RBP + -0xd8],RCX",write stack
prctl_set_mm,0x291,ctx->rbp - 0xd0,"MOV qword ptr [RBP + -0xd0],RDX",write stack
prctl_set_mm,0x298,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],R10",write stack
prctl_set_mm,0x29f,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],R9",write stack
prctl_set_mm,0x2a6,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],R8",write stack
prctl_set_mm,0x2ad,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RSI",write stack
prctl_set_mm,0x2b4,0xffffffff810be6f0,CALL 0xffffffff810be6f0,direct call
prctl_set_mm,0x304,ctx->rbp - 0xa8,"MOV qword ptr [RBP + -0xa8],RAX",write stack
prctl_set_mm,0x30f,ctx->rbp - 0xb0,"MOV qword ptr [RBP + -0xb0],RAX",write stack
prctl_set_mm,0x31a,ctx->rbp - 0xb8,"MOV qword ptr [RBP + -0xb8],RAX",write stack
prctl_set_mm,0x325,ctx->rbp - 0xc0,"MOV qword ptr [RBP + -0xc0],RAX",write stack
prctl_set_mm,0x333,ctx->r12 + 0xf8,"MOV qword ptr [R12 + 0xf8],RSI",write other [TODO]
prctl_set_mm,0x33e,ctx->r12 + 0x100,"MOV qword ptr [R12 + 0x100],RCX",write other [TODO]
prctl_set_mm,0x346,ctx->r12 + 0x128,"MOV qword ptr [R12 + 0x128],RAX",write other [TODO]
prctl_set_mm,0x355,ctx->r12 + 0x108,"MOV qword ptr [R12 + 0x108],RDX",write other [TODO]
prctl_set_mm,0x35d,ctx->r12 + 0x130,"MOV qword ptr [R12 + 0x130],RAX",write other [TODO]
prctl_set_mm,0x36c,ctx->r12 + 0x110,"MOV qword ptr [R12 + 0x110],R10",write other [TODO]
prctl_set_mm,0x374,ctx->r12 + 0x138,"MOV qword ptr [R12 + 0x138],RAX",write other [TODO]
prctl_set_mm,0x383,ctx->r12 + 0x118,"MOV qword ptr [R12 + 0x118],R9",write other [TODO]
prctl_set_mm,0x38b,ctx->r12 + 0x120,"MOV qword ptr [R12 + 0x120],R8",write other [TODO]
prctl_set_mm,0x393,ctx->r12 + 0x140,"MOV qword ptr [R12 + 0x140],RAX",write other [TODO]
prctl_set_mm,0x39b,ctx->r12 + 0x148,"MOV qword ptr [R12 + 0x148],R11",write other [TODO]
prctl_set_mm,0x3aa,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
prctl_set_mm,0x3b7,0xffffffff81113020,CALL 0xffffffff81113020,direct call
prctl_set_mm,0x3c1,ctx->rbp - 0x98,"MOV qword ptr [RBP + -0x98],R14",write stack
prctl_set_mm,0x3cb,ctx->rbp - 0xc8,"MOV qword ptr [RBP + -0xc8],R11",write stack
prctl_set_mm,0x3d2,0xffffffff810be6f0,CALL 0xffffffff810be6f0,direct call
prctl_set_mm,0x40b,ctx->rbp - 0x90,"MOV qword ptr [RBP + -0x90],R14",write stack
prctl_set_mm,0x414,ctx->rbp - 0x88,"MOV qword ptr [RBP + -0x88],R14",write stack
prctl_set_mm,0x41d,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R14",write stack
prctl_set_mm,0x423,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],R14",write stack
prctl_set_mm,0x42c,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R14",write stack
prctl_set_mm,0x432,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],R14",write stack
prctl_set_mm,0x438,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],R14",write stack
prctl_set_mm,0x441,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],R14",write stack
prctl_set_mm,0x44a,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],R14",write stack
prctl_set_mm,0x483,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_prlimit64,0x28,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_prlimit64,0x45,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__do_sys_prlimit64,0x5a,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
__do_sys_prlimit64,0x62,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
__do_sys_prlimit64,0x66,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__do_sys_prlimit64,0xbd,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],R9",write stack
__do_sys_prlimit64,0xc1,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],R8",write stack
__do_sys_prlimit64,0xc5,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__do_sys_prlimit64,0xe2,0xffffffff81504a90,CALL 0xffffffff81504a90,direct call
__do_sys_prlimit64,0x113,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_prlimit64,0x139,0xffffffff810bdb90,CALL 0xffffffff810bdb90,direct call
__do_sys_prlimit64,0x156,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
__do_sys_prlimit64,0x15e,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
__do_sys_prlimit64,0x162,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_prlimit64,0x1af,,RET,ret
__do_sys_prlimit64,0x1b3,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_prlimit64,0x1bd,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__do_sys_prlimit64,0x216,0xffffffff810bdb90,CALL 0xffffffff810bdb90,direct call
__do_sys_prlimit64,0x226,0xffffffff810a13a0,CALL 0xffffffff810a13a0,direct call
__do_sys_prlimit64,0x238,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__do_sys_prlimit64,0x23d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_prlimit64,0x255,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__do_sys_prlimit64,0x267,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__do_sys_prlimit64,0x27b,0xffffffff810bdb90,CALL 0xffffffff810bdb90,direct call
__do_sys_prlimit64,0x2a0,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__do_sys_prlimit64,0x2b1,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_prlimit64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_prlimit64,0x17,0xffffffff810bf290,CALL 0xffffffff810bf290,direct call
__x64_sys_prlimit64,0x1d,,RET,ret
__ia32_sys_prlimit64,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_prlimit64,0x15,0xffffffff810bf290,CALL 0xffffffff810bf290,direct call
__ia32_sys_prlimit64,0x1b,,RET,ret
__x64_sys_getresuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getresuid,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__x64_sys_getresuid,0x40,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__x64_sys_getresuid,0x52,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__x64_sys_getresuid,0x64,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__x64_sys_getresuid,0x72,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getresuid,0x81,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getresuid,0x91,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getresuid,0xa7,,RET,ret
__x64_sys_getresuid,0xb9,,RET,ret
__x64_sys_getresgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getresgid,0x3c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RCX",write stack
__x64_sys_getresgid,0x40,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__x64_sys_getresgid,0x52,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__x64_sys_getresgid,0x64,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__x64_sys_getresgid,0x72,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getresgid,0x81,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getresgid,0x91,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__x64_sys_getresgid,0xa7,,RET,ret
__x64_sys_getsid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getsid,0x11,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__x64_sys_getsid,0x35,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
__x64_sys_getsid,0x3d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__x64_sys_getsid,0x4a,,RET,ret
__x64_sys_getsid,0x4e,0xffffffff810ca470,CALL 0xffffffff810ca470,direct call
__x64_sys_getsid,0x75,0xffffffff81504990,CALL 0xffffffff81504990,direct call
__ia32_sys_getpgrp,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getpgrp,0xa,0xffffffff811366d0,CALL 0xffffffff811366d0,direct call
__ia32_sys_getpgrp,0x26,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
__ia32_sys_getpgrp,0x2d,0xffffffff8113a180,CALL 0xffffffff8113a180,direct call
__ia32_sys_getpgrp,0x3a,,RET,ret
__x64_sys_old_getrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_old_getrlimit,0x1f,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
__x64_sys_old_getrlimit,0x56,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__x64_sys_old_getrlimit,0x84,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
__x64_sys_old_getrlimit,0x89,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
__x64_sys_old_getrlimit,0x8d,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__x64_sys_old_getrlimit,0x9c,ctx->rsp,"MOV qword ptr [RSP],0x7fffffff",write stack
__x64_sys_old_getrlimit,0xba,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_old_getrlimit,0xe3,,RET,ret
__x64_sys_old_getrlimit,0xe4,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],0x7fffffff",write stack
__x64_sys_old_getrlimit,0xf8,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_setdomainname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setdomainname,0x33,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_setdomainname,0x4b,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__x64_sys_setdomainname,0x70,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__x64_sys_setdomainname,0x7e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_setdomainname,0xb1,,RET,ret
__x64_sys_setdomainname,0xb8,0xffffffff817b5f50,CALL 0xffffffff817b5f50,direct call
__x64_sys_setdomainname,0xc4,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__x64_sys_setdomainname,0xf1,ctx->rax + 0x145,"MOV byte ptr [RAX + 0x145],CL",write other [TODO]
__x64_sys_setdomainname,0x122,ctx->rdx,"MOV byte ptr [RDX],0x0",write other [TODO]
__x64_sys_setdomainname,0x132,0xffffffff811b24a0,CALL 0xffffffff811b24a0,direct call
__x64_sys_setdomainname,0x13e,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__x64_sys_setdomainname,0x154,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],RCX",write other [TODO]
__x64_sys_setdomainname,0x163,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],RSI",write other [TODO]
__x64_sys_setdomainname,0x189,ctx->rax + ctx->rdi * 0x1,"MOV qword ptr [RAX + RDI*0x1],R8",write other [TODO]
__x64_sys_setdomainname,0x198,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
__x64_sys_setdomainname,0x19f,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],0x0",write other [TODO]
__x64_sys_setdomainname,0x1cb,ctx->rcx + ctx->rsi * 0x1,"MOV qword ptr [RCX + RSI*0x1],RDI",write other [TODO]
__x64_sys_setdomainname,0x1db,ctx->rax + 0x145,"MOV dword ptr [RAX + 0x145],ECX",write other [TODO]
__x64_sys_setdomainname,0x1e8,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],ECX",write other [TODO]
__x64_sys_setdomainname,0x1f3,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
__x64_sys_setdomainname,0x1f9,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],0x0",write other [TODO]
__x64_sys_setdomainname,0x226,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__x64_sys_setdomainname,0x234,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__x64_sys_setdomainname,0x23e,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_sethostname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_sethostname,0x33,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__x64_sys_sethostname,0x4b,0xffffffff810b1190,CALL 0xffffffff810b1190,direct call
__x64_sys_sethostname,0x70,0xffffffff8135b200,CALL 0xffffffff8135b200,direct call
__x64_sys_sethostname,0x7e,0xffffffff81605a50,CALL 0xffffffff81605a50,direct call
__x64_sys_sethostname,0xb1,,RET,ret
__x64_sys_sethostname,0xb8,0xffffffff817b5f50,CALL 0xffffffff817b5f50,direct call
__x64_sys_sethostname,0xc4,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__x64_sys_sethostname,0xee,ctx->rax + 0x41,"MOV byte ptr [RAX + 0x41],CL",write other [TODO]
__x64_sys_sethostname,0x118,ctx->rdx,"MOV byte ptr [RDX],0x0",write other [TODO]
__x64_sys_sethostname,0x128,0xffffffff811b24a0,CALL 0xffffffff811b24a0,direct call
__x64_sys_sethostname,0x134,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__x64_sys_sethostname,0x148,ctx->rax - 0x8,"MOV qword ptr [RAX + -0x8],RCX",write other [TODO]
__x64_sys_sethostname,0x157,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],RSI",write other [TODO]
__x64_sys_sethostname,0x17d,ctx->rax + ctx->rdi * 0x1,"MOV qword ptr [RAX + RDI*0x1],R8",write other [TODO]
__x64_sys_sethostname,0x18c,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
__x64_sys_sethostname,0x193,ctx->rdx + ctx->rcx * 0x1 - 0x8,"MOV qword ptr [RDX + RCX*0x1 + -0x8],0x0",write other [TODO]
__x64_sys_sethostname,0x1bf,ctx->rcx + ctx->rsi * 0x1,"MOV qword ptr [RCX + RSI*0x1],RDI",write other [TODO]
__x64_sys_sethostname,0x1cf,ctx->rax + 0x41,"MOV dword ptr [RAX + 0x41],ECX",write other [TODO]
__x64_sys_sethostname,0x1d9,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],ECX",write other [TODO]
__x64_sys_sethostname,0x1e4,ctx->rdx,"MOV dword ptr [RDX],0x0",write other [TODO]
__x64_sys_sethostname,0x1ea,ctx->rdx + ctx->rax * 0x1 - 0x4,"MOV dword ptr [RDX + RAX*0x1 + -0x4],0x0",write other [TODO]
__x64_sys_sethostname,0x217,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__x64_sys_sethostname,0x225,ctx->wordctx->ptrctx->rdx + ctx->rax * 0x1 - 0x2,"MOV word ptr [RDX + RAX*0x1 + -0x2],CX",write other [TODO]
__x64_sys_sethostname,0x22f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_olduname,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_olduname,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
__x64_sys_olduname,0x36,ctx->rbp - 0x4d,"MOV qword ptr [RBP + -0x4d],0x0",write stack
__x64_sys_olduname,0x41,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],0x0",write stack
__x64_sys_olduname,0x65,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
__x64_sys_olduname,0x83,ctx->rbp - 0x44,"MOV qword ptr [RBP + -0x44],RDX",write stack
__x64_sys_olduname,0x8b,ctx->rbp - 0x4d,"MOV qword ptr [RBP + -0x4d],RCX",write stack
__x64_sys_olduname,0x96,ctx->rbp - 0x3b,"MOV qword ptr [RBP + -0x3b],RDX",write stack
__x64_sys_olduname,0xa5,ctx->rbp - 0x32,"MOV qword ptr [RBP + -0x32],RDX",write stack
__x64_sys_olduname,0xb4,ctx->rbp - 0x29,"MOV qword ptr [RBP + -0x29],RAX",write stack
__x64_sys_olduname,0xb8,0xffffffff81113020,CALL 0xffffffff81113020,direct call
__x64_sys_olduname,0xc8,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_olduname,0x109,,RET,ret
__x64_sys_olduname,0x113,0xffffffff810bde50,CALL 0xffffffff810bde50,direct call
__x64_sys_olduname,0x135,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_olduname,0x141,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_getrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getrlimit,0x28,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
__x64_sys_getrlimit,0x5d,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__x64_sys_getrlimit,0x78,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
__x64_sys_getrlimit,0x7c,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
__x64_sys_getrlimit,0x81,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__x64_sys_getrlimit,0x91,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__x64_sys_getrlimit,0xba,,RET,ret
__x64_sys_getrlimit,0xc4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_sys_getrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getrlimit,0x28,ctx->rsp + 0x10,"MOV qword ptr [RSP + 0x10],RAX",write stack
__ia32_sys_getrlimit,0x5d,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__ia32_sys_getrlimit,0x78,ctx->rsp,"MOV qword ptr [RSP],RAX",write stack
__ia32_sys_getrlimit,0x7c,ctx->rsp + 0x8,"MOV qword ptr [RSP + 0x8],RDX",write stack
__ia32_sys_getrlimit,0x81,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ia32_sys_getrlimit,0x91,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_sys_getrlimit,0xba,,RET,ret
__ia32_sys_getrlimit,0xc4,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_getrlimit,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_getrlimit,0x2a,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
__ia32_compat_sys_getrlimit,0x5e,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
__ia32_compat_sys_getrlimit,0x78,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
__ia32_compat_sys_getrlimit,0x9c,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],R12D",write stack
__ia32_compat_sys_getrlimit,0xa0,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EBX",write stack
__ia32_compat_sys_getrlimit,0xa3,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__ia32_compat_sys_getrlimit,0xcd,,RET,ret
__ia32_compat_sys_getrlimit,0xd7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__sys_setregid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setregid,0x37,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setregid,0x44,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setregid,0x6b,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setregid,0xae,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__sys_setregid,0xb2,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setregid,0xc3,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],R15D",write other [TODO]
__sys_setregid,0xe3,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],R14D",write other [TODO]
__sys_setregid,0xf7,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],EAX",write other [TODO]
__sys_setregid,0xfc,ctx->r12 + 0x20,"MOV dword ptr [R12 + 0x20],EAX",write other [TODO]
__sys_setregid,0x10c,0xffffffff81504880,CALL 0xffffffff81504880,direct call
__sys_setregid,0x11b,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__sys_setregid,0x134,,RET,ret
__sys_setregid,0x141,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__sys_setregid,0x145,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setregid,0x15c,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setregid,0x172,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],R14D",write other [TODO]
__sys_setregid,0x18b,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],R14D",write other [TODO]
__x64_sys_setregid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setregid,0xf,0xffffffff810c0130,CALL 0xffffffff810c0130,direct call
__x64_sys_setregid,0x15,,RET,ret
__ia32_sys_setregid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setregid,0xf,0xffffffff810c0130,CALL 0xffffffff810c0130,direct call
__ia32_sys_setregid,0x15,,RET,ret
__sys_setgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setgid,0x27,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setgid,0x37,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setgid,0x5b,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setgid,0x64,ctx->r12 + 0x20,"MOV dword ptr [R12 + 0x20],EBX",write other [TODO]
__sys_setgid,0x69,ctx->r12 + 0x10,"MOV dword ptr [R12 + 0x10],EBX",write other [TODO]
__sys_setgid,0x6e,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],EBX",write other [TODO]
__sys_setgid,0x73,ctx->r12 + 0x8,"MOV dword ptr [R12 + 0x8],EBX",write other [TODO]
__sys_setgid,0x83,0xffffffff81504880,CALL 0xffffffff81504880,direct call
__sys_setgid,0x92,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__sys_setgid,0xa3,,RET,ret
__sys_setgid,0xb0,ctx->r12 + 0x20,"MOV dword ptr [R12 + 0x20],EBX",write other [TODO]
__sys_setgid,0xb5,ctx->r12 + 0x18,"MOV dword ptr [R12 + 0x18],EBX",write other [TODO]
__sys_setgid,0xc6,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setgid,0xd4,,RET,ret
__x64_sys_setgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setgid,0xc,0xffffffff810c0320,CALL 0xffffffff810c0320,direct call
__x64_sys_setgid,0x12,,RET,ret
__ia32_sys_setgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setgid,0xc,0xffffffff810c0320,CALL 0xffffffff810c0320,direct call
__ia32_sys_setgid,0x12,,RET,ret
__sys_setreuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setreuid,0x37,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setreuid,0x44,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setreuid,0x6b,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setreuid,0x92,ctx->r12 + 0x4,"MOV dword ptr [R12 + 0x4],R15D",write other [TODO]
__sys_setreuid,0xb7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__sys_setreuid,0xbb,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setreuid,0xd1,ctx->r12 + 0x14,"MOV dword ptr [R12 + 0x14],R14D",write other [TODO]
__sys_setreuid,0xf7,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__sys_setreuid,0xfb,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setreuid,0x11c,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],R8",write stack
__sys_setreuid,0x120,0xffffffff810b38f0,CALL 0xffffffff810b38f0,direct call
__sys_setreuid,0x139,0xffffffff810b3840,CALL 0xffffffff810b3840,direct call
__sys_setreuid,0x13e,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],R15",write other [TODO]
__sys_setreuid,0x155,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],EAX",write other [TODO]
__sys_setreuid,0x15a,ctx->r12 + 0x1c,"MOV dword ptr [R12 + 0x1c],EAX",write other [TODO]
__sys_setreuid,0x16a,0xffffffff81504830,CALL 0xffffffff81504830,direct call
__sys_setreuid,0x176,0xffffffff810d45d0,CALL 0xffffffff810d45d0,direct call
__sys_setreuid,0x182,0xffffffff810bc9e0,CALL 0xffffffff810bc9e0,direct call
__sys_setreuid,0x18a,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__sys_setreuid,0x1a3,,RET,ret
__sys_setreuid,0x1b5,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__x64_sys_setreuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setreuid,0xf,0xffffffff810c0450,CALL 0xffffffff810c0450,direct call
__x64_sys_setreuid,0x15,,RET,ret
__ia32_sys_setreuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setreuid,0xf,0xffffffff810c0450,CALL 0xffffffff810c0450,direct call
__ia32_sys_setreuid,0x15,,RET,ret
__sys_setuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setuid,0x29,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setuid,0x39,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setuid,0x5d,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setuid,0x6a,ctx->r12 + 0x4,"MOV dword ptr [R12 + 0x4],EBX",write other [TODO]
__sys_setuid,0x6f,ctx->r12 + 0xc,"MOV dword ptr [R12 + 0xc],EBX",write other [TODO]
__sys_setuid,0x7c,0xffffffff810b38f0,CALL 0xffffffff810b38f0,direct call
__sys_setuid,0x95,0xffffffff810b3840,CALL 0xffffffff810b3840,direct call
__sys_setuid,0x9a,ctx->r12 + 0x80,"MOV qword ptr [R12 + 0x80],R14",write other [TODO]
__sys_setuid,0xa2,ctx->r12 + 0x14,"MOV dword ptr [R12 + 0x14],EBX",write other [TODO]
__sys_setuid,0xb2,ctx->r12 + 0x1c,"MOV dword ptr [R12 + 0x1c],EBX",write other [TODO]
__sys_setuid,0xb7,0xffffffff81504830,CALL 0xffffffff81504830,direct call
__sys_setuid,0xc3,0xffffffff810d45d0,CALL 0xffffffff810d45d0,direct call
__sys_setuid,0xcf,0xffffffff810bc9e0,CALL 0xffffffff810bc9e0,direct call
__sys_setuid,0xd7,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__sys_setuid,0xea,,RET,ret
__sys_setuid,0x107,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setuid,0x117,,RET,ret
__x64_sys_setuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setuid,0xc,0xffffffff810c0690,CALL 0xffffffff810c0690,direct call
__x64_sys_setuid,0x12,,RET,ret
__ia32_sys_setuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setuid,0xc,0xffffffff810c0690,CALL 0xffffffff810c0690,direct call
__ia32_sys_setuid,0x12,,RET,ret
__sys_setresuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setresuid,0x3a,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setresuid,0x48,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setresuid,0x53,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__sys_setresuid,0x56,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setresuid,0x5b,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
__sys_setresuid,0x8d,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setresuid,0xba,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
__sys_setresuid,0xbe,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setresuid,0x121,ctx->r15 + 0x4,"MOV dword ptr [R15 + 0x4],R14D",write other [TODO]
__sys_setresuid,0x134,ctx->r15 + 0x14,"MOV dword ptr [R15 + 0x14],EAX",write other [TODO]
__sys_setresuid,0x141,ctx->r15 + 0xc,"MOV dword ptr [R15 + 0xc],EAX",write other [TODO]
__sys_setresuid,0x154,ctx->r15 + 0x1c,"MOV dword ptr [R15 + 0x1c],EAX",write other [TODO]
__sys_setresuid,0x158,0xffffffff81504830,CALL 0xffffffff81504830,direct call
__sys_setresuid,0x164,0xffffffff810d45d0,CALL 0xffffffff810d45d0,direct call
__sys_setresuid,0x170,0xffffffff810bc9e0,CALL 0xffffffff810bc9e0,direct call
__sys_setresuid,0x178,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__sys_setresuid,0x191,,RET,ret
__sys_setresuid,0x198,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setresuid,0x1a2,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
__sys_setresuid,0x1a6,0xffffffff810b38f0,CALL 0xffffffff810b38f0,direct call
__sys_setresuid,0x1ba,0xffffffff810b3840,CALL 0xffffffff810b3840,direct call
__sys_setresuid,0x1bf,ctx->r15 + 0x80,"MOV qword ptr [R15 + 0x80],RBX",write other [TODO]
__x64_sys_setresuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setresuid,0x12,0xffffffff810c0810,CALL 0xffffffff810c0810,direct call
__x64_sys_setresuid,0x18,,RET,ret
__ia32_sys_setresuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setresuid,0x12,0xffffffff810c0810,CALL 0xffffffff810c0810,direct call
__ia32_sys_setresuid,0x18,,RET,ret
__sys_setresgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setresgid,0x3a,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setresgid,0x48,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setresgid,0x53,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],EAX",write stack
__sys_setresgid,0x56,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setresgid,0x5b,ctx->rbp - 0x2c,"MOV dword ptr [RBP + -0x2c],EAX",write stack
__sys_setresgid,0x8d,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setresgid,0xba,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],R9",write stack
__sys_setresgid,0xbe,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setresgid,0xd0,ctx->r15 + 0x8,"MOV dword ptr [R15 + 0x8],R14D",write other [TODO]
__sys_setresgid,0xdd,ctx->r15 + 0x18,"MOV dword ptr [R15 + 0x18],EAX",write other [TODO]
__sys_setresgid,0xea,ctx->r15 + 0x10,"MOV dword ptr [R15 + 0x10],EAX",write other [TODO]
__sys_setresgid,0xfd,ctx->r15 + 0x20,"MOV dword ptr [R15 + 0x20],EAX",write other [TODO]
__sys_setresgid,0x101,0xffffffff81504880,CALL 0xffffffff81504880,direct call
__sys_setresgid,0x110,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__sys_setresgid,0x150,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setresgid,0x166,,RET,ret
__x64_sys_setresgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setresgid,0x12,0xffffffff810c0a60,CALL 0xffffffff810c0a60,direct call
__x64_sys_setresgid,0x18,,RET,ret
__ia32_sys_setresgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setresgid,0x12,0xffffffff810c0a60,CALL 0xffffffff810c0a60,direct call
__ia32_sys_setresgid,0x18,,RET,ret
__sys_setfsuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setfsuid,0x31,0xffffffff8118d890,CALL 0xffffffff8118d890,direct call
__sys_setfsuid,0x44,0xffffffff8118db50,CALL 0xffffffff8118db50,direct call
__sys_setfsuid,0x51,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setfsuid,0x8a,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setfsuid,0x9a,ctx->r15 + 0x1c,"MOV dword ptr [R15 + 0x1c],R13D",write other [TODO]
__sys_setfsuid,0xa9,0xffffffff81504830,CALL 0xffffffff81504830,direct call
__sys_setfsuid,0xb5,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setfsuid,0xc6,,RET,ret
__sys_setfsuid,0xca,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__x64_sys_setfsuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setfsuid,0xc,0xffffffff810c0c50,CALL 0xffffffff810c0c50,direct call
__x64_sys_setfsuid,0x12,,RET,ret
__ia32_sys_setfsuid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setfsuid,0xc,0xffffffff810c0c50,CALL 0xffffffff810c0c50,direct call
__ia32_sys_setfsuid,0x12,,RET,ret
__sys_setfsgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__sys_setfsgid,0x31,0xffffffff8118d8d0,CALL 0xffffffff8118d8d0,direct call
__sys_setfsgid,0x44,0xffffffff8118db70,CALL 0xffffffff8118db70,direct call
__sys_setfsgid,0x51,0xffffffff810d3b80,CALL 0xffffffff810d3b80,direct call
__sys_setfsgid,0x8a,0xffffffff810b1240,CALL 0xffffffff810b1240,direct call
__sys_setfsgid,0x9a,ctx->r15 + 0x20,"MOV dword ptr [R15 + 0x20],R13D",write other [TODO]
__sys_setfsgid,0xa9,0xffffffff81504880,CALL 0xffffffff81504880,direct call
__sys_setfsgid,0xb5,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
__sys_setfsgid,0xc6,,RET,ret
__sys_setfsgid,0xca,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
__x64_sys_setfsgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_setfsgid,0xc,0xffffffff810c0d70,CALL 0xffffffff810c0d70,direct call
__x64_sys_setfsgid,0x12,,RET,ret
__ia32_sys_setfsgid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setfsgid,0xc,0xffffffff810c0d70,CALL 0xffffffff810c0d70,direct call
__ia32_sys_setfsgid,0x12,,RET,ret
ksys_setsid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
ksys_setsid,0x2b,0xffffffff810c9680,CALL 0xffffffff810c9680,direct call
ksys_setsid,0x3a,0xffffffff81d14f10,CALL 0xffffffff81d14f10,direct call
ksys_setsid,0x5c,0xffffffff810c9600,CALL 0xffffffff810c9600,direct call
ksys_setsid,0x71,ctx->rax + 0x190,"MOV dword ptr [RAX + 0x190],0x1",write other [TODO]
ksys_setsid,0x9d,0xffffffff810ca2e0,CALL 0xffffffff810ca2e0,direct call
ksys_setsid,0xbd,0xffffffff810ca2e0,CALL 0xffffffff810ca2e0,direct call
ksys_setsid,0xc5,0xffffffff81788f10,CALL 0xffffffff81788f10,direct call
ksys_setsid,0xd1,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
ksys_setsid,0xde,0xffffffff817ef270,CALL 0xffffffff817ef270,direct call
ksys_setsid,0xe6,0xffffffff81109740,CALL 0xffffffff81109740,direct call
ksys_setsid,0xf7,,RET,ret
ksys_setsid,0x105,0xffffffff81d14c20,CALL 0xffffffff81d14c20,direct call
__ia32_sys_setsid,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_setsid,0x9,0xffffffff810c0e90,CALL 0xffffffff810c0e90,direct call
__ia32_sys_setsid,0x11,,RET,ret
getrusage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
getrusage,0x3a,ctx->rsp + 0x28,"MOV qword ptr [RSP + 0x28],RAX",write stack
getrusage,0x41,ctx->rdx,"MOV qword ptr [RDX],0x0",write other [TODO]
getrusage,0x48,ctx->rdx + 0x88,"MOV qword ptr [RDX + 0x88],0x0",write other [TODO]
getrusage,0x56,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],0x0",write stack
getrusage,0x5f,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],0x0",write stack
getrusage,0x7a,0xffffffff810b7270,CALL 0xffffffff810b7270,direct call
getrusage,0xa7,0xffffffff81102510,CALL 0xffffffff81102510,direct call
getrusage,0xec,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],R10",write other [TODO]
getrusage,0x101,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],R9",write other [TODO]
getrusage,0x116,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],R8",write other [TODO]
getrusage,0x128,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RDI",write other [TODO]
getrusage,0x13a,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RSI",write other [TODO]
getrusage,0x14c,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RCX",write other [TODO]
getrusage,0x16f,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],R10",write other [TODO]
getrusage,0x17d,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],R9",write other [TODO]
getrusage,0x18b,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],R8",write other [TODO]
getrusage,0x196,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RDI",write other [TODO]
getrusage,0x1a8,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RSI",write other [TODO]
getrusage,0x1ba,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RCX",write other [TODO]
getrusage,0x1dc,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
getrusage,0x1e6,0xffffffff81150a50,CALL 0xffffffff81150a50,direct call
getrusage,0x1f0,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
getrusage,0x1f3,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
getrusage,0x1f7,0xffffffff81150a50,CALL 0xffffffff81150a50,direct call
getrusage,0x1fc,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
getrusage,0x200,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RDX",write other [TODO]
getrusage,0x212,ctx->rbx + 0x20,"MOV qword ptr [RBX + 0x20],R12",write other [TODO]
getrusage,0x236,,RET,ret
getrusage,0x24d,ctx->rsp + 0x18,"MOV qword ptr [RSP + 0x18],RDX",write stack
getrusage,0x260,ctx->rsp + 0x20,"MOV qword ptr [RSP + 0x20],RDX",write stack
getrusage,0x265,ctx->rbx + 0x80,"MOV qword ptr [RBX + 0x80],RAX",write other [TODO]
getrusage,0x27a,ctx->rbx + 0x88,"MOV qword ptr [RBX + 0x88],RAX",write other [TODO]
getrusage,0x28f,ctx->rbx + 0x40,"MOV qword ptr [RBX + 0x40],RAX",write other [TODO]
getrusage,0x2a1,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],RAX",write other [TODO]
getrusage,0x2b3,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
getrusage,0x2c5,ctx->rbx + 0x60,"MOV qword ptr [RBX + 0x60],RAX",write other [TODO]
getrusage,0x2e1,ctx->rsi,"MOV RSI,qword ptr [RSP]",write other [TODO]
getrusage,0x2ec,0xffffffff81d14ad0,CALL 0xffffffff81d14ad0,direct call
getrusage,0x2f6,0xffffffff81150a50,CALL 0xffffffff81150a50,direct call
getrusage,0x300,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
getrusage,0x303,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
getrusage,0x307,0xffffffff81150a50,CALL 0xffffffff81150a50,direct call
getrusage,0x30c,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
getrusage,0x310,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RDX",write other [TODO]
getrusage,0x32c,0xffffffff810fa2e0,CALL 0xffffffff810fa2e0,direct call
getrusage,0x394,0xffffffff81150a50,CALL 0xffffffff81150a50,direct call
getrusage,0x39e,ctx->rbx,"MOV qword ptr [RBX],RAX",write other [TODO]
getrusage,0x3a1,ctx->rbx + 0x8,"MOV qword ptr [RBX + 0x8],RDX",write other [TODO]
getrusage,0x3a5,0xffffffff81150a50,CALL 0xffffffff81150a50,direct call
getrusage,0x3aa,ctx->rbx + 0x10,"MOV qword ptr [RBX + 0x10],RAX",write other [TODO]
getrusage,0x3ae,ctx->rbx + 0x18,"MOV qword ptr [RBX + 0x18],RDX",write other [TODO]
getrusage,0x3b5,0xffffffff810a0050,CALL 0xffffffff810a0050,direct call
getrusage,0x412,0xffffffff810a0fb0,CALL 0xffffffff810a0fb0,direct call
getrusage,0x41c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__do_sys_getrusage,0x20,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RAX",write stack
__do_sys_getrusage,0x46,0xffffffff810c0fc0,CALL 0xffffffff810c0fc0,direct call
__do_sys_getrusage,0x56,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_getrusage,0x7d,,RET,ret
__do_sys_getrusage,0x87,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_getrusage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_getrusage,0x10,0xffffffff810c13f0,CALL 0xffffffff810c13f0,direct call
__x64_sys_getrusage,0x16,,RET,ret
__ia32_sys_getrusage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_getrusage,0xf,0xffffffff810c13f0,CALL 0xffffffff810c13f0,direct call
__ia32_sys_getrusage,0x15,,RET,ret
__do_compat_sys_getrusage,0x20,ctx->rsp + 0x98,"MOV qword ptr [RSP + 0x98],RAX",write stack
__do_compat_sys_getrusage,0x46,0xffffffff810c0fc0,CALL 0xffffffff810c0fc0,direct call
__do_compat_sys_getrusage,0x51,0xffffffff81175250,CALL 0xffffffff81175250,direct call
__do_compat_sys_getrusage,0x70,,RET,ret
__do_compat_sys_getrusage,0x7a,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__ia32_compat_sys_getrusage,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_compat_sys_getrusage,0xf,0xffffffff810c14c0,CALL 0xffffffff810c14c0,direct call
__ia32_compat_sys_getrusage,0x15,,RET,ret
FUN_ffffffff810c1560,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810c1560,0xf,,RET,ret
FUN_ffffffff810c1570,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
FUN_ffffffff810c1570,0xf,,RET,ret
__do_sys_prctl,0x2a,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
__do_sys_prctl,0x39,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__do_sys_prctl,0x3d,0xffffffff81504c50,CALL 0xffffffff81504c50,direct call
__do_sys_prctl,0x92,,RET,ret
__do_sys_prctl,0x9e,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__do_sys_prctl,0xb8,0xffffffff812a7810,CALL 0xffffffff812a7810,direct call
__do_sys_prctl,0xea,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__do_sys_prctl,0x102,ctx->rax + 0x950,"MOV dword ptr [RAX + 0x950],R13D",write other [TODO]
__do_sys_prctl,0x11c,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x0",write stack
__do_sys_prctl,0x120,0xffffffff81641c90,CALL 0xffffffff81641c90,direct call
__do_sys_prctl,0x13b,0xffffffff8136e5c0,CALL 0xffffffff8136e5c0,direct call
__do_sys_prctl,0x143,0xffffffff817ef470,CALL 0xffffffff817ef470,direct call
__do_sys_prctl,0x167,0xffffffff8136e810,CALL 0xffffffff8136e810,direct call
__do_sys_prctl,0x173,0xffffffff8126d030,CALL 0xffffffff8126d030,direct call
__do_sys_prctl,0x20f,0xffffffff8136c410,CALL 0xffffffff8136c410,direct call
__do_sys_prctl,0x220,0xffffffff81605960,CALL 0xffffffff81605960,direct call
__do_sys_prctl,0x23a,0xffffffff811b04a0,CALL 0xffffffff811b04a0,direct call
__do_sys_prctl,0x24a,0xffffffff811b04c0,CALL 0xffffffff811b04c0,direct call
__do_sys_prctl,0x257,0xffffffff81041dc0,CALL 0xffffffff81041dc0,direct call
__do_sys_prctl,0x266,0xffffffff81041df0,CALL 0xffffffff81041df0,direct call
__do_sys_prctl,0x28b,ctx->rax + 0x1398,"MOV qword ptr [RAX + 0x1398],RDX",write other [TODO]
__do_sys_prctl,0x2ae,0xffffffff8126d140,CALL 0xffffffff8126d140,direct call
__do_sys_prctl,0x2c7,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__do_sys_prctl,0x30a,0xffffffff81110d50,CALL 0xffffffff81110d50,direct call
__do_sys_prctl,0x324,0xffffffff81c8cdc0,CALL 0xffffffff81c8cdc0,direct call
__do_sys_prctl,0x352,0xffffffff81d112d0,CALL 0xffffffff81d112d0,direct call
__do_sys_prctl,0x371,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
__do_sys_prctl,0x39c,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__do_sys_prctl,0x3e8,0xffffffff8104d490,CALL 0xffffffff8104d490,direct call
__do_sys_prctl,0x407,0xffffffff8104d3d0,CALL 0xffffffff8104d3d0,direct call
__do_sys_prctl,0x418,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
__do_sys_prctl,0x460,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
__do_sys_prctl,0x4a9,0xffffffff81146940,CALL 0xffffffff81146940,direct call
__do_sys_prctl,0x4d2,ctx->rdx + 0x80,"MOV byte ptr [RDX + 0x80],AL",write other [TODO]
__do_sys_prctl,0x4f0,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
__do_sys_prctl,0x4f4,0xffffffff810a46d0,CALL 0xffffffff810a46d0,direct call
__do_sys_prctl,0x51a,0xffffffff81c8cda0,CALL 0xffffffff81c8cda0,direct call
__do_sys_prctl,0x588,0xffffffff810bedf0,CALL 0xffffffff810bedf0,direct call
__do_sys_prctl,0x59b,0xffffffff81c7f910,CALL 0xffffffff81c7f910,direct call
__do_sys_prctl,0x5bd,0xffffffff812f8b40,CALL 0xffffffff812f8b40,direct call
__do_sys_prctl,0x5c8,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
__do_sys_prctl,0x5e6,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__do_sys_prctl,0x5fd,0xffffffff812f9870,CALL 0xffffffff812f9870,direct call
__do_sys_prctl,0x60c,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__do_sys_prctl,0x641,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__do_sys_prctl,0x645,0xffffffff81605660,CALL 0xffffffff81605660,direct call
__do_sys_prctl,0x653,ctx->rax + 0x1398,"MOV qword ptr [RAX + 0x1398],R13",write other [TODO]
__do_sys_prctl,0x724,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
__do_sys_prctl,0x72b,0xffffffff812f9840,CALL 0xffffffff812f9840,direct call
__do_sys_prctl,0x75f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__x64_sys_prctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__x64_sys_prctl,0x1c,0xffffffff810c1580,CALL 0xffffffff810c1580,direct call
__x64_sys_prctl,0x22,,RET,ret
__ia32_sys_prctl,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__ia32_sys_prctl,0x19,0xffffffff810c1580,CALL 0xffffffff810c1580,direct call
__ia32_sys_prctl,0x1f,,RET,ret
usermodehelper_read_unlock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
usermodehelper_read_unlock,0x10,0xffffffff81113020,CALL 0xffffffff81113020,direct call
usermodehelper_read_unlock,0x16,,RET,ret
usermodehelper_read_lock_wait,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
usermodehelper_read_lock_wait,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
usermodehelper_read_lock_wait,0x1e,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],0x0",write stack
usermodehelper_read_lock_wait,0x2f,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
usermodehelper_read_lock_wait,0x37,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],-0x7eefadb0",write stack
usermodehelper_read_lock_wait,0x3f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
usermodehelper_read_lock_wait,0x43,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
usermodehelper_read_lock_wait,0x58,0xffffffff81113020,CALL 0xffffffff81113020,direct call
usermodehelper_read_lock_wait,0x60,0xffffffff81d135c0,CALL 0xffffffff81d135c0,direct call
usermodehelper_read_lock_wait,0x74,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
usermodehelper_read_lock_wait,0x89,0xffffffff811077f0,CALL 0xffffffff811077f0,direct call
usermodehelper_read_lock_wait,0xa3,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
usermodehelper_read_lock_wait,0xbf,,RET,ret
usermodehelper_read_lock_wait,0xc9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
proc_cap_handler,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
proc_cap_handler,0x2e,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
proc_cap_handler,0x3d,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
proc_cap_handler,0x4f,0xffffffff810b1140,CALL 0xffffffff810b1140,direct call
proc_cap_handler,0x63,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
proc_cap_handler,0x86,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
proc_cap_handler,0x97,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RAX",write stack
proc_cap_handler,0x9b,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
proc_cap_handler,0xb3,ctx->rbp - 0x80,"MOV qword ptr [RBP + -0x80],RAX",write stack
proc_cap_handler,0xbb,ctx->rbp - 0x70,"MOV qword ptr [RBP + -0x70],RAX",write stack
proc_cap_handler,0xc3,ctx->rbp - 0x68,"MOV qword ptr [RBP + -0x68],RAX",write stack
proc_cap_handler,0xcb,ctx->rbp - 0x60,"MOV qword ptr [RBP + -0x60],RAX",write stack
proc_cap_handler,0xd3,ctx->rbp - 0x58,"MOV qword ptr [RBP + -0x58],RAX",write stack
proc_cap_handler,0xdb,ctx->rbp - 0x50,"MOV qword ptr [RBP + -0x50],RAX",write stack
proc_cap_handler,0xe3,ctx->rbp - 0x48,"MOV qword ptr [RBP + -0x48],RAX",write stack
proc_cap_handler,0xeb,ctx->rbp - 0x78,"MOV qword ptr [RBP + -0x78],RAX",write stack
proc_cap_handler,0xef,0xffffffff810aff70,CALL 0xffffffff810aff70,direct call
proc_cap_handler,0x120,,RET,ret
proc_cap_handler,0x130,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
proc_cap_handler,0x15a,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
proc_cap_handler,0x169,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],RAX",write stack
proc_cap_handler,0x194,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
call_usermodehelper_setup,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
call_usermodehelper_setup,0x50,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
call_usermodehelper_setup,0x5e,ctx->rax + 0x18,"MOV qword ptr [RAX + 0x18],-0x7ef3dc00",write other [TODO]
call_usermodehelper_setup,0x70,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RDX",write other [TODO]
call_usermodehelper_setup,0x74,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
call_usermodehelper_setup,0x7c,ctx->rax,"MOV qword ptr [RAX],RDI",write other [TODO]
call_usermodehelper_setup,0x7f,ctx->rax + 0x28,"MOV qword ptr [RAX + 0x28],R15",write other [TODO]
call_usermodehelper_setup,0x83,ctx->rax + 0x30,"MOV qword ptr [RAX + 0x30],R14",write other [TODO]
call_usermodehelper_setup,0x87,ctx->rax + 0x38,"MOV qword ptr [RAX + 0x38],R13",write other [TODO]
call_usermodehelper_setup,0x8b,ctx->rax + 0x50,"MOV qword ptr [RAX + 0x50],R12",write other [TODO]
call_usermodehelper_setup,0x8f,ctx->rax + 0x48,"MOV qword ptr [RAX + 0x48],RBX",write other [TODO]
call_usermodehelper_setup,0x93,ctx->rax + 0x58,"MOV qword ptr [RAX + 0x58],RDX",write other [TODO]
call_usermodehelper_setup,0xa1,,RET,ret
usermodehelper_read_trylock,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
usermodehelper_read_trylock,0x22,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
usermodehelper_read_trylock,0x2c,ctx->rbp - 0x38,"MOV qword ptr [RBP + -0x38],RBX",write stack
usermodehelper_read_trylock,0x30,ctx->rbp - 0x40,"MOV qword ptr [RBP + -0x40],0x0",write stack
usermodehelper_read_trylock,0x38,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],-0x7eefadb0",write stack
usermodehelper_read_trylock,0x40,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
usermodehelper_read_trylock,0x44,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
usermodehelper_read_trylock,0x4f,0xffffffff81d10a50,CALL 0xffffffff81d10a50,direct call
usermodehelper_read_trylock,0x64,0xffffffff811077f0,CALL 0xffffffff811077f0,direct call
usermodehelper_read_trylock,0x7f,0xffffffff81113020,CALL 0xffffffff81113020,direct call
usermodehelper_read_trylock,0x84,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
usermodehelper_read_trylock,0x89,0xffffffff82000828,CALL 0xffffffff82000828,direct call
usermodehelper_read_trylock,0xa7,0xffffffff81113020,CALL 0xffffffff81113020,direct call
usermodehelper_read_trylock,0xbd,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
usermodehelper_read_trylock,0xdc,,RET,ret
usermodehelper_read_trylock,0xe2,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
call_usermodehelper_exec,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
call_usermodehelper_exec,0x1e,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
call_usermodehelper_exec,0x2d,ctx->rbp - 0x40,"MOV dword ptr [RBP + -0x40],0x0",write stack
call_usermodehelper_exec,0x34,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
call_usermodehelper_exec,0x3b,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
call_usermodehelper_exec,0x3f,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
call_usermodehelper_exec,0x64,0xffffffff81c7f9a0,CALL 0xffffffff81c7f9a0,direct call
call_usermodehelper_exec,0x7d,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],0x0",write other [TODO]
call_usermodehelper_exec,0x91,ctx->r12 + 0x40,"MOV dword ptr [R12 + 0x40],0x0",write other [TODO]
call_usermodehelper_exec,0x9a,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
call_usermodehelper_exec,0xb1,ctx->rax,CALL RAX,in-direct call
call_usermodehelper_exec,0xb6,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
call_usermodehelper_exec,0xe4,,RET,ret
call_usermodehelper_exec,0x100,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
call_usermodehelper_exec,0x10b,ctx->r12 + 0x40,"MOV dword ptr [R12 + 0x40],EBX",write other [TODO]
call_usermodehelper_exec,0x118,ctx->r12 + 0x20,"MOV qword ptr [R12 + 0x20],RAX",write other [TODO]
call_usermodehelper_exec,0x11d,0xffffffff810c53a0,CALL 0xffffffff810c53a0,direct call
call_usermodehelper_exec,0x139,0xffffffff81d0e7f0,CALL 0xffffffff81d0e7f0,direct call
call_usermodehelper_exec,0x15d,0xffffffff81d0e7f0,CALL 0xffffffff81d0e7f0,direct call
call_usermodehelper_exec,0x184,0xffffffff81d0e7f0,CALL 0xffffffff81d0e7f0,direct call
call_usermodehelper_exec,0x194,ctx->rax,CALL RAX,in-direct call
call_usermodehelper_exec,0x19f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
call_usermodehelper_exec,0x1a9,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
call_usermodehelper,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
call_usermodehelper,0x39,0xffffffff812b35b0,CALL 0xffffffff812b35b0,direct call
call_usermodehelper,0x53,ctx->rdi,"MOV qword ptr [RDI],RAX",write other [TODO]
call_usermodehelper,0x5a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RAX",write other [TODO]
call_usermodehelper,0x5e,ctx->rdi + 0x18,"MOV qword ptr [RDI + 0x18],-0x7ef3dc00",write other [TODO]
call_usermodehelper,0x66,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
call_usermodehelper,0x6a,ctx->rdi + 0x28,"MOV qword ptr [RDI + 0x28],R13",write other [TODO]
call_usermodehelper,0x6e,ctx->rdi + 0x30,"MOV qword ptr [RDI + 0x30],R12",write other [TODO]
call_usermodehelper,0x72,ctx->rdi + 0x38,"MOV qword ptr [RDI + 0x38],RBX",write other [TODO]
call_usermodehelper,0x76,ctx->rdi + 0x50,"MOV qword ptr [RDI + 0x50],0x0",write other [TODO]
call_usermodehelper,0x7e,ctx->rdi + 0x48,"MOV qword ptr [RDI + 0x48],0x0",write other [TODO]
call_usermodehelper,0x86,ctx->rdi + 0x58,"MOV qword ptr [RDI + 0x58],0x0",write other [TODO]
call_usermodehelper,0x8e,0xffffffff810c21a0,CALL 0xffffffff810c21a0,direct call
call_usermodehelper,0x9b,,RET,ret
call_usermodehelper_exec_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
call_usermodehelper_exec_work,0x1b,0xffffffff810b5040,CALL 0xffffffff810b5040,direct call
call_usermodehelper_exec_work,0x2f,0xffffffff810a4650,CALL 0xffffffff810a4650,direct call
call_usermodehelper_exec_work,0x3a,ctx->r12 + 0x44,"MOV dword ptr [R12 + 0x44],EAX",write other [TODO]
call_usermodehelper_exec_work,0x49,0xffffffff810b5040,CALL 0xffffffff810b5040,direct call
call_usermodehelper_exec_work,0x5a,0xffffffff81105880,CALL 0xffffffff81105880,direct call
call_usermodehelper_exec_work,0x64,,RET,ret
call_usermodehelper_exec_work,0x6a,0xffffffff810ab2c0,CALL 0xffffffff810ab2c0,direct call
call_usermodehelper_exec_work,0x80,0xffffffff810a4650,CALL 0xffffffff810a4650,direct call
call_usermodehelper_exec_work,0x89,ctx->r12 + 0x44,"MOV dword ptr [R12 + 0x44],EAX",write other [TODO]
call_usermodehelper_exec_work,0xa7,ctx->rax,CALL RAX,in-direct call
call_usermodehelper_exec_work,0xac,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
call_usermodehelper_exec_work,0xb6,,RET,ret
call_usermodehelper_exec_async,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
call_usermodehelper_exec_async,0x21,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
call_usermodehelper_exec_async,0x2e,0xffffffff810b7090,CALL 0xffffffff810b7090,direct call
call_usermodehelper_exec_async,0x3a,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
call_usermodehelper_exec_async,0x4b,ctx->rax + 0xc,"MOV dword ptr [RAX + 0xc],0x12",write other [TODO]
call_usermodehelper_exec_async,0x52,0xffffffff810e03c0,CALL 0xffffffff810e03c0,direct call
call_usermodehelper_exec_async,0x5a,0xffffffff810d40c0,CALL 0xffffffff810d40c0,direct call
call_usermodehelper_exec_async,0x72,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
call_usermodehelper_exec_async,0x94,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
call_usermodehelper_exec_async,0xa9,ctx->rax,CALL RAX,in-direct call
call_usermodehelper_exec_async,0xb4,0xffffffff810d3e00,CALL 0xffffffff810d3e00,direct call
call_usermodehelper_exec_async,0xb9,0xffffffff81001cd0,CALL 0xffffffff81001cd0,direct call
call_usermodehelper_exec_async,0xcd,0xffffffff8136e660,CALL 0xffffffff8136e660,direct call
call_usermodehelper_exec_async,0xd2,ctx->r12 + 0x44,"MOV dword ptr [R12 + 0x44],EAX",write other [TODO]
call_usermodehelper_exec_async,0xed,,RET,ret
call_usermodehelper_exec_async,0xf3,ctx->r12 + 0x44,"MOV dword ptr [R12 + 0x44],EBX",write other [TODO]
call_usermodehelper_exec_async,0x10c,0xffffffff81105880,CALL 0xffffffff81105880,direct call
call_usermodehelper_exec_async,0x116,0xffffffff810d3b50,CALL 0xffffffff810d3b50,direct call
call_usermodehelper_exec_async,0x12a,ctx->rax,CALL RAX,in-direct call
call_usermodehelper_exec_async,0x12f,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
call_usermodehelper_exec_async,0x138,0xffffffff810aa370,CALL 0xffffffff810aa370,direct call
__usermodehelper_set_disable_depth,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__usermodehelper_set_disable_depth,0x13,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__usermodehelper_set_disable_depth,0x2b,0xffffffff82e6a978,"MOV dword ptr [0xffffffff82e6a978],EBX",write .data
__usermodehelper_set_disable_depth,0x31,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
__usermodehelper_set_disable_depth,0x3d,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__usermodehelper_set_disable_depth,0x47,,RET,ret
__usermodehelper_disable,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__usermodehelper_disable,0x18,ctx->rbp - 0x10,"MOV qword ptr [RBP + -0x10],RAX",write stack
__usermodehelper_disable,0x30,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__usermodehelper_disable,0x3c,0xffffffff82e6a978,"MOV dword ptr [0xffffffff82e6a978],R12D",write .data
__usermodehelper_disable,0x43,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__usermodehelper_disable,0x48,0xffffffff82000828,CALL 0xffffffff82000828,direct call
__usermodehelper_disable,0x71,,RET,ret
__usermodehelper_disable,0x7e,0xffffffff811040c0,CALL 0xffffffff811040c0,direct call
__usermodehelper_disable,0x93,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
__usermodehelper_disable,0xad,ctx->rdi,"MOV RDI,R12",write other [TODO]
__usermodehelper_disable,0xb0,0xffffffff81d135c0,CALL 0xffffffff81d135c0,direct call
__usermodehelper_disable,0xc8,0xffffffff81105bf0,CALL 0xffffffff81105bf0,direct call
__usermodehelper_disable,0xef,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
__usermodehelper_disable,0x10e,0xffffffff811040f0,CALL 0xffffffff811040f0,direct call
__usermodehelper_disable,0x123,0xffffffff81d11350,CALL 0xffffffff81d11350,direct call
__usermodehelper_disable,0x13b,0xffffffff82e6a978,"MOV dword ptr [0xffffffff82e6a978],0x0",write .data
__usermodehelper_disable,0x145,0xffffffff81103fa0,CALL 0xffffffff81103fa0,direct call
__usermodehelper_disable,0x151,0xffffffff81112fd0,CALL 0xffffffff81112fd0,direct call
__usermodehelper_disable,0x160,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
__traceiter_workqueue_queue_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_workqueue_queue_work,0x39,ctx->rax,CALL RAX,in-direct call
__traceiter_workqueue_queue_work,0x4b,,RET,ret
__traceiter_workqueue_activate_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_workqueue_activate_work,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_workqueue_activate_work,0x37,,RET,ret
__traceiter_workqueue_execute_start,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_workqueue_execute_start,0x29,ctx->rax,CALL RAX,in-direct call
__traceiter_workqueue_execute_start,0x37,,RET,ret
__traceiter_workqueue_execute_end,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__traceiter_workqueue_execute_end,0x31,ctx->rax,CALL RAX,in-direct call
__traceiter_workqueue_execute_end,0x41,,RET,ret
work_for_cpu_fn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
work_for_cpu_fn,0x11,ctx->rbx + 0x20,CALL qword ptr [RBX + 0x20],in-direct call
work_for_cpu_fn,0x14,ctx->rbx + 0x30,"MOV qword ptr [RBX + 0x30],RAX",write other [TODO]
work_for_cpu_fn,0x1d,,RET,ret
__warn_flushing_systemwide_wq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
__warn_flushing_systemwide_wq,0xa,,RET,ret
pool_mayday_timeout,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pool_mayday_timeout,0x20,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
pool_mayday_timeout,0x2c,0xffffffff81d14f70,CALL 0xffffffff81d14f70,direct call
pool_mayday_timeout,0x61,0xffffffff81d14ff0,CALL 0xffffffff81d14ff0,direct call
pool_mayday_timeout,0x69,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
pool_mayday_timeout,0x7c,0xffffffff81153f70,CALL 0xffffffff81153f70,direct call
pool_mayday_timeout,0x8b,,RET,ret
pool_mayday_timeout,0x9a,ctx->rax + 0x18,"MOV dword ptr [RAX + 0x18],ESI",write other [TODO]
pool_mayday_timeout,0xa4,ctx->rdx + 0x80,"MOV qword ptr [RDX + 0x80],RCX",write other [TODO]
pool_mayday_timeout,0xab,ctx->rax + 0x88,"MOV qword ptr [RAX + 0x88],RDI",write other [TODO]
pool_mayday_timeout,0xb2,ctx->rax + 0x90,"MOV qword ptr [RAX + 0x90],RSI",write other [TODO]
pool_mayday_timeout,0xb9,ctx->rsi,"MOV qword ptr [RSI],RCX",write other [TODO]
pool_mayday_timeout,0xc7,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
destroy_worker,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
destroy_worker,0x36,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
destroy_worker,0x3a,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
destroy_worker,0x41,ctx->rdi,"MOV qword ptr [RDI],RDI",write other [TODO]
destroy_worker,0x44,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],RDI",write other [TODO]
destroy_worker,0x4c,0xffffffff810e4610,CALL 0xffffffff810e4610,direct call
destroy_worker,0x52,,RET,ret
put_unbound_pool,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
put_unbound_pool,0x19,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
put_unbound_pool,0x2a,ctx->rbp - 0x38,"MOV dword ptr [RBP + -0x38],0x0",write stack
put_unbound_pool,0x31,ctx->rbp - 0x30,"MOV dword ptr [RBP + -0x30],0x0",write stack
put_unbound_pool,0x38,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
put_unbound_pool,0x3c,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
put_unbound_pool,0x84,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
put_unbound_pool,0x8c,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
put_unbound_pool,0x90,ctx->rbx + 0x2d8,"MOV qword ptr [RBX + 0x2d8],0x0",write other [TODO]
put_unbound_pool,0x9b,ctx->rbx + 0x2e0,"MOV qword ptr [RBX + 0x2e0],0x0",write other [TODO]
put_unbound_pool,0xaf,0xffffffff8346c8f8,"MOV qword ptr [0xffffffff8346c8f8],R12",write .data
put_unbound_pool,0xc3,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
put_unbound_pool,0xdd,0xffffffff811316b0,CALL 0xffffffff811316b0,direct call
put_unbound_pool,0xf8,0xffffffff810c2a20,CALL 0xffffffff810c2a20,direct call
put_unbound_pool,0x114,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
put_unbound_pool,0x120,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
put_unbound_pool,0x13c,ctx->rbx + 0x2b8,"MOV qword ptr [RBX + 0x2b8],RAX",write other [TODO]
put_unbound_pool,0x14a,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
put_unbound_pool,0x15b,0xffffffff81d0e700,CALL 0xffffffff81d0e700,direct call
put_unbound_pool,0x164,0xffffffff811531c0,CALL 0xffffffff811531c0,direct call
put_unbound_pool,0x16d,0xffffffff811531c0,CALL 0xffffffff811531c0,direct call
put_unbound_pool,0x180,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
put_unbound_pool,0x19c,,RET,ret
put_unbound_pool,0x1a0,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
put_unbound_pool,0x1a5,0xffffffff81d0dc20,CALL 0xffffffff81d0dc20,direct call
put_unbound_pool,0x1b6,0xffffffff81c69160,CALL 0xffffffff81c69160,direct call
put_unbound_pool,0x1df,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
pwq_unbound_release_workfn,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
pwq_unbound_release_workfn,0x4b,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pwq_unbound_release_workfn,0x5b,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
pwq_unbound_release_workfn,0x5f,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
pwq_unbound_release_workfn,0x6c,ctx->rbx - 0x18,"MOV qword ptr [RBX + -0x18],RAX",write other [TODO]
pwq_unbound_release_workfn,0x74,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pwq_unbound_release_workfn,0x80,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pwq_unbound_release_workfn,0x88,0xffffffff810c2a80,CALL 0xffffffff810c2a80,direct call
pwq_unbound_release_workfn,0x94,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pwq_unbound_release_workfn,0xa4,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
pwq_unbound_release_workfn,0xb8,,RET,ret
pwq_unbound_release_workfn,0xc8,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
pwq_unbound_release_workfn,0xd7,,RET,ret
pwq_unbound_release_workfn,0xdf,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
pwq_unbound_release_workfn,0xe7,0xffffffff810c2a80,CALL 0xffffffff810c2a80,direct call
pwq_unbound_release_workfn,0xf3,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
pwq_unbound_release_workfn,0x103,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
pwq_unbound_release_workfn,0x112,,RET,ret
queue_rcu_work,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
queue_rcu_work,0xf,,RET,ret
queue_rcu_work,0x11,ctx->rsi + 0x30,"MOV qword ptr [RSI + 0x30],RDI",write other [TODO]
queue_rcu_work,0x23,0xffffffff8113aeb0,CALL 0xffffffff8113aeb0,direct call
queue_rcu_work,0x2e,,RET,ret
wq_device_release,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wq_device_release,0xd,0xffffffff812b3960,CALL 0xffffffff812b3960,direct call
wq_device_release,0x13,,RET,ret
init_pwq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
init_pwq,0x1e,ctx->rdi - 0x8,"MOV qword ptr [RDI + -0x8],0x0",write other [TODO]
init_pwq,0x26,ctx->rdi + 0xe0,"MOV qword ptr [RDI + 0xe0],0x0",write other [TODO]
init_pwq,0x46,ctx->r8,"MOV qword ptr [R8],RDX",write other [TODO]
init_pwq,0x53,ctx->r8 + 0x14,"MOV qword ptr [R8 + 0x14],RAX",write other [TODO]
init_pwq,0x5b,ctx->r8 + 0x68,"MOV qword ptr [R8 + 0x68],RAX",write other [TODO]
init_pwq,0x5f,ctx->r8 + 0x70,"MOV qword ptr [R8 + 0x70],RAX",write other [TODO]
init_pwq,0x67,ctx->r8 + 0x78,"MOV qword ptr [R8 + 0x78],RAX",write other [TODO]
init_pwq,0x6b,ctx->r8 + 0x80,"MOV qword ptr [R8 + 0x80],RAX",write other [TODO]
init_pwq,0x79,ctx->r8 + 0x88,"MOV qword ptr [R8 + 0x88],RAX",write other [TODO]
init_pwq,0x80,ctx->r8 + 0x90,"MOV qword ptr [R8 + 0x90],RAX",write other [TODO]
init_pwq,0x91,ctx->r8 + 0x98,"MOV qword ptr [R8 + 0x98],RAX",write other [TODO]
init_pwq,0x9f,ctx->r8 + 0xa0,"MOV qword ptr [R8 + 0xa0],RAX",write other [TODO]
init_pwq,0xa6,ctx->r8 + 0x8,"MOV qword ptr [R8 + 0x8],RSI",write other [TODO]
init_pwq,0xaa,ctx->r8 + 0xa8,"MOV qword ptr [R8 + 0xa8],RAX",write other [TODO]
init_pwq,0xb1,ctx->r8 + 0xb0,"MOV qword ptr [R8 + 0xb0],-0x7ef3d390",write other [TODO]
init_pwq,0xbd,,RET,ret
rcu_free_pwq,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
rcu_free_pwq,0x17,0xffffffff813260f0,CALL 0xffffffff813260f0,direct call
rcu_free_pwq,0x1d,,RET,ret
worker_attach_to_pool,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
worker_attach_to_pool,0x19,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
worker_attach_to_pool,0x47,0xffffffff810e3030,CALL 0xffffffff810e3030,direct call
worker_attach_to_pool,0x67,ctx->r12 + 0x2b0,"MOV qword ptr [R12 + 0x2b0],RDX",write other [TODO]
worker_attach_to_pool,0x6f,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RCX",write other [TODO]
worker_attach_to_pool,0x73,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
worker_attach_to_pool,0x77,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
worker_attach_to_pool,0x7a,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],R12",write other [TODO]
worker_attach_to_pool,0x7e,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
worker_attach_to_pool,0x87,,RET,ret
worker_attach_to_pool,0x91,0xffffffff810cdbf0,CALL 0xffffffff810cdbf0,direct call
worker_detach_from_pool,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
worker_detach_from_pool,0x1a,0xffffffff81d10000,CALL 0xffffffff81d10000,direct call
worker_detach_from_pool,0x28,0xffffffff810cdbf0,CALL 0xffffffff810cdbf0,direct call
worker_detach_from_pool,0x35,ctx->rdx + 0x8,"MOV qword ptr [RDX + 0x8],RAX",write other [TODO]
worker_detach_from_pool,0x39,ctx->rax,"MOV qword ptr [RAX],RDX",write other [TODO]
worker_detach_from_pool,0x46,ctx->rbx + 0x50,"MOV qword ptr [RBX + 0x50],RAX",write other [TODO]
worker_detach_from_pool,0x4e,ctx->rbx + 0x58,"MOV qword ptr [RBX + 0x58],RAX",write other [TODO]
worker_detach_from_pool,0x5a,ctx->rbx + 0x48,"MOV qword ptr [RBX + 0x48],0x0",write other [TODO]
worker_detach_from_pool,0x76,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
worker_detach_from_pool,0x86,,RET,ret
worker_detach_from_pool,0x96,0xffffffff81d0eb90,CALL 0xffffffff81d0eb90,direct call
worker_detach_from_pool,0xaa,0xffffffff81105880,CALL 0xffffffff81105880,direct call
worker_detach_from_pool,0xb3,,RET,ret
flush_workqueue_prep_pwqs,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
flush_workqueue_prep_pwqs,0x32,ctx->rbx + 0x48,"MOV dword ptr [RBX + 0x48],0x1",write other [TODO]
flush_workqueue_prep_pwqs,0x4c,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x0",write stack
flush_workqueue_prep_pwqs,0x50,ctx->rbp - 0x30,"MOV qword ptr [RBP + -0x30],RAX",write stack
flush_workqueue_prep_pwqs,0x5a,0xffffffff81d14fa0,CALL 0xffffffff81d14fa0,direct call
flush_workqueue_prep_pwqs,0x78,ctx->r15 + 0x14,"MOV dword ptr [R15 + 0x14],R13D",write other [TODO]
flush_workqueue_prep_pwqs,0x80,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x1",write stack
flush_workqueue_prep_pwqs,0xa4,ctx->r15 + 0x10,"MOV dword ptr [R15 + 0x10],R12D",write other [TODO]
flush_workqueue_prep_pwqs,0xab,0xffffffff81d15020,CALL 0xffffffff81d15020,direct call
flush_workqueue_prep_pwqs,0xda,,RET,ret
flush_workqueue_prep_pwqs,0xf3,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x0",write stack
flush_workqueue_prep_pwqs,0x101,0xffffffff81105880,CALL 0xffffffff81105880,direct call
flush_workqueue_prep_pwqs,0x108,ctx->rbp - 0x31,"MOV byte ptr [RBP + -0x31],0x0",write stack
wq_barrier_func,0x0,0xffffffff81077be0,CALL 0xffffffff81077be0,direct call
wq_barrier_func,0xd,0xffffffff81105880,CALL 0xffffffff81105880,direct call
wq_barrier_func,0x13,,RET,ret
perf_trace_workqueue_activate_work,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_workqueue_activate_work,0x47,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_workqueue_activate_work,0x6d,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_workqueue_activate_work,0x74,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_workqueue_activate_work,0x7b,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_workqueue_activate_work,0x86,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_workqueue_activate_work,0x91,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_workqueue_activate_work,0x98,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_workqueue_activate_work,0xb8,,RET,ret
perf_trace_workqueue_activate_work,0xc7,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_workqueue_execute_start,0x20,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
perf_trace_workqueue_execute_start,0x4b,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_workqueue_execute_start,0x71,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_workqueue_execute_start,0x78,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_workqueue_execute_start,0x7f,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_workqueue_execute_start,0x8a,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_workqueue_execute_start,0x95,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R13",write other [TODO]
perf_trace_workqueue_execute_start,0x9d,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],RAX",write other [TODO]
perf_trace_workqueue_execute_start,0xa4,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_workqueue_execute_start,0xc4,,RET,ret
perf_trace_workqueue_execute_start,0xd3,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
perf_trace_workqueue_execute_end,0x25,ctx->rbp - 0x28,"MOV qword ptr [RBP + -0x28],RAX",write stack
perf_trace_workqueue_execute_end,0x50,0xffffffff811e39c0,CALL 0xffffffff811e39c0,direct call
perf_trace_workqueue_execute_end,0x76,ctx->r9 + 0x80,"MOV qword ptr [R9 + 0x80],RAX",write other [TODO]
perf_trace_workqueue_execute_end,0x7d,ctx->r9 + 0x98,"MOV qword ptr [R9 + 0x98],RBP",write other [TODO]
perf_trace_workqueue_execute_end,0x84,ctx->r9 + 0x88,"MOV qword ptr [R9 + 0x88],0x10",write other [TODO]
perf_trace_workqueue_execute_end,0x8f,ctx->r9 + 0x90,"MOV qword ptr [R9 + 0x90],0x0",write other [TODO]
perf_trace_workqueue_execute_end,0x9a,ctx->rdi + 0x8,"MOV qword ptr [RDI + 0x8],R14",write other [TODO]
perf_trace_workqueue_execute_end,0x9e,ctx->rdi + 0x10,"MOV qword ptr [RDI + 0x10],R13",write other [TODO]
perf_trace_workqueue_execute_end,0xa5,0xffffffff81269f40,CALL 0xffffffff81269f40,direct call
perf_trace_workqueue_execute_end,0xc7,,RET,ret
perf_trace_workqueue_execute_end,0xd6,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_workqueue_activate_work,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_workqueue_activate_work,0x35,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_workqueue_activate_work,0x3f,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
trace_event_raw_event_workqueue_activate_work,0x47,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_workqueue_activate_work,0x63,,RET,ret
trace_event_raw_event_workqueue_activate_work,0x69,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_workqueue_activate_work,0x74,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_workqueue_execute_start,0x1a,ctx->rbp - 0x18,"MOV qword ptr [RBP + -0x18],RAX",write stack
trace_event_raw_event_workqueue_execute_start,0x35,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_workqueue_execute_start,0x3f,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],RBX",write other [TODO]
trace_event_raw_event_workqueue_execute_start,0x4b,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RDX",write other [TODO]
trace_event_raw_event_workqueue_execute_start,0x4f,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_workqueue_execute_start,0x6b,,RET,ret
trace_event_raw_event_workqueue_execute_start,0x71,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_workqueue_execute_start,0x7c,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
trace_event_raw_event_workqueue_execute_end,0x1f,ctx->rbp - 0x20,"MOV qword ptr [RBP + -0x20],RAX",write stack
trace_event_raw_event_workqueue_execute_end,0x3a,0xffffffff811e07d0,CALL 0xffffffff811e07d0,direct call
trace_event_raw_event_workqueue_execute_end,0x44,ctx->rax + 0x8,"MOV qword ptr [RAX + 0x8],R13",write other [TODO]
trace_event_raw_event_workqueue_execute_end,0x4c,ctx->rax + 0x10,"MOV qword ptr [RAX + 0x10],RBX",write other [TODO]
trace_event_raw_event_workqueue_execute_end,0x50,0xffffffff811cb450,CALL 0xffffffff811cb450,direct call
trace_event_raw_event_workqueue_execute_end,0x6e,,RET,ret
trace_event_raw_event_workqueue_execute_end,0x74,0xffffffff811e7070,CALL 0xffffffff811e7070,direct call
trace_event_raw_event_workqueue_execute_end,0x7f,0xffffffff81d03750,CALL 0xffffffff81d03750,direct call
